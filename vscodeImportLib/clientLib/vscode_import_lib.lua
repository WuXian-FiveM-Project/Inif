local _ri     = 0
local _in     = 0
local _ro     = 0
local _ts     = 0
local _s      = 0
local _r      = 0
local _rf     = 0
local _i      = 0
local _rv     = 0
local _ch     = 0
local _ii     = 0
local _mfr    = 0
local _rl     = 0
local _v      = 0
local _fi     = 0
local _f      = 0
local _obj    = 0
local Citizen = {}

function Absf(value)
	return _in(0x73D57CFFDD12C355, value, _rf)
end

function Absi(value)
	return _in(0xF0D31AD191A74F87, value, _ri)
end

function Acos(p0)
	return _in(0x1D08B970013C34B6, p0, _rf)
end

function ActivateAudioSlowmoMode(p0)
	return _in(0xD01005D2BA2EB778, _ts(p0))
end
N_0xd01005d2ba2eb778 = ActivateAudioSlowmoMode

function ActivateDamageTrackerOnNetworkId(netID, toggle)
	return _in(0xD45B1FFCCD52FF19, netID, toggle)
end

function ActivateDamageTrackerOnPlayer(player, toggle)
	return _in(0xBEC0816FF5ACBCDA, player, toggle)
end
N_0xbec0816ff5acbcda = ActivateDamageTrackerOnPlayer

--- Does stuff like this:\
-- gyazo.com/7fcb78ea3520e3dbc5b2c0c0f3712617\
-- Example:\
-- int GetHash = GET_HASH_KEY("fe_menu_version_corona_lobby");\
-- ACTIVATE_FRONTEND_MENU(GetHash, 0, -1);\
-- BOOL p1 is a toggle to define the game in pause.\
-- int p2 is unknown but -1 always works, not sure why though.\
-- \[30/03/2017] ins1de :\
-- the int p2 is actually a component variable. When the pause menu is visible, it opens the tab related to it.\
-- Example : Function.Call(Hash.ACTIVATE_FRONTEND_MENU,-1171018317, 0, 42);\
-- Result : Opens the "Online" tab without pausing the menu, with -1 it opens the map.
-- Below is a list of all known Frontend Menu Hashes.
-- *   FE_MENU_VERSION_SP_PAUSE
-- *   FE_MENU_VERSION_MP_PAUSE
-- *   FE_MENU_VERSION_CREATOR_PAUSE
-- *   FE_MENU_VERSION_CUTSCENE_PAUSE
-- *   FE_MENU_VERSION_SAVEGAME
-- *   FE_MENU_VERSION_PRE_LOBBY
-- *   FE_MENU_VERSION_LOBBY
-- *   FE_MENU_VERSION_MP_CHARACTER_SELECT
-- *   FE_MENU_VERSION_MP_CHARACTER_CREATION
-- *   FE_MENU_VERSION_EMPTY
-- *   FE_MENU_VERSION_EMPTY_NO_BACKGROUND
-- *   FE_MENU_VERSION_TEXT_SELECTION
-- *   FE_MENU_VERSION_CORONA
-- *   FE_MENU_VERSION_CORONA_LOBBY
-- *   FE_MENU_VERSION_CORONA_JOINED_PLAYERS
-- *   FE_MENU_VERSION_CORONA_INVITE_PLAYERS
-- *   FE_MENU_VERSION_CORONA_INVITE_FRIENDS
-- *   FE_MENU_VERSION_CORONA_INVITE_CREWS
-- *   FE_MENU_VERSION_CORONA_INVITE_MATCHED_PLAYERS
-- *   FE_MENU_VERSION_CORONA_INVITE_LAST_JOB_PLAYERS
-- *   FE_MENU_VERSION_CORONA_RACE
-- *   FE_MENU_VERSION_CORONA_BETTING
-- *   FE_MENU_VERSION_JOINING_SCREEN
-- *   FE_MENU_VERSION_LANDING_MENU
-- *   FE_MENU_VERSION_LANDING_KEYMAPPING_MENU
function ActivateFrontendMenu(menuhash, togglePause, component)
	return _in(0xEF01D36B9C9D0C7B, _ch(menuhash), togglePause, component)
end

--- More info: http://gtaforums.com/topic/836367-adding-props-to-interiors/
function ActivateInteriorEntitySet(interior, entitySetName)
	return _in(0x55E86AF2712B36A1, interior, _ts(entitySetName))
end
N_0x55e86af2712b36a1 = ActivateInteriorEntitySet
EnableInteriorProp = ActivateInteriorEntitySet

function ActivatePhysics(entity)
	return _in(0x710311ADF0E20730, entity)
end

--- Please note that you will need to call DO_SCREEN_FADE_IN after exiting the Rockstar Editor when you call this.
-- ```
-- NativeDB Added Parameter 1: int p0
-- ```
function ActivateRockstarEditor()
	return _in(0x49DA8145672B2725)
end
N_0x49da8145672b2725 = ActivateRockstarEditor

function AddAmmoToPed(ped, weaponHash, ammo)
	return _in(0x78F0424C34306220, ped, _ch(weaponHash), ammo)
end

function AddAmmoToPedByType(ped, ammoType, ammo)
	return _in(0x2472622CE1F2D45F, ped, _ch(ammoType), ammo)
end
N_0x2472622ce1f2d45f = AddAmmoToPedByType
AddPedAmmo = AddAmmoToPedByType

--- Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has.
function AddArmourToPed(ped, amount)
	return _in(0x5BA652A0CD14DF2F, ped, amount)
end

--- Adds an output for the specified audio submix.
-- @param submixId The input submix.
-- @param outputSubmixId The output submix. Use `0` for the master game submix.
function AddAudioSubmixOutput(submixId, outputSubmixId)
	return _in(0xac6e290d, submixId, outputSubmixId)
end

--- Adds a rectangular blip for the specified coordinates/area.
-- It is recommended to use [SET_BLIP_ROTATION](#\_0xF87683CDF73C3F6E) and [SET_BLIP_COLOUR](#\_0x03D7FB09E75D6B7E) to make the blip not rotate along with the camera.
-- By default, the blip will show as a *regular* blip with the specified color/sprite if it is outside of the minimap view.
-- Example image:
-- ![minimap](https://w.wew.wtf/pdcjig.png)
-- ![big map](https://w.wew.wtf/zgcjcm.png)
-- (Native name is *likely* to actually be ADD_BLIP_FOR_AREA, but due to the usual reasons this can't be confirmed)
-- @param x The X coordinate of the center of the blip.
-- @param y The Y coordinate of the center of the blip.
-- @param z The Z coordinate of the center of the blip.
-- @param width The width of the blip.
-- @param height The height of the blip.
-- @return A handle to the blip.
function AddBlipForArea(x, y, z, width, height)
	return _in(0xCE5D0E5E315DB238, x, y, z, width, height, _ri)
end
N_0xce5d0e5e315db238 = AddBlipForArea

--- Creates a blip for the specified coordinates. You can use `SET_BLIP_` natives to change the blip.
-- @param x The X coordinate to create the blip on.
-- @param y The Y coordinate.
-- @param z The Z coordinate.
-- @return A blip handle.
function AddBlipForCoord(x, y, z)
	return _in(0x5A039BB0BCA604B6, x, y, z, _ri)
end

--- Create a blip that for default is red (enemy), you can use the [SET_BLIP_AS_FRIENDLY](#\_0xC6F43D0E) to make it blue (friend)
-- Example of enemy:
-- ![enemy](https://i.imgur.com/fl78svv.png)
-- Example of friend:
-- ![friend](https://i.imgur.com/Q16ho5d.png)
-- @param entity The entity handle to create the blip.
-- @return A blip handle.
function AddBlipForEntity(entity)
	return _in(0x5CDE92C702A8FCE7, entity, _ri)
end

function AddBlipForPickup(pickup)
	return _in(0xBE339365C863BD36, pickup, _ri)
end

--- Create a blip with a radius for the specified coordinates (it doesnt create the blip sprite, so you need to use [AddBlipCoords](#\_0xC6F43D0E))
-- Example image:
-- ![example](https://i.imgur.com/9hQl3DB.png)
-- @param posX The x position of the blip (you can also send a vector3 instead of the bulk coordinates)
-- @param posY The y position of the blip (you can also send a vector3 instead of the bulk coordinates)
-- @param posZ The z position of the blip (you can also send a vector3 instead of the bulk coordinates)
-- @param radius The number that defines the radius of the blip circle
-- @return The blip handle that can be manipulated with every `SetBlip` natives
function AddBlipForRadius(posX, posY, posZ, radius)
	return _in(0x46818D79B1F7499A, posX, posY, posZ, radius, _ri)
end

--- I filled p1-p6 (the floats) as they are as other natives with 6 floats in a row are similar and I see no other method. So if a test from anyone proves them wrong please correct.
-- p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one
-- p8 big values ~100 will slow down the camera movement before reaching this node
-- p9 != 0 seems to override the rotation/pitch (bool?)
function AddCamSplineNode(camera, x, y, z, xRot, yRot, zRot, length, p8, transitionType)
	return _in(0x8609C75EC438FB3B, camera, x, y, z, xRot, yRot, zRot, length, p8, transitionType)
end

function AddCamSplineNodeUsingCamera(cam, cam2, p2, p3)
	return _in(0x0FB82563989CF4FB, cam, cam2, p2, p3)
end
N_0x0fb82563989cf4fb = AddCamSplineNodeUsingCamera

function AddCamSplineNodeUsingCameraFrame(cam, cam2, p2, p3)
	return _in(0x0A9F2A468B328E74, cam, cam2, p2, p3)
end
N_0x0a9f2a468b328e74 = AddCamSplineNodeUsingCameraFrame

function AddCamSplineNodeUsingGameplayFrame(cam, p1, p2)
	return _in(0x609278246A29CA34, cam, p1, p2)
end
N_0x609278246a29ca34 = AddCamSplineNodeUsingGameplayFrame

function AddCoverBlockingArea(playerX, playerY, playerZ, radiusX, radiusY, radiusZ, p6, p7, p8, p9)
	return _in(0x45C597097DD7CB81, playerX, playerY, playerZ, radiusX, radiusY, radiusZ, p6, p7, p8, p9)
end

function AddCoverPoint(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xD5C12A75C7B9497F, p0, p1, p2, p3, p4, p5, p6, p7, _ri)
end

--- Most likely ADD_CURRENT_*
function AddCurrentRise(xLow, yLow, xHigh, yHigh, height)
	return _in(0xFDBF4CDBC07E1706, xLow, yLow, xHigh, yHigh, height, _ri)
end
N_0xfdbf4cdbc07e1706 = AddCurrentRise

--- decal types:
-- public enum DecalTypes
-- {
-- splatters_blood = 1010,
-- splatters_blood_dir = 1015,
-- splatters_blood_mist = 1017,
-- splatters_mud = 1020,
-- splatters_paint = 1030,
-- splatters_water = 1040,
-- splatters_water_hydrant = 1050,
-- splatters_blood2 = 1110,
-- weapImpact_metal = 4010,
-- weapImpact_concrete = 4020,
-- weapImpact_mattress = 4030,
-- weapImpact_mud = 4032,
-- weapImpact_wood = 4050,
-- weapImpact_sand = 4053,
-- weapImpact_cardboard = 4040,
-- weapImpact_melee_glass = 4100,
-- weapImpact_glass_blood = 4102,
-- weapImpact_glass_blood2 = 4104,
-- weapImpact_shotgun_paper = 4200,
-- weapImpact_shotgun_mattress,
-- weapImpact_shotgun_metal,
-- weapImpact_shotgun_wood,
-- weapImpact_shotgun_dirt,
-- weapImpact_shotgun_tvscreen,
-- weapImpact_shotgun_tvscreen2,
-- weapImpact_shotgun_tvscreen3,
-- weapImpact_melee_concrete = 4310,
-- weapImpact_melee_wood = 4312,
-- weapImpact_melee_metal = 4314,
-- burn1 = 4421,
-- burn2,
-- burn3,
-- burn4,
-- burn5,
-- bang_concrete_bang = 5000,
-- bang_concrete_bang2,
-- bang_bullet_bang,
-- bang_bullet_bang2 = 5004,
-- bang_glass = 5031,
-- bang_glass2,
-- solidPool_water = 9000,
-- solidPool_blood,
-- solidPool_oil,
-- solidPool_petrol,
-- solidPool_mud,
-- porousPool_water,
-- porousPool_blood,
-- porousPool_oil,
-- porousPool_petrol,
-- porousPool_mud,
-- porousPool_water_ped_drip,
-- liquidTrail_water = 9050
-- }
function AddDecal(decalType, posX, posY, posZ, p4, p5, p6, p7, p8, p9, width, height, rCoef, gCoef, bCoef, opacity, timeout, p17, p18, p19)
	return _in(0xB302244A1839BDAD, decalType, posX, posY, posZ, p4, p5, p6, p7, p8, p9, width, height, rCoef, gCoef, bCoef, opacity, timeout, p17, p18, p19, _ri)
end

--- To remove, see: [`REMOVE_DISPATCH_SPAWN_BLOCKING_AREA`](#\_0x264AC28B01B353A5).
-- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
function AddDispatchSpawnBlockingAngledArea(x1, y1, z1, x2, y2, z2, width)
	return _in(0x918C7B2D2FF3928B, x1, y1, z1, x2, y2, z2, width, _ri)
end
N_0x918c7b2d2ff3928b = AddDispatchSpawnBlockingAngledArea

function AddDispatchSpawnBlockingArea(x1, y1, x2, y2)
	return _in(0x2D4259F1FEB81DA9, x1, y1, x2, y2, _ri)
end
N_0x2d4259f1feb81da9 = AddDispatchSpawnBlockingArea

--- p5 only set to true in single player native scripts. Door hashes normally look like `PROP_[int]_DOOR_[int]` for interior doors and `PROP_BUILDING_[int]_DOOR_[int]` exterior doors but you can just make up your own hash if you want.
-- If scriptDoor is true, register the door on the script handler host (note: there's a hardcap on the number of script IDs that can be added to the system at a given time). If scriptDoor and isLocal are both false, the door is considered to be in a "Persists w/o netobj" state.
-- A simple "localized" door-system (with hundreds/thousands of doors) can be created by setting p5, p6, and p7 to false and using EventHandlers to synchronize the states to: [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53), [DOOR_SYSTEM_SET_OPEN_RATIO](#\_0xB6E6FBA95C7324AC), [DOOR_SYSTEM_SET_HOLD_OPEN](#\_0xD9B71952F78A2640), etc.
-- @param doorHash A (unique) door system identifier
-- @param modelHash Entity model hash
-- @param x The X coordinate of the door object
-- @param y The Y coordinate of the door object
-- @param z The Z coordinate of the door object
-- @param scriptDoor false; relies upon getNetworkGameScriptHandler.
-- @param isLocal On true disables the creation `CRequestDoorEvent's` in [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53).
function AddDoorToSystem(doorHash, modelHash, x, y, z, p5, scriptDoor, isLocal)
	return _in(0x6F8838D03D1DC226, _ch(doorHash), _ch(modelHash), x, y, z, p5, scriptDoor, isLocal)
end

--- Example:
-- GRAPHICS::ADD_ENTITY_ICON(a_0, "MP_Arrow");
-- I tried this and nothing happened...
function AddEntityIcon(entity, icon)
	return _in(0x9CD43EEE12BF4DD0, entity, _ts(icon), _ri)
end

--- All found occurrences in b678d:
-- pastebin.com/ceu67jz8
function AddEntityToAudioMixGroup(entity, groupName, p2)
	return _in(0x153973AB99FE8980, entity, _ts(groupName), p2)
end
N_0x153973ab99fe8980 = AddEntityToAudioMixGroup
DynamicMixerRelatedFn = AddEntityToAudioMixGroup

--- NativeDB Added Parameter 9: BOOL noDamage
-- ```
-- ```
-- BOOL isAudible = If explosion makes a sound.
-- BOOL isInvisible = If the explosion is invisible or not.
-- BOOL noDamage = false: damage || nodamage = true: no damage
-- ```
-- ```cpp
-- enum class eExplosionTag : uint32_t
-- {
-- DONTCARE = 0xFFFFFFFF,
-- GRENADE = 0,
-- GRENADELAUNCHER = 1,
-- STICKYBOMB = 2,
-- MOLOTOV = 3,
-- ROCKET = 4,
-- TANKSHELL = 5,
-- HI_OCTANE = 6,
-- CAR = 7,
-- PLANE = 8,
-- PETROL_PUMP = 9,
-- BIKE = 10,
-- DIR_STEAM = 11,
-- DIR_FLAME = 12,
-- DIR_WATER_HYDRANT = 13,
-- DIR_GAS_CANISTER = 14,
-- BOAT = 15,
-- SHIP_DESTROY = 16,
-- TRUCK = 17,
-- BULLET = 18,
-- SMOKEGRENADELAUNCHER = 19,
-- SMOKEGRENADE = 20,
-- BZGAS = 21,
-- FLARE = 22,
-- GAS_CANISTER = 23,
-- EXTINGUISHER = 24,
-- _0x988620B8 = 25,
-- EXP_TAG_TRAIN = 26,
-- EXP_TAG_BARREL = 27,
-- EXP_TAG_PROPANE = 28,
-- EXP_TAG_BLIMP = 29,
-- EXP_TAG_DIR_FLAME_EXPLODE = 30,
-- EXP_TAG_TANKER = 31,
-- PLANE_ROCKET = 32,
-- EXP_TAG_VEHICLE_BULLET = 33,
-- EXP_TAG_GAS_TANK = 34,
-- EXP_TAG_BIRD_CRAP = 35,
-- EXP_TAG_RAILGUN = 36,
-- EXP_TAG_BLIMP2 = 37,
-- EXP_TAG_FIREWORK = 38,
-- EXP_TAG_SNOWBALL = 39,
-- EXP_TAG_PROXMINE = 40,
-- EXP_TAG_VALKYRIE_CANNON = 41,
-- EXP_TAG_AIR_DEFENCE = 42,
-- EXP_TAG_PIPEBOMB = 43,
-- EXP_TAG_VEHICLEMINE = 44,
-- EXP_TAG_EXPLOSIVEAMMO = 45,
-- EXP_TAG_APCSHELL = 46,
-- EXP_TAG_BOMB_CLUSTER = 47,
-- EXP_TAG_BOMB_GAS = 48,
-- EXP_TAG_BOMB_INCENDIARY = 49,
-- EXP_TAG_BOMB_STANDARD = 50,
-- EXP_TAG_TORPEDO = 51,
-- EXP_TAG_TORPEDO_UNDERWATER = 52,
-- EXP_TAG_BOMBUSHKA_CANNON = 53,
-- EXP_TAG_BOMB_CLUSTER_SECONDARY = 54,
-- EXP_TAG_HUNTER_BARRAGE = 55,
-- EXP_TAG_HUNTER_CANNON = 56,
-- EXP_TAG_ROGUE_CANNON = 57,
-- EXP_TAG_MINE_UNDERWATER = 58,
-- EXP_TAG_ORBITAL_CANNON = 59,
-- EXP_TAG_BOMB_STANDARD_WIDE = 60,
-- EXP_TAG_EXPLOSIVEAMMO_SHOTGUN = 61,
-- EXP_TAG_OPPRESSOR2_CANNON = 62,
-- EXP_TAG_MORTAR_KINETIC = 63,
-- EXP_TAG_VEHICLEMINE_KINETIC = 64,
-- EXP_TAG_VEHICLEMINE_EMP = 65,
-- EXP_TAG_VEHICLEMINE_SPIKE = 66,
-- EXP_TAG_VEHICLEMINE_SLICK = 67,
-- EXP_TAG_VEHICLEMINE_TAR = 68,
-- EXP_TAG_SCRIPT_DRONE = 69,
-- EXP_TAG_RAYGUN = 70,
-- EXP_TAG_BURIEDMINE = 71,
-- EXP_TAG_SCRIPT_MISSILE = 72,
-- EXP_TAG_RCTANK_ROCKET = 73,
-- EXP_TAG_BOMB_WATER = 74,
-- EXP_TAG_BOMB_WATER_SECONDARY = 75,
-- _0xF728C4A9 = 76,
-- _0xBAEC056F = 77,
-- EXP_TAG_FLASHGRENADE = 78,
-- EXP_TAG_STUNGRENADE = 79,
-- _0x763D3B3B = 80,
-- EXP_TAG_SCRIPT_MISSILE_LARGE = 81,
-- EXP_TAG_SUBMARINE_BIG = 82,
-- };
function AddExplosion(x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake)
	return _in(0xE3AD2BDBAEE269AC, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake)
end

function AddExplosionWithUserVfx(x, y, z, explosionType, explosionFx, damageScale, isAudible, isInvisible, cameraShake)
	return _in(0x36DD3FE58B5E5212, x, y, z, explosionType, _ch(explosionFx), damageScale, isAudible, isInvisible, cameraShake)
end
AddSpecfxExplosion = AddExplosionWithUserVfx

--- Returns the index of the newly created hospital spawn point.
-- p3 might be radius?
function AddHospitalRestart(x, y, z, p3, p4)
	return _in(0x1F464EF988465A81, x, y, z, p3, p4, _ri)
end

--- NOTE: ones that are -1, 0 - 35 are determined by a function where it gets a TextLabel from a global then runs,
-- _GET_TEXT_SUBSTRING and depending on what the result is it goes in check order of 0 - 9 then A - Z then z (lowercase). So it will then return 0 - 35 or -1 if it's 'z'. The func to handle that ^^ is func_67 in dialog_handler.c atleast in TU27 Xbox360 scripts.
-- p0 is -1, 0 - 35
-- p1 is a char or string (whatever you wanna call it)
-- p2 is Global 10597 + i * 6. 'i' is a while(i < 70) loop
-- p3 is again -1, 0 - 35
-- p4 is again -1, 0 - 35
-- p5 is either 0 or 1 (bool ?)
-- p6 is either 0 or 1 (The func to determine this is bool)
-- p7 is either 0 or 1 (The func to determine this is bool)
-- p8 is either 0 or 1 (The func to determine this is bool)
-- p9 is 0 - 3 (Determined by func_60 in dialogue_handler.c)
-- p10 is either 0 or 1 (The func to determine this is bool)
-- p11 is either 0 or 1 (The func to determine this is bool)
-- p12 is unknown as in TU27 X360 scripts it only goes to p11.
function AddLineToConversation(index, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)
	return _in(0xC5EF963405593646, index, _ts(p1), _ts(p2), p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)
end

--- Loads a minimap overlay from a GFx file in the current resource.
-- @param name The path to a `.gfx` file in the current resource. It has to be specified as a `file`.
-- @return A minimap overlay ID.
function AddMinimapOverlay(name)
	return _in(0x4afd2499, _ts(name), _ri)
end

function AddModelToCreatorBudget(modelHash)
	return _in(0x0BC3144DEB678666, _ch(modelHash), _r)
end
N_0x0bc3144deb678666 = AddModelToCreatorBudget

--- Creates a navmesh blocking object, vehicles will avoid driving through this area.
-- Only 32 blocking objects may exist at a given time and must be manually managed. See [`REMOVE_NAVMESH_BLOCKING_OBJECT`](#\_0x46399A7895957C0E) and [onResourceStop](https://docs.fivem.net/docs/scripting-reference/events/list/onResourceStop/)
-- @param x The x coordinate to create the block on.
-- @param y The y coordinate.
-- @param z The z coordinate.
-- @param width The width of the block.
-- @param length The length of the block.
-- @param height The height of the block.
-- @param heading The heading of object in degrees.
-- @param p7 Usually false.
-- @param p8 A bitfield; usually 7.
function AddNavmeshBlockingObject(x, y, z, width, length, height, heading, p7, p8)
	return _in(0xFCD5C8E06E502F5A, x, y, z, width, length, height, heading, p7, p8, _ri)
end

function AddNavmeshRequiredRegion(x, y, radius)
	return _in(0x387EAD7EE42F6685, x, y, radius)
end

function AddNextMessageToPreviousBriefs(p0)
	return _in(0x60296AF4BA14ABC5, p0)
end

function AddOwnedExplosion(ped, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake)
	return _in(0x172AA1B624FA1013, ped, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake)
end

function AddPatrolRouteLink(p0, p1)
	return _in(0x23083260DEC3A551, p0, p1)
end

--- Example:
-- TASK::ADD_PATROL_ROUTE_NODE(2, "WORLD_HUMAN_GUARD_STAND", -193.4915, -2378.864990234375, 10.9719, -193.4915, -2378.864990234375, 10.9719, 3000);
-- p0 is between 0 and 4 in the scripts.
-- p1 is "WORLD_HUMAN_GUARD_STAND" or "StandGuard".
-- p2, p3 and p4 is only one parameter sometimes in the scripts. Most likely a Vector3 hence p2, p3 and p4 are coordinates.
-- Examples:
-- TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_739[7/*3*/], 0.0, 0.0, 0.0, 0);
-- TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_B0[17/*44*/]._f3, l_B0[17/*44*/]._f3, 2000);
-- p5, p6 and p7 are for example set to: 1599.0406494140625, 2713.392578125, 44.4309.
-- p8 is an int, often random set to for example: MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000).
function AddPatrolRouteNode(p0, p1, x1, y1, z1, x2, y2, z2, p8)
	return _in(0x8EDF950167586B7C, p0, _ts(p1), x1, y1, z1, x2, y2, z2, p8)
end

--- Applies an Item from a PedDecorationCollection to a ped. These include tattoos and shirt decals.
-- collection - PedDecorationCollection filename hash
-- overlay - Item name hash
-- Example:
-- Entry inside "mpbeach_overlays.xml" -
-- <Item>
-- <uvPos x="0.500000" y="0.500000" />
-- <scale x="0.600000" y="0.500000" />
-- <rotation value="0.000000" />
-- <nameHash>FM_Hair_Fuzz</nameHash>
-- <txdHash>mp_hair_fuzz</txdHash>
-- <txtHash>mp_hair_fuzz</txtHash>
-- <zone>ZONE_HEAD</zone>
-- <type>TYPE_TATTOO</type>
-- <faction>FM</faction>
-- <garment>All</garment>
-- <gender>GENDER_DONTCARE</gender>
-- <award />
-- <awardLevel />
-- </Item>
-- Code:
-- PED::_0x5F5D1665E352A839(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("mpbeach_overlays"), MISC::GET_HASH_KEY("fm_hair_fuzz"))
function AddPedDecorationFromHashes(ped, collection, overlay)
	return _in(0x5F5D1665E352A839, ped, _ch(collection), _ch(overlay))
end
ApplyPedOverlay = AddPedDecorationFromHashes
SetPedDecoration = AddPedDecorationFromHashes

function AddPedDecorationFromHashesInCorona(ped, collection, overlay)
	return _in(0x5619BFA07CFD7833, ped, _ch(collection), _ch(overlay))
end
N_0x5619bfa07cfd7833 = AddPedDecorationFromHashesInCorona
SetPedFacialDecoration = AddPedDecorationFromHashesInCorona

--- 4 calls in the b617d scripts. The only one with p0 and p2 in clear text:
-- AUDIO::ADD_PED_TO_CONVERSATION(5, l_AF, "DINAPOLI");
-- =================================================
-- One of the 2 calls in dialogue_handler.c p0 is in a while-loop, and so is determined to also possibly be 0 - 15.
function AddPedToConversation(index, ped, p2)
	return _in(0x95D9F4BC443956E7, index, ped, _ts(p2))
end

function AddPetrolDecal(x, y, z, groundLvl, width, transparency)
	return _in(0x4F5212C7AD880DF8, x, y, z, groundLvl, width, transparency, _ri)
end

function AddPetrolTrailDecalInfo(x, y, z, p3)
	return _in(0x967278682CB6967A, x, y, z, p3)
end
N_0x967278682cb6967a = AddPetrolTrailDecalInfo

function AddPickupToInteriorRoomByName(pickup, roomName)
	return _in(0x3F6167F351168730, pickup, _ts(roomName))
end

function AddPointToGpsCustomRoute(x, y, z)
	return _in(0x311438A071DD9B1A, x, y, z)
end
N_0x311438a071dd9b1a = AddPointToGpsCustomRoute

function AddPointToGpsMultiRoute(x, y, z)
	return _in(0xA905192A6781C41B, x, y, z)
end
N_0xa905192a6781c41b = AddPointToGpsMultiRoute

function AddPoliceRestart(p0, p1, p2, p3, p4)
	return _in(0x452736765B31FC4B, p0, p1, p2, p3, p4, _ri)
end

--- NativeDB Added Parameter 10: BOOL p9
function AddPopMultiplierArea(x1, y1, z1, x2, y2, z2, p6, p7, p8)
	return _in(0x67F6413D3220E18D, x1, y1, z1, x2, y2, z2, p6, p7, p8, _ri)
end
N_0x67f6413d3220e18d = AddPopMultiplierArea

--- This native is adding a zone, where you can change density settings. For example, you can add a zone on 0.0, 0.0, 0.0 with radius 900.0 and vehicleMultiplier 0.0, and you will not see any new population vehicle spawned in a radius of 900.0 from 0.0, 0.0, 0.0. Returns the id. You can have only 15 zones at the same time. You can remove zone using REMOVE_POP_MULTIPLIER_SPHERE
function AddPopMultiplierSphere(x, y, z, radius, pedMultiplier, vehicleMultiplier, p6, p7)
	return _in(0x32C7A7E8C43A1F80, x, y, z, radius, pedMultiplier, vehicleMultiplier, p6, p7, _ri)
end
N_0x32c7a7e8c43a1f80 = AddPopMultiplierSphere

--- Can't select void. This function returns nothing. The hash of the created relationship group is output in the second parameter.
function AddRelationshipGroup(name, groupHash)
	return _in(0xF372BC22FCB88606, _ts(name), _ii(groupHash) --[[ may be optional ]], _ri)
end

--- Experimental natives, please do not use in a live environment.
function AddReplaceTexture(origTxd, origTxn, newTxd, newTxn)
	return _in(0xa66f8f75, _ts(origTxd), _ts(origTxn), _ts(newTxd), _ts(newTxn))
end

function AddReplayStatValue(value)
	return _in(0x69FE6DC87BD2A5E9, value)
end
N_0x69fe6dc87bd2a5e9 = AddReplayStatValue

function AddRoadNodeSpeedZone(x, y, z, radius, speed, p5)
	return _in(0x2CE544C68FB812A0, x, y, z, radius, speed, p5, _ri)
end
N_0x2ce544c68fb812a0 = AddRoadNodeSpeedZone
AddSpeedZoneForCoord = AddRoadNodeSpeedZone

--- Creates a rope at the specific position, that extends in the specified direction when not attached to any entities.
-- __
-- Rope does NOT interact with anything you attach it to, in some cases it make interact with the world AFTER it breaks (seems to occur if you set the type to -1).
-- Rope will sometimes contract and fall to the ground like you'd expect it to, but since it doesn't interact with the world the effect is just jaring.
-- @param x Spawn coordinate X component.
-- @param y Spawn coordinate Y component.
-- @param z Spawn coordinate Z component.
-- @param rotX Rotation X component.
-- @param rotY Rotation Y component.
-- @param rotZ Rotation Z component.
-- @param maxLength The maximum length the rope can droop.
-- @param ropeType 1 to 4 are thick ropes. 5 and up are thin ropes. Ropes types defined in ropedata.xml. An invalid rope type such as 0 will crash the game.
-- @param initLength The initial length of the rope.
-- @param minLength The minimum length the rope can be.
-- @param lengthChangeRate The speed in which the rope will wind if winding is started.
-- @param collisionOn Whether the rope should have collision. In original scripts this is followed by a LoadRopeData call when set.
-- @param lockFromFront If max length is zero, and this is set to false the rope will become rigid (it will force a specific distance, what ever length is, between the objects).
-- @param timeMultiplier The speed as which physics should run at. 1.0f is normal, 2.0f is twice as fast, -1.0f is time going backwards. This can affect gravity, etc.
-- @param breakable Whether shooting the rope will break it.
-- @param unkPtr Unknown pointer, always 0 in original scrips.
-- @return A script handle for the rope
function AddRope(x, y, z, rotX, rotY, rotZ, maxLength, ropeType, initLength, minLength, lengthChangeRate, onlyPPU, collisionOn, lockFromFront, timeMultiplier, breakable, unkPtr)
	return _in(0xE832D760399EB220, x, y, z, rotX, rotY, rotZ, maxLength, ropeType, initLength, minLength, lengthChangeRate, onlyPPU, collisionOn, lockFromFront, timeMultiplier, breakable, _ii(unkPtr) --[[ may be optional ]], _ri)
end

function AddScenarioBlockingArea(x1, y1, z1, x2, y2, z2, p6, p7, p8, p9)
	return _in(0x1B5C85C612E5256E, x1, y1, z1, x2, y2, z2, p6, p7, p8, p9, _ri)
end

--- BRAIN::ADD_SCRIPT_TO_RANDOM_PED("pb_prostitute", ${s_f_y_hooker_01}, 100, 0);
-- - Nacorpio
-- -----
-- Hardcoded to not work in Multiplayer.
function AddScriptToRandomPed(name, model, p2, p3)
	return _in(0x4EE5367468A65CCC, _ts(name), _ch(model), p2, p3)
end

--- eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
function AddShockingEventAtPosition(eventType, x, y, z, duration)
	return _in(0xD9F8455409B525E9, eventType, x, y, z, duration, _ri)
end

--- eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
function AddShockingEventForEntity(eventType, entity, duration)
	return _in(0x7FD8F3BE76F89422, eventType, entity, duration, _ri)
end

--- Adds a handler for changes to a state bag.
-- The function called expects to match the following signature:
-- ```ts
-- function StateBagChangeHandler(bagName: string, key: string, value: any, reserved: number, replicated: boolean);
-- ```
-- *   **bagName**: The internal bag ID for the state bag which changed. This is usually `player:Source`, `entity:NetID`
-- or `localEntity:Handle`.
-- *   **key**: The changed key.
-- *   **value**: The new value stored at key. The old value is still stored in the state bag at the time this callback executes.
-- *   **reserved**: Currently unused.
-- *   **replicated**: Whether the set is meant to be replicated.
-- At this time, the change handler can't opt to reject changes.
-- @param keyFilter The key to check for, or null.
-- @param bagFilter The bag ID to check for, or null.
-- @param handler The handler function.
-- @return A cookie to remove the change handler.
function AddStateBagChangeHandler(keyFilter, bagFilter, handler)
	return _in(0x5ba35aaf, _ts(keyFilter), _ts(bagFilter), _mfr(handler), _ri)
end

--- See description of [`ADD_STUNT_JUMP_ANGLED`](#\_0xBBE5D803A5360CBF) for detailed info. The only difference really is this one does not have the radius (or angle, not sure) floats parameters for entry and landing zones.
-- @param x1 Jump entry left far bottom corner coordinate X.
-- @param y1 Jump entry left far bottom corner coordinate Y.
-- @param z1 Jump entry left far bottom corner coordinate Z.
-- @param x2 Jump entry right near top corner coordinate X.
-- @param y2 Jump entry right near top corner coordinate Y.
-- @param z2 Jump entry right near top corner coordinate Z.
-- @param x3 Landing zone end coordinate X.
-- @param y3 Landing zone end coordinate Y.
-- @param z3 Landing zone end coordinate Z.
-- @param x4 Landing zone start coordinate X.
-- @param y4 Landing zone start coordinate Y.
-- @param z4 Landing zone start coordinate Z.
-- @param camX Stuntcam (cinematic) coordinate x.
-- @param camY Stuntcam (cinematic) coordinate y.
-- @param camZ Stuntcam (cinematic) coordinate z.
-- @param unk1 Unknown, always 150.
-- @param unk2 Unknown, always 0.
-- @param unk3 Unknown, always 0.
-- @return The ID of the stunt jump that was added.
function AddStuntJump(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, camX, camY, camZ, unk1, unk2, unk3)
	return _in(0x1A992DA297A4630C, x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, camX, camY, camZ, unk1, unk2, unk3, _ri)
end

--- Creates a new stunt jump.
-- The radius1 and radius2 might actually not be a radius at all, but that's what it seems to me testing them in-game. But they may be 'angle' floats instead, considering this native is named ADD_STUNT_JUMP\_**ANGLED**.
-- Info about the specific 'parameter sections':
-- **x1, y1, z1, x2, y2, z2 and radius1:**
-- First coordinates are for the jump entry area, and the radius that will be checked around that area. So if you're not exactly within the coordinates, but you are within the outter radius limit then it will still register as entering the stunt jump. Note as mentioned above, the radius is just a guess, I'm not really sure about it's exact purpose.
-- **x3, y3, z3, x4, y4, z4 and radius2:**
-- Next part is the landing area, again starting with the left bottom (nearest to the stunt jump entry zone) coordinate, and the second one being the top right furthest away part of the landing area. Followed by another (most likely) radius float, this is usually slightly larger than the entry zone 'radius' float value, just because you have quite a lot of places where you can land (I'm guessing).
-- **camX, camY and camZ:**
-- The final coordinate in this native is the Camera position. Rotation and zoom/FOV is managed by the game itself, you just need to provide the camera location.
-- **unk1, unk2 and unk3:**
-- Not sure what these are for, but they're always `150, 0, 0` in decompiled scripts.
-- Visualized example in-game:
-- ![](https://d.fivem.dev/2019-03-15\_18-24\_c7802\_846.png)
-- Here is a list of almost all of the stunt jumps from GTA V (taken from decompiled scripts): https://pastebin.com/EW1jBPkY
-- @param x1 Entry zone bottom left corner x.
-- @param y1 Entry zone bottom left corner y.
-- @param z1 Entry zone bottom left corner z.
-- @param x2 Entry zone top right corner x.
-- @param y2 Entry zone top right corner y.
-- @param z2 Entry zone top right corner z.
-- @param radius1 Probably a "feather" radius for entry zone, you need to enter the jump within the min/max coordinates, or within this radius of those two coordinates.
-- @param x3 Landing zone start corner coordinate x.
-- @param y3 Landing zone start corner coordinate y.
-- @param z3 Landing zone start corner coordinate z.
-- @param x4 Landing zone end corner coordinate x.
-- @param y4 Landing zone end corner coordinate y.
-- @param z4 Landing zone end corner coordinate z.
-- @param radius2 Probably a "feather" radius for landing zone, you need to land within the min/max coordinates, or within this radius of those two coordinates.
-- @param camX Stunt (cinematic) camera x position.
-- @param camY Stunt (cinematic) camera y position.
-- @param camZ Stunt (cinematic) camera z position.
-- @param unk1 always 150
-- @param unk2 always 0
-- @param unk3 always 0
-- @return The ID of the stuntjump that was created.
function AddStuntJumpAngled(x1, y1, z1, x2, y2, z2, radius1, x3, y3, z3, x4, y4, z4, radius2, camX, camY, camZ, unk1, unk2, unk3)
	return _in(0xBBE5D803A5360CBF, x1, y1, z1, x2, y2, z2, radius1, x3, y3, z3, x4, y4, z4, radius2, camX, camY, camZ, unk1, unk2, unk3, _ri)
end

--- Adds a point related to CTacticalAnalysis
function AddTacticalAnalysisPoint(x, y, z)
	return _in(0xB8721407EE9C3FF6, x, y, z)
end
N_0xb8721407ee9c3ff6 = AddTacticalAnalysisPoint

function AddTcmodifierOverride(modifierName1, modifierName2)
	return _in(0x1A8E2C8B9CF4549C, _ts(modifierName1), _ts(modifierName2))
end
N_0x1a8e2c8b9cf4549c = AddTcmodifierOverride

--- Adds a float to a text component placeholder, replacing `~1~` in the current text command's text label.
-- ![Example output](https://i.imgur.com/jvuQ0II.png)
-- @param value The number to substitute in the label.
-- @param decimalPlaces How many decimal places to add
function AddTextComponentFloat(value, decimalPlaces)
	return _in(0xE7DCB5B874BCD96E, value, decimalPlaces)
end

function AddTextComponentFormattedInteger(value, commaSeparated)
	return _in(0x0E4C749FF9DE9CC4, value, commaSeparated)
end
N_0x0e4c749ff9de9cc4 = AddTextComponentFormattedInteger

function AddTextComponentInteger(value)
	return _in(0x03B504CF259931BC, value)
end

function AddTextComponentSubstringBlipName(blip)
	return _in(0x80EAD8E2E1D5D52E, blip)
end
N_0x80ead8e2e1d5d52e = AddTextComponentSubstringBlipName

function AddTextComponentSubstringKeyboardDisplay(string)
	return _in(0x5F68520888E69014, _ts(string))
end
AddTextComponentString3 = AddTextComponentSubstringKeyboardDisplay
AddTextComponentScaleform = AddTextComponentSubstringKeyboardDisplay

--- p1 was always -1
function AddTextComponentSubstringPhoneNumber(p0, p1)
	return _in(0x761B77454205A61D, _ts(p0), p1)
end
N_0x761b77454205a61d = AddTextComponentSubstringPhoneNumber
AddTextComponentAppTitle = AddTextComponentSubstringPhoneNumber

--- Adds an arbitrary string as a text component placeholder, replacing `~a~` in the current text command's text label.
-- See the documentation on text formatting for more information.
-- @param text A string to add of up to 99 characters. This can contain additional `~` formatting directives.
function AddTextComponentSubstringPlayerName(text)
	return _in(0x6C188BE134E074AA, _ts(text))
end
AddTextComponentString = AddTextComponentSubstringPlayerName

function AddTextComponentSubstringTextLabel(labelName)
	return _in(0xC63CD5D2920ACBE7, _ts(labelName))
end
AddTextComponentItemString = AddTextComponentSubstringTextLabel

--- It adds the localized text of the specified GXT entry name. Eg. if the argument is GET_HASH_KEY("ES_HELP"), adds "Continue". Just uses a text labels hash key
function AddTextComponentSubstringTextLabelHashKey(gxtEntryHash)
	return _in(0x17299B63C7683A2B, _ch(gxtEntryHash))
end
N_0x17299b63c7683a2b = AddTextComponentSubstringTextLabelHashKey

--- Adds a timer (e.g. "00:00:00:000"). The appearance of the timer depends on the flags, which needs more research.
function AddTextComponentSubstringTime(timestamp, flags)
	return _in(0x1115F16B8AB9E8BF, timestamp, flags)
end

--- This native (along with 0x5F68520888E69014 and 0x6C188BE134E074AA) do not actually filter anything. They simply add the provided text (as of 944)
function AddTextComponentSubstringWebsite(website)
	return _in(0x94CF4AC034C9C986, _ts(website))
end
AddTextComponentString2 = AddTextComponentSubstringWebsite

function AddTextEntry(entryKey, entryText)
	return _in(0x32ca01c3, _ts(entryKey), _ts(entryText))
end

function AddTextEntryByHash(entryKey, entryText)
	return _in(0x289da860, _ch(entryKey), _ts(entryText))
end

function AddToClockTime(hours, minutes, seconds)
	return _in(0xD716F30D8C8980E2, hours, minutes, seconds)
end

function AddToItemset(p0, p1)
	return _in(0xE3945201F14637DD, p0, p1, _r)
end

function AddVehicleCombatAngledAvoidanceArea(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x54B0F614960F4A5F, p0, p1, p2, p3, p4, p5, p6, _ri)
end
N_0x54b0f614960f4a5f = AddVehicleCombatAngledAvoidanceArea
AddVehicleCombatAvoidanceArea = AddVehicleCombatAngledAvoidanceArea

--- boneIndex is always chassis_dummy in the scripts. The x/y/z params are location relative to the chassis bone.
function AddVehicleCrewEmblem(vehicle, ped, boneIndex, x1, x2, x3, y1, y2, y3, z1, z2, z3, scale, p13, alpha)
	return _in(0x428BDCB9DA58DA53, vehicle, ped, boneIndex, x1, x2, x3, y1, y2, y3, z1, z2, z3, scale, p13, alpha, _r)
end
AddClanDecalToVehicle = AddVehicleCrewEmblem

function AddVehiclePhoneExplosiveDevice(vehicle)
	return _in(0x99AD4CCCB128CBC9, vehicle)
end
N_0x99ad4cccb128cbc9 = AddVehiclePhoneExplosiveDevice

function AddVehicleStuckCheckWithWarp(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x2FA9923062DD396C, p0, p1, p2, p3, p4, p5, p6)
end

--- x, y, z: offset in world coords from some entity.
function AddVehicleSubtaskAttackCoord(ped, x, y, z)
	return _in(0x5CF0D8F9BBA0DD75, ped, x, y, z)
end

function AddVehicleSubtaskAttackPed(ped, ped2)
	return _in(0x85F462BADC7DA47F, ped, ped2)
end

function AddVehicleUpsidedownCheck(vehicle)
	return _in(0xB72E26D81006005B, vehicle)
end

function AdvanceClockTimeTo(hour, minute, second)
	return _in(0xC8CA9670B9D83B3B, hour, minute, second)
end

function AllowMissionCreatorWarp(toggle)
	return _in(0xDEA36202FC3382DF, toggle)
end
N_0xdea36202fc3382df = AllowMissionCreatorWarp

--- Allows opening the pause menu this frame, when the player is dead.
function AllowPauseMenuWhenDeadThisFrame()
	return _in(0xCC3FDDED67BCFC63)
end
N_0xcc3fdded67bcfc63 = AllowPauseMenuWhenDeadThisFrame

function AllowPlayerSwitchAscent()
	return _in(0x8E2A065ABDAE6994)
end
N_0x8e2a065abdae6994 = AllowPlayerSwitchAscent

function AllowPlayerSwitchDescent()
	return _in(0xAD5FDF34B81BFE79)
end
N_0xad5fdf34b81bfe79 = AllowPlayerSwitchDescent

function AllowPlayerSwitchOutro()
	return _in(0x74DE2E8739086740)
end
N_0x74de2e8739086740 = AllowPlayerSwitchOutro

function AllowPlayerSwitchPan()
	return _in(0x43D1680C6D19A8E9)
end
N_0x43d1680c6d19a8e9 = AllowPlayerSwitchPan

function AllowSonarBlips(toggle)
	return _in(0x60734CC207C9833C, toggle)
end
N_0x60734cc207c9833c = AllowSonarBlips

--- Seems to animate the gameplay camera zoom.
-- Eg. _ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1000f);
-- will animate the camera zooming in from 1000 meters away.
-- Game scripts use it like this:
-- // Setting this to 1 prevents V key from changing zoom
-- PLAYER::SET_PLAYER_FORCED_ZOOM(PLAYER::PLAYER_ID(), 1);
-- // These restrict how far you can move cam up/down left/right
-- CAM::_CLAMP_GAMEPLAY_CAM_YAW(-20f, 50f);
-- CAM::_CLAMP_GAMEPLAY_CAM_PITCH(-60f, 0f);
-- CAM::_ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1f);
function AnimateGameplayCamZoom(p0, distance)
	return _in(0xDF2E1F7742402E81, p0, distance)
end

--- Example from michael2 script.
-- CAM::ANIMATED_SHAKE_CAM(l_5069, "shake_cam_all@", "light", "", 1f);
function AnimatedShakeCam(cam, p1, p2, p3, amplitude)
	return _in(0xA2746EEAE3E577CD, cam, _ts(p1), _ts(p2), _ts(p3), amplitude)
end

--- CAM::ANIMATED_SHAKE_SCRIPT_GLOBAL("SHAKE_CAM_medium", "medium", "", 0.5f);
function AnimatedShakeScriptGlobal(p0, p1, p2, p3)
	return _in(0xC2EAE3FB8CDBED31, _ts(p0), _ts(p1), _ts(p2), p3)
end
N_0xc2eae3fb8cdbed31 = AnimatedShakeScriptGlobal

--- See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724)
function AnimpostfxGetUnk(effectName)
	return _in(0xE35B38A27E8E7179, _ts(effectName), _rf)
end
N_0xe35b38a27e8e7179 = AnimpostfxGetUnk

--- See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
-- @return Whether the specified effect is active
function AnimpostfxIsRunning(effectName)
	return _in(0x36AD3E690DA5ACEB, _ts(effectName), _r)
end
GetScreenEffectIsActive = AnimpostfxIsRunning

--- duration - is how long to play the effect for in milliseconds. If 0, it plays the default length
-- if loop is true, the effect won't stop until you call ANIMPOSTFX_STOP on it. (only loopable effects)
function AnimpostfxPlay(effectName, duration, looped)
	return _in(0x2206BF9A37B7F724, _ts(effectName), duration, looped)
end
StartScreenEffect = AnimpostfxPlay

--- See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
function AnimpostfxStop(effectName)
	return _in(0x068E835A1D0DC0E3, _ts(effectName))
end
StopScreenEffect = AnimpostfxStop

function AnimpostfxStopAll()
	return _in(0xB4EDDC19532BFB85)
end
StopAllScreenEffects = AnimpostfxStopAll

--- Stops the effect and sets a value (bool) in its data (+0x199) to false; See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
function AnimpostfxStopAndDoUnk(effectName)
	return _in(0xD2209BE128B5418C, _ts(effectName))
end
N_0xd2209be128b5418c = AnimpostfxStopAndDoUnk

function AppClearBlock()
	return _in(0x5FE1DF3342DB7DBA)
end

function AppCloseApp()
	return _in(0xE41C65E07A5F05FC)
end

function AppCloseBlock()
	return _in(0xE8E3FCF72EAC0EF8)
end

function AppDataValid()
	return _in(0x846AA8E7D55EE5B6, _r)
end

function AppDeleteAppData(appName)
	return _in(0x44151AEA95C8A003, _ts(appName), _r)
end

function AppGetDeletedFileStatus()
	return _in(0xC9853A2BE3DED1A6, _ri)
end

function AppGetFloat(property)
	return _in(0x1514FB24C02C2322, _ts(property), _rf)
end

function AppGetInt(property)
	return _in(0xD3A58A12C77D9D4B, _ts(property), _ri)
end

function AppGetString(property)
	return _in(0x749B023950D2311C, _ts(property), _s)
end

function AppHasLinkedSocialClubAccount()
	return _in(0x71EEE69745088DA0, _r)
end

function AppHasSyncedData(appName)
	return _in(0xCA52279A7271517F, _ts(appName), _r)
end

function AppSaveData()
	return _in(0x95C5D356CDA6E85F)
end

--- Called in the gamescripts like:
-- APP::APP_SET_APP("car");
-- APP::APP_SET_APP("dog");
function AppSetApp(appName)
	return _in(0xCFD0406ADAF90D2B, _ts(appName))
end

function AppSetBlock(blockName)
	return _in(0x262AB456A3D21F93, _ts(blockName))
end

function AppSetFloat(property, value)
	return _in(0x25D7687C68E0DAA4, _ts(property), value)
end

function AppSetInt(property, value)
	return _in(0x607E8E3D3E4F9611, _ts(property), value)
end

function AppSetString(property, value)
	return _in(0x3FF2FCEC4B7721B4, _ts(property), _ts(value))
end

--- damages a ped with the given amount
-- ----
-- armorFirst means it will damage/lower the armor first before damaging the player.
-- setting damageAmount to a negative amount will cause the player or the armor (depending on armorFirst) to be healed by damageAmount instead.
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function ApplyDamageToPed(ped, damageAmount, armorFirst)
	return _in(0x697157CED63F18D4, ped, damageAmount, armorFirst)
end

--- Applies a force to the specified entity.
-- **List of force types (p1)**:
-- ```
-- public enum ForceType
-- {
-- MinForce = 0,
-- MaxForceRot = 1,
-- MinForce2 = 2,
-- MaxForceRot2 = 3,
-- ForceNoRot = 4,
-- ForceRotPlusForce = 5
-- }
-- ```
-- Research/documentation on the gtaforums can be found [here](https://gtaforums.com/topic/885669-precisely-define-object-physics/) and [here](https://gtaforums.com/topic/887362-apply-forces-and-momentums-to-entityobject/).
-- @param entity The entity you want to apply a force on
-- @param forceType See native description above for a list of commonly used values
-- @param x Force amount (X)
-- @param y Force amount (Y)
-- @param z Force amount (Z)
-- @param offX Rotation/offset force (X)
-- @param offY Rotation/offset force (Y)
-- @param offZ Rotation/offset force (Z)
-- @param boneIndex (Often 0) Entity bone index
-- @param isDirectionRel (Usually false) Vector defined in local (body-fixed) coordinate frame
-- @param ignoreUpVec (Usually true)
-- @param isForceRel (Usually true) When true, force gets multiplied with the objects mass and different objects will have the same acceleration
-- @param p12 (Usually false)
-- @param p13 (Usually true)
function ApplyForceToEntity(entity, forceType, x, y, z, offX, offY, offZ, boneIndex, isDirectionRel, ignoreUpVec, isForceRel, p12, p13)
	return _in(0xC5F68BE9613E2D18, entity, forceType, x, y, z, offX, offY, offZ, boneIndex, isDirectionRel, ignoreUpVec, isForceRel, p12, p13)
end

--- Applies a force to the specified entity.
-- **List of force types (p1)**:
-- public enum ForceType
-- {
-- MinForce = 0,
-- MaxForceRot = 1,
-- MinForce2 = 2,
-- MaxForceRot2 = 3,
-- ForceNoRot = 4,
-- ForceRotPlusForce = 5
-- }
-- Research/documentation on the gtaforums can be found here https://gtaforums.com/topic/885669-precisely-define-object-physics/) and here https://gtaforums.com/topic/887362-apply-forces-and-momentums-to-entityobject/.
-- p6/relative - makes the xyz force not relative to world coords, but to something else
-- p7/highForce - setting false will make the force really low
function ApplyForceToEntityCenterOfMass(entity, forceType, x, y, z, p5, isDirectionRel, isForceRel, p8)
	return _in(0x18FF00FC7EFF559E, entity, forceType, x, y, z, p5, isDirectionRel, isForceRel, p8)
end

function ApplyImpulseToCloth(posX, posY, posZ, vecX, vecY, vecZ, impulse)
	return _in(0xE37F721824571784, posX, posY, posZ, vecX, vecY, vecZ, impulse)
end

--- Found one occurence in re_crashrescue.c4
-- PED::APPLY_PED_BLOOD(l_4B, 3, 0.0, 0.0, 0.0, "wound_sheet");
function ApplyPedBlood(ped, boneIndex, xRot, yRot, zRot, woundType)
	return _in(0x83F7E01C7B769A26, ped, boneIndex, xRot, yRot, zRot, _ts(woundType))
end

function ApplyPedBloodByZone(ped, p1, p2, p3, p4)
	return _in(0x3311E47B91EDCBBC, ped, p1, p2, p3, _ii(p4) --[[ may be optional ]])
end
N_0x3311e47b91edcbbc = ApplyPedBloodByZone

function ApplyPedBloodDamageByZone(ped, p1, p2, p3, p4)
	return _in(0x816F6981C60BF53B, ped, p1, p2, p3, p4)
end
N_0x816f6981c60bf53b = ApplyPedBloodDamageByZone

function ApplyPedBloodSpecific(ped, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0xEF0D582CBF2D9B0F, ped, p1, p2, p3, p4, p5, p6, p7, _ii(p8) --[[ may be optional ]])
end
N_0xef0d582cbf2d9b0f = ApplyPedBloodSpecific

--- enum eDamageZone
-- {
-- DZ_Torso = 0,
-- DZ_Head,
-- DZ_LeftArm,
-- DZ_RightArm,
-- DZ_LeftLeg,
-- DZ_RightLeg,
-- };
-- Decal Names:
-- scar
-- blushing
-- cs_flush_anger
-- cs_flush_anger_face
-- bruise
-- bruise_large
-- herpes
-- ArmorBullet
-- basic_dirt_cloth
-- basic_dirt_skin
-- cs_trev1_dirt
-- APPLY_PED_DAMAGE_DECAL(ped, 1, 0.5f, 0.513f, 0f, 1f, unk, 0, 0, "blushing");
function ApplyPedDamageDecal(ped, damageZone, xOffset, yOffset, heading, scale, alpha, variation, fadeIn, decalName)
	return _in(0x397C38AA7B4A5F83, ped, damageZone, xOffset, yOffset, heading, scale, alpha, variation, fadeIn, _ts(decalName))
end

--- Damage Packs:
-- "SCR_TrevorTreeBang"
-- "HOSPITAL_0"
-- "HOSPITAL_1"
-- "HOSPITAL_2"
-- "HOSPITAL_3"
-- "HOSPITAL_4"
-- "HOSPITAL_5"
-- "HOSPITAL_6"
-- "HOSPITAL_7"
-- "HOSPITAL_8"
-- "HOSPITAL_9"
-- "SCR_Dumpster"
-- "BigHitByVehicle"
-- "SCR_Finale_Michael_Face"
-- "SCR_Franklin_finb"
-- "SCR_Finale_Michael"
-- "SCR_Franklin_finb2"
-- "Explosion_Med"
-- "SCR_Torture"
-- "SCR_TracySplash"
-- "Skin_Melee_0"
-- Additional damage packs:
-- gist.github.com/alexguirre/f3f47f75ddcf617f416f3c8a55ae2227
function ApplyPedDamagePack(ped, damagePack, damage, mult)
	return _in(0x46DF918788CB093F, ped, _ts(damagePack), damage, mult)
end

function AreAllNavmeshRegionsLoaded()
	return _in(0x8415D95B194A3AEA, _r)
end

--- Appears to return false if any window is broken.
function AreAllVehicleWindowsIntact(vehicle)
	return _in(0x11D862A3E977A9EF, vehicle, _r)
end
AreAllVehicleWindowsIntact = AreAllVehicleWindowsIntact

--- Returns false if every seat is occupied.
function AreAnyVehicleSeatsFree(vehicle)
	return _in(0x2D34FC3BC4ADB780, vehicle, _r)
end
IsAnyVehicleSeatEmpty = AreAnyVehicleSeatsFree

--- Returns true when the bomb bay doors of this plane are open. False if they're closed.
-- @param aircraft The vehicle to check the bomb bay doors on.
-- @return A bool indicating the state of the doors (true = open, false = closed).
function AreBombBayDoorsOpen(aircraft)
	return _in(0xD0917A423314BBA8, aircraft, _r)
end
N_0xd0917a423314bba8 = AreBombBayDoorsOpen
GetAreBombBayDoorsOpen = AreBombBayDoorsOpen

function AreEntitiesEntirelyInsideGarage(garageHash, p1, p2, p3, p4)
	return _in(0x85B6C850546FDDE2, _ch(garageHash), p1, p2, p3, p4, _r)
end
N_0x85b6c850546fdde2 = AreEntitiesEntirelyInsideGarage

--- Only used with the "akula" in the decompiled native scripts.
-- ```
-- NativeDB Introduced: v1290
-- ```
function AreHeliStubWingsDeployed(vehicle)
	return _in(0xAEF12960FA943792, vehicle, _r)
end
N_0xaef12960fa943792 = AreHeliStubWingsDeployed

function AreNodesLoadedForArea(x1, y1, x2, y2)
	return _in(0xF7B79A50B905A30D, x1, y1, x2, y2, _r)
end
N_0xf7b79a50b905a30d = AreNodesLoadedForArea
ArePathNodesLoadedInArea = AreNodesLoadedForArea

--- Returns whether the outrigger legs are deployed for the vehicle.
-- The Chernobog is one of the few vehicles with outrigger legs.
-- ```
-- NativeDB Introduced: v1290
-- ```
-- @return The deployment state of the vehicle's outrigger legs
function AreOutriggerLegsDeployed(vehicle)
	return _in(0x3A9128352EAC9E85, vehicle, _r)
end
N_0x3a9128352eac9e85 = AreOutriggerLegsDeployed

function ArePlanePropellersIntact(plane)
	return _in(0x755D6D5267CBBD7E, plane, _r)
end
N_0x755d6d5267cbbd7e = ArePlanePropellersIntact
ArePropellersUndamaged = ArePlanePropellersIntact

function ArePlaneWingsIntact(plane)
	return _in(0x5991A01434CE9677, plane, _r)
end
N_0x5991a01434ce9677 = ArePlaneWingsIntact
AddAMarkerOverVehicle = ArePlaneWingsIntact
AreVehicleWingsIntact = ArePlaneWingsIntact

function ArePlayerFlashingStarsAboutToDrop(player)
	return _in(0xAFAF86043E5874E9, player, _r)
end

function ArePlayerStarsGreyedOut(player)
	return _in(0x0A6EB355EE14A2DB, player, _r)
end

function AreProfileSettingsValid()
	return _in(0x5AA3BEFA29F03AD4, _r)
end
N_0x5aa3befa29f03ad4 = AreProfileSettingsValid

function AreStringsEqual(string1, string2)
	return _in(0x0C515FAB3FF9EA92, _ts(string1), _ts(string2), _r)
end

function Asin(p0)
	return _in(0xC843060B5765DCE7, p0, _rf)
end

function AssistedMovementCloseRoute()
	return _in(0xAEBF081FFC0A0E5E)
end

function AssistedMovementFlushRoute()
	return _in(0x8621390F0CDCFE1F)
end

function AssistedMovementIsRouteLoaded(route)
	return _in(0x60F9A4393A21F741, _ts(route), _r)
end

function AssistedMovementOverrideLoadDistanceThisFrame(dist)
	return _in(0x13945951E16EF912, dist)
end

function AssistedMovementRemoveRoute(route)
	return _in(0x3548536485DD792B, _ts(route))
end

--- Routes: "1_FIBStairs", "2_FIBStairs", "3_FIBStairs", "4_FIBStairs", "5_FIBStairs", "5_TowardsFire", "6a_FIBStairs", "7_FIBStairs", "8_FIBStairs", "Aprtmnt_1", "AssAfterLift", "ATM_1", "coroner2", "coroner_stairs", "f5_jimmy1", "fame1", "family5b", "family5c", "Family5d", "family5d", "FIB_Glass1", "FIB_Glass2", "FIB_Glass3", "finaBroute1A", "finalb1st", "finalB1sta", "finalbround", "finalbroute2", "Hairdresser1", "jan_foyet_ft_door", "Jo_3", "Lemar1", "Lemar2", "mansion_1", "Mansion_1", "pols_1", "pols_2", "pols_3", "pols_4", "pols_5", "pols_6", "pols_7", "pols_8", "Pro_S1", "Pro_S1a", "Pro_S2", "Towards_case", "trev_steps", "tunrs1", "tunrs2", "tunrs3", "Wave01457s"
function AssistedMovementRequestRoute(route)
	return _in(0x817268968605947A, _ts(route))
end

function AssistedMovementSetRouteProperties(route, props)
	return _in(0xD5002D78B7162E1B, _ts(route), props)
end

function Atan(p0)
	return _in(0xA9D1795CD5043663, p0, _rf)
end

function Atan2(p0, p1)
	return _in(0x8927CBF9D22261A4, p0, p1, _rf)
end

--- Last param determines if its relative to the Entity
function AttachCamToEntity(cam, entity, xOffset, yOffset, zOffset, isRelative)
	return _in(0xFEDB7D269E8C60E3, cam, entity, xOffset, yOffset, zOffset, isRelative)
end

function AttachCamToPedBone(cam, ped, boneIndex, x, y, z, heading)
	return _in(0x61A3DBA14AB7F411, cam, ped, boneIndex, x, y, z, heading)
end

--- NativeDB Introduced: v1180
function AttachCamToPedBone_2(cam, ped, boneIndex, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x149916F50C34A40D, cam, ped, boneIndex, p3, p4, p5, p6, p7, p8, p9)
end

--- This native works with vehicles only.
-- Bone indexes are usually given by this native [GET_ENTITY_BONE_INDEX_BY_NAME](#\_0xFB71170B7E76ACBA).
-- @param cam The camera handle.
-- @param vehicle The vehicle handle.
-- @param relativeRotation Whether or not the camera rotation will relative the vehicle rotation.
-- @param rotX The X rotation.
-- @param rotY The Y rotation.
-- @param rotZ The Z rotation.
-- @param offX The X offset direction.
-- @param offY The Y offset direction.
-- @param offZ The Z offset direction.
-- @param fixedDirection Whether or not the camera direction will relative to the vehicle direction.
function AttachCamToVehicleBone(cam, vehicle, boneIndex, relativeRotation, rotX, rotY, rotZ, offX, offY, offZ, fixedDirection)
	return _in(0x8DB3F12A02CAEF72, cam, vehicle, boneIndex, relativeRotation, rotX, rotY, rotZ, offX, offY, offZ, fixedDirection)
end
N_0x8db3f12a02caef72 = AttachCamToVehicleBone

function AttachContainerToHandlerFrame(handler, container)
	return _in(0x6A98C2ECF57FA5D4, handler, container)
end

--- Attaches entity 1 to entity 2.
function AttachEntitiesToRope(ropeId, ent1, ent2, ent1_x, ent1_y, ent1_z, ent2_x, ent2_y, ent2_z, length, p10, p11, boneName1, boneName2)
	return _in(0x3D95EC8B6D940AC3, ropeId, ent1, ent2, ent1_x, ent1_y, ent1_z, ent2_x, ent2_y, ent2_z, length, p10, p11, _ts(boneName1), _ts(boneName2))
end

function AttachEntityBoneToEntityBone(entity1, entity2, entityBone, entityBone2, p4, p5)
	return _in(0x5C48B75732C8456C, entity1, entity2, entityBone, entityBone2, p4, p5)
end
N_0x5c48b75732c8456c = AttachEntityBoneToEntityBone

function AttachEntityBoneToEntityBonePhysically(entity1, entity2, entityBone, entityBone2, p4, p5)
	return _in(0xFD1695C5D3B05439, entity1, entity2, entityBone, entityBone2, p4, p5)
end
N_0xfd1695c5d3b05439 = AttachEntityBoneToEntityBonePhysically

function AttachEntityToCargobob(vehicle, entity, p2, x, y, z)
	return _in(0xA1DD82F3CCF9A01E, vehicle, entity, p2, x, y, z)
end
N_0xa1dd82f3ccf9a01e = AttachEntityToCargobob

--- Attaches entity1 to bone (boneIndex) of entity2.
-- boneIndex - this is different to boneID, use GET_PED_BONE_INDEX to get the index from the ID. use the index for attaching to specific bones. entity1 will be attached to entity2's centre if bone index given doesn't correspond to bone indexes for that entity type.
-- useSoftPinning - if set to false attached entity will not detach when fixed
-- collision - controls collision between the two entities (FALSE disables collision).
-- isPed - pitch doesnt work when false and roll will only work on negative numbers (only peds)
-- vertexIndex - position of vertex
-- fixedRot - if false it ignores entity vector
-- @param rotationOrder The order in which the rotation is applied. See [`GET_ENTITY_ROTATION`](#\_0xAFBD61CC738D9EB9)
function AttachEntityToEntity(entity1, entity2, boneIndex, xPos, yPos, zPos, xRot, yRot, zRot, p9, useSoftPinning, collision, isPed, rotationOrder, fixedRot)
	return _in(0x6B9BBD38AB0796DF, entity1, entity2, boneIndex, xPos, yPos, zPos, xRot, yRot, zRot, p9, useSoftPinning, collision, isPed, rotationOrder, fixedRot)
end

--- breakForce is the amount of force required to break the bond.
-- p14 - is always 1 in scripts
-- p15 - is 1 or 0 in scripts - unknown what it does
-- p16 - controls collision between the two entities (FALSE disables collision).
-- p17 - do not teleport entity to be attached to the position of the bone Index of the target entity (if 1, entity will not be teleported to target bone)
-- p18 - is always 2 in scripts.
function AttachEntityToEntityPhysically(entity1, entity2, boneIndex1, boneIndex2, xPos1, yPos1, zPos1, xPos2, yPos2, zPos2, xRot, yRot, zRot, breakForce, fixedRot, p15, collision, teleport, p18)
	return _in(0xC3675780C92F90F9, entity1, entity2, boneIndex1, boneIndex2, xPos1, yPos1, zPos1, xPos2, yPos2, zPos2, xRot, yRot, zRot, breakForce, fixedRot, p15, collision, teleport, p18)
end

function AttachPortablePickupToPed(pickupObject, ped)
	return _in(0x8DC39368BDD57755, pickupObject, ped)
end

--- The position supplied can be anywhere, and the entity should anchor relative to that point from it's origin.
function AttachRopeToEntity(ropeId, entity, x, y, z, p5)
	return _in(0x4B490A6832559A65, ropeId, entity, x, y, z, p5)
end

function AttachSynchronizedSceneToEntity(sceneID, entity, boneIndex)
	return _in(0x272E4723B56A3B96, sceneID, entity, boneIndex)
end

--- Might be more appropriate in AUDIO?
function AttachTvAudioToEntity(entity)
	return _in(0x845BAD77CC770633, entity)
end

function AttachVehicleOnToTrailer(vehicle, trailer, offsetX, offsetY, offsetZ, coordsX, coordsY, coordsZ, rotationX, rotationY, rotationZ, disableColls)
	return _in(0x16B5E274BDE402F8, vehicle, trailer, offsetX, offsetY, offsetZ, coordsX, coordsY, coordsZ, rotationX, rotationY, rotationZ, disableColls)
end
N_0x16b5e274bde402f8 = AttachVehicleOnToTrailer

--- p2 is unknown and is always -1 in the script natives.
-- @param vehicle The vehicle which should be attached
-- @param cargobob The cargobob
function AttachVehicleToCargobob(vehicle, cargobob, p2, x, y, z)
	return _in(0x4127F1D84E347769, vehicle, cargobob, p2, x, y, z)
end

--- HookOffset defines where the hook is attached. leave at 0 for default attachment.
function AttachVehicleToTowTruck(towTruck, vehicle, rear, hookOffsetX, hookOffsetY, hookOffsetZ)
	return _in(0x29A16F8D621C4508, towTruck, vehicle, rear, hookOffsetX, hookOffsetY, hookOffsetZ)
end

function AttachVehicleToTrailer(vehicle, trailer, radius)
	return _in(0x3C7D42D58F770B54, vehicle, trailer, radius)
end

function AudioIsScriptedMusicPlaying()
	return _in(0x845FFC3A4FEEFA3E, _r)
end
N_0x3d120012440e6683 = AudioIsScriptedMusicPlaying

function BadSportPlayerLeftDetected(event, amountReceived)
	return _in(0xEC5E3AF5289DCA81, _i, event, amountReceived, _r)
end
N_0xec5e3af5289dca81 = BadSportPlayerLeftDetected

function BeginReplayStats(p0, p1)
	return _in(0xE0E500246FF73D66, p0, p1)
end

--- Push a function from the Scaleform onto the stack
function BeginScaleformMovieMethod(scaleform, methodName)
	return _in(0xF6E48914C7A8694E, scaleform, _ts(methodName), _r)
end
PushScaleformMovieFunction = BeginScaleformMovieMethod

--- Starts frontend (pause menu) scaleform movie methods.
-- This can be used when you want to make custom frontend menus, and customize things like images or text in the menus etc.
-- Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER`](#\_0xB9449845F73F5E9C) for header scaleform functions.
-- @param functionName The function name of the scaleform to call.
function BeginScaleformMovieMethodOnFrontend(functionName)
	return _in(0xAB58C27C2E6123C6, _ts(functionName), _r)
end
N_0xab58c27c2e6123c6 = BeginScaleformMovieMethodOnFrontend
PushScaleformMovieFunctionN = BeginScaleformMovieMethodOnFrontend
BeginScaleformMovieMethodN = BeginScaleformMovieMethodOnFrontend

--- Starts frontend (pause menu) scaleform movie methods for header options.
-- Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND`](#\_0xAB58C27C2E6123C6) to customize the content inside the frontend menus.
-- @param functionName Scaleform function name.
function BeginScaleformMovieMethodOnFrontendHeader(functionName)
	return _in(0xB9449845F73F5E9C, _ts(functionName), _r)
end
N_0xb9449845f73f5e9c = BeginScaleformMovieMethodOnFrontendHeader
BeginScaleformMovieMethodV = BeginScaleformMovieMethodOnFrontendHeader

--- Pushes a function from the Hud component Scaleform onto the stack. Same behavior as GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD, just a hud component id instead of a Scaleform.
-- Known components:
-- 19 - MP_RANK_BAR
-- 20 - HUD_DIRECTOR_MODE
-- This native requires more research - all information can be found inside of 'hud.gfx'. Using a decompiler, the different components are located under "scripts\__Packages\com\rockstargames\gtav\hud\hudComponents" and "scripts\__Packages\com\rockstargames\gtav\Multiplayer".
function BeginScaleformScriptHudMovieMethod(hudComponent, methodName)
	return _in(0x98C494FD5BDFBFD5, hudComponent, _ts(methodName), _r)
end
PushScaleformMovieFunctionFromHudComponent = BeginScaleformScriptHudMovieMethod
BeginScaleformMovieMethodHudComponent = BeginScaleformScriptHudMovieMethod

function BeginSrl()
	return _in(0x9BADDC94EF83B823)
end

function BeginTakeHighQualityPhoto()
	return _in(0xA67C35C56EB1BD9D, _r)
end
N_0xa67c35c56eb1bd9d = BeginTakeHighQualityPhoto

function BeginTakeMissionCreatorPhoto()
	return _in(0x1DD2139A9A20DCE8, _r)
end
N_0x1dd2139a9a20dce8 = BeginTakeMissionCreatorPhoto

--- Initializes the text entry for the the text next to a loading prompt. All natives for for building UI texts can be used here
-- BEGIN_TEXT_COMMAND_PRINT
-- e.g
-- void StartLoadingMessage(char *text, int spinnerType = 3)
-- {
-- _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- _SHOW_LOADING_PROMPT(spinnerType);
-- }
-- /*OR*/
-- void ShowLoadingMessage(char *text, int spinnerType = 3, int timeMs = 10000)
-- {
-- _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- _SHOW_LOADING_PROMPT(spinnerType);
-- WAIT(timeMs);
-- _REMOVE_LOADING_PROMPT();
-- }
-- These are some localized strings used in the loading spinner.
-- "PM_WAIT"                   = Please Wait
-- "CELEB_WPLYRS"              = Waiting For Players.
-- "CELL_SPINNER2"             = Scanning storage.
-- "ERROR_CHECKYACHTNAME" = Registering your yacht's name. Please wait.
-- "ERROR_CHECKPROFANITY"   = Checking your text for profanity. Please wait.
-- "FM_COR_AUTOD"                        = Just spinner no text
-- "FM_IHELP_WAT2"                        = Waiting for other players
-- "FM_JIP_WAITO"                            = Game options are being set
-- "FMMC_DOWNLOAD"                    = Downloading
-- "FMMC_PLYLOAD"                         = Loading
-- "FMMC_STARTTRAN"                    = Launching session
-- "HUD_QUITTING"                           =  Quiting session
-- "KILL_STRIP_IDM"                         = Waiting for to accept
-- "MP_SPINLOADING"                      = Loading
function BeginTextCommandBusyspinnerOn(string)
	return _in(0xABA17D7CE615ADBF, _ts(string))
end
N_0xaba17d7ce615adbf = BeginTextCommandBusyspinnerOn
SetLoadingPromptTextEntry = BeginTextCommandBusyspinnerOn
BeginTextCommandBusyString = BeginTextCommandBusyspinnerOn

--- clears a print text command with this text
function BeginTextCommandClearPrint(text)
	return _in(0xE124FA80A759019C, _ts(text))
end
N_0xe124fa80a759019c = BeginTextCommandClearPrint

--- Used to be known as _SET_TEXT_COMPONENT_FORMAT
function BeginTextCommandDisplayHelp(inputType)
	return _in(0x8509B634FBE7DA11, _ts(inputType))
end
SetTextComponentFormat = BeginTextCommandDisplayHelp

--- The following were found in the decompiled script files:
-- STRING, TWOSTRINGS, NUMBER, PERCENTAGE, FO_TWO_NUM, ESMINDOLLA, ESDOLLA, MTPHPER_XPNO, AHD_DIST, CMOD_STAT_0, CMOD_STAT_1, CMOD_STAT_2, CMOD_STAT_3, DFLT_MNU_OPT, F3A_TRAFDEST, ES_HELP_SOC3
-- ESDOLLA
-- ESMINDOLLA - cash (negative)
-- Used to be known as _SET_TEXT_ENTRY
function BeginTextCommandDisplayText(text)
	return _in(0x25FBB336DF1804CB, _ts(text))
end
SetTextEntry = BeginTextCommandDisplayText

--- BEGIN_TEXT_COMMAND_*
-- Example:
-- _BEGIN_TEXT_COMMAND_GET_WIDTH("NUMBER");
-- ADD_TEXT_COMPONENT_FLOAT(69.420f, 2);
-- float width = _END_TEXT_COMMAND_GET_WIDTH(1);
function BeginTextCommandGetWidth(text)
	return _in(0x54CE8AC98E120CAB, _ts(text))
end
SetTextEntryForWidth = BeginTextCommandGetWidth
BeginTextCommandWidth = BeginTextCommandGetWidth

--- nothin doin.
-- BOOL Message(char* text)
-- {
-- BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- return END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED();
-- }
function BeginTextCommandIsMessageDisplayed(text)
	return _in(0x853648FD1063A213, _ts(text))
end
N_0x853648fd1063a213 = BeginTextCommandIsMessageDisplayed

--- BOOL IsContextActive(char *ctx)
-- {
-- BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(ctx);
-- return END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(0);
-- }
function BeginTextCommandIsThisHelpMessageBeingDisplayed(labelName)
	return _in(0x0A24DA3A41B718F5, _ts(labelName))
end
N_0x0a24da3a41b718f5 = BeginTextCommandIsThisHelpMessageBeingDisplayed

--- get's line count
-- int GetLineCount(char *text, float x, float y)
-- {
-- _BEGIN_TEXT_COMMAND_LINE_COUNT("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- return _END_TEXT_COMMAND_GET_LINE_COUNT(x, y);
-- }
function BeginTextCommandLineCount(entry)
	return _in(0x521FB041D93DD0E4, _ts(entry))
end
SetTextGxtEntry = BeginTextCommandLineCount

function BeginTextCommandObjective(p0)
	return _in(0x23D69E0465570028, _ts(p0))
end
N_0x23d69e0465570028 = BeginTextCommandObjective

function BeginTextCommandOverrideButtonText(gxtEntry)
	return _in(0x8F9EE5687F8EECCD, _ts(gxtEntry))
end
N_0x8f9ee5687f8eeccd = BeginTextCommandOverrideButtonText
BeginTextCommandTimer = BeginTextCommandOverrideButtonText

--- Used to be known as _SET_TEXT_ENTRY_2
-- void ShowSubtitle(char *text)
-- {
-- BEGIN_TEXT_COMMAND_PRINT("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- END_TEXT_COMMAND_PRINT(2000, 1);
-- }
function BeginTextCommandPrint(GxtEntry)
	return _in(0xB87A37EEB7FAA67D, _ts(GxtEntry))
end
SetTextEntry_2 = BeginTextCommandPrint

--- Called prior to adding a text component to the UI. After doing so, GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING is called.
-- Examples:
-- GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("NUMBER");
-- HUD::ADD_TEXT_COMPONENT_INTEGER(MISC::ABSI(a_1));
-- GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
-- GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");
-- HUD::_ADD_TEXT_COMPONENT_STRING(a_2);
-- GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
-- GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM2");
-- HUD::_0x17299B63C7683A2B(v_3);
-- HUD::_0x17299B63C7683A2B(v_4);
-- GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
-- GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM1");
-- HUD::_0x17299B63C7683A2B(v_3);
-- GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
-- @param textLabel a GXT text label
function BeginTextCommandScaleformString(textLabel)
	return _in(0x80338406F3475E55, _ts(textLabel))
end
BeginTextComponent = BeginTextCommandScaleformString

--- Starts a text command to change the name of a blip displayed in the pause menu.
-- This should be paired with [`END_TEXT_COMMAND_SET_BLIP_NAME`](#\_0xBC38B49BCB83BC9B), once adding all required text components.
-- @param textLabel The text label to set.
function BeginTextCommandSetBlipName(textLabel)
	return _in(0xF9113A30DE5C6670, _ts(textLabel))
end

--- Declares the entry type of a notification, for example "STRING".
-- int ShowNotification(char \*text)
-- {
-- BEGIN_TEXT_COMMAND_THEFEED_POST("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- return \_DRAW_NOTIFICATION(1, 1);
-- }
-- @param text The text label to use.
function BeginTextCommandThefeedPost(text)
	return _in(0x202709F4C58A0424, _ts(text))
end
SetNotificationTextEntry = BeginTextCommandThefeedPost

--- Deletes the given context from the background scripts context map.
-- NativeDB Introduced: v323
function BgEndContext(contextName)
	return _in(0xDC2BACD920D0A0DD, _ts(contextName))
end

--- Hashed version of 0xDC2BACD920D0A0DD.
-- NativeDB Introduced: v323
function BgEndContextHash(contextHash)
	return _in(0x107E5CC7CA942BC1, _ch(contextHash))
end

--- Inserts the given context into the background scripts context map.
-- NativeDB Introduced: v323
function BgStartContext(contextName)
	return _in(0x9D5A25BADB742ACD, _ts(contextName))
end

--- Hashed version of 0x9D5A25BADB742ACD.
-- NativeDB Introduced: v323
function BgStartContextHash(contextHash)
	return _in(0x75B18E49607874C7, _ch(contextHash))
end

--- Plays the siren sound of a vehicle which is otherwise activated when fastly double-pressing the horn key.
-- Only works on vehicles with a police siren.
function BlipSiren(vehicle)
	return _in(0x1B9025BDA76822B6, vehicle)
end

function BlockDeathJingle(toggle)
	return _in(0xF154B8D1775B2DEC, toggle)
end
N_0xf154b8d1775b2dec = BlockDeathJingle

--- eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
-- This is limited to 4 blocked events at a time.
function BlockDecisionMakerEvent(name, eventType)
	return _in(0xE42FCDFD0E4196F7, _ch(name), eventType)
end

function BlockDispatchServiceResourceCreation(dispatchService, toggle)
	return _in(0x9B2BD3773123EA2F, dispatchService, toggle)
end
N_0x9b2bd3773123ea2f = BlockDispatchServiceResourceCreation

function BlockPedDeadBodyShockingEvents(ped, toggle)
	return _in(0xE43A13C9E4CCCBCF, ped, toggle)
end
N_0xe43a13c9e4cccbcf = BlockPedDeadBodyShockingEvents

function BreakEntityGlass(entity, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
	return _in(0x2E648D16F6E308F3, entity, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
end

function BreakObjectFragmentChild(p0, p1, p2)
	return _in(0xE7E4C198B0185900, p0, p1, p2)
end
N_0xe7e4c198b0185900 = BreakObjectFragmentChild

--- This native makes the vehicle stop immediately, as happens when we enter a MP garage.
-- . distance defines how far it will travel until stopping. Garage doors use 3.0.
-- . If killEngine is set to 1, you cannot resume driving the vehicle once it stops. This looks like is a bitmapped integer.
function BringVehicleToHalt(vehicle, distance, duration, unknown)
	return _in(0x260BE8F09E326A20, vehicle, distance, duration, unknown)
end
N_0x260be8f09e326a20 = BringVehicleToHalt
SetVehicleHalt = BringVehicleToHalt

function BusyspinnerIsDisplaying()
	return _in(0xB2A592B04648A9CB, _r)
end
N_0xb2a592b04648a9cb = BusyspinnerIsDisplaying

function BusyspinnerIsOn()
	return _in(0xD422FCC5F239A915, _r)
end
N_0xd422fcc5f239a915 = BusyspinnerIsOn
IsLoadingPromptBeingDisplayed = BusyspinnerIsOn

--- Removes the loading prompt at the bottom right of the screen.
function BusyspinnerOff()
	return _in(0x10D373323E5B9C0D)
end
N_0x10d373323e5b9c0d = BusyspinnerOff
RemoveLoadingPrompt = BusyspinnerOff

--- Calculates the travel distance between a set of points.
-- Doesn't seem to correlate with distance on gps sometimes.
-- This function returns the value 100000.0 over long distances, seems to be a failure mode result, potentially occurring when not all path nodes are loaded into pathfind.
function CalculateTravelDistanceBetweenPoints(x1, y1, z1, x2, y2, z2)
	return _in(0xADD95C7005C4A197, x1, y1, z1, x2, y2, z2, _rf)
end

--- This is similar to the PushScaleformMovieFunction natives, except it calls in the `TIMELINE` of a minimap overlay.
-- @param miniMap The minimap overlay ID.
-- @param fnName A function in the overlay's TIMELINE.
function CallMinimapScaleformFunction(miniMap, fnName)
	return _in(0x4c89c0ed, miniMap, _ts(fnName), _r)
end

--- Calls the Scaleform function.
function CallScaleformMovieMethod(scaleform, method)
	return _in(0xFBD96D87AC96D533, scaleform, _ts(method))
end
CallScaleformMovieFunctionVoid = CallScaleformMovieMethod

--- Calls the Scaleform function and passes the parameters as floats.
-- The number of parameters passed to the function varies, so the end of the parameter list is represented by -1.0.
function CallScaleformMovieMethodWithNumber(scaleform, methodName, param1, param2, param3, param4, param5)
	return _in(0xD0837058AE2E4BEE, scaleform, _ts(methodName), param1, param2, param3, param4, param5)
end
CallScaleformMovieFunctionFloatParams = CallScaleformMovieMethodWithNumber

--- Calls the Scaleform function and passes both float and string parameters (in their respective order).
-- The number of parameters passed to the function varies, so the end of the float parameters is represented by -1.0, and the end of the string parameters is represented by 0 (NULL).
-- NOTE: The order of parameters in the function prototype is important! All float parameters must come first, followed by the string parameters.
-- Examples:
-- // function MY_FUNCTION(floatParam1, floatParam2, stringParam)
-- GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, "MY_FUNCTION", 10.0, 20.0, -1.0, -1.0, -1.0, "String param", 0, 0, 0, 0);
-- // function MY_FUNCTION_2(floatParam, stringParam1, stringParam2)
-- GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, "MY_FUNCTION_2", 10.0, -1.0, -1.0, -1.0, -1.0, "String param #1", "String param #2", 0, 0, 0);
function CallScaleformMovieMethodWithNumberAndString(scaleform, methodName, floatParam1, floatParam2, floatParam3, floatParam4, floatParam5, stringParam1, stringParam2, stringParam3, stringParam4, stringParam5)
	return _in(0xEF662D8D57E290B1, scaleform, _ts(methodName), floatParam1, floatParam2, floatParam3, floatParam4, floatParam5, _ts(stringParam1), _ts(stringParam2), _ts(stringParam3), _ts(stringParam4), _ts(stringParam5))
end
CallScaleformMovieFunctionMixedParams = CallScaleformMovieMethodWithNumberAndString

--- Calls the Scaleform function and passes the parameters as strings.
-- The number of parameters passed to the function varies, so the end of the parameter list is represented by 0 (NULL).
function CallScaleformMovieMethodWithString(scaleform, methodName, param1, param2, param3, param4, param5)
	return _in(0x51BC1ED3CC44E8F7, scaleform, _ts(methodName), _ts(param1), _ts(param2), _ts(param3), _ts(param4), _ts(param5))
end
CallScaleformMovieFunctionStringParams = CallScaleformMovieMethodWithString

function CanAnchorBoatHere(vehicle)
	return _in(0x26C10ECBDA5D043B, vehicle, _r)
end
N_0x2467a2d807d37ca3 = CanAnchorBoatHere
GetBoatAnchor = CanAnchorBoatHere
CanBoatBeAnchored = CanAnchorBoatHere

--- Differs from 0x26C10ECBDA5D043B in that 0x140EFCC10 (1604 retail) is called with a2 = true.
-- NativeDB Introduced: v678
function CanAnchorBoatHere_2(vehicle)
	return _in(0x24F4121D07579880, vehicle, _r)
end
CanBoatBeAnchored_2 = CanAnchorBoatHere_2

function CanCreateRandomBikeRider()
	return _in(0xEACEEDA81751915C, _r)
end

function CanCreateRandomCops()
	return _in(0x5EE2CAFF7F17770D, _r)
end

function CanCreateRandomDriver()
	return _in(0xB8EB95E5B4E56978, _r)
end

function CanCreateRandomPed(unk)
	return _in(0x3E8349C08E4B82E4, unk, _r)
end

function CanKnockPedOffVehicle(ped)
	return _in(0x51AC07A44D4F5B8A, ped, _r)
end

--- NativeDB Added Parameter 1: int p0
-- NativeDB Added Parameter 2: int p1
-- NativeDB Added Parameter 3: int amount
-- NativeDB Added Parameter 4: int* p3
function CanPayGoon()
	return _in(0x9777734DAD16992F, _r)
end
N_0x9777734dad16992f = CanPayGoon

function CanPedHearPlayer(player, ped)
	return _in(0xF297383AA91DCA29, player, ped, _r)
end

function CanPedInCombatSeeTarget(ped, target)
	return _in(0xEAD42DE3610D0721, ped, target, _r)
end

--- Prevents the ped from going limp.
-- [Example: Can prevent peds from falling when standing on moving vehicles.]
function CanPedRagdoll(ped)
	return _in(0x128F79EDCECE4FD5, ped, _r)
end

function CanPedSeeHatedPed(ped1, ped2)
	return _in(0x6CD5A433374D4CFB, ped1, ped2, _r)
end
N_0x6cd5a433374d4cfb = CanPedSeeHatedPed
CanPedSeePed = CanPedSeeHatedPed

--- Checks if the ped can play the speech or has the speech file, last parameter is usually 0
function CanPedSpeak(ped, speechName, unk)
	return _in(0x49B99BF3FDA89A7A, ped, _ts(speechName), unk, _r)
end
N_0x49b99bf3fda89a7a = CanPedSpeak

--- This one is weird and seems to return a TRUE state regardless of whether the phone is visible on screen or tucked away.
-- I can confirm the above. This function is hard-coded to always return 1.
function CanPhoneBeSeenOnScreen()
	return _in(0xC4E2813898C97A4B, _r)
end

function CanPlayerStartMission(player)
	return _in(0xDE7465A27D403C06, player, _r)
end

function CanRegisterMissionEntities(ped_amt, vehicle_amt, object_amt, pickup_amt)
	return _in(0x69778E7564BADE6D, ped_amt, vehicle_amt, object_amt, pickup_amt, _r)
end

function CanRegisterMissionObjects(amount)
	return _in(0x800DD4721A8B008B, amount, _r)
end

function CanRegisterMissionPeds(amount)
	return _in(0xBCBF4FEF9FA5D781, amount, _r)
end

function CanRegisterMissionPickups(amount)
	return _in(0x0A49D1CB6E34AF72, amount, _r)
end

function CanRegisterMissionVehicles(amount)
	return _in(0x7277F1F2E085EE74, amount, _r)
end

function CanRequestAssetsForCutsceneEntity()
	return _in(0xB56BBBCC2955D9CB, _r)
end
N_0xb56bbbcc2955d9cb = CanRequestAssetsForCutsceneEntity

--- modelHash (p1) was always 0 in R* scripts
function CanSetEnterStateForRegisteredEntity(cutsceneEntName, modelHash)
	return _in(0x645D0B458D8E17B5, _ts(cutsceneEntName), _ch(modelHash), _r)
end

function CanSetExitStateForCamera(p0)
	return _in(0xB2CBCD0930DFB420, p0, _r)
end

function CanSetExitStateForRegisteredEntity(cutsceneEntName, modelHash)
	return _in(0x4C6A6451C79E4662, _ts(cutsceneEntName), _ch(modelHash), _r)
end

function CanShuffleSeat(vehicle, seatIndex)
	return _in(0x30785D90C956BF35, vehicle, seatIndex, _r)
end

--- this returns if you can use the weapon while using a parachute
function CanUseWeaponOnParachute(weaponHash)
	return _in(0xBC7BE5ABC0879F74, _ch(weaponHash), _r)
end

function CancelCurrentPoliceReport()
	return _in(0xB4F90FAF7670B16F)
end
N_0xb4f90faf7670b16f = CancelCurrentPoliceReport
DisablePoliceReports = CancelCurrentPoliceReport

--- Cancels the currently executing event.
function CancelEvent()
	return _in(0xfa29d35d)
end

--- All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
function CancelMusicEvent(eventName)
	return _in(0x5B17A90291133DA5, _ts(eventName), _r)
end

--- DO NOT use this as it doesn't clean up the text input box properly and your script will get stuck in the UPDATE_ONSCREEN_KEYBOARD() loop.
-- Use _FORCE_CLOSE_TEXT_INPUT_BOX instead.
-- CANCEL_*
function CancelOnscreenKeyboard()
	return _in(0x58A39BE597CE99CD)
end
N_0x58a39be597ce99cd = CancelOnscreenKeyboard

function CancelStuntJump()
	return _in(0xE6B7B0ACD4E4B75E)
end

--- Does something similar to INTERIOR::DISABLE_INTERIOR
function CapInterior(interiorID, toggle)
	return _in(0xD9175F941610DB54, interiorID, toggle)
end

function CascadeShadowsClearShadowSampleType()
	return _in(0x27CB772218215325)
end
N_0x27cb772218215325 = CascadeShadowsClearShadowSampleType
CascadeshadowsResetType = CascadeShadowsClearShadowSampleType

--- When this is set to ON, shadows only draw as you get nearer.
-- When OFF, they draw from a further distance.
function CascadeShadowsEnableEntityTracker(toggle)
	return _in(0x80ECBC0C856D3B0B, toggle)
end
SetFarShadowsSuppressed = CascadeShadowsEnableEntityTracker

function CascadeShadowsInitSession()
	return _in(0x03FC694AE06C5A20)
end
N_0x03fc694ae06c5a20 = CascadeShadowsInitSession

function CascadeShadowsSetAircraftMode(p0)
	return _in(0x6DDBF9DFFC4AC080, p0)
end
N_0x6ddbf9dffc4ac080 = CascadeShadowsSetAircraftMode

function CascadeShadowsSetCascadeBounds(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xD2936CAB8B58FCBD, p0, p1, p2, p3, p4, p5, p6, p7)
end
N_0xd2936cab8b58fcbd = CascadeShadowsSetCascadeBounds

function CascadeShadowsSetCascadeBoundsScale(p0)
	return _in(0x5F0F3F56635809EF, p0)
end
N_0x5f0f3f56635809ef = CascadeShadowsSetCascadeBoundsScale

function CascadeShadowsSetDynamicDepthMode(p0)
	return _in(0xD39D13C9FEBF0511, p0)
end
N_0xd39d13c9febf0511 = CascadeShadowsSetDynamicDepthMode

function CascadeShadowsSetDynamicDepthValue(p0)
	return _in(0x02AC28F3A01FA04A, p0)
end
N_0x02ac28f3a01fa04a = CascadeShadowsSetDynamicDepthValue

function CascadeShadowsSetEntityTrackerScale(p0)
	return _in(0x5E9DAF5A20F15908, p0)
end
N_0x5e9daf5a20f15908 = CascadeShadowsSetEntityTrackerScale

--- Possible values:
-- "CSM_ST_POINT"
-- "CSM_ST_LINEAR"
-- "CSM_ST_TWOTAP"
-- "CSM_ST_BOX3x3"
-- "CSM_ST_BOX4x4"
-- "CSM_ST_DITHER2_LINEAR"
-- "CSM_ST_CUBIC"
-- "CSM_ST_DITHER4"
-- "CSM_ST_DITHER16"
-- "CSM_ST_SOFT16"
-- "CSM_ST_DITHER16_RPDB"
-- "CSM_ST_POISSON16_RPDB_GNORM"
-- "CSM_ST_HIGHRES_BOX4x4"
-- "CSM_ST_CLOUDS_SIMPLE"
-- "CSM_ST_CLOUDS_LINEAR"
-- "CSM_ST_CLOUDS_TWOTAP"
-- "CSM_ST_CLOUDS_BOX3x3"
-- "CSM_ST_CLOUDS_BOX4x4"
-- "CSM_ST_CLOUDS_DITHER2_LINEAR"
-- "CSM_ST_CLOUDS_SOFT16"
-- "CSM_ST_CLOUDS_DITHER16_RPDB"
-- "CSM_ST_CLOUDS_POISSON16_RPDB_GNORM"
function CascadeShadowsSetShadowSampleType(type)
	return _in(0xB11D94BC55F41932, _ts(type))
end
N_0xb11d94bc55f41932 = CascadeShadowsSetShadowSampleType
CascadeshadowsSetType = CascadeShadowsSetShadowSampleType

--- I'm guessing this rounds a float value up to the next whole number, and FLOOR rounds it down
function Ceil(value)
	return _in(0x11E019C8F43ACC8A, value, _ri)
end

function CellCamActivate(p0, p1)
	return _in(0xFDE8F069C542D126, p0, p1)
end

--- Disables the phone up-button, oddly enough.
-- i.e.: When the phone is out, and this method is called with false as it's parameter, the phone will not be able to scroll up. However, when you use the down arrow key, it's functionality still, works on the phone.
-- When the phone is not out, and this method is called with false as it's parameter, you will not be able to bring up the phone. Although the up arrow key still works for whatever functionality it's used for, just not for the phone.
-- This can be used for creating menu's when trying to disable the phone from being used.
-- You do not have to call the function again with false as a parameter, as soon as the function stops being called, the phone will again be usable.
function CellCamDisableThisFrame(toggle)
	return _in(0x015C49A93E3E086E, toggle)
end
N_0x015c49a93e3e086e = CellCamDisableThisFrame
DisablePhoneThisFrame = CellCamDisableThisFrame

function CellCamIsCharVisibleNoFaceCheck(entity)
	return _in(0x439E9BC95B7E7FBE, entity, _r)
end

--- For move the finger of player, the value of int goes 1 at 5.
function CellCamMoveFinger(direction)
	return _in(0x95C9E72F3D7DEC9B, direction)
end
MoveFinger = CellCamMoveFinger

function CellCamSetDistance(p0)
	return _in(0x53F4892D18EC90A4, p0)
end
N_0x53f4892d18ec90a4 = CellCamSetDistance

function CellCamSetHeadHeight(p0)
	return _in(0x466DA42C89865553, p0)
end
N_0x466da42c89865553 = CellCamSetHeadHeight

function CellCamSetHeadPitch(p0)
	return _in(0xD6ADE981781FCA09, p0)
end
N_0xd6ade981781fca09 = CellCamSetHeadPitch

function CellCamSetHeadRoll(p0)
	return _in(0xF1E22DC13F5EEBAD, p0)
end
N_0xf1e22dc13f5eebad = CellCamSetHeadRoll

function CellCamSetHorizontalOffset(p0)
	return _in(0x1B0B4AEED5B9B41C, p0)
end
N_0x1b0b4aeed5b9b41c = CellCamSetHorizontalOffset

--- if the bool "Toggle" is "true" so the phone is lean.
-- if the bool "Toggle" is "false" so the phone is not lean.
function CellCamSetLean(toggle)
	return _in(0x44E44169EF70138E, toggle)
end
SetPhoneLean = CellCamSetLean

function CellCamSetRoll(p0)
	return _in(0x15E69E2802C24B8D, p0)
end
N_0x15e69e2802c24b8d = CellCamSetRoll

function CellCamSetVerticalOffset(p0)
	return _in(0x3117D84EFA60F77B, p0)
end
N_0x3117d84efa60f77b = CellCamSetVerticalOffset

function ChangePlayerPed(player, ped, b2, resetDamage)
	return _in(0x048189FAC643DEEE, player, ped, b2, resetDamage)
end

--- minimum: Degrees between -90f and 90f.
-- maximum: Degrees between -90f and 90f.
-- Clamps the gameplay camera's current pitch.
-- Eg. _CLAMP_GAMEPLAY_CAM_PITCH(0.0f, 0.0f) will set the vertical angle directly behind the player.
function ClampGameplayCamPitch(minimum, maximum)
	return _in(0xA516C198B7DCA1E1, minimum, maximum)
end

--- minimum: Degrees between -180f and 180f.
-- maximum: Degrees between -180f and 180f.
-- Clamps the gameplay camera's current yaw.
-- Eg. _CLAMP_GAMEPLAY_CAM_YAW(0.0f, 0.0f) will set the horizontal angle directly behind the player.
function ClampGameplayCamYaw(minimum, maximum)
	return _in(0x8F993D26E0CA5E8E, minimum, maximum)
end

function CleanItemset(p0)
	return _in(0x41BC0D722FC04221, p0)
end

function CleanupAsyncInstall()
	return _in(0xC79AE21974B01FB2)
end
N_0xc79ae21974b01fb2 = CleanupAsyncInstall

function ClearAdditionalText(p0, p1)
	return _in(0x2A179DF17CCF04CD, p0, p1)
end

--- Clears all active blip routes that have been set with [`SetBlipRoute`](#\_0x3E160C90).
function ClearAllBlipRoutes()
	return _in(0xD12882D3FF82BF11)
end
N_0xd12882d3ff82bf11 = ClearAllBlipRoutes

function ClearAllBrokenGlass()
	return _in(0xB32209EFFDC04913)
end

function ClearAllHelpMessages()
	return _in(0x6178F68A87A4D3A0)
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function ClearAllPedProps(ped)
	return _in(0xCD8A7537A9B52F06, ped)
end

function ClearAllPedVehicleForcedSeatUsage(ped)
	return _in(0xE6CA85E7259CE16B, ped)
end
N_0xe6ca85e7259ce16b = ClearAllPedVehicleForcedSeatUsage

function ClearAmbientZoneListState(p1)
	return _in(0x120C48C614909FA4, _i, p1)
end

--- This function also has a p2, unknown. Signature AUDIO::CLEAR_AMBIENT_ZONE_STATE(const char* zoneName, bool p1, Any p2);
-- Still needs more research.
function ClearAmbientZoneState(zoneName, p1)
	return _in(0x218DD44AAAC964FF, _ts(zoneName), p1)
end

--- NativeDB Added Parameter 13: Any p12
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
function ClearAngledAreaOfVehicles(x1, y1, z1, x2, y2, z2, width, p7, p8, p9, p10, p11)
	return _in(0x11DB3500F042A8AA, x1, y1, z1, x2, y2, z2, width, p7, p8, p9, p10, p11)
end

--- Example: CLEAR_AREA(0, 0, 0, 30, true, false, false, false);
function ClearArea(X, Y, Z, radius, p4, ignoreCopCars, ignoreObjects, p7)
	return _in(0xA56F01F3765B93A0, X, Y, Z, radius, p4, ignoreCopCars, ignoreObjects, p7)
end

--- MISC::_0x957838AAF91BD12D(x, y, z, radius, false, false, false, false); seem to make all objects go away, peds, vehicles etc. All booleans set to true doesn't seem to change anything.
function ClearAreaLeaveVehicleHealth(x, y, z, radius, p4, p5, p6, p7)
	return _in(0x957838AAF91BD12D, x, y, z, radius, p4, p5, p6, p7)
end
N_0x957838aaf91bd12d = ClearAreaLeaveVehicleHealth
ClearAreaOfEverything = ClearAreaLeaveVehicleHealth

--- flags appears to always be 0
function ClearAreaOfCops(x, y, z, radius, flags)
	return _in(0x04F8FC8FCF58F88D, x, y, z, radius, flags)
end

--- I looked through the PC scripts that this site provides you with a link to find. It shows the last param mainly uses, (0, 2, 6, 16, and 17) so I am going to assume it is a type of flag.
function ClearAreaOfObjects(x, y, z, radius, flags)
	return _in(0xDD9B9B385AAC7F5B, x, y, z, radius, flags)
end

--- Example:       CLEAR_AREA_OF_PEDS(0, 0, 0, 10000, 1);
function ClearAreaOfPeds(x, y, z, radius, flags)
	return _in(0xBE31FD6CE464AC59, x, y, z, radius, flags)
end

function ClearAreaOfProjectiles(x, y, z, radius, flags)
	return _in(0x0A1CB9094635D1A6, x, y, z, radius, flags)
end

--- Example: 		CLEAR_AREA_OF_VEHICLES(0, 0, 0, 10000, false, false, false, false, false);
-- ```
-- ```
-- NativeDB Added Parameter 10: BOOL p9
function ClearAreaOfVehicles(x, y, z, radius, p4, p5, p6, p7, p8)
	return _in(0x01C7B9B38428AEB6, x, y, z, radius, p4, p5, p6, p7, p8)
end

--- This sets bit [offset] of [address] to off.
-- Example:
-- MISC::CLEAR_BIT(&bitAddress, 1);
-- To check if this bit has been enabled:
-- MISC::IS_BIT_SET(bitAddress, 1); // will return 0 afterwards
function ClearBit(offset)
	return _in(0xE80492A9AC099A93, _i, offset)
end

function ClearBrief()
	return _in(0x9D292F73ADBD9313)
end

function ClearCloudHat()
	return _in(0x957E790EA1727B64)
end

--- 3 calls in the b617d scripts, removed duplicate.
-- AUDIO::CLEAR_CUSTOM_RADIO_TRACK_LIST("RADIO_16_SILVERLAKE");
-- AUDIO::CLEAR_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK");
function ClearCustomRadioTrackList(radioStation)
	return _in(0x1654F24A88A8E3FE, _ts(radioStation))
end
N_0x1654f24a88a8e3fe = ClearCustomRadioTrackList

--- eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
function ClearDecisionMakerEventResponse(name, eventType)
	return _in(0x4FC9381A7AEE8968, _ch(name), eventType)
end

--- Resets the screen's draw-origin which was changed by the function [`SET_DRAW_ORIGIN`](#\_0xAA0008F3BBB8F416) back to `x=0, y=0`. See [`SET_DRAW_ORIGIN`](#\_0xAA0008F3BBB8F416) for further information.
function ClearDrawOrigin()
	return _in(0xFF0B610F6BE0D7AF)
end

function ClearDrivebyTaskUnderneathDrivingTask(ped)
	return _in(0xC35B5CDB2824CF69, ped)
end

function ClearDynamicPauseMenuErrorMessage()
	return _in(0x7792424AA0EAC32E)
end
N_0x7792424aa0eac32e = ClearDynamicPauseMenuErrorMessage

--- This native **could affect** the arguments of the `CEventNetworkEntityDamage` game event, by clearing the damaging entity before the event is fired.
-- @param entity The entity to clear the last damaging entity from.
function ClearEntityLastDamageEntity(entity)
	return _in(0xA72CD9CA74A5ECBA, entity)
end

function ClearEntityLastWeaponDamage(entity)
	return _in(0xAC678E40BE7C74D2, entity)
end

--- Clears the secondary timecycle modifier usually set with [`SetExtraTimecycleModifier`](#\_0x5096FD9CCB49056D)
function ClearExtraTimecycleModifier()
	return _in(0x92CCC17A7A2285DA)
end
N_0x92ccc17a7a2285da = ClearExtraTimecycleModifier

--- NativeDB Introduced: v1493
function ClearFacialClipsetOverride(ped)
	return _in(0x637822DC2AFEEBF8, ped)
end
N_0x637822dc2afeebf8 = ClearFacialClipsetOverride

function ClearFacialIdleAnimOverride(ped)
	return _in(0x726256CC1EEB182F, ped)
end

function ClearFloatingHelp(hudIndex, p1)
	return _in(0x50085246ABD3FEFA, hudIndex, p1)
end

function ClearFocus()
	return _in(0x31B73D1EA9F01DA2)
end

function ClearGarageArea(garageHash, isNetwork)
	return _in(0xDA05194260CDCDF9, _ch(garageHash), isNetwork)
end
N_0xda05194260cdcdf9 = ClearGarageArea

function ClearGpsCustomRoute()
	return _in(0xE6DE0561D9232A64)
end
N_0xe6de0561d9232a64 = ClearGpsCustomRoute

--- Clears a disabled GPS route area from a certain index previously set using [`SET_GPS_DISABLED_ZONE_AT_INDEX`](#\_0xD0BC1C6FB18EE154).
-- @param index Index of disabled zone.
function ClearGpsDisabledZoneAtIndex(index)
	return _in(0x2801D0012266DF07, index)
end
N_0x2801d0012266df07 = ClearGpsDisabledZoneAtIndex
ClearGpsDisabledZoneAtIndex = ClearGpsDisabledZoneAtIndex

--- Clears the GPS flags. Only the script that originally called SET_GPS_FLAGS can clear them.
-- Doesn't seem like the flags are actually read by the game at all.
function ClearGpsFlags()
	return _in(0x21986729D6A3A830)
end

--- Does the same as [`SET_GPS_MULTI_ROUTE_RENDER(false)`](https://runtime.fivem.net/doc/reference.html#\_0x3DDA37128DD1ACA8)
function ClearGpsMultiRoute()
	return _in(0x67EEDEA1B9BAFD94)
end
N_0x67eedea1b9bafd94 = ClearGpsMultiRoute

function ClearGpsPlayerWaypoint()
	return _in(0xFF4FB7C8CDFA3DA7)
end

--- Does the same as SET_RACE_TRACK_RENDER(false);
function ClearGpsRaceTrack()
	return _in(0x7AA5B4CE533C858B)
end

function ClearHdArea()
	return _in(0xCE58B1CFB9290813)
end

function ClearHelp(toggle)
	return _in(0x8DFCED7A656F8802, toggle)
end

--- Immediately removes entity from an interior. Like sets entity to `limbo` room.
-- ```
-- NativeDB Introduced: v2189
-- ```
function ClearInteriorForEntity(entity)
	return _in(0x85D5422B2039A70D, entity)
end

function ClearLastDrivenVehicle()
	return _in(0xE01903C47C7AC89E)
end
N_0xe01903c47c7ac89e = ClearLastDrivenVehicle

--- **This native does absolutely nothing, just a nullsub**
function ClearLaunchParams()
	return _in(0x966DD84FB6A46017)
end
N_0x966dd84fb6a46017 = ClearLaunchParams

function ClearObjectsInsideGarage(garageHash, vehicles, peds, objects, isNetwork)
	return _in(0x190428512B240692, _ch(garageHash), vehicles, peds, objects, isNetwork)
end
N_0x190428512b240692 = ClearObjectsInsideGarage

function ClearOverrideWeather()
	return _in(0x338D2E3477711050)
end

function ClearPedAlternateMovementAnim(ped, stance, p2)
	return _in(0xD8D19675ED5FBDCE, ped, stance, p2)
end

function ClearPedAlternateWalkAnim(ped, p1)
	return _in(0x8844BBFCE30AA9E9, ped, p1)
end

function ClearPedBloodDamage(ped)
	return _in(0x8FE22675A5A45817, ped)
end

--- Somehow related to changing ped's clothes.
function ClearPedBloodDamageByZone(ped, p1)
	return _in(0x56E3B78C5408D9F4, ped, p1)
end
N_0x56e3b78c5408d9f4 = ClearPedBloodDamageByZone

--- CLEAR_PED_*
function ClearPedCoverClipsetOverride(ped)
	return _in(0xC79196DCB36F6121, ped)
end
N_0xc79196dcb36f6121 = ClearPedCoverClipsetOverride

--- p1: from 0 to 5 in the b617d scripts.
-- p2: "blushing" and "ALL" found in the b617d scripts.
function ClearPedDamageDecalByZone(ped, p1, p2)
	return _in(0x523C79AEEFCC4A2A, ped, p1, _ts(p2))
end
N_0x523c79aeefcc4a2a = ClearPedDamageDecalByZone

function ClearPedDecorations(ped)
	return _in(0x0E5173C163976E38, ped)
end

function ClearPedDecorationsLeaveScars(ped)
	return _in(0xE3B27E70CEAB9F0C, ped)
end
N_0xe3b27e70ceab9f0c = ClearPedDecorationsLeaveScars
ClearPedFacialDecorations = ClearPedDecorationsLeaveScars

function ClearPedDriveByClipsetOverride(ped)
	return _in(0x4AFE3690D7E0B5AC, ped)
end

function ClearPedEnvDirt(ped)
	return _in(0x6585D955A68452A5, ped)
end
N_0x6585d955a68452a5 = ClearPedEnvDirt

function ClearPedInPauseMenu()
	return _in(0x5E62BE5DC58E9E06)
end

function ClearPedLastDamageBone(ped)
	return _in(0x8EF6B7AC68E2F01B, ped)
end

--- Does NOT seem to work with HAS_PED_BEEN_DAMAGED_BY_WEAPON. Use CLEAR_ENTITY_LAST_WEAPON_DAMAGE and HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON instead.
function ClearPedLastWeaponDamage(ped)
	return _in(0x0E98F88A24C5F4B8, ped)
end

function ClearPedNonCreationArea()
	return _in(0x2E05208086BA0651)
end

function ClearPedParachutePackVariation(ped)
	return _in(0x1280804F7CFD2D6C, ped)
end
N_0x1280804f7cfd2d6c = ClearPedParachutePackVariation

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function ClearPedProp(ped, propId)
	return _in(0x0943E5B8E078E76E, ped, propId)
end

--- Removes the scubagear (for mp male: component id: 8, drawableId: 123, textureId: any) from peds. Does not play the 'remove scuba gear' animation, but instantly removes it.
-- @param ped The ped to remove the scuba gear from.
function ClearPedScubaGearVariation(ped)
	return _in(0xB50EB4CCB29704AC, ped)
end
N_0xb50eb4ccb29704ac = ClearPedScubaGearVariation
RemovePedScubaGearNow = ClearPedScubaGearVariation

function ClearPedSecondaryTask(ped)
	return _in(0x176CECF6F920D707, ped)
end

function ClearPedStoredHatProp(ped)
	return _in(0x687C0B594907D2E8, ped)
end
N_0x687c0b594907d2e8 = ClearPedStoredHatProp

--- Clear a ped's tasks. Stop animations and other tasks created by scripts.
-- @param ped Ped id. Use PlayerPedId() for your own character.
function ClearPedTasks(ped)
	return _in(0xE1EF3C1216AFF2CD, ped)
end

--- Immediately stops the pedestrian from whatever it's doing. The difference between this and [CLEAR_PED_TASKS](#\_0xE1EF3C1216AFF2CD) is that this one teleports the ped but does not change the position of the ped.
-- @param ped Ped id.
function ClearPedTasksImmediately(ped)
	return _in(0xAAA34F8A7CB32098, ped)
end

--- It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.
function ClearPedWetness(ped)
	return _in(0x9C720776DAA43E7E, ped)
end

function ClearPlayerHasDamagedAtLeastOneNonAnimalPed(player)
	return _in(0x4AACB96203D11A31, player)
end

function ClearPlayerHasDamagedAtLeastOnePed(player)
	return _in(0xF0B67A4DE6AB5F98, player)
end

function ClearPlayerParachuteModelOverride(player)
	return _in(0x8753997EB5F6EE3F, player)
end

function ClearPlayerParachutePackModelOverride(player)
	return _in(0x10C54E4389C12B42, player)
end

function ClearPlayerParachuteVariationOverride(player)
	return _in(0x0F4CC924CF8C7B21, player)
end

--- NativeDB Introduced: v2372
function ClearPlayerReserveParachuteModelOverride(player)
	return _in(0x290D248E25815AE8, player)
end

--- This executes at the same as speed as PLAYER::SET_PLAYER_WANTED_LEVEL(player, 0, false);
-- PLAYER::GET_PLAYER_WANTED_LEVEL(player); executes in less than half the time. Which means that it's worth first checking if the wanted level needs to be cleared before clearing. However, this is mostly about good code practice and can important in other situations. The difference in time in this example is negligible.
function ClearPlayerWantedLevel(player)
	return _in(0xB302540597885499, player)
end

--- Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.
-- Modified example from "am_imp_exp.c4", line 6418:
-- /* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));
-- etc.
-- */
-- STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(vehicleHash);
-- ZONE::CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(popSchedules[index]);
function ClearPopscheduleOverrideVehicleModel(scheduleId)
	return _in(0x5C0DE367AA0D911C, scheduleId)
end

function ClearPrints()
	return _in(0xCC33FA791322B9D9)
end

function ClearRaceGalleryBlips()
	return _in(0x2708FC083123F9FF)
end
N_0x2708fc083123f9ff = ClearRaceGalleryBlips

--- There seem to be 26 flags
function ClearRagdollBlockingFlags(ped, flags)
	return _in(0xD86D101FCFD00A4B, ped, flags)
end
N_0xd86d101fcfd00a4b = ClearRagdollBlockingFlags
ResetPedRagdollBlockingFlags = ClearRagdollBlockingFlags

--- Clears the relationship between two groups. This should be called twice (once for each group).
-- Relationship types:
-- 0 = Companion
-- 1 = Respect
-- 2 = Like
-- 3 = Neutral
-- 4 = Dislike
-- 5 = Hate
-- 255 = Pedestrians
-- (Credits: Inco)
-- Example:
-- PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);
-- PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);
function ClearRelationshipBetweenGroups(relationship, group1, group2)
	return _in(0x5E29243FB56FC6D4, relationship, _ch(group1), _ch(group2))
end

--- **This native does absolutely nothing, just a nullsub**
function ClearReminderMessage()
	return _in(0xB57D8DD645CFA2CF)
end
N_0xb57d8dd645cfa2cf = ClearReminderMessage

function ClearReplayStats()
	return _in(0x1B1AB132A16FDA55)
end

function ClearRestartCustomPosition()
	return _in(0xA2716D40842EAF79)
end
N_0xa2716d40842eaf79 = ClearRestartCustomPosition
SetNextRespawnToCustom = ClearRestartCustomPosition

function ClearRoomForEntity(entity)
	return _in(0xB365FC0C4E27FFA7, entity)
end

function ClearRoomForGameViewport()
	return _in(0x23B59D8912F94246)
end
N_0x23b59d8912f94246 = ClearRoomForGameViewport

function ClearSequenceTask(taskSequenceId)
	return _in(0x3841422E9C488D8C, _ii(taskSequenceId) --[[ may be optional ]])
end

function ClearSmallPrints()
	return _in(0x2CEA2839313C09AC)
end

function ClearTacticalAnalysisPoints()
	return _in(0xB3CD58CCA6CDA852)
end
N_0xb3cd58cca6cda852 = ClearTacticalAnalysisPoints

--- p0: found arguments in the b617d scripts: pastebin.com/X5akCN7z
function ClearThisPrint(p0)
	return _in(0xCF708001E1E536DD, _ts(p0))
end

function ClearTimecycleModifier()
	return _in(0x0F07E7745A236711)
end

function ClearTvChannelPlaylist(tvChannel)
	return _in(0xBEB3D46BB7F043C0, tvChannel)
end
N_0xbeb3d46bb7f043c0 = ClearTvChannelPlaylist

function ClearVehicleCustomPrimaryColour(vehicle)
	return _in(0x55E1D2758F34E437, vehicle)
end

function ClearVehicleCustomSecondaryColour(vehicle)
	return _in(0x5FFBDEEC3E8E2009, vehicle)
end

function ClearVehiclePhoneExplosiveDevice()
	return _in(0xAA3F739ABDDCF21F)
end
N_0xaa3f739abddcf21f = ClearVehiclePhoneExplosiveDevice

function ClearVehicleRouteHistory(vehicle)
	return _in(0x6D6AF961B72728AE, vehicle)
end
N_0x6d6af961b72728ae = ClearVehicleRouteHistory

--- CLEAR_*
-- NativeDB Introduced: v1290
-- @param vehicle The vehicle to have tasks cleared
function ClearVehicleTasks(vehicle)
	return _in(0xDBBC7A2432524127, vehicle)
end
N_0xdbbc7a2432524127 = ClearVehicleTasks

function ClearWeatherTypePersist()
	return _in(0xCCC39339BEF76CF5)
end

--- Creates a copy of the passed ped, optionally setting it as local and/or shallow-copying the head blend data.
-- @param ped The input ped.
-- @param isNetwork Whether or not the ped should be registered as a network object.
-- @param bScriptHostPed Script host flag.
-- @param copyHeadBlendFlag If true, head blend data is referenced, not copied.
-- @return A new ped handle representing the ped's copy.
function ClonePed(ped, isNetwork, bScriptHostPed, copyHeadBlendFlag)
	return _in(0xEF29A16337FACADB, ped, isNetwork, bScriptHostPed, copyHeadBlendFlag, _ri)
end

--- Used one time in fmmc_launcher.c instead of CLONE_PED because ?
function ClonePedEx(ped, heading, isNetwork, bScriptHostPed, p4)
	return _in(0x668FD40BCBA5DE48, ped, heading, isNetwork, bScriptHostPed, p4, _ri)
end
N_0x668fd40bcba5de48 = ClonePedEx
ClonePed_2 = ClonePedEx

--- Copies ped's components and props to targetPed.
function ClonePedToTarget(ped, targetPed)
	return _in(0xE952D6431689AD9A, ped, targetPed)
end
AssignPlayerToPed = ClonePedToTarget

function ClonePedToTargetEx(ped, targetPed, p2)
	return _in(0x148B08C2D2ACB884, ped, targetPed, p2)
end
N_0x148b08c2d2acb884 = ClonePedToTargetEx

function CloseBombBayDoors(vehicle)
	return _in(0x3556041742A0DC74, vehicle)
end
N_0x3556041742a0dc74 = CloseBombBayDoors

function CloseMultiplayerChat()
	return _in(0x1AC8F4AD40E22127)
end
AbortTextChat = CloseMultiplayerChat

function ClosePatrolRoute()
	return _in(0xB043ECA801B8CBC1)
end

function CloseSequenceTask(taskSequenceId)
	return _in(0x39E72BC99E6360CB, taskSequenceId)
end

function CloseSocialClubMenu()
	return _in(0xD2B32BE3FC1626C6)
end
N_0xd2b32be3fc1626c6 = CloseSocialClubMenu

--- Downloads prod.cloud.rockstargames.com/titles/gta5/[platform]/check.json
function CloudCheckAvailability()
	return _in(0x4F18196C8D38768D)
end
N_0x4f18196c8d38768d = CloudCheckAvailability
DownloadCheck = CloudCheckAvailability

function CloudDeleteMemberFile(p0)
	return _in(0xC64DED7EF0D2FE37, _ts(p0), _ri)
end
N_0xc64ded7ef0d2fe37 = CloudDeleteMemberFile

function CloudDidRequestSucceed(handle)
	return _in(0x3A3D5568AF297CD5, handle, _r)
end
N_0x3a3d5568af297cd5 = CloudDidRequestSucceed

function CloudGetAvailabilityCheckResult()
	return _in(0x0B0CC10720653F3B, _r)
end
NetworkEnableMotionDrugged = CloudGetAvailabilityCheckResult
N_0x0b0cc10720653f3b = CloudGetAvailabilityCheckResult

function CloudHasRequestCompleted(handle)
	return _in(0x4C61B39930D045DA, handle, _r)
end
N_0x4c61b39930d045da = CloudHasRequestCompleted

function CloudIsCheckingAvailability()
	return _in(0xC7ABAC5DE675EE3B, _r)
end
N_0xc7abac5de675ee3b = CloudIsCheckingAvailability

--- Commits the backing pixels to the specified runtime texture.
-- @param tex The runtime texture handle.
function CommitRuntimeTexture(tex)
	return _in(0x19d81f4e, tex)
end

--- Compares two strings up to a specified number of characters.
-- Parameters:
-- str1 - String to be compared.
-- str2 - String to be compared.
-- matchCase - Comparison will be case-sensitive.
-- maxLength - Maximum number of characters to compare. A value of -1 indicates an infinite length.
-- Returns:
-- A value indicating the relationship between the strings:
-- <0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'A' < 'B', so result = -1)
-- 0 - The contents of both strings are equal.
-- >0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'B' > 'A', so result = 1)
-- Examples:
-- MISC::COMPARE_STRINGS("STRING", "string", false, -1); // 0; equal
-- MISC::COMPARE_STRINGS("TESTING", "test", false, 4); // 0; equal
-- MISC::COMPARE_STRINGS("R2D2", "R2xx", false, 2); // 0; equal
-- MISC::COMPARE_STRINGS("foo", "bar", false, -1); // 4; 'f' > 'b'
-- MISC::COMPARE_STRINGS("A", "A", true, 1); // 0; equal
-- When comparing case-sensitive strings, lower-case characters are greater than upper-case characters:
-- MISC::COMPARE_STRINGS("A", "a", true, 1); // -1; 'A' < 'a'
-- MISC::COMPARE_STRINGS("a", "A", true, 1); // 1; 'a' > 'A'
function CompareStrings(str1, str2, matchCase, maxLength)
	return _in(0x1E34710ECD4AB0EB, _ts(str1), _ts(str2), matchCase, maxLength, _ri)
end

--- Works for vehicles with a retractable landing gear
-- landing gear states:
-- 0: Deployed
-- 1: Closing
-- 2: Opening
-- 3: Retracted
function ControlLandingGear(vehicle, state)
	return _in(0xCFC8BE9A5E1FE575, vehicle, state)
end
SetVehicleLandingGear = ControlLandingGear

--- Forces the ped to use the mounted weapon.
-- Returns false if task is not possible.
function ControlMountedWeapon(ped)
	return _in(0xDCFE42068FE0135A, ped, _r)
end

--- Takes the specified time and writes it to the structure specified in the second argument.
-- struct date_time
-- {
-- alignas(8) int year;
-- alignas(8) int month;
-- alignas(8) int day;
-- alignas(8) int hour;
-- alignas(8) int minute;
-- alignas(8) int second;
-- };
function ConvertPosixTime(posixTime, timeStructure)
	return _in(0xAC97AF97FA68E5D5, posixTime, _ii(timeStructure) --[[ may be optional ]])
end
GetDateAndTimeFromUnixEpoch = ConvertPosixTime

function CopyMemory(src, size)
	return _in(0x213AEB2B90CBA7AC, _i, src, size)
end
N_0x213aeb2b90cba7ac = CopyMemory

--- Copies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle.
-- @param sourceVehicle The source to copy the vehicle damage.
-- @param targetVehicle The target to paste the vehicle damage.
function CopyVehicleDamages(sourceVehicle, targetVehicle)
	return _in(0xE44A982368A4AF23, sourceVehicle, targetVehicle)
end
N_0xe44a982368a4af23 = CopyVehicleDamages

--- Returns the cosine of the given number.
-- @param value The number of degrees (in degrees, not radians)
-- @return The cosine of the given number
function Cos(value)
	return _in(0xD0FFB162F40A139C, value, _rf)
end

function CreateAirDefenseArea(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, weaponHash)
	return _in(0x9DA58CDBF6BDBC08, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, _ch(weaponHash), _ri)
end
N_0x9da58cdbf6bdbc08 = CreateAirDefenseArea

--- Both coordinates are from objects in the decompiled scripts.
-- Native related to [\_0xECDC202B25E5CF48](#\_0xECDC202B25E5CF48) p1 value. The only weapon hash used in the decompiled scripts is weapon_air_defence_gun. These two natives are used by the yacht script, decompiled scripts suggest it and the weapon hash used (valkyrie's rockets) are also used by yachts.
-- @param x X coordinate
-- @param y Y coordinate
-- @param z Z coordinate
-- @param radius Unknown float 150.0 is used in freemode script.
-- @param p4 X coordinate
-- @param p5 Y coordinate
-- @param p6 Z coordinate
-- @param weaponHash weapon_air_defence_gun and 0 are used in the decompiled scripts.
-- @return Seems to be some sort of handle, result is += 1 any time this native is called.
function CreateAirDefenseSphere(x, y, z, radius, p4, p5, p6, weaponHash)
	return _in(0x91EF34584710BE99, x, y, z, radius, p4, p5, p6, _ch(weaponHash), _ri)
end
N_0x91ef34584710be99 = CreateAirDefenseSphere

--- Used for doing money drop
-- Pickup hashes: pastebin.com/8EuSv2r1
function CreateAmbientPickup(pickupHash, posX, posY, posZ, flags, value, modelHash, returnHandle, p8)
	return _in(0x673966A0C0FD7171, _ch(pickupHash), posX, posY, posZ, flags, value, _ch(modelHash), returnHandle, p8, _ri)
end

--- Creates an audio submix with the specified name, or gets the existing audio submix by that name.
-- @param name The audio submix name.
-- @return A submix ID, or -1 if the submix could not be created.
function CreateAudioSubmix(name)
	return _in(0x658d2bc8, _ts(name), _ri)
end

--- Create a camera with the specified cam name, You can use `SET_CAM_` natives to manipulate the camera.
-- Cam names:
-- ```
-- "DEFAULT_SCRIPTED_CAMERA"
-- "DEFAULT_ANIMATED_CAMERA"
-- "DEFAULT_SPLINE_CAMERA"
-- "DEFAULT_SCRIPTED_FLY_CAMERA"
-- "TIMED_SPLINE_CAMERA"
-- ```
-- @param camName Is the type of the camera, is always setted to `DEFAULT_SCRIPTED_CAMERA` in Rockstar scripts and in Fivem Forum Posts
-- @param active Unkown, is always setted to `true` in Rockstar scripts and in Fivem Forum Posts
-- @return A camera handle.
function CreateCam(camName, active)
	return _in(0xC3981DCE61D9E13F, _ts(camName), active, _ri)
end

--- Create a camera with the specified cam name/type, You can use `SET_CAM_` natives to manipulate the camera.
-- Camera names found in the b617d scripts:
-- ```
-- "DEFAULT_ANIMATED_CAMERA"
-- "DEFAULT_SCRIPTED_CAMERA"
-- "DEFAULT_SCRIPTED_FLY_CAMERA"
-- "DEFAULT_SPLINE_CAMERA"
-- ```
-- @param camName Is the type of the camera, is always setted to `DEFAULT_SCRIPTED_CAMERA` in Rockstar scripts and in Fivem Forum Posts
-- @param posX The x position of the camera (you can also send a vector3 instead of the bulk coordinates)
-- @param posY The y position of the camera (you can also send a vector3 instead of the bulk coordinates)
-- @param posZ The z position of the camera (you can also send a vector3 instead of the bulk coordinates)
-- @param rotX The x rotation of the camera
-- @param rotY The y rotation of the camera
-- @param rotZ The z rotation of the camera
-- @param fov The Field Of View of the camera, is the observable world that is seen
-- @return A camera handle.
function CreateCamWithParams(camName, posX, posY, posZ, rotX, rotY, rotZ, fov, active, rotationOrder)
	return _in(0xB51194800B257161, _ts(camName), posX, posY, posZ, rotX, rotY, rotZ, fov, active, rotationOrder, _ri)
end

function CreateCamera(camHash, active)
	return _in(0x5E3CF89C6BCCA67D, _ch(camHash), active, _ri)
end

--- CAM::\_GET_GAMEPLAY_CAM_COORDS can be used instead of posX,Y,Z\
-- CAM::\_GET_GAMEPLAY_CAM_ROT can be used instead of rotX,Y,Z\
-- CAM::\_80EC114669DAEFF4() can be used instead of p7 (Possible p7 is FOV parameter. )\
-- rotationOrder is 2 usually
function CreateCameraWithParams(camHash, posX, posY, posZ, rotX, rotY, rotZ, fov, active, rotationOrder)
	return _in(0x6ABFA3E16460F22D, _ch(camHash), posX, posY, posZ, rotX, rotY, rotZ, fov, active, rotationOrder, _ri)
end

--- ```
-- Creates a checkpoint. Returns the handle of the checkpoint.
-- 20/03/17 : Attention, checkpoints are already handled by the game itself, so you must not loop it like markers.
-- Parameters:
-- * type - The type of checkpoint to create. See below for a list of checkpoint types.
-- * pos1 - The position of the checkpoint.
-- * pos2 - The position of the next checkpoint to point to.
-- * diameter - The diameter of the checkpoint.
-- * color - The color of the checkpoint.
-- * reserved - Special parameter, see below for details. Usually set to 0 in the scripts.
-- Checkpoint types (prior to game build 2189):
-- 0-4---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 5-9---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 10-14-------Ring: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 15-19-------1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 20-24-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 25-29-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 30-34-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
-- 35-38-------Ring: Airplane Up, Left, Right, UpsideDown
-- 39----------?
-- 40----------Ring: just a ring
-- 41----------?
-- 42-44-------Cylinder w/ number (uses 'reserved' parameter)
-- 45-47-------Cylinder no arrow or number
-- If using type 42-44, reserved sets number / number and shape to display
-- 0-99------------Just numbers (0-99)
-- 100-109-----------------Arrow (0-9)
-- 110-119------------Two arrows (0-9)
-- 120-129----------Three arrows (0-9)
-- 130-139----------------Circle (0-9)
-- 140-149------------CycleArrow (0-9)
-- 150-159----------------Circle (0-9)
-- 160-169----Circle  w/ pointer (0-9)
-- 170-179-------Perforated ring (0-9)
-- 180-189----------------Sphere (0-9)
-- ```
-- [Checkpoint Types](https://docs.fivem.net/docs/game-references/checkpoints/) as of game build 2189
function CreateCheckpoint(type, posX1, posY1, posZ1, posX2, posY2, posZ2, diameter, red, green, blue, alpha, reserved)
	return _in(0x0134F0835AB6BFCB, type, posX1, posY1, posZ1, posX2, posY2, posZ2, diameter, red, green, blue, alpha, reserved, _ri)
end

function CreateCinematicShot(p0, p1, p2, entity)
	return _in(0x741B0129D4560F31, p0, p1, p2, entity)
end

--- Creates a DUI browser. This can be used to draw on a runtime texture using CREATE_RUNTIME_TEXTURE_FROM_DUI_HANDLE.
-- @param url The initial URL to load in the browser.
-- @param width The width of the backing surface.
-- @param height The height of the backing surface.
-- @return A DUI object.
function CreateDui(url, width, height)
	return _in(0x23eaf899, _ts(url), width, height, _rl)
end

--- As per the name, this native creates a "fake" gamer tag that is attached to a specific ped.
-- Unlike "real" gamer tags, you cannot set the crew colour of these gamer tags.
-- To create gamer tags for actual players and for more gamer tag information, see [CREATE_MP_GAMER_TAG_WITH_CREW_COLOR](#\_0x6DD05E9D83EFA4C9).
-- @param ped The ped that the fake gamer tag will be attached to.
-- @param username The name displayed on the gamer tag.
-- @param crewIsPrivate If the crew is private. Public crews have a pointed end cap, private crews do not.
-- @param crewIsRockstar If the crew is a Rockstar crew. Rockstar crews include a Rockstar logo before the name.
-- @param crewName The name of the crew.
-- @param crewRank The rank from 1-5 that the player is within the crew. Use 0 if the player is the founder of the crew. Only relevant for private crews.
-- @return The ID of the new gamer tag.
function CreateFakeMpGamerTag(ped, username, crewIsPrivate, crewIsRockstar, crewName, crewRank)
	return _in(0xBFEFE3321A3F5015, ped, _ts(username), crewIsPrivate, crewIsRockstar, _ts(crewName), crewRank, _ri)
end
N_0xbfefe3321a3f5015 = CreateFakeMpGamerTag
CreateMpGamerTag = CreateFakeMpGamerTag

function CreateForcedObject(x, y, z, p3, modelHash, p5)
	return _in(0x150E808B375A385A, x, y, z, p3, _ch(modelHash), p5)
end

--- Creates a new ped group.
-- Groups can contain up to 8 peds.
-- The parameter is unused.
-- Returns a handle to the created group, or 0 if a group couldn't be created.
function CreateGroup(unused)
	return _in(0x90370EBE0FEE1A3D, unused, _ri)
end

--- enum IncidentTypes
-- {
-- FireDepartment = 3,
-- Paramedics = 5,
-- Police = 7,
-- PedsInCavalcades = 11,
-- Merryweather = 14
-- };
-- As for the 'police' incident, it will call police cars to you, but unlike PedsInCavalcades & Merryweather they won't start shooting at you unless you shoot first or shoot at them. The top 2 however seem to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I found out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 param I cant say is radius, but for the pedsInCavalcades and Merryweather R* uses 0.0f and for the top 3 (Emergency Services) they use 3.0f.
-- Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course not IV).
-- Side Note 2: I say it breaks as if you call this proper,
-- if(CREATE_INCIDENT) etc it will return false if you do as I said above.
-- =====================================================
-- ```
-- ```
-- NativeDB Added Parameter 8: Any p7
-- NativeDB Added Parameter 9: Any p8
function CreateIncident(dispatchService, x, y, z, numUnits, radius, outIncidentID)
	return _in(0x3F892CAF67444AE7, dispatchService, x, y, z, numUnits, radius, _ii(outIncidentID) --[[ may be optional ]], _r)
end

--- p0 could be type (valueused in scripts: 14, 7, 5, 3, 11)
-- p1 is a return from get_player_ped() in am_gang_call.c, but player_ped_id() in other (non am) scripts.
-- p3 is usually 0f or 3f
-- =====================================================
-- enum IncidentTypes
-- {
-- FireDepartment = 3,
-- Paramedics = 5,
-- Police = 7,
-- PedsInCavalcades = 11,
-- Merryweather = 14
-- };
-- As for the 'police' incident, it will call police cars to you, but unlike PedsInCavalcades & Merryweather they won't start shooting at you unless you shoot first or shoot at them. The top 2 however seem to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I found out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 param I cant say is radius, but for the pedsInCavalcades and Merryweather R* uses 0.0f and for the top 3 (Emergency Services) they use 3.0f.
-- Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course not IV).
-- Side Note 2: I say it breaks as if you call this proper,
-- if(CREATE_INCIDENT) etc it will return false if you do as I said above.
-- =====================================================
-- ```
-- ```
-- NativeDB Added Parameter 6: Any p5
-- NativeDB Added Parameter 7: Any p6
function CreateIncidentWithEntity(dispatchService, ped, numUnits, radius, outIncidentID)
	return _in(0x05983472F0494E60, dispatchService, ped, numUnits, radius, _ii(outIncidentID) --[[ may be optional ]], _r)
end

function CreateItemset(distri)
	return _in(0x35AD299F50D91B24, distri, _ri)
end

--- Train models must be [requested](#\_0x963D27A58DF860AC) before use. See trains.xml for freight and metro variations.
-- ```
-- NativeDB Added Parameter 6: Any p5
-- NativeDB Added Parameter 7: Any p6
-- ```
-- ### Train Models:
-- *   freight
-- *   freightcar
-- *   freightcar2 (Added v2372)
-- *   freightcont1
-- *   freightcont2
-- *   freightgrain
-- *   metrotrain
-- *   tankercar
function CreateMissionTrain(variation, x, y, z, direction)
	return _in(0x63C6CCA8E68AE8C8, variation, x, y, z, direction, _ri)
end

--- Creates a mobile phone of the specified type.
-- Possible phone types:
-- 0 - Default phone / Michael's phone
-- 1 - Trevor's phone
-- 2 - Franklin's phone
-- 4 - Prologue phone
-- These values represent bit flags, so a value of '3' would toggle Trevor and Franklin's phones together, causing unexpected behavior and most likely crash the game.
function CreateMobilePhone(phoneType)
	return _in(0xA4E8E696C532FBC7, phoneType)
end

--- p5 = sets as true in scripts
-- Same as the comment for CREATE_MODEL_SWAP unless for some reason p5 affects it this only works with objects as well.
-- Network players do not see changes done with this.
function CreateModelHide(x, y, z, radius, model, p5)
	return _in(0x8A97BCA30A0CE478, x, y, z, radius, _ch(model), p5)
end

function CreateModelHideExcludingScriptObjects(x, y, z, radius, model, p5)
	return _in(0x3A52AE588830BF7F, x, y, z, radius, _ch(model), p5)
end

--- Only works with objects!
-- Network players do not see changes done with this.
function CreateModelSwap(x, y, z, radius, originalModel, newModel, p6)
	return _in(0x92C47782FDA8B2A3, x, y, z, radius, _ch(originalModel), _ch(newModel), p6)
end

--- Spawns one or more money pickups.
-- x: The X-component of the world position to spawn the money pickups at.
-- y: The Y-component of the world position to spawn the money pickups at.
-- z: The Z-component of the world position to spawn the money pickups at.
-- value: The combined value of the pickups (in dollars).
-- amount: The number of pickups to spawn.
-- model: The model to use, or 0 for default money model.
-- Example:
-- CREATE_MONEY_PICKUPS(x, y, z, 1000, 3, 0x684a97ae);
-- Spawns 3 spray cans that'll collectively give $1000 when picked up. (Three spray cans, each giving $334, $334, $332 = $1000).
-- ==============================================
-- Max is 2000 in MP. So if you put the amount to 20, but the value to $400,000 eg. They will only be able to pickup 20 - $2,000 bags. So, $40,000
function CreateMoneyPickups(x, y, z, value, amount, model)
	return _in(0x0589B5E791CE9B2B, x, y, z, value, amount, _ch(model))
end

--- Creates a gamer tag for the specified local player ID, automatically attached to the player's current ped.
-- The created gamer tag will have the same ID as the player. You can use [IS_MP_GAMER_TAG_ACTIVE](#\_0x4E929E7A5796FD26) to check if a gamer tag already exists for a player.
-- After the gamer tag is created, all components will be set as invisible. Use [SET_MP_GAMER_TAG_VISIBILITY](#\_0x63BB75ABEDC1F6A0) to change the visibility of individual components or [\_SET_MP_GAMER_TAG_VISIBILITY_ALL](#\_0xEE76FF7E6A0166B0) to set all of them at once.
-- To create a gamer tag for a ped that is not a player, see [CREATE_FAKE_MP_GAMER_TAG](#\_0xBFEFE3321A3F5015).
-- @param player The local player ID to assign the gamer tag to.
-- @param username The name displayed on the gamer tag.
-- @param crewIsPrivate If the crew is private. Public crews have a pointed end cap, private crews do not.
-- @param crewIsRockstar If the crew is a Rockstar crew. Rockstar crews include a Rockstar logo before the name.
-- @param crewName The name of the crew.
-- @param crewRank The rank from 1-5 that the player is within the crew. Use 0 if the player is the founder of the crew. Only relevant for private crews.
-- @param crewR Red component of the crew colour.
-- @param crewG Green component of the crew colour.
-- @param crewB Blue component of the crew colour.
function CreateMpGamerTagWithCrewColor(player, username, crewIsPrivate, crewIsRockstar, crewName, crewRank, crewR, crewG, crewB)
	return _in(0x6DD05E9D83EFA4C9, player, _ts(username), crewIsPrivate, crewIsRockstar, _ts(crewName), crewRank, crewR, crewG, crewB)
end
N_0x6dd05e9d83efa4c9 = CreateMpGamerTagWithCrewColor
CreateMpGamerTagColor = CreateMpGamerTagWithCrewColor
SetMpGamerTagColor = CreateMpGamerTagWithCrewColor
CreateMpGamerTagForNetPlayer = CreateMpGamerTagWithCrewColor

function CreateNewScriptedConversation()
	return _in(0xD2C91A0B572AAE56)
end

--- Creates a new NaturalMotion message.
-- startImmediately: If set to true, the character will perform the message the moment it receives it by GIVE_PED_NM_MESSAGE. If false, the Ped will get the message but won't perform it yet. While it's a boolean value, if negative, the message will not be initialized.
-- messageId: The ID of the NaturalMotion message.
-- If a message already exists, this function does nothing. A message exists until the point it has been successfully dispatched by GIVE_PED_NM_MESSAGE.
function CreateNmMessage(startImmediately, messageId)
	return _in(0x418EF2A1BCE56685, startImmediately, messageId)
end

--- NativeDB Introduced: v2372
function CreateNonNetworkedAmbientPickup(pickupHash, posX, posY, posZ, flags, value, modelHash, p7, p8)
	return _in(0x9C93764223E29C50, pickupHash, posX, posY, posZ, flags, value, modelHash, p7, p8, _ri)
end
N_0x9c93764223e29c50 = CreateNonNetworkedAmbientPickup

function CreateNonNetworkedPortablePickup(pickupHash, x, y, z, placeOnGround, modelHash)
	return _in(0x125494B98A21AAF7, _ch(pickupHash), x, y, z, placeOnGround, _ch(modelHash), _ri)
end
N_0x125494b98a21aaf7 = CreateNonNetworkedPortablePickup
CreatePortablePickup_2 = CreateNonNetworkedPortablePickup

--- Creates an object (prop) with the specified model at the specified position, offset on the Z axis by the radius of the object's model.
-- This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
-- @param modelHash The model to spawn.
-- @param x Spawn coordinate X component.
-- @param y Spawn coordinate Y component.
-- @param z Spawn coordinate Z component, 'ground level'.
-- @param isNetwork Whether to create a network object for the object. If false, the object exists only locally.
-- @param netMissionEntity Whether to register the object as pinned to the script host in the R\* network model.
-- @param doorFlag False to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode.
-- @return A script handle for the object, or `0` if the object failed to be created.
function CreateObject(modelHash, x, y, z, isNetwork, netMissionEntity, doorFlag)
	return _in(0x509D5878EB39E842, _ch(modelHash), x, y, z, isNetwork, netMissionEntity, doorFlag, _ri)
end

--- Creates an object (prop) with the specified model centered at the specified position.
-- This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
-- @param modelHash The model to spawn.
-- @param x Spawn coordinate X component.
-- @param y Spawn coordinate Y component.
-- @param z Spawn coordinate Z component.
-- @param isNetwork Whether to create a network object for the object. If false, the object exists only locally.
-- @param netMissionEntity Whether to register the object as pinned to the script host in the R\* network model.
-- @param doorFlag False to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode.
-- @return A script handle (fwScriptGuid index) for the object, or `0` if the object failed to be created.
function CreateObjectNoOffset(modelHash, x, y, z, isNetwork, netMissionEntity, doorFlag)
	return _in(0x9A294B2138ABB884, _ch(modelHash), x, y, z, isNetwork, netMissionEntity, doorFlag, _ri)
end

function CreateParachuteBagObject(ped, p1, p2)
	return _in(0x8C4F3BF23B6237DB, ped, p1, p2, _ri)
end
N_0x8c4f3bf23b6237db = CreateParachuteBagObject
CreateParachuteObject = CreateParachuteBagObject

function CreatePatrolRoute()
	return _in(0xAF8A443CCC8018DC)
end

--- Creates a ped (biped character, pedestrian, actor) with the specified model at the specified position and heading.
-- This ped will initially be owned by the creating script as a mission entity, and the model should be loaded already
-- (e.g. using REQUEST_MODEL).
-- @param pedType Unused. Peds get set to CIVMALE/CIVFEMALE/etc. no matter the value specified.
-- @param modelHash The model of ped to spawn.
-- @param x Spawn coordinate X component.
-- @param y Spawn coordinate Y component.
-- @param z Spawn coordinate Z component.
-- @param heading Heading to face towards, in degrees.
-- @param isNetwork Whether to create a network object for the ped. If false, the ped exists only locally.
-- @param bScriptHostPed Whether to register the ped as pinned to the script host in the R\* network model.
-- @return A script handle (fwScriptGuid index) for the ped, or `0` if the ped failed to be created.
function CreatePed(pedType, modelHash, x, y, z, heading, isNetwork, bScriptHostPed)
	return _in(0xD49F9B0955C367DE, pedType, _ch(modelHash), x, y, z, heading, isNetwork, bScriptHostPed, _ri)
end

function CreatePedInsideVehicle(vehicle, pedType, modelHash, seat, isNetwork, bScriptHostPed)
	return _in(0x7DD959874C1FD534, vehicle, pedType, _ch(modelHash), seat, isNetwork, bScriptHostPed, _ri)
end

--- Drops the Hook/Magnet on a cargobob
-- state
-- enum eCargobobHook
-- {
-- CARGOBOB_HOOK = 0,
-- CARGOBOB_MAGNET = 1,
-- };
function CreatePickUpRopeForCargobob(cargobob, state)
	return _in(0x7BEB0C7A235F6F3B, cargobob, state)
end
EnableCargobobHook = CreatePickUpRopeForCargobob

--- Pickup hashes: pastebin.com/8EuSv2r1
function CreatePickup(pickupHash, posX, posY, posZ, p4, value, p6, modelHash)
	return _in(0xFBA08C503DD5FA58, _ch(pickupHash), posX, posY, posZ, p4, value, p6, _ch(modelHash), _ri)
end

--- Pickup hashes: pastebin.com/8EuSv2r1
-- flags:
-- 8 (1 << 3): place on ground
-- 512 (1 << 9): spin around
function CreatePickupRotate(pickupHash, posX, posY, posZ, rotX, rotY, rotZ, flag, amount, p9, p10, modelHash)
	return _in(0x891804727E0A98B7, _ch(pickupHash), posX, posY, posZ, rotX, rotY, rotZ, flag, amount, p9, p10, _ch(modelHash), _ri)
end

--- Pickup hashes: pastebin.com/8EuSv2r1
function CreatePortablePickup(pickupHash, x, y, z, placeOnGround, modelHash)
	return _in(0x2EAF1FDB2FB55698, _ch(pickupHash), x, y, z, placeOnGround, _ch(modelHash), _ri)
end

--- vb.net
-- Dim ped_handle As Integer
-- With Game.Player.Character
-- Dim pos As Vector3 = .Position + .ForwardVector * 3
-- ped_handle = Native.Function.Call(Of Integer)(Hash.CREATE_RANDOM_PED, pos.X, pos.Y, pos.Z)
-- End With
-- Creates a Ped at the specified location, returns the Ped Handle.
-- Ped will not act until SET_PED_AS_NO_LONGER_NEEDED is called.
function CreateRandomPed(posX, posY, posZ)
	return _in(0xB4AC7D0CF06BFE8F, posX, posY, posZ, _ri)
end

function CreateRandomPedAsDriver(vehicle, returnHandle)
	return _in(0x9B62392B474F44A0, vehicle, returnHandle, _ri)
end

--- Creates a blank runtime texture.
-- @param txd A handle to the runtime TXD to create the runtime texture in.
-- @param txn The name for the texture in the runtime texture dictionary.
-- @param width The width of the new texture.
-- @param height The height of the new texture.
-- @return A runtime texture handle.
function CreateRuntimeTexture(txd, txn, width, height)
	return _in(0xfec3766d, txd, _ts(txn), width, height, _rl)
end

--- Creates a runtime texture from a DUI handle.
-- @param txd A handle to the runtime TXD to create the runtime texture in.
-- @param txn The name for the texture in the runtime texture dictionary.
-- @param duiHandle The DUI handle returned from GET_DUI_HANDLE.
-- @return The runtime texture handle.
function CreateRuntimeTextureFromDuiHandle(txd, txn, duiHandle)
	return _in(0xb135472b, txd, _ts(txn), _ts(duiHandle), _rl)
end

--- Creates a runtime texture from the specified file in the current resource.
-- @param txd A handle to the runtime TXD to create the runtime texture in.
-- @param txn The name for the texture in the runtime texture dictionary.
-- @param fileName The file name of an image to load. This should preferably be a PNG, and has to be specified as a `file` in the resource manifest.
-- @return A runtime texture handle.
function CreateRuntimeTextureFromImage(txd, txn, fileName)
	return _in(0x786d8bc3, txd, _ts(txn), _ts(fileName), _rl)
end

--- Creates a runtime texture dictionary with the specified name.
-- Example:
-- ```lua
-- local txd = CreateRuntimeTxd('meow')
-- ```
-- @param name The name for the runtime TXD.
-- @return A handle to the runtime TXD.
function CreateRuntimeTxd(name)
	return _in(0x1f3ac778, _ts(name), _rl)
end

--- Creates a script vehicle generator at the given coordinates. Most parameters after the model hash are unknown.
-- Parameters:
-- a/w/s - Generator position
-- heading - Generator heading
-- p4 - Unknown (always 5.0)
-- p5 - Unknown (always 3.0)
-- modelHash - Vehicle model hash
-- p7/8/9/10 - Unknown (always -1)
-- p11 - Unknown (usually TRUE, only one instance of FALSE)
-- p12/13 - Unknown (always FALSE)
-- p14 - Unknown (usally FALSE, only two instances of TRUE)
-- p15 - Unknown (always TRUE)
-- p16 - Unknown (always -1)
-- Vector3 coords = GET_ENTITY_COORDS(PLAYER_PED_ID(), 0);	CREATE_SCRIPT_VEHICLE_GENERATOR(coords.x, coords.y, coords.z, 1.0f, 5.0f, 3.0f, GET_HASH_KEY("adder"), -1. -1, -1, -1, -1, true, false, false, false, true, -1);
function CreateScriptVehicleGenerator(x, y, z, heading, p4, p5, modelHash, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16)
	return _in(0x9DEF883114668116, x, y, z, heading, p4, p5, _ch(modelHash), p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, _ri)
end

--- p6 always 2 (but it doesnt seem to matter...)
-- roll and pitch 0
-- yaw to Ped.rotation
function CreateSynchronizedScene(x, y, z, roll, pitch, yaw, p6)
	return _in(0x8C18E0F9080ADD73, x, y, z, roll, pitch, yaw, p6, _ri)
end

function CreateSynchronizedScene_2(x, y, z, radius, object)
	return _in(0x62EC273D00187DCA, x, y, z, radius, _ch(object), _ri)
end
N_0x62ec273d00187dca = CreateSynchronizedScene_2

--- Creates a tracked point: useful for checking the visibility of a 3D point on screen.
-- Tracked points must be manually managed and will not be destroyed on resource stop (they are not an instance of CScriptResource). See [`DESTROY_TRACKED_POINT`](#\_0xB25DC90BAD56CA42) and [onResourceStop](https://docs.fivem.net/docs/scripting-reference/events/list/onResourceStop/).
-- Only 64 points may be tracked at a given time.
function CreateTrackedPoint()
	return _in(0xE2C9439ED45DEA60, _ri)
end

--- Creates a vehicle with the specified model at the specified position. This vehicle will initially be owned by the creating
-- script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
-- ```
-- NativeDB Added Parameter 8: BOOL p7
-- ```
-- @param modelHash The model of vehicle to spawn.
-- @param x Spawn coordinate X component.
-- @param y Spawn coordinate Y component.
-- @param z Spawn coordinate Z component.
-- @param heading Heading to face towards, in degrees.
-- @param isNetwork Whether to create a network object for the vehicle. If false, the vehicle exists only locally.
-- @param netMissionEntity Whether to register the vehicle as pinned to the script host in the R\* network model.
-- @return A script handle (fwScriptGuid index) for the vehicle, or `0` if the vehicle failed to be created.
function CreateVehicle(modelHash, x, y, z, heading, isNetwork, netMissionEntity)
	return _in(0xAF35D0D2583051B0, _ch(modelHash), x, y, z, heading, isNetwork, netMissionEntity, _ri)
end

--- Now has 8 params.
-- ```
-- ```
-- NativeDB Added Parameter 9: Any p8
-- NativeDB Added Parameter 10: Any p9
function CreateWeaponObject(weaponHash, ammoCount, x, y, z, showWorldModel, scale, p7)
	return _in(0x9541D3CF0D398F36, _ch(weaponHash), ammoCount, x, y, z, showWorldModel, scale, p7, _ri)
end

--- some camera effect that is used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled.
function CustomMenuCoordinates(p0)
	return _in(0x487A82C650EB7799, p0)
end
N_0x487a82c650eb7799 = CustomMenuCoordinates

function DataarrayAddBool(value)
	return _in(0xF8B0F5A43E928C76, _i, value)
end
ArrayValueAddBoolean = DataarrayAddBool

function DataarrayAddDict(arrayData)
	return _in(0x6889498B3E19C797, _ii(arrayData) --[[ may be optional ]], _ri)
end
ArrayValueAddObject = DataarrayAddDict

function DataarrayAddFloat(value)
	return _in(0x57A995FD75D37F56, _i, value)
end
ArrayValueAddFloat = DataarrayAddFloat

function DataarrayAddInt(value)
	return _in(0xCABDB751D86FE93B, _i, value)
end
ArrayValueAddInteger = DataarrayAddInt

function DataarrayAddString(value)
	return _in(0x2F0661C155AEEEAA, _i, _ts(value))
end
ArrayValueAddString = DataarrayAddString

function DataarrayAddVector(valueX, valueY, valueZ)
	return _in(0x407F8D034F70F0C2, _i, valueX, valueY, valueZ)
end
ArrayValueAddVector3 = DataarrayAddVector

function DataarrayGetBool(arrayIndex)
	return _in(0x50C1B2874E50C114, _i, arrayIndex, _r)
end
ArrayValueGetBoolean = DataarrayGetBool

function DataarrayGetCount(arrayData)
	return _in(0x065DB281590CEA2D, _ii(arrayData) --[[ may be optional ]], _ri)
end
ArrayValueGetSize = DataarrayGetCount

function DataarrayGetDict(arrayIndex)
	return _in(0x8B5FADCC4E3A145F, _i, arrayIndex, _ri)
end
ArrayValueGetObject = DataarrayGetDict

function DataarrayGetFloat(arrayIndex)
	return _in(0xC0C527B525D7CFB5, _i, arrayIndex, _rf)
end
ArrayValueGetFloat = DataarrayGetFloat

function DataarrayGetInt(arrayIndex)
	return _in(0x3E5AE19425CD74BE, _i, arrayIndex, _ri)
end
ArrayValueGetInteger = DataarrayGetInt

function DataarrayGetString(arrayIndex)
	return _in(0xD3F2FFEB8D836F52, _i, arrayIndex, _s)
end
ArrayValueGetString = DataarrayGetString

--- Types:
-- 1 = Boolean
-- 2 = Integer
-- 3 = Float
-- 4 = String
-- 5 = Vector3
-- 6 = Object
-- 7 = Array
function DataarrayGetType(arrayIndex)
	return _in(0x3A0014ADB172A3C5, _i, arrayIndex, _ri)
end
ArrayValueGetType = DataarrayGetType

function DataarrayGetVector(arrayIndex)
	return _in(0x8D2064E5B64A628A, _i, arrayIndex, _rv)
end
ArrayValueGetVector3 = DataarrayGetVector

function DatadictCreateArray(key)
	return _in(0x5B11728527CA6E5F, _i, _ts(key), _ri)
end
ObjectValueAddArray = DatadictCreateArray

function DatadictCreateDict(key)
	return _in(0xA358F56F10732EE1, _i, _ts(key), _ri)
end
ObjectValueAddObject = DatadictCreateDict

function DatadictGetArray(key)
	return _in(0x7A983AA9DA2659ED, _i, _ts(key), _ri)
end
ObjectValueGetArray = DatadictGetArray

function DatadictGetBool(key)
	return _in(0x1186940ED72FFEEC, _i, _ts(key), _r)
end
ObjectValueGetBoolean = DatadictGetBool

function DatadictGetDict(key)
	return _in(0xB6B9DDC412FCEEE2, _i, _ts(key), _ri)
end
ObjectValueGetObject = DatadictGetDict

function DatadictGetFloat(key)
	return _in(0x06610343E73B9727, _i, _ts(key), _rf)
end
ObjectValueGetFloat = DatadictGetFloat

function DatadictGetInt(key)
	return _in(0x78F06F6B1FB5A80C, _i, _ts(key), _ri)
end
ObjectValueGetInteger = DatadictGetInt

function DatadictGetString(key)
	return _in(0x3D2FD9E763B24472, _i, _ts(key), _s)
end
ObjectValueGetString = DatadictGetString

--- Types:
-- 1 = Boolean
-- 2 = Integer
-- 3 = Float
-- 4 = String
-- 5 = Vector3
-- 6 = Object
-- 7 = Array
function DatadictGetType(key)
	return _in(0x031C55ED33227371, _i, _ts(key), _ri)
end
ObjectValueGetType = DatadictGetType

function DatadictGetVector(key)
	return _in(0x46CD3CB66E0825CC, _i, _ts(key), _rv)
end
ObjectValueGetVector3 = DatadictGetVector

function DatadictSetBool(key, value)
	return _in(0x35124302A556A325, _i, _ts(key), value)
end
ObjectValueAddBoolean = DatadictSetBool

function DatadictSetFloat(key, value)
	return _in(0xC27E1CC2D795105E, _i, _ts(key), value)
end
ObjectValueAddFloat = DatadictSetFloat

function DatadictSetInt(key, value)
	return _in(0xE7E035450A7948D5, _i, _ts(key), value)
end
ObjectValueAddInteger = DatadictSetInt

function DatadictSetString(key, value)
	return _in(0x8FF3847DADD8E30C, _i, _ts(key), _ts(value))
end
ObjectValueAddString = DatadictSetString

function DatadictSetVector(key, valueX, valueY, valueZ)
	return _in(0x4CD49B76338C7DEE, _i, _ts(key), valueX, valueY, valueZ)
end
ObjectValueAddVector3 = DatadictSetVector

function DatafileClearWatchList()
	return _in(0x6CC86E78358D5119)
end
N_0x6cc86e78358d5119 = DatafileClearWatchList

--- NativeDB Added Parameter 1: int p0
function DatafileCreate()
	return _in(0xD27058A1CA2B13EE)
end

--- NativeDB Added Parameter 1: int p0
function DatafileDelete()
	return _in(0x9AB9C1CFC8862DFB)
end

function DatafileDeleteRequestedFile(p0)
	return _in(0x8F5EA1C01D65A100, p0, _r)
end
N_0x8f5ea1c01d65a100 = DatafileDeleteRequestedFile

function DatafileFlushMissionHeader()
	return _in(0xC55854C7D7274882)
end
N_0xc55854c7d7274882 = DatafileFlushMissionHeader

--- NativeDB Added Parameter 1: int p0
function DatafileGetFileDict()
	return _in(0x906B778CA1DC72B6, _s)
end
N_0x906b778ca1dc72b6 = DatafileGetFileDict

function DatafileHasLoadedFileData(p0)
	return _in(0x15FF52B809DB2353, p0, _r)
end
N_0x15ff52b809db2353 = DatafileHasLoadedFileData

function DatafileHasValidFileData(p0)
	return _in(0xF8CC1EBE0B62E29F, p0, _r)
end
N_0xf8cc1ebe0b62e29f = DatafileHasValidFileData

--- Example:
-- if (!DATAFILE::_BEDB96A7584AA8CF())
-- {
-- if (!g_109E3)
-- {
-- if (((sub_d4f() == 2) == 0) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()))
-- {
-- if (NETWORK::NETWORK_IS_CLOUD_AVAILABLE())
-- {
-- g_17A8B = 0;
-- }
-- if (!g_D52C)
-- {
-- sub_730();
-- }
-- }
-- }
-- }
function DatafileIsSavePending()
	return _in(0xBEDB96A7584AA8CF, _r)
end
N_0xbedb96a7584aa8cf = DatafileIsSavePending

function DatafileIsValidRequestId(index)
	return _in(0xFCCAE5B92A830878, index, _r)
end
N_0xfccae5b92a830878 = DatafileIsValidRequestId

--- Loads a User-Generated Content (UGC) file. These files can be found in "[GTA5]\data\ugc" and "[GTA5]\common\patch\ugc". They seem to follow a naming convention, most likely of "[name]_[part].ugc". See example below for usage.
-- Returns whether or not the file was successfully loaded.
-- Example:
-- DATAFILE::_LOAD_UGC_FILE("RockstarPlaylists") // loads "rockstarplaylists_00.ugc"
-- ```
-- ```
-- NativeDB Added Parameter 2: Any p1
function DatafileLoadOfflineUgc(filename)
	return _in(0xC5238C011AF405E4, _ts(filename), _r)
end
LoadUgcFile = DatafileLoadOfflineUgc

--- NativeDB Added Parameter 2: Any p1
function DatafileSelectActiveFile(p0)
	return _in(0x22DA66936E0FFF37, p0, _r)
end
N_0x22da66936e0fff37 = DatafileSelectActiveFile

--- NativeDB Added Parameter 2: Any p1
function DatafileSelectCreatorStats(p0)
	return _in(0x01095C95CD46B624, p0, _r)
end
N_0x01095c95cd46b624 = DatafileSelectCreatorStats

--- NativeDB Added Parameter 2: Any p1
function DatafileSelectUgcData(p0)
	return _in(0xA69AC4ADE82B57A4, p0, _r)
end
N_0xa69ac4ade82b57a4 = DatafileSelectUgcData

--- NativeDB Added Parameter 2: Any p1
function DatafileSelectUgcPlayerData(p0)
	return _in(0x52818819057F2B40, p0, _r)
end
N_0x52818819057f2b40 = DatafileSelectUgcPlayerData

--- NativeDB Added Parameter 3: Any p2
function DatafileSelectUgcStats(p0, p1)
	return _in(0x9CB0BFA7A9342C3D, p0, p1, _r)
end
N_0x9cb0bfa7a9342c3d = DatafileSelectUgcStats

--- NativeDB Added Parameter 2: Any p1
function DatafileStartSaveToCloud(filename)
	return _in(0x83BCCE3224735F05, _ts(filename), _r)
end
N_0x83bcce3224735f05 = DatafileStartSaveToCloud

--- NativeDB Added Parameter 1: int p0
function DatafileStoreMissionHeader()
	return _in(0x2ED61456317B8178)
end
N_0x2ed61456317b8178 = DatafileStoreMissionHeader

function DatafileUpdateSaveToCloud(p0)
	return _in(0x4DFDD9EB705F8140, _i --[[ actually bool ]], _r)
end
N_0x4dfdd9eb705f8140 = DatafileUpdateSaveToCloud

--- Adds the given request ID to the watch list.
function DatafileWatchRequestId(id)
	return _in(0xAD6875BBC0FC899C, id)
end
N_0xad6875bbc0fc899c = DatafileWatchRequestId

function DeactivateAudioSlowmoMode(p0)
	return _in(0xDDC635D5B3262C56, _ts(p0))
end
N_0xddc635d5b3262c56 = DeactivateAudioSlowmoMode

function DeactivateInteriorEntitySet(interior, entitySetName)
	return _in(0x420BD37289EEE162, interior, _ts(entitySetName))
end
N_0x420bd37289eee162 = DeactivateInteriorEntitySet
DisableInteriorProp = DeactivateInteriorEntitySet

--- Returns whether or not the specified property is set for the entity.
function DecorExistOn(entity, propertyName)
	return _in(0x05661B80A8C9165F, entity, _ts(propertyName), _r)
end

function DecorGetBool(entity, propertyName)
	return _in(0xDACE671663F2F5DB, entity, _ts(propertyName), _r)
end

function DecorGetFloat(entity, propertyName)
	return _in(0x6524A2F114706F43, entity, _ts(propertyName), _rf)
end
DecorGetFloat = DecorGetFloat

function DecorGetInt(entity, propertyName)
	return _in(0xA06C969B02A97298, entity, _ts(propertyName), _ri)
end

function DecorIsRegisteredAsType(propertyName, type)
	return _in(0x4F14F9F870D6FBC8, _ts(propertyName), type, _r)
end

--- Decor types:
-- ```
-- enum eDecorType
-- {
-- DECOR_TYPE_FLOAT = 1,
-- DECOR_TYPE_BOOL = 2,
-- DECOR_TYPE_INT = 3,
-- DECOR_TYPE_UNK = 4,
-- DECOR_TYPE_TIME = 5
-- };
-- ```
function DecorRegister(propertyName, type)
	return _in(0x9FD90732F56403CE, _ts(propertyName), type)
end

--- Called after all decorator type initializations.
function DecorRegisterLock()
	return _in(0xA9D14EEA259F9248)
end

function DecorRemove(entity, propertyName)
	return _in(0x00EE9F297C738720, entity, _ts(propertyName), _r)
end

--- This function sets metadata of type bool to specified entity.
function DecorSetBool(entity, propertyName, value)
	return _in(0x6B1E8E2ED1335B71, entity, _ts(propertyName), value, _r)
end

function DecorSetFloat(entity, propertyName, value)
	return _in(0x211AB1DD8D0F363A, entity, _ts(propertyName), value, _r)
end
DecorSetFloat = DecorSetFloat

--- Sets property to int.
function DecorSetInt(entity, propertyName, value)
	return _in(0x0CE3AA5E1CA19E10, entity, _ts(propertyName), value, _r)
end

function DecorSetTime(entity, propertyName, timestamp)
	return _in(0x95AED7B8E39ECAA4, entity, _ts(propertyName), timestamp, _r)
end

function DeleteAllTrains()
	return _in(0x736A718577F39C7D)
end

function DeleteCheckpoint(checkpoint)
	return _in(0xF5ED37F54CD4D52E, checkpoint)
end

function DeleteChildRope(ropeId)
	return _in(0xAA5D6B1888E4DB20, ropeId)
end

--- Deletes the specified entity, then sets the handle pointed to by the pointer to NULL.
-- @param entity The entity to delete.
function DeleteEntity(entity)
	return _in(0xAE3CBE5BF394C9C9, _ii(entity) --[[ may be optional ]])
end

function DeleteFunctionReference(referenceIdentity)
	return _in(0x1e86f206, _ts(referenceIdentity))
end

--- Delete an incident with a given id.
-- =======================================================
-- Correction, I have change this to int, instead of int*
-- as it doesn't use a pointer to the createdIncident.
-- If you try it you will crash (or) freeze.
-- =======================================================
function DeleteIncident(incidentId)
	return _in(0x556C1AA270D5A207, incidentId)
end

function DeleteMissionTrain(train)
	return _in(0x5B76B14AE875C795, _ii(train) --[[ may be optional ]])
end

--- Deletes the specified object, then sets the handle pointed to by the pointer to NULL.
function DeleteObject(object)
	return _in(0x539E0AE3E6634B9F, _ii(object) --[[ may be optional ]])
end

--- From the b617d scripts:
-- TASK::DELETE_PATROL_ROUTE("miss_merc0");
-- TASK::DELETE_PATROL_ROUTE("miss_merc1");
-- TASK::DELETE_PATROL_ROUTE("miss_merc2");
-- TASK::DELETE_PATROL_ROUTE("miss_dock");
function DeletePatrolRoute(patrolRoute)
	return _in(0x7767DD9D65E91319, _ts(patrolRoute))
end

--- Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.
function DeletePed(ped)
	return _in(0x9614299DCB53E54B, _ii(ped) --[[ may be optional ]])
end

function DeleteResourceKvp(key)
	return _in(0x7389b5df, _ts(key))
end

function DeleteRope(ropeId)
	return _in(0x52B4829281364649, _ii(ropeId) --[[ may be optional ]])
end

function DeleteScriptVehicleGenerator(vehicleGenerator)
	return _in(0x22102C9ABFCF125D, vehicleGenerator)
end

function DeleteStuntJump(p0)
	return _in(0xDC518000E39DAE1F, p0)
end

--- Deletes a vehicle.
-- The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
-- eg how to use:
-- SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
-- DELETE_VEHICLE(&vehicle);
-- Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.
function DeleteVehicle(vehicle)
	return _in(0xEA386986E786A54F, _ii(vehicle) --[[ may be optional ]])
end

function DeleteWaypoint()
	return _in(0xD8E694757BCEA8E9)
end
N_0xd8e694757bcea8e9 = DeleteWaypoint

--- Does nothing and always returns false.
function DepositVc(amount)
	return _in(0xE260E0BB9CD995AC, amount, _r)
end
N_0xe260e0bb9cd995ac = DepositVc

--- BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
function DestroyAllCams(bScriptHostCam)
	return _in(0x8E5FB15663F79120, bScriptHostCam)
end

--- BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
function DestroyCam(cam, bScriptHostCam)
	return _in(0x865908C81A2C22E9, cam, bScriptHostCam)
end

--- Destroys a DUI browser.
-- @param duiObject The DUI browser handle.
function DestroyDui(duiObject)
	return _in(0xa085cb10, duiObject)
end

function DestroyItemset(p0)
	return _in(0xDE18220B1C183EDA, p0)
end

--- Destroys the currently active mobile phone.
function DestroyMobilePhone()
	return _in(0x3BC861DF703E5097)
end

function DestroyTrackedPoint(point)
	return _in(0xB25DC90BAD56CA42, point)
end

function DetachCam(cam)
	return _in(0xA2FABBE87F4BAD82, cam)
end

function DetachContainerFromHandlerFrame(vehicle)
	return _in(0x7C0043FDFF6436BC, vehicle)
end
N_0x7c0043fdff6436bc = DetachContainerFromHandlerFrame

function DetachEntity(entity, dynamic, collision)
	return _in(0x961AC54BF0613F5D, entity, dynamic, collision)
end

function DetachEntityFromCargobob(vehicle, entity)
	return _in(0xAF03011701811146, vehicle, entity, _ri)
end
N_0xaf03011701811146 = DetachEntityFromCargobob

function DetachPortablePickupFromPed(pickupObject)
	return _in(0xCF463D1E9A0AECB1, pickupObject)
end

function DetachRopeFromEntity(ropeId, entity)
	return _in(0xBCF3026912A8647D, ropeId, entity)
end

function DetachSynchronizedScene(sceneID)
	return _in(0x6D38F1F04CBB37EA, sceneID)
end

function DetachVehicleFromAnyCargobob(vehicle)
	return _in(0xADF7BE450512C12F, vehicle, _r)
end

function DetachVehicleFromAnyTowTruck(vehicle)
	return _in(0xD0E9CE05A1E68CD8, vehicle, _r)
end

function DetachVehicleFromCargobob(vehicle, cargobob)
	return _in(0x0E21D3DF1051399D, vehicle, cargobob)
end

--- First two parameters swapped. Scripts verify that towTruck is the first parameter, not the second.
function DetachVehicleFromTowTruck(towTruck, vehicle)
	return _in(0xC2DB6B6708350ED8, towTruck, vehicle)
end

function DetachVehicleFromTrailer(vehicle)
	return _in(0x90532EDF0D2BDD86, vehicle)
end

function DetonateVehiclePhoneExplosiveDevice()
	return _in(0xEF49CF0270307CBE)
end
N_0xef49cf0270307cbe = DetonateVehiclePhoneExplosiveDevice
RequestVehiclePhoneExplosion = DetonateVehiclePhoneExplosiveDevice

function DisableAimCamThisUpdate()
	return _in(0x1A31FE0049E542F6)
end
N_0x1a31fe0049e542f6 = DisableAimCamThisUpdate

function DisableAllControlActions(padIndex)
	return _in(0x5F4B6931816E599B, padIndex)
end

function DisableCamCollisionForEntity(entity)
	return _in(0x2AED6301F67007D5, entity)
end
N_0x2aed6301f67007d5 = DisableCamCollisionForEntity

function DisableCamCollisionForObject(entity)
	return _in(0x49482F9FCD825AAA, entity)
end
N_0x49482f9fcd825aaa = DisableCamCollisionForObject

--- [Control values and meaning](https://docs.fivem.net/docs/game-references/controls/#controls)
-- Example: `CONTROLS::DISABLE_CONTROL_ACTION(2, 19, true)` disables the switching UI from appearing both when using a keyboard and Xbox 360 controller. Needs to be executed each frame.
-- Control group 1 and 0 gives the same results as 2. Same results for all players.
function DisableControlAction(padIndex, control, disable)
	return _in(0xFE99B66D079CF6BC, padIndex, control, disable)
end

--- Disables the editor runtime mode, changing game behavior to not track entity metadata.
-- This function supports SDK infrastructure and is not intended to be used directly from your code.
function DisableEditorRuntime()
	return _in(0xb1622b17)
end

--- Disables first person camera for the current frame.
-- Found in decompiled scripts:
-- GRAPHICS::DRAW_DEBUG_TEXT_2D("Disabling First Person Cam", 0.5, 0.8, 0.0, 0, 0, 255, 255);
-- CAM::_DE2EF5DA284CC8DF();
function DisableFirstPersonCamThisFrame()
	return _in(0xDE2EF5DA284CC8DF)
end

function DisableFrontendThisFrame()
	return _in(0x6D3465A73092F0E6)
end

function DisableHeadBlendPaletteColor(ped)
	return _in(0xA21C118553BBDF02, ped)
end
N_0xa21c118553bbdf02 = DisableHeadBlendPaletteColor

--- The game by default has 5 hospital respawn points. Disabling them all will cause the player to respawn at the last position they were.
function DisableHospitalRestart(hospitalIndex, toggle)
	return _in(0xC8535819C450EBA8, hospitalIndex, toggle)
end

--- Disables the game's afk camera that starts panning around after 30 seconds of inactivity.
-- @param state On/Off
function DisableIdleCamera(state)
	return _in(0x3d5ab7f0, state)
end

function DisableIndividualPlanePropeller(vehicle, propeller)
	return _in(0x500873A45724C863, vehicle, propeller)
end
N_0x500873a45724c863 = DisableIndividualPlanePropeller
DisablePlanePropeller = DisableIndividualPlanePropeller

function DisableInputGroup(padIndex)
	return _in(0x7F4724035FDCA1DD, padIndex)
end
N_0x7f4724035fdca1dd = DisableInputGroup

--- Example:
-- This removes the interior from the strip club and when trying to walk inside the player just falls:
-- INTERIOR::DISABLE_INTERIOR(118018, true);
function DisableInterior(interiorID, toggle)
	return _in(0x6170941419D7D8EC, interiorID, toggle)
end

--- If true is passed, the player won't be able to open the multiplayer chat
function DisableMultiplayerChat(disable)
	return _in(0x1DB21A44B09E8BA3, disable)
end
SetTextChatUnk = DisableMultiplayerChat

function DisableNavmeshInArea(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x4C8872D8CDBE1B8B, p0, p1, p2, p3, p4, p5, p6)
end

function DisableOcclusionThisFrame()
	return _in(0x3669F1B198DCAA4F)
end
N_0x3669f1b198dcaa4f = DisableOcclusionThisFrame

function DisablePedHeatscaleOverride(ped)
	return _in(0x600048C60D5C2C51, ped)
end
N_0x600048c60d5c2c51 = DisablePedHeatscaleOverride

function DisablePedPainAudio(ped, toggle)
	return _in(0xA9A41C1E940FB0E8, ped, toggle)
end

function DisablePlaneAileron(vehicle, p1, p2)
	return _in(0x23428FC53C60919C, vehicle, p1, p2)
end

--- Inhibits the player from using any method of combat including melee and firearms.
-- NOTE: Only disables the firing for one frame
function DisablePlayerFiring(player, toggle)
	return _in(0x5E6CC07646BBEAB8, player, toggle)
end

function DisablePlayerVehicleRewards(player)
	return _in(0xC142BE3BB9CE125F, player)
end

--- Disables the spawn point at the police house on the specified index.
-- policeIndex: The police house index.
-- toggle: true to enable the spawn point, false to disable.
-- - Nacorpio
function DisablePoliceRestart(policeIndex, toggle)
	return _in(0x23285DED6EBD7EA3, policeIndex, toggle)
end

--- This will disable the ability to make camera changes in R* Editor.
-- RE*
function DisableRockstarEditorCameraChanges()
	return _in(0xAF66DCEE6609B148)
end
N_0xaf66dcee6609b148 = DisableRockstarEditorCameraChanges

function DisableScreenblurFade()
	return _in(0xDE81239437E8C5A8)
end
N_0xde81239437e8c5a8 = DisableScreenblurFade
PausedScreenblurLoaded = DisableScreenblurFade

function DisableScriptAmbientEffects(p0)
	return _in(0xEFD97FF47B745B8D, p0)
end
N_0xefd97ff47b745b8d = DisableScriptAmbientEffects

function DisableScriptBrainSet(brainSet)
	return _in(0x14D8518E9760F08F, brainSet)
end

function DisableStuntJumpSet(p0)
	return _in(0xA5272EBEDD4747F6, p0)
end

function DisableSwitchOutroFx()
	return _in(0xBD605B8E0E18B3BB)
end
N_0xbd605b8e0e18b3bb = DisableSwitchOutroFx

function DisableVehicleDistantlights(toggle)
	return _in(0xC9F98AC1884E73A2, toggle)
end

function DisableVehicleFirstPersonCamThisFrame()
	return _in(0xADFF1B2A555F5FBA)
end

function DisableVehicleNeonLights(vehicle, toggle)
	return _in(0x83F813570FF519DE, vehicle, toggle)
end
N_0x83f813570ff519de = DisableVehicleNeonLights

function DisableVehicleTurretMovementThisFrame(vehicle)
	return _in(0x32CAEDF24A583345, vehicle)
end
N_0x32caedf24a583345 = DisableVehicleTurretMovementThisFrame

--- how does this work?
function DisableVehicleWeapon(disabled, weaponHash, vehicle, owner)
	return _in(0xF4FC6A6F67D8D856, disabled, _ch(weaponHash), vehicle, owner)
end

--- Disables collision for this vehicle (maybe it also supports other entities, not sure).
-- Only world/building/fixed world objects will have their collisions disabled, props, peds, or any other entity still collides with the vehicle.
-- [Example video](https://streamable.com/6n45d5)
-- Not sure if there is a native (and if so, which one) that resets the collisions.
-- @param vehicle the vehicle to disable world collisions for
function DisableVehicleWorldCollision(vehicle)
	return _in(0x75627043C6AA90AD, vehicle)
end
N_0x75627043c6aa90ad = DisableVehicleWorldCollision

function DisplayAmmoThisFrame(display)
	return _in(0xA5E78BA2B1331C55, display)
end

function DisplayAreaName(toggle)
	return _in(0x276B6CE369C33678, toggle)
end

--- "DISPLAY_CASH(true);" makes the cash amount render on the screen when appropriate
-- "DISPLAY_CASH(false);" disables cash amount rendering
function DisplayCash(display)
	return _in(0x96DEC8D5430208B7, display)
end

--- The messages are localized strings.
-- Examples:
-- "No_bus_money"
-- "Enter_bus"
-- "Tour_help"
-- "LETTERS_HELP2"
-- "Dummy"
-- **The bool appears to always be false (if it even is a bool, as it's represented by a zero)**
-- --------
-- p1 doesn't seem to make a difference, regardless of the state it's in.
-- picture of where on the screen this is displayed?
function DisplayHelpTextThisFrame(message, p1)
	return _in(0x960C9FF8F616E41C, _ts(message), p1)
end

--- If Hud should be displayed
function DisplayHud(toggle)
	return _in(0xA6294919E56FF02A, toggle)
end

--- Enables drawing some hud components, such as help labels, this frame, when the player is dead.
function DisplayHudWhenDeadThisFrame()
	return _in(0x7669F9E39DC17063)
end
N_0x7669f9e39dc17063 = DisplayHudWhenDeadThisFrame

function DisplayHudWhenPausedThisFrame()
	return _in(0x402F9ED62087E898)
end
N_0x402f9ed62087e898 = DisplayHudWhenPausedThisFrame

--- windowTitle's
-- -----------------
-- CELL_EMAIL_BOD	=	"Enter your Eyefind message"
-- CELL_EMAIL_BODE	=	"Message too long. Try again"
-- CELL_EMAIL_BODF	=	"Forbidden message. Try again"
-- CELL_EMAIL_SOD	=	"Enter your Eyefind subject"
-- CELL_EMAIL_SODE	=	"Subject too long. Try again"
-- CELL_EMAIL_SODF	=	"Forbidden text. Try again"
-- CELL_EMASH_BOD	=	"Enter your Eyefind message"
-- CELL_EMASH_BODE	=	"Message too long. Try again"
-- CELL_EMASH_BODF	=	"Forbidden message. Try again"
-- CELL_EMASH_SOD	=	"Enter your Eyefind subject"
-- CELL_EMASH_SODE	=	"Subject too long. Try again"
-- CELL_EMASH_SODF	=	"Forbidden Text. Try again"
-- FMMC_KEY_TIP10	=	"Enter Synopsis"
-- FMMC_KEY_TIP12	=	"Enter Custom Team Name"
-- FMMC_KEY_TIP12F	=	"Forbidden Text. Try again"
-- FMMC_KEY_TIP12N	=	"Custom Team Name"
-- FMMC_KEY_TIP8	=	"Enter Message"
-- FMMC_KEY_TIP8F	=	"Forbidden Text. Try again"
-- FMMC_KEY_TIP8FS	=	"Invalid Message. Try again"
-- FMMC_KEY_TIP8S	=	"Enter Message"
-- FMMC_KEY_TIP9	=	"Enter Outfit Name"
-- FMMC_KEY_TIP9F	=	"Invalid Outfit Name. Try again"
-- FMMC_KEY_TIP9N	=	"Outfit Name"
-- PM_NAME_CHALL	=	"Enter Challenge Name"
function DisplayOnscreenKeyboard(p0, windowTitle, p2, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, maxInputLength)
	return _in(0x00DC833F2568DBF6, p0, _ts(windowTitle), _ts(p2), _ts(defaultText), _ts(defaultConcat1), _ts(defaultConcat2), _ts(defaultConcat3), maxInputLength)
end

function DisplayOnscreenKeyboardWithLongerInitialString(p0, windowTitle, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, defaultConcat4, defaultConcat5, defaultConcat6, defaultConcat7, maxInputLength)
	return _in(0xCA78CFA0366592FE, p0, _ts(windowTitle), _i, _ts(defaultText), _ts(defaultConcat1), _ts(defaultConcat2), _ts(defaultConcat3), _ts(defaultConcat4), _ts(defaultConcat5), _ts(defaultConcat6), _ts(defaultConcat7), maxInputLength)
end
N_0xca78cfa0366592fe = DisplayOnscreenKeyboardWithLongerInitialString
DisplayOnscreenKeyboard_2 = DisplayOnscreenKeyboardWithLongerInitialString

--- Toggles whether or not name labels are shown on the expanded minimap next to player blips, like in GTA:O.
-- Doesn't need to be called every frame.
-- Preview: https://i.imgur.com/DfqKWfJ.png
-- Make sure to call SET_BLIP_CATEGORY with index 7 for this to work on the desired blip.
-- @param toggle the toggle boolean
function DisplayPlayerNameTagsOnBlips(toggle)
	return _in(0x82CEDC33687E1F50, toggle)
end
N_0x82cedc33687e1f50 = DisplayPlayerNameTagsOnBlips

--- If Minimap / Radar should be displayed.
function DisplayRadar(toggle)
	return _in(0xA0EBB943C300E693, toggle)
end

--- Displays the crosshair for this frame.
function DisplaySniperScopeThisFrame()
	return _in(0x73115226F4814E62)
end

--- Purpose of the BOOL currently unknown.
-- Both, true and false, work
function DisplaySystemSigninUi(unk)
	return _in(0x94DD7888C10A979E, unk)
end

function DisposeSynchronizedScene(scene)
	return _in(0xCD9CC7E200A52A6F, scene)
end
N_0xcd9cc7e200a52a6f = DisposeSynchronizedScene

--- If value is set to true, and ambient siren sound will be played.
-- Appears to enable/disable an audio flag.
function DistantCopCarSirens(value)
	return _in(0x552369F549563AD5, value)
end
N_0x552369f549563ad5 = DistantCopCarSirens
ForceAmbientSiren = DistantCopCarSirens

function DoAutoSave()
	return _in(0x50EEAAD86232EE55)
end

--- Fades the screen in.
-- duration: The time the fade should take, in milliseconds.
function DoScreenFadeIn(duration)
	return _in(0xD4E8E24955024033, duration)
end

--- Fades the screen out.
-- duration: The time the fade should take, in milliseconds.
function DoScreenFadeOut(duration)
	return _in(0x891B5B39AC6302AF, duration)
end

function DoesAirDefenseZoneExist(zoneId)
	return _in(0xCD79A550999D7D4F, zoneId, _r)
end
N_0xcd79a550999d7d4f = DoesAirDefenseZoneExist

function DoesAnimDictExist(animDict)
	return _in(0x2DA49C3B79856961, _ts(animDict), _r)
end

function DoesBlipExist(blip)
	return _in(0xA6DB27D19ECBB7DA, blip, _r)
end

function DoesBlipHaveGpsRoute(blip)
	return _in(0xDD2238F57B977751, blip, _r)
end
N_0xdd2238f57b977751 = DoesBlipHaveGpsRoute

--- Returns whether or not the passed camera handle exists.
function DoesCamExist(cam)
	return _in(0xA7A932170592B50E, cam, _r)
end

--- Returns true only when the hook is active, will return false if the magnet is active
function DoesCargobobHavePickUpRope(cargobob)
	return _in(0x1821D91AD4B56108, cargobob, _r)
end
IsCargobobHookActive = DoesCargobobHavePickUpRope

--- Returns true only when the magnet is active, will return false if the hook is active
function DoesCargobobHavePickupMagnet(cargobob)
	return _in(0x6E08BF5B3722BAC9, cargobob, _r)
end
IsCargobobMagnetActive = DoesCargobobHavePickupMagnet
DoesCargobobHavePickupMagnet = DoesCargobobHavePickupMagnet

function DoesCutsceneEntityExist(cutsceneEntName, modelHash)
	return _in(0x499EF20C5DB25C59, _ts(cutsceneEntName), _ch(modelHash), _r)
end

function DoesEntityBelongToThisScript(entity, p2)
	return _in(0xDDE6DF5AE89981D2, entity, p2, _r)
end

--- Checks whether an entity exists in the game world.
-- @param entity The entity to check if it exists.
-- @return Whether the entity exists or not.
function DoesEntityExist(entity)
	return _in(0x7239B21A38F536BA, entity, _r)
end

function DoesEntityHaveDrawable(entity)
	return _in(0x060D6E96F8B8E48D, entity, _r)
end

function DoesEntityHavePhysics(entity)
	return _in(0xDA95EA3317CC5064, entity, _r)
end

--- Checks via CVehicleModelInfo
function DoesExtraExist(vehicle, extraId)
	return _in(0x1262D55792428154, vehicle, extraId, _r)
end

function DoesGroupExist(groupId)
	return _in(0x7C6B0C22F9F40BBE, groupId, _r)
end

--- Used in pi_menu.c. Checks if there is a brief entry for specified value.
-- Values:
-- 0 - Dialogue brief
-- 1 - Help text brief
-- 2 - Mission Objective brief
-- @param briefValue A value indicating brief text.
function DoesLatestBriefStringExist(briefValue)
	return _in(0x5E657EF1099EDD65, briefValue, _r)
end
N_0x5e657ef1099edd65 = DoesLatestBriefStringExist

function DoesNavmeshBlockingObjectExist(p0)
	return _in(0x0EAEB0DB4B132399, p0, _r)
end
N_0x0eaeb0db4b132399 = DoesNavmeshBlockingObjectExist

--- p5 is usually 0.
function DoesObjectOfTypeExistAtCoords(x, y, z, radius, hash, p5)
	return _in(0xBFA48E2FF417213F, x, y, z, radius, _ch(hash), p5, _r)
end

function DoesParticleFxLoopedExist(ptfxHandle)
	return _in(0x74AFEF0D2E1E409B, ptfxHandle, _r)
end

--- Returns whether the ped's blip is controlled by the game.
-- It's the default blip you can see on enemies during freeroam in singleplayer (the one that fades out quickly).
function DoesPedHaveAiBlip(ped)
	return _in(0x15B8ECF844EE67ED, ped, _r)
end

function DoesPickupExist(pickup)
	return _in(0xAFC1CA75AD4074D1, pickup, _r)
end

function DoesPickupObjectExist(pickupObject)
	return _in(0xD9EFB6DBF7DAAEA3, pickupObject, _r)
end

--- Pickup hashes: pastebin.com/8EuSv2r1
function DoesPickupOfTypeExistInArea(pickupHash, x, y, z, radius)
	return _in(0xF9C36251F6E48E33, _ch(pickupHash), x, y, z, radius, _r)
end
IsPickupWithinRadius = DoesPickupOfTypeExistInArea

function DoesPlayerVehHaveRadio()
	return _in(0x109697E2FFBAC8A1, _r)
end
N_0x109697e2ffbac8a1 = DoesPlayerVehHaveRadio

function DoesPopMultiplierAreaExist(id)
	return _in(0x1327E2FE9746BAEE, id, _r)
end
N_0x1327e2fe9746baee = DoesPopMultiplierAreaExist

function DoesPopMultiplierSphereExist(id)
	return _in(0x171BAFB3C60389F4, id, _r)
end
N_0x171bafb3c60389f4 = DoesPopMultiplierSphereExist

--- Returns true if a destructible object with this handle exists, false otherwise.
function DoesRayfireMapObjectExist(object)
	return _in(0x52AF537A0C5B8AAD, object, _r)
end
N_0x52af537a0c5b8aad = DoesRayfireMapObjectExist
DoesDesObjectExist = DoesRayfireMapObjectExist

function DoesRelationshipGroupExist(groupHash)
	return _in(0xCC6E3B6BB69501F1, _ch(groupHash), _r)
end
N_0xcc6e3b6bb69501f1 = DoesRelationshipGroupExist

--- Return if the rope was generated or not by the script where the native is called.
function DoesRopeBelongToThisScript(ropeId)
	return _in(0x271C9D3ACA5D6409, ropeId, _r)
end
N_0x271c9d3aca5d6409 = DoesRopeBelongToThisScript

function DoesRopeExist(ropeId)
	return _in(0xFD5448BE3111ED96, _ii(ropeId) --[[ may be optional ]], _r)
end

function DoesScenarioBlockingAreaExist(x1, y1, z1, x2, y2, z2)
	return _in(0x8A24B067D175A7BD, x1, y1, z1, x2, y2, z2, _r)
end
N_0x8a24b067d175a7bd = DoesScenarioBlockingAreaExist

function DoesScenarioExistInArea(x, y, z, radius, b)
	return _in(0x5A59271FFADD33C1, x, y, z, radius, b, _r)
end

--- Occurrences in the b617d scripts:
-- "ARMY_GUARD",
-- "ARMY_HELI",
-- "Cinema_Downtown",
-- "Cinema_Morningwood",
-- "Cinema_Textile",
-- "City_Banks",
-- "Countryside_Banks",
-- "DEALERSHIP",
-- "GRAPESEED_PLANES",
-- "KORTZ_SECURITY",
-- "LOST_BIKERS",
-- "LSA_Planes",
-- "LSA_Planes",
-- "MP_POLICE",
-- "Observatory_Bikers",
-- "POLICE_POUND1",
-- "POLICE_POUND2",
-- "POLICE_POUND3",
-- "POLICE_POUND4",
-- "POLICE_POUND5"
-- "QUARRY",
-- "SANDY_PLANES",
-- "SCRAP_SECURITY",
-- "SEW_MACHINE",
-- "SOLOMON_GATE",
-- "Triathlon_1_Start",
-- "Triathlon_2_Start",
-- "Triathlon_3_Start"
-- Sometimes used with IS_SCENARIO_GROUP_ENABLED:
-- if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") && (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {
-- else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {
function DoesScenarioGroupExist(scenarioGroup)
	return _in(0xF9034C136C9E00D3, _ts(scenarioGroup), _r)
end

function DoesScenarioOfTypeExistInArea(p0, p1, p2, p4, p5)
	return _in(0x0A9D0C2A3BBC86C1, p0, p1, p2, _i, p4, p5, _r)
end

function DoesScriptExist(scriptName)
	return _in(0xFC04745FBE67C19A, _ts(scriptName), _r)
end

function DoesScriptVehicleGeneratorExist(vehicleGenerator)
	return _in(0xF6086BC836400876, vehicleGenerator, _r)
end

function DoesScriptWithNameHashExist(scriptHash)
	return _in(0xF86AA3C56BA31381, _ch(scriptHash), _r)
end
N_0xf86aa3c56ba31381 = DoesScriptWithNameHashExist
DoesScriptWithNameHashExist = DoesScriptWithNameHashExist

--- Checks if there is a cover point at position
function DoesScriptedCoverPointExistAtCoords(x, y, z)
	return _in(0xA98B8E3C088E5A31, x, y, z, _r)
end

function DoesShopPedApparelHaveRestrictionTag(componentHash, restrictionTagHash, componentId)
	return _in(0x341DE7ED1D2A1BFD, _ch(componentHash), _ch(restrictionTagHash), componentId, _r)
end
N_0x341de7ed1d2a1bfd = DoesShopPedApparelHaveRestrictionTag

function DoesTextBlockExist(gxt)
	return _in(0x1C7302E725259789, _ts(gxt), _r)
end

--- Checks if the passed gxt name exists in the game files.
function DoesTextLabelExist(gxt)
	return _in(0xAC09CA973C564252, _ts(gxt), _r)
end

--- Returns true if the vehicle has the FLAG_ALLOWS_RAPPEL flag set.
function DoesVehicleAllowRappel(vehicle)
	return _in(0x4E417C547182C84D, vehicle, _r)
end
N_0x4e417c547182c84d = DoesVehicleAllowRappel

function DoesVehicleExistWithDecorator(decorator)
	return _in(0x956B409B984D9BF7, _ts(decorator), _r)
end

function DoesVehicleHaveCrewEmblem(vehicle, p1)
	return _in(0x060D935D3981A275, vehicle, p1, _r)
end
HasVehicleGotDecal = DoesVehicleHaveCrewEmblem
DoesVehicleHaveDecal = DoesVehicleHaveCrewEmblem

--- NativeDB Introduced: v1180
function DoesVehicleHaveLandingGear(vehicle)
	return _in(0xE43701C36CAFF1A4, vehicle, _r)
end
N_0xe43701c36caff1a4 = DoesVehicleHaveLandingGear
GetVehicleHasLandingGear = DoesVehicleHaveLandingGear

function DoesVehicleHaveRoof(vehicle)
	return _in(0x8AC862B0B32C5B80, vehicle, _r)
end

--- NativeDB Introduced: v2189
function DoesVehicleHaveSearchlight(vehicle)
	return _in(0x99015ED7DBEA5113, vehicle, _r)
end

--- Maximum amount of vehicles with vehicle stuck check appears to be 16.
function DoesVehicleHaveStuckVehicleCheck(vehicle)
	return _in(0x57E4C39DE5EE8470, vehicle, _r)
end

function DoesVehicleHaveWeapons(vehicle)
	return _in(0x25ECB9F8017D98E0, vehicle, _r)
end

--- Checks if vehicle tyre at index exists. Also returns false if tyre was removed.
-- ```
-- ```
-- NativeDB Introduced: v1493
function DoesVehicleTyreExist(vehicle, tyreIndex)
	return _in(0x534E36D4DB9ECC5D, vehicle, tyreIndex, _r)
end
N_0x534e36d4db9ecc5d = DoesVehicleTyreExist

function DoesWeaponTakeWeaponComponent(weaponHash, componentHash)
	return _in(0x5CEE3DF569CECAB0, _ch(weaponHash), _ch(componentHash), _r)
end

function DontRenderInGameUi(p0)
	return _in(0x22A249A53034450A, p0)
end
N_0x22a249a53034450a = DontRenderInGameUi

--- When calling this, the current frame will have the players "arrow icon" be focused on the dead center of the radar.
function DontTiltMinimapThisFrame()
	return _in(0x6D14BFDC33B34F55)
end
CenterPlayerOnRadarThisFrame = DontTiltMinimapThisFrame

--- Hardcoded not to work in multiplayer environments.
-- Native name between `SET_LOCAL_PLAYER_VISIBLE_LOCALLY` & `SET_MAX_WANTED_LEVEL`.
-- ```
-- OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 0, 0.0, 50.0, 0);  //door unlocked
-- OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 1, 0.0, 50.0, 0);  //door locked
-- ```
-- @param locked tells the game whether or not the door is locked
-- @param xRotMult multiplier that specifies how fast the door/gate will rotate in degrees per second.
-- @param yRotMult multiplier that specifies how fast the door/gate will rotate in degrees per second.
-- @param zRotMult multiplier that specifies how fast the door/gate will rotate in degrees per second.
function DoorControl(modelHash, x, y, z, locked, xRotMult, yRotMult, zRotMult)
	return _in(0x9B12F9A24FABEDB0, _ch(modelHash), x, y, z, locked, xRotMult, yRotMult, zRotMult)
end

--- Search radius: 0.5
-- @param x The X coordinate of the door object
-- @param y The Y coordinate of the door object
-- @param z The Z coordinate of the door object
-- @param modelHash Entity model hash
function DoorSystemFindExistingDoor(x, y, z, modelHash, doorOutPointer)
	return _in(0x589F80B325CC82C5, x, y, z, _ch(modelHash), _ii(doorOutPointer) --[[ may be optional ]], _r)
end
N_0x589f80b325cc82c5 = DoorSystemFindExistingDoor

--- Returns a list of door system entries: a door system hash (see [ADD_DOOR_TO_SYSTEM](#\_0x6F8838D03D1DC226)) and its object handle.
-- The data returned adheres to the following layout:
-- ```
-- [{doorHash1, doorHandle1}, ..., {doorHashN, doorHandleN}]
-- ```
-- @return An object containing a list of door system entries.
function DoorSystemGetActive()
	return _in(0xf65bba4b, _ro)
end

--- NativeDB Introduced: v1868
function DoorSystemGetAutomaticDistance(doorHash)
	return _in(0xE851471AEFC3374F, _ch(doorHash), _rf)
end

function DoorSystemGetDoorPendingState(doorHash)
	return _in(0x4BC2854478F3A749, _ch(doorHash), _ri)
end
N_0x4bc2854478f3a749 = DoorSystemGetDoorPendingState

function DoorSystemGetDoorState(doorHash)
	return _in(0x160AA1B32F6139B8, _ch(doorHash), _ri)
end
N_0x160aa1b32f6139b8 = DoorSystemGetDoorState

function DoorSystemGetIsPhysicsLoaded(doorHash)
	return _in(0xDF97CDD4FC08FD34, _ch(doorHash), _r)
end
N_0xdf97cdd4fc08fd34 = DoorSystemGetIsPhysicsLoaded

function DoorSystemGetOpenRatio(doorHash)
	return _in(0x65499865FCA6E5EC, _ch(doorHash), _rf)
end
N_0x65499865fca6e5ec = DoorSystemGetOpenRatio

function DoorSystemGetSize()
	return _in(0x237613b3, _ri)
end

function DoorSystemSetAutomaticDistance(doorHash, distance, requestDoor, forceUpdate)
	return _in(0x9BA001CB45CBF627, _ch(doorHash), distance, requestDoor, forceUpdate)
end
N_0x9ba001cb45cbf627 = DoorSystemSetAutomaticDistance

--- Includes networking check: ownership vs. or the door itself **isn't** networked.
-- @param doorHash Door system identifier
-- @param forceUpdate On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
function DoorSystemSetAutomaticRate(doorHash, rate, requestDoor, forceUpdate)
	return _in(0x03C27E13B42A0E82, _ch(doorHash), rate, requestDoor, forceUpdate)
end
N_0x03c27e13b42a0e82 = DoorSystemSetAutomaticRate

--- Lockstates not applied and CNetObjDoor's not created until [DOOR_SYSTEM_GET_IS_PHYSICS_LOADED](#\_0xDF97CDD4FC08FD34) returns true.
-- ### Door lock states: (v323)
-- *   **0**: UNLOCKED
-- *   **1**: LOCKED
-- *   **2**: DOORSTATE_FORCE_LOCKED_UNTIL_OUT_OF_AREA
-- *   **3**: DOORSTATE_FORCE_UNLOCKED_THIS_FRAME
-- *   **4**: DOORSTATE_FORCE_LOCKED_THIS_FRAME
-- *   **5**: DOORSTATE_FORCE_OPEN_THIS_FRAME
-- *   **6**: DOORSTATE_FORCE_CLOSED_THIS_FRAME
-- @param requestDoor On true, and when door system is configured to, i.e., "persists w/o netobj", generate a CRequestDoorEvent.
-- @param forceUpdate On true, forces an update on the door system (same path as netObjDoor_applyDoorStuff)
function DoorSystemSetDoorState(doorHash, state, requestDoor, forceUpdate)
	return _in(0x6BAB9442830C7F53, _ch(doorHash), state, requestDoor, forceUpdate)
end
N_0x6bab9442830c7f53 = DoorSystemSetDoorState
SetDoorAccelerationLimit = DoorSystemSetDoorState

--- Includes networking check: ownership vs. or the door itself **isn't** networked.
-- @param doorHash Door system identifier
function DoorSystemSetHoldOpen(doorHash, toggle)
	return _in(0xD9B71952F78A2640, _ch(doorHash), toggle)
end
N_0xd9b71952f78a2640 = DoorSystemSetHoldOpen

--- Sets the ajar angle of a door.
-- Ranges from -1.0 to 1.0, and 0.0 is closed / default.
-- @param doorHash Door system identifier
-- @param forceUpdate On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
function DoorSystemSetOpenRatio(doorHash, ajar, requestDoor, forceUpdate)
	return _in(0xB6E6FBA95C7324AC, _ch(doorHash), ajar, requestDoor, forceUpdate)
end
N_0xb6e6fba95c7324ac = DoorSystemSetOpenRatio
SetDoorAjarAngle = DoorSystemSetOpenRatio

--- Includes networking check: ownership vs. or the door itself **isn't** networked.
-- @param doorHash Door system identifier
-- @param forceUpdate On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
function DoorSystemSetSpringRemoved(doorHash, removed, requestDoor, forceUpdate)
	return _in(0xC485E07E4F0B7958, _ch(doorHash), removed, requestDoor, forceUpdate)
end
N_0xc485e07e4f0b7958 = DoorSystemSetSpringRemoved

--- NativeDB Introduced: v1290
function DrawBinkMovie(binkMovie, p1, p2, p3, p4, p5, r, g, b, a)
	return _in(0x7118E83EEB9F7238, binkMovie, p1, p2, p3, p4, p5, r, g, b, a)
end

--- x,y,z = start pos
-- x2,y2,z2 = end pos
-- Draw's a 3D Box between the two x,y,z coords.
-- --------------
-- Keep in mind that the edges of the box do only align to the worlds base-vectors. Therefore something like rotation cannot be applied. That means this function is pretty much useless, unless you want a static unicolor box somewhere.
-- I recommend using a predefined function to call this.
-- [VB.NET]
-- Public Sub DrawBox(a As Vector3, b As Vector3, col As Color)
-- [Function].Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A)
-- End Sub
-- [C#]
-- public void DrawBox(Vector3 a, Vector3 b, Color col)
-- {
-- Function.Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A);
-- }
function DrawBox(x1, y1, z1, x2, y2, z2, red, green, blue, alpha)
	return _in(0xD3A9971CADAC7252, x1, y1, z1, x2, y2, z2, red, green, blue, alpha)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function DrawDebugBox(x1, y1, z1, x2, y2, z2, r, g, b, a)
	return _in(0x083A2CA4F2E573BD, x1, y1, z1, x2, y2, z2, r, g, b, a)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function DrawDebugCross(x, y, z, size, red, green, blue, alpha)
	return _in(0x73B1189623049839, x, y, z, size, red, green, blue, alpha)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function DrawDebugLine(x1, y1, z1, x2, y2, z2, r, g, b, a)
	return _in(0x7FDFADE676AA3CB0, x1, y1, z1, x2, y2, z2, r, g, b, a)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function DrawDebugLineWithTwoColours(x1, y1, z1, x2, y2, z2, r1, g1, b1, r2, g2, b2, alpha1, alpha2)
	return _in(0xD8B9A8AC5608FF94, x1, y1, z1, x2, y2, z2, r1, g1, b1, r2, g2, b2, alpha1, alpha2)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function DrawDebugSphere(x, y, z, radius, red, green, blue, alpha)
	return _in(0xAAD68E1AB39DA632, x, y, z, radius, red, green, blue, alpha)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function DrawDebugText(text, x, y, z, red, green, blue, alpha)
	return _in(0x3903E216620488E8, _ts(text), x, y, z, red, green, blue, alpha)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function DrawDebugText_2d(text, x, y, z, red, green, blue, alpha)
	return _in(0xA3BB2E9555C05A8F, _ts(text), x, y, z, red, green, blue, alpha)
end

--- Draws a gizmo. This function supports SDK infrastructure and is not intended to be used directly from your code.
-- This should be used from JavaScript or another language supporting mutable buffers like ArrayBuffer.
-- Matrix layout is as follows:
-- *   Element \[0], \[1] and \[2] should represent the right vector.
-- *   Element \[4], \[5] and \[6] should represent the forward vector.
-- *   Element \[8], \[9] and \[10] should represent the up vector.
-- *   Element \[12], \[13] and \[14] should represent X, Y and Z translation coordinates.
-- *   All other elements should be \[0, 0, 0, 1].
-- @param matrixPtr A mutable pointer to a 64-byte buffer of floating-point values, representing an XMFLOAT4X4 in layout.
-- @param id A unique identifier of what the gizmo is affecting.
-- @return Whether or not the matrix was modified.
function DrawGizmo(matrixPtr, id)
	return _in(0xeb2edca2, matrixPtr, _ts(id), _r)
end

--- Similar to [\_DRAW_SPRITE](#\_0xE7FFAE5EBF23D890), but seems to be some kind of "interactive" sprite, at least used by render targets.
-- These seem to be the only dicts ever requested by this native:
-- ```
-- prop_screen_biker_laptop
-- Prop_Screen_GR_Disruption
-- Prop_Screen_TaleOfUs
-- prop_screen_nightclub
-- Prop_Screen_IE_Adhawk
-- prop_screen_sm_free_trade_shipping
-- prop_screen_hacker_truck
-- MPDesktop
-- Prop_Screen_Nightclub
-- And a few others
-- ```
-- @param textureDict Name of texture dictionary to load texture from
-- @param textureName Name of texture to load from texture dictionary
-- @param screenX Screen X
-- @param screenY Screen Y
-- @param width Scale X
-- @param height Scale Y
-- @param heading Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
-- @param red Color
-- @param green Color
-- @param blue Color
-- @param alpha Opacity level
function DrawInteractiveSprite(textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha)
	return _in(0x2BC54A8188768488, _ts(textureDict), _ts(textureName), screenX, screenY, width, height, heading, red, green, blue, alpha)
end
N_0x2bc54a8188768488 = DrawInteractiveSprite

function DrawLightWithRange(posX, posY, posZ, colorR, colorG, colorB, range, intensity)
	return _in(0xF2A1B2771A01DBD4, posX, posY, posZ, colorR, colorG, colorB, range, intensity)
end

function DrawLightWithRangeAndShadow(x, y, z, r, g, b, range, intensity, shadow)
	return _in(0xF49E9A9716A04595, x, y, z, r, g, b, range, intensity, shadow)
end
DrawLightWithRangeWithShadow = DrawLightWithRangeAndShadow

--- Draws a depth-tested line from one point to another.
-- ----------------
-- x1, y1, z1 : Coordinates for the first point
-- x2, y2, z2 : Coordinates for the second point
-- r, g, b, alpha : Color with RGBA-Values
-- I recommend using a predefined function to call this.
-- [VB.NET]
-- Public Sub DrawLine(from As Vector3, [to] As Vector3, col As Color)
-- [Function].Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, [to].X, [to].Y, [to].Z, col.R, col.G, col.B, col.A)
-- End Sub
-- [C#]
-- public void DrawLine(Vector3 from, Vector3 to, Color col)
-- {
-- Function.Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, to.X, to.Y, to.Z, col.R, col.G, col.B, col.A);
-- }
function DrawLine(x1, y1, z1, x2, y2, z2, red, green, blue, alpha)
	return _in(0x6B7256074AE34680, x1, y1, z1, x2, y2, z2, red, green, blue, alpha)
end

function DrawLowQualityPhotoToPhone(p0, p1)
	return _in(0x1072F115DAB0717E, p0, p1)
end
N_0x1072f115dab0717e = DrawLowQualityPhotoToPhone

--- Draws a marker with the specified appearance at the target location. This has to be called every frame, e.g. in a `Wait(0)` loop.
-- There's a [list of markers](https://docs.fivem.net/game-references/markers/) on the FiveM documentation site.
-- @param type The marker type to draw.
-- @param posX The X coordinate to draw the marker at.
-- @param posY The Y coordinate to draw the marker at.
-- @param posZ The Z coordinate to draw the marker at.
-- @param dirX The X component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.
-- @param dirY The Y component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.
-- @param dirZ The Z component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.
-- @param rotX The X rotation for the marker. Only used if the direction vector is 0.0.
-- @param rotY The Y rotation for the marker. Only used if the direction vector is 0.0.
-- @param rotZ The Z rotation for the marker. Only used if the direction vector is 0.0.
-- @param scaleX The scale for the marker on the X axis.
-- @param scaleY The scale for the marker on the Y axis.
-- @param scaleZ The scale for the marker on the Z axis.
-- @param red The red component of the marker color, on a scale from 0-255.
-- @param green The green component of the marker color, on a scale from 0-255.
-- @param blue The blue component of the marker color, on a scale from 0-255.
-- @param alpha The alpha component of the marker color, on a scale from 0-255.
-- @param bobUpAndDown Whether or not the marker should slowly animate up/down.
-- @param faceCamera Whether the marker should be a 'billboard', as in, should constantly face the camera.
-- @param p19 Typically set to `2`. Does not seem to matter directly.
-- @param rotate Rotations only apply to the heading.
-- @param textureDict A texture dictionary to draw the marker with, or NULL. Example: 'GolfPutting'
-- @param textureName A texture name in `textureDict` to draw the marker with, or NULL. Example: 'PuttingMarker'
-- @param drawOnEnts Whether or not the marker should draw on intersecting entities.
function DrawMarker(type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, textureDict, textureName, drawOnEnts)
	return _in(0x28477EC23D892089, type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, _ts(textureDict), _ts(textureName), drawOnEnts)
end

--- NativeDB Added Parameter 26: BOOL p25
function DrawMarker_2(type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, textureDict, textureName, drawOnEnts, p24)
	return _in(0xE82728F0DE75D13A, type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, _ts(textureDict), _ts(textureName), drawOnEnts, p24)
end
N_0xe82728f0de75d13a = DrawMarker_2

--- x/y/z - Location of a vertex (in world coords), presumably.
-- ----------------
-- x1, y1, z1     : Coordinates for the first point
-- x2, y2, z2     : Coordinates for the second point
-- x3, y3, z3     : Coordinates for the third point
-- r, g, b, alpha : Color with RGBA-Values
-- Keep in mind that only one side of the drawn triangle is visible: It's the side, in which the vector-product of the vectors heads to: (b-a)x(c-a) Or (b-a)x(c-b).
-- But be aware: The function seems to work somehow differently. I have trouble having them drawn in rotated orientation. Try it yourself and if you somehow succeed, please edit this and post your solution.
-- I recommend using a predefined function to call this.
-- [VB.NET]
-- Public Sub DrawPoly(a As Vector3, b As Vector3, c As Vector3, col As Color)
-- [Function].Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A)
-- End Sub
-- [C#]
-- public void DrawPoly(Vector3 a, Vector3 b, Vector3 c, Color col)
-- {
-- Function.Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A);
-- }
-- BTW: Intersecting triangles are not supported: They overlap in the order they were called.
function DrawPoly(x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha)
	return _in(0xAC26716048436851, x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha)
end

--- Draws a rectangle on the screen.
-- -x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)
-- -y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)
-- -width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)
-- -height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)
-- -R: Red part of the color. (0-255)
-- -G: Green part of the color. (0-255)
-- -B: Blue part of the color. (0-255)
-- -A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)
-- The total number of rectangles to be drawn in one frame is apparently limited to 399.
-- ```
-- ```
-- NativeDB Added Parameter 9: BOOL p8
function DrawRect(x, y, width, height, r, g, b, a)
	return _in(0x3A618A217E5154F0, x, y, width, height, r, g, b, a)
end

function DrawScaleformMovie(scaleformHandle, x, y, width, height, red, green, blue, alpha, unk)
	return _in(0x54972ADAF0294A93, scaleformHandle, x, y, width, height, red, green, blue, alpha, unk)
end

--- unk is not used so no need
function DrawScaleformMovieFullscreen(scaleform, red, green, blue, alpha, unk)
	return _in(0x0DF606929C105BE1, scaleform, red, green, blue, alpha, unk)
end

function DrawScaleformMovieFullscreenMasked(scaleform1, scaleform2, red, green, blue, alpha)
	return _in(0xCF537FDE4FBD4CE5, scaleform1, scaleform2, red, green, blue, alpha)
end

function DrawScaleformMovie_3d(scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, sharpness, p9, scaleX, scaleY, scaleZ, p13)
	return _in(0x87D51D72255D4E78, scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, sharpness, p9, scaleX, scaleY, scaleZ, p13)
end
N_0x87d51d72255d4e78 = DrawScaleformMovie_3d

function DrawScaleformMovie_3dSolid(scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, p8, p9, scaleX, scaleY, scaleZ, p13)
	return _in(0x1CE592FDC749D6F5, scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, p8, p9, scaleX, scaleY, scaleZ, p13)
end
N_0x1ce592fdc749d6f5 = DrawScaleformMovie_3dSolid
DrawScaleformMovie_3dNonAdditive = DrawScaleformMovie_3dSolid

--- It's called after 0xD3A10FC7FD8D98CD and 0xF1CEA8A4198D8E9A
-- p0 was always "CELEBRATION_WINNER"
function DrawShowroom(p0, ped, p2, posX, posY, posZ)
	return _in(0x98C4FE6EC34154CA, _ts(p0), ped, p2, posX, posY, posZ, _r)
end
N_0x98c4fe6ec34154ca = DrawShowroom

--- Draws a 3D sphere, typically seen in the GTA:O freemode event "Penned In".
-- Example [image](https://imgur.com/nCbtS4H):
-- ```lua
-- DrawSphere(35.45, 172.66, 126.22, 1.0, 0, 0, 255, 0.2)
-- ```
-- @param x X coordinate of the sphere
-- @param y Y coordinate of the sphere
-- @param z Z coordinate of the sphere
-- @param radius Size of the sphere, `1.0` = 1 meter
-- @param r Color red `0`-`255`
-- @param g Color green `0`-`255`
-- @param b Color blue `0`-`255`
-- @param opacity Opacity from `0.0`-`1.0`
function DrawSphere(x, y, z, radius, r, g, b, opacity)
	return _in(0x799017F9E3B10112, x, y, z, radius, r, g, b, opacity)
end
N_0x799017f9e3b10112 = DrawSphere

--- Parameters:
-- * pos - coordinate where the spotlight is located
-- * dir - the direction vector the spotlight should aim at from its current position
-- * r,g,b - color of the spotlight
-- * distance - the maximum distance the light can reach
-- * brightness - the brightness of the light
-- * roundness - "smoothness" of the circle edge
-- * radius - the radius size of the spotlight
-- * falloff - the falloff size of the light's edge (example: www.i.imgur.com/DemAWeO.jpg)
-- Example in C# (spotlight aims at the closest vehicle):
-- Vector3 myPos = Game.Player.Character.Position;
-- Vehicle nearest = World.GetClosestVehicle(myPos , 1000f);
-- Vector3 destinationCoords = nearest.Position;
-- Vector3 dirVector = destinationCoords - myPos;
-- dirVector.Normalize();
-- Function.Call(Hash.DRAW_SPOT_LIGHT, pos.X, pos.Y, pos.Z, dirVector.X, dirVector.Y, dirVector.Z, 255, 255, 255, 100.0f, 1f, 0.0f, 13.0f, 1f);
function DrawSpotLight(posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, hardness, radius, falloff)
	return _in(0xD0F64B265C8C8B33, posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, hardness, radius, falloff)
end

function DrawSpotLightWithShadow(posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, roundness, radius, falloff, shadowId)
	return _in(0x5BCA583A583194DB, posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, roundness, radius, falloff, shadowId)
end

--- Draws a 2D sprite on the screen.
-- Parameters:
-- textureDict - Name of texture dictionary to load texture from (e.g. "CommonMenu", "MPWeaponsCommon", etc.)
-- textureName - Name of texture to load from texture dictionary (e.g. "last_team_standing_icon", "tennis_icon", etc.)
-- screenX/Y - Screen offset (0.5 = center)
-- scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)
-- heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
-- red,green,blue - Sprite color (default = 255/255/255)
-- alpha - opacity level
-- ```
-- ```
-- NativeDB Added Parameter 12: BOOL p11
function DrawSprite(textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha)
	return _in(0xE7FFAE5EBF23D890, _ts(textureDict), _ts(textureName), screenX, screenY, width, height, heading, red, green, blue, alpha)
end

--- Used for drawling Deadline trailing lights, see deadline.ytd
-- For UVW mapping (u,v,w parameters), reference your favourite internet resource for more details.
function DrawSpritePoly(x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha, textureDict, textureName, u1, v1, w1, u2, v2, w2, u3, v3, w3)
	return _in(0x29280002282F1928, x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha, _ts(textureDict), _ts(textureName), u1, v1, w1, u2, v2, w2, u3, v3, w3)
end
N_0x29280002282f1928 = DrawSpritePoly

--- Used for drawling Deadline trailing lights, see deadline.ytd
-- Each vertex has its own colour that is blended/illuminated on the texture. Additionally, the R, G, and B components are floats that are int-casted internally.
-- For UVW mapping (u,v,w parameters), reference your favourite internet resource for more details.
function DrawSpritePoly_2(x1, y1, z1, x2, y2, z2, x3, y3, z3, red1, green1, blue1, alpha1, red2, green2, blue2, alpha2, red3, green3, blue3, alpha3, textureDict, textureName, u1, v1, w1, u2, v2, w2, u3, v3, w3)
	return _in(0x736D7AA1B750856B, x1, y1, z1, x2, y2, z2, x3, y3, z3, red1, green1, blue1, alpha1, red2, green2, blue2, alpha2, red3, green3, blue3, alpha3, _ts(textureDict), _ts(textureName), u1, v1, w1, u2, v2, w2, u3, v3, w3)
end
N_0x736d7aa1b750856b = DrawSpritePoly_2

--- Similar to DRAW_SPRITE, but allows to specify the texture coordinates used to draw the sprite.
-- u1, v1 - texture coordinates for the top-left corner
-- u2, v2 - texture coordinates for the bottom-right corner
-- ```
-- NativeDB Introduced: v1868
-- ```
function DrawSpriteUv(textureDict, textureName, x, y, width, height, u1, v1, u2, v2, heading, red, green, blue, alpha)
	return _in(0x95812F9B26074726, _ts(textureDict), _ts(textureName), x, y, width, height, u1, v1, u2, v2, heading, red, green, blue, alpha)
end

--- All calls to this native are preceded by calls to GRAPHICS::_0x61BB1D9B3A95D802 and GRAPHICS::_0xC6372ECD45D73BCD, respectively.
-- "act_cinema.ysc", line 1483:
-- HUD::SET_HUD_COMPONENT_POSITION(15, 0.0, -0.0375);
-- HUD::SET_TEXT_RENDER_ID(l_AE);
-- GRAPHICS::_0x61BB1D9B3A95D802(4);
-- GRAPHICS::_0xC6372ECD45D73BCD(1);
-- if (GRAPHICS::_0x0AD973CA1E077B60(${movie_arthouse})) {
-- GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 0.7375, 1.0, 0.0, 255, 255, 255, 255);
-- } else {
-- GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);
-- }
-- "am_mp_property_int.ysc", line 102545:
-- if (ENTITY::DOES_ENTITY_EXIST(a_2._f3)) {
-- if (HUD::IS_NAMED_RENDERTARGET_LINKED(ENTITY::GET_ENTITY_MODEL(a_2._f3))) {
-- HUD::SET_TEXT_RENDER_ID(a_2._f1);
-- GRAPHICS::_0x61BB1D9B3A95D802(4);
-- GRAPHICS::_0xC6372ECD45D73BCD(1);
-- GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);
-- if (GRAPHICS::GET_TV_CHANNEL() == -1) {
-- sub_a8fa5(a_2, 1);
-- } else {
-- sub_a8fa5(a_2, 1);
-- GRAPHICS::ATTACH_TV_AUDIO_TO_ENTITY(a_2._f3);
-- }
-- HUD::SET_TEXT_RENDER_ID(HUD::GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID());
-- }
-- }
function DrawTvChannel(xPos, yPos, xScale, yScale, rotation, red, green, blue, alpha)
	return _in(0xFDDC2B4ED3C69DF0, xPos, yPos, xScale, yScale, rotation, red, green, blue, alpha)
end

function DropAmbientProp(ped)
	return _in(0xAFF4710E2A0A6C12, ped)
end
N_0xaff4710e2a0a6c12 = DropAmbientProp

function DuplicateFunctionReference(referenceIdentity)
	return _in(0xf4e2079d, _ts(referenceIdentity), _s)
end

function EjectJb700Roof(vehicle, x, y, z)
	return _in(0xE38CB9D7D39FDBCC, vehicle, x, y, z)
end
N_0xe38cb9d7d39fdbcc = EjectJb700Roof

--- Creates a motion-blur sort of effect, this native does not seem to work, however by using the [`START_SCREEN_EFFECT`](#\_0x2206BF9A37B7F724) native with `"DrugsMichaelAliensFight"` as the effect parameter, you should be able to get the effect.
-- This native does not seem to work, however by using the [START_SCREEN_EFFECT](https://runtime.fivem.net/doc/natives/#\_0x2206BF9A37B7F724) native with "DrugsMichaelAliensFight" as the effect parameter, you should be able to get the effect.
function EnableAlienBloodVfx(toggle)
	return _in(0x9DCE1F0F78260875, toggle)
end
N_0x9dce1f0f78260875 = EnableAlienBloodVfx

--- padIndex:
-- 0 - PLAYER_CONTROL
-- 1 - Unknown
-- 2 - FRONTEND_CONTROL
-- @param padIndex The control system instance to use.
function EnableAllControlActions(padIndex)
	return _in(0xA5FFE9B05F199DE7, padIndex)
end

--- Creates cartoon effect when Michel smokes the weed
function EnableClownBloodVfx(toggle)
	return _in(0xD821490579791273, toggle)
end
SetCameraEndtime = EnableClownBloodVfx

--- control values and meaning: github.com/crosire/scripthookvdotnet/blob/dev_v3/source/scripting/Control.cs
-- and
-- https://docs.fivem.net/game-references/controls/
-- 0, 1 and 2 used in the scripts.
-- Control values from the decompiled scripts:
-- 0,1,2,3,4,5,6,8,9,10,11,14,15,16,17,19,21,22,24,25,26,30,31,32,33,34,35,36,
-- 37,44,46,47,59,60,65,68,69,70,71,72,73,74,75,76,79,80,81,82,86,95,98,99,100
-- ,101,114,140,141,143,172,173,174,175,176,177,178,179,180,181,187,188,189,19
-- 0,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,217,218,219,2
-- 20,221,225,228,229,230,231,234,235,236,237,238,239,240,241,242,245,246,257,
-- 261,262,263,264,286,287,288,289,337,338,339,340,341,342,343
-- INPUTGROUP_MOVE
-- INPUTGROUP_LOOK
-- INPUTGROUP_WHEEL
-- INPUTGROUP_CELLPHONE_NAVIGATE
-- INPUTGROUP_CELLPHONE_NAVIGATE_UD
-- INPUTGROUP_CELLPHONE_NAVIGATE_LR
-- INPUTGROUP_FRONTEND_DPAD_ALL
-- INPUTGROUP_FRONTEND_DPAD_UD
-- INPUTGROUP_FRONTEND_DPAD_LR
-- INPUTGROUP_FRONTEND_LSTICK_ALL
-- INPUTGROUP_FRONTEND_RSTICK_ALL
-- INPUTGROUP_FRONTEND_GENERIC_UD
-- INPUTGROUP_FRONTEND_GENERIC_LR
-- INPUTGROUP_FRONTEND_GENERIC_ALL
-- INPUTGROUP_FRONTEND_BUMPERS
-- INPUTGROUP_FRONTEND_TRIGGERS
-- INPUTGROUP_FRONTEND_STICKS
-- INPUTGROUP_SCRIPT_DPAD_ALL
-- INPUTGROUP_SCRIPT_DPAD_UD
-- INPUTGROUP_SCRIPT_DPAD_LR
-- INPUTGROUP_SCRIPT_LSTICK_ALL
-- INPUTGROUP_SCRIPT_RSTICK_ALL
-- INPUTGROUP_SCRIPT_BUMPERS
-- INPUTGROUP_SCRIPT_TRIGGERS
-- INPUTGROUP_WEAPON_WHEEL_CYCLE
-- INPUTGROUP_FLY
-- INPUTGROUP_SUB
-- INPUTGROUP_VEH_MOVE_ALL
-- INPUTGROUP_CURSOR
-- INPUTGROUP_CURSOR_SCROLL
-- INPUTGROUP_SNIPER_ZOOM_SECONDARY
-- INPUTGROUP_VEH_HYDRAULICS_CONTROL
-- Took those in IDA Pro.Not sure in which order they go
function EnableControlAction(padIndex, control, enable)
	return _in(0x351220255D64C155, padIndex, control, enable)
end

--- Shows the crosshair even if it wouldn't show normally. Only works for one frame, so make sure to call it repeatedly.
function EnableCrosshairThisFrame()
	return _in(0xEA7F0AD7E9BA676F)
end

--- List of dispatch services:
-- ```cpp
-- enum DispatchType
-- {
-- DT_Invalid = 0,
-- DT_PoliceAutomobile,
-- DT_PoliceHelicopter,
-- DT_FireDepartment,
-- DT_SwatAutomobile,
-- DT_AmbulanceDepartment,
-- DT_PoliceRiders,
-- DT_PoliceVehicleRequest,
-- DT_PoliceRoadBlock,
-- DT_PoliceAutomobileWaitPulledOver,
-- DT_PoliceAutomobileWaitCruising,
-- DT_Gangs,
-- DT_SwatHelicopter,
-- DT_PoliceBoat,
-- DT_ArmyVehicle,
-- DT_BikerBackup = 15
-- };
-- ```
function EnableDispatchService(dispatchService, toggle)
	return _in(0xDC0F817884CDD856, dispatchService, toggle)
end
N_0xdc0f817884cdd856 = EnableDispatchService

--- Enables the editor runtime mode, changing game behavior to track entity metadata.
-- This function supports SDK infrastructure and is not intended to be used directly from your code.
function EnableEditorRuntime()
	return _in(0xc383871d)
end

--- ENABLE_*
function EnableEntityUnk(entity)
	return _in(0x6CE177D014502E8A, entity)
end
N_0x6ce177d014502e8a = EnableEntityUnk

--- This is the native that is used to hide the exterior of GTA Online apartment buildings when you are inside an apartment.
function EnableExteriorCullModelThisFrame(mapObjectHash)
	return _in(0xA97F257D0151A6AB, _ch(mapObjectHash))
end
N_0xa97f257d0151a6ab = EnableExteriorCullModelThisFrame
HideMapObjectThisFrame = EnableExteriorCullModelThisFrame

--- Enables laser sight on any weapon.
-- It doesn't work. Neither on tick nor OnKeyDown
function EnableLaserSightRendering(toggle)
	return _in(0xC8B46D7727D864AA, toggle)
end

function EnableMovieKeyframeWait(toggle)
	return _in(0x74C180030FDE4B69, toggle)
end
N_0x74c180030fde4b69 = EnableMovieKeyframeWait

function EnableMovieSubtitles(toggle)
	return _in(0x873FA65C778AD970, toggle)
end

function EnableSavingInGarage(garageHash, toggle)
	return _in(0xF2E1A7133DD356A6, _ch(garageHash), toggle)
end
N_0xf2e1a7133dd356a6 = EnableSavingInGarage

function EnableScriptBrainSet(brainSet)
	return _in(0x67AA4D73F0CFA86B, brainSet)
end

function EnableScriptCullModelThisFrame(mapObjectHash)
	return _in(0x50C375537449F369, _ch(mapObjectHash))
end
N_0x50c375537449f369 = EnableScriptCullModelThisFrame

--- NativeDB Added Parameter 3: Any p2
function EnableSpecialAbility(player, toggle)
	return _in(0x181EC197DAEFE121, player, toggle)
end

function EnableStallWarningSounds(vehicle, toggle)
	return _in(0xC15907D667F7CFB2, vehicle, toggle)
end
N_0xc15907d667f7cfb2 = EnableStallWarningSounds

function EnableStuntJumpSet(p0)
	return _in(0xE369A5783B866016, p0)
end

function EnableSwitchPauseBeforeDescent()
	return _in(0xD4793DFF3AF2ABCD)
end
N_0xd4793dff3af2abcd = EnableSwitchPauseBeforeDescent

--- Makes the ped jump around like they're in a tennis match
function EnableTennisMode(ped, toggle, p2)
	return _in(0x28A04B411933F8A6, ped, toggle, p2)
end

--- Sets whether the vehicle passed has exhaust pops.
-- @param toggle Enables or disables exaust pops.
function EnableVehicleExhaustPops(vehicle, toggle)
	return _in(0x2BE4BC731D039D5A, vehicle, toggle)
end
N_0x2be4bc731d039d5a = EnableVehicleExhaustPops

function EndFindKvp(handle)
	return _in(0xb3210203, handle)
end

function EndFindObject(findHandle)
	return _in(0xdeda4e50, findHandle)
end

function EndFindPed(findHandle)
	return _in(0x9615c2ad, findHandle)
end

function EndFindPickup(findHandle)
	return _in(0x3c407d53, findHandle)
end

function EndFindVehicle(findHandle)
	return _in(0x9227415a, findHandle)
end

function EndPetrolTrailDecals()
	return _in(0x0A123435A26C36CD)
end
N_0x0a123435a26c36cd = EndPetrolTrailDecals

function EndReplayStats()
	return _in(0xA23E821FBDF8A5F2)
end

--- Pops and calls the Scaleform function on the stack
function EndScaleformMovieMethod()
	return _in(0xC6796A8FFA375E53)
end
PopScaleformMovieFunctionVoid = EndScaleformMovieMethod

function EndScaleformMovieMethodReturnValue()
	return _in(0xC50AA39A577AF886, _ri)
end
PopScaleformMovieFunction = EndScaleformMovieMethodReturnValue
EndScaleformMovieMethodReturn = EndScaleformMovieMethodReturnValue

--- Clear the current srl and stop rendering the area selected by PREFETCH_SRL and started with BEGIN_SRL.
function EndSrl()
	return _in(0x0A41540E63C9EE17)
end

--- enum eBusySpinnerType
-- {
-- BUSY_SPINNER_LEFT,
-- BUSY_SPINNER_LEFT_2,
-- BUSY_SPINNER_LEFT_3,
-- BUSY_SPINNER_SAVE,
-- BUSY_SPINNER_RIGHT,
-- };
function EndTextCommandBusyspinnerOn(busySpinnerType)
	return _in(0xBD12F8228410D9B4, busySpinnerType)
end
N_0xbd12f8228410d9b4 = EndTextCommandBusyspinnerOn
ShowLoadingPrompt = EndTextCommandBusyspinnerOn
EndTextCommandBusyString = EndTextCommandBusyspinnerOn

function EndTextCommandClearPrint()
	return _in(0xFCC75460ABA29378)
end
N_0xfcc75460aba29378 = EndTextCommandClearPrint

function EndTextCommandDisplayHelp(shape, loop, beep, duration)
	return _in(0x238FFE5C7B0498A6, shape, loop, beep, duration)
end
DisplayHelpTextFromStringLabel = EndTextCommandDisplayHelp

--- After applying the properties to the text (See UI::SET_TEXT_), this will draw the text in the applied position. Also 0.0f < x, y < 1.0f, percentage of the axis.
-- ```
-- ```
-- NativeDB Added Parameter 3: int p2
function EndTextCommandDisplayText(x, y)
	return _in(0xCD015E5BB0D96A57, x, y)
end
DrawText = EndTextCommandDisplayText

--- END_TEXT_COMMAND_*
-- In scripts font most of the time is passed as 1.
-- Use _BEGIN_TEXT_GET_COMMAND_GET_WIDTH
-- param is not font from what i've tested
function EndTextCommandGetWidth(p0)
	return _in(0x85F061DA64ED2F67, p0, _rf)
end
GetTextScreenWidth = EndTextCommandGetWidth

function EndTextCommandIsMessageDisplayed()
	return _in(0x8A9BA1AB3E237613, _r)
end
N_0x8a9ba1ab3e237613 = EndTextCommandIsMessageDisplayed

function EndTextCommandIsThisHelpMessageBeingDisplayed(p0)
	return _in(0x10BDDBFC529428DD, p0, _r)
end
N_0x10bddbfc529428dd = EndTextCommandIsThisHelpMessageBeingDisplayed

--- END_TEXT_COMMAND_*
-- Determines how many lines the text string will use when drawn on screen.
-- Must use 0x521FB041D93DD0E4 for setting up
function EndTextCommandLineCount(x, y)
	return _in(0x9040DFB09BE75706, x, y, _ri)
end
N_0x9040dfb09be75706 = EndTextCommandLineCount
GetTextScreenLineCount = EndTextCommandLineCount
EndTextCommandGetLineCount = EndTextCommandLineCount

function EndTextCommandObjective(p0)
	return _in(0xCFDBDF5AE59BA0F4, p0)
end
N_0xcfdbdf5ae59ba0f4 = EndTextCommandObjective

function EndTextCommandOverrideButtonText(buttonIndex)
	return _in(0xA86911979638106F, buttonIndex)
end
N_0xa86911979638106f = EndTextCommandOverrideButtonText
EndTextCommandTimer = EndTextCommandOverrideButtonText

--- Draws the subtitle at middle center of the screen.
-- int duration = time in milliseconds to show text on screen before disappearing
-- drawImmediately = If true, the text will be drawn immediately, if false, the text will be drawn after the previous subtitle has finished
-- Used to be known as _DRAW_SUBTITLE_TIMED
function EndTextCommandPrint(duration, drawImmediately)
	return _in(0x9D77056A530643F6, duration, drawImmediately)
end
DrawSubtitleTimed = EndTextCommandPrint

function EndTextCommandScaleformString()
	return _in(0x362E2D3FE93A9959)
end
EndTextComponent = EndTextCommandScaleformString

--- Same as END_TEXT_COMMAND_SCALEFORM_STRING but does not perform HTML conversion for text tokens.
function EndTextCommandScaleformString_2()
	return _in(0xAE4E8157D9ECF087)
end
N_0xae4e8157d9ecf087 = EndTextCommandScaleformString_2

--- Finalizes a text command started with [`BEGIN_TEXT_COMMAND_SET_BLIP_NAME`](#\_0xF9113A30DE5C6670), setting the name
-- of the specified blip.
-- @param blip The blip to change the name for.
function EndTextCommandSetBlipName(blip)
	return _in(0xBC38B49BCB83BC9B, blip)
end

--- Shows an "award" notification above the minimap, lua example result:
-- ![](https://i.imgur.com/e2DNaKX.png)
-- Old description:
-- ```
-- Example:
-- UI::_SET_NOTIFICATION_TEXT_ENTRY("HUNT");
-- UI::_0xAA295B6F28BD587D("Hunting", "Hunting_Gold_128", 0, 109, "HUD_MED_UNLKED");
-- ```
-- @param textureDict The texture dictionary name for the icon on the left.
-- @param textureName The texture name for the icon on the left.
-- @param rpBonus The gained "RP" amount that will be displayed on the right side of the notification.
-- @param colorOverlay Hudcolor overlay that gets applied on top of the notification, conflicts with text/image visibility in most cases if set to something other than 0.
-- @param titleLabel The label that will be displayed at the top of the notification (title).
-- @return The notification handle.
function EndTextCommandThefeedPostAward(textureDict, textureName, rpBonus, colorOverlay, titleLabel)
	return _in(0xAA295B6F28BD587D, _ts(textureDict), _ts(textureName), rpBonus, colorOverlay, _ts(titleLabel), _ri)
end
N_0xaa295b6f28bd587d = EndTextCommandThefeedPostAward
DrawNotificationIcon = EndTextCommandThefeedPostAward
DrawNotificationAward = EndTextCommandThefeedPostAward

function EndTextCommandThefeedPostCrewRankup(chTitle, clanTxd, clanTxn, isImportant, showSubtitle)
	return _in(0x8EFCCF6EC66D85E4, _ts(chTitle), _ts(clanTxd), _ts(clanTxn), isImportant, showSubtitle, _ri)
end
N_0x8efccf6ec66d85e4 = EndTextCommandThefeedPostCrewRankup

--- This function and the one below it are for after you receive an invite, not sending it.
-- p0 = 1 or 0
-- nothin doin.
-- int invite(Player player)
-- {
-- int iVar2, iVar3;
-- networkHandleMgr handle;
-- NETWORK_HANDLE_FROM_PLAYER(player, &handle.netHandle, 13);
-- networkClanMgr clan;
-- char *playerName = GET_PLAYER_NAME(player);
-- _SET_NOTIFICATION_TEXT_ENTRY("STRING");
-- _SET_NOTIFACTION_COLOR_NEXT(0);
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
-- if (NETWORK_CLAN_PLAYER_GET_DESC(&clan, 35, &handle.netHandle))
-- {
-- iVar2 = 0;
-- if (ARE_STRINGS_EQUAL(clan.unk22, "Leader") && clan.unk30 == 0)
-- {
-- iVar2 = 1;
-- }
-- if (clan.unk21 > 0)
-- {
-- iVar3 = 0;
-- }
-- else
-- {
-- iVar3 = 1;
-- }
-- BOOL unused = _0x54E79E9C(&clan.clanHandle, 35);
-- return _DRAW_NOTIFICATION_APARTMENT_INVITE(iVar3, 0 /*unused*/, &clan.unk17, clan.unk30, iVar2, 0, clan.clanHandle, 0, 0, 0);
-- }
-- }
function EndTextCommandThefeedPostCrewtag(crewTypeIsPrivate, crewTagContainsRockstar, rank, hasFounderStatus, isImportant, clanHandle, r, g, b)
	return _in(0x97C9E4E7024A8F2C, crewTypeIsPrivate, crewTagContainsRockstar, _i, rank, hasFounderStatus, isImportant, clanHandle, r, g, b, _ri)
end
N_0x97c9e4e7024a8f2c = EndTextCommandThefeedPostCrewtag
NotificationSendApartmentInvite = EndTextCommandThefeedPostCrewtag
DrawNotificationApartmentInvite = EndTextCommandThefeedPostCrewtag

--- p0 = 1 or 0
-- crashes my game...
-- this is for sending invites to network players - jobs/apartment/ect...
-- return notification handle
-- int invite(Player player)
-- {
-- networkHandleMgr netHandle;
-- networkClanMgr clan;
-- char *playerName = GET_PLAYER_NAME(player);
-- _SET_NOTIFICATION_TEXT_ENTRY("STRING");
-- _SET_NOTIFACTION_COLOR_NEXT(1);
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
-- NETWORK_HANDLE_FROM_PLAYER(player, &netHandle.netHandle, 13);
-- if (NETWORK_CLAN_PLAYER_IS_ACTIVE(&netHandle.netHandle))
-- {
-- NETWORK_CLAN_PLAYER_GET_DESC(&clan.clanHandle, 35, &netHandle.netHandle);
-- _DRAW_NOTIFICATION_CLAN_INVITE(0, _0x54E79E9C(&clan.clanHandle, 35), &clan.unk17, clan.isLeader, 0, 0, clan.clanHandle, playerName, 0, 0, 0);
-- }
-- }
function EndTextCommandThefeedPostCrewtagWithGameName(crewTypeIsPrivate, crewTagContainsRockstar, rank, isLeader, isImportant, clanHandle, gamerStr, r, g, b)
	return _in(0x137BC35589E34E1E, crewTypeIsPrivate, crewTagContainsRockstar, _i, rank, isLeader, isImportant, clanHandle, _ts(gamerStr), r, g, b, _ri)
end
N_0x137bc35589e34e1e = EndTextCommandThefeedPostCrewtagWithGameName
NotificationSendClanInvite = EndTextCommandThefeedPostCrewtagWithGameName
DrawNotificationClanInvite = EndTextCommandThefeedPostCrewtagWithGameName

--- Sets some extra options for a notification. It adds an image (or icon type) and sets a notification title (sender) and subtitle (subject).
-- Texture dictionary and texture name parameters are usually the same exact value.
-- Example result:
-- ![](https://i.imgur.com/LviutDl.png)
-- Old description with list of possible icons and texture names:
-- ```
-- List of picNames: pastebin.com/XdpJVbHz
-- flash is a bool for fading in.
-- iconTypes:
-- 1 : Chat Box
-- 2 : Email
-- 3 : Add Friend Request
-- 4 : Nothing
-- 5 : Nothing
-- 6 : Nothing
-- 7 : Right Jumping Arrow
-- 8 : RP Icon
-- 9 : $ Icon
-- "sender" is the very top header. This can be any old string.
-- "subject" is the header under the sender.
-- ```
-- @param textureDict The texture dictionary for the icon.
-- @param textureName The texture name for the icon.
-- @param flash Flash, doesn't seem to work no matter what.
-- @param iconType The icon type, see the list in the description below.
-- @param sender The notification title.
-- @param subject The notification subtitle.
-- @return The notification handle.
function EndTextCommandThefeedPostMessagetext(textureDict, textureName, flash, iconType, sender, subject)
	return _in(0x1CCD9A37359072CF, _ts(textureDict), _ts(textureName), flash, iconType, _ts(sender), _ts(subject), _ri)
end
SetNotificationMessage = EndTextCommandThefeedPostMessagetext

--- This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
-- Needs more research.
-- Only one type of usage in the scripts:
-- HUD::\_C6F580E4C94926AC("CHAR_ACTING_UP", "CHAR_ACTING_UP", 0, 0, "DI_FEED_CHAR", a\_0);
function EndTextCommandThefeedPostMessagetextGxtEntry(txdName, textureName, flash, iconType, sender, subject)
	return _in(0xC6F580E4C94926AC, _ts(txdName), _ts(textureName), flash, iconType, _ts(sender), _ts(subject), _ri)
end
N_0xc6f580e4c94926ac = EndTextCommandThefeedPostMessagetextGxtEntry
SetNotificationMessage_3 = EndTextCommandThefeedPostMessagetextGxtEntry
EndTextCommandThefeedPostMessagetextEntry = EndTextCommandThefeedPostMessagetextGxtEntry

--- NOTE: 'duration' is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
-- Example, only occurrence in the scripts:
-- ```
-- v_8 = UI::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 0, 0, &v_9, "", a_5);
-- ```
-- Example result:
-- ![](https://i.imgur.com/YrN4Bcm.png)
function EndTextCommandThefeedPostMessagetextTu(picTxd, picTxn, flash, iconType, nameStr, subtitleStr, duration)
	return _in(0x1E6611149DB3DB6B, _ts(picTxd), _ts(picTxn), flash, iconType, _ts(nameStr), _ts(subtitleStr), duration, _ri)
end
N_0x1e6611149db3db6b = EndTextCommandThefeedPostMessagetextTu
SetNotificationMessage_4 = EndTextCommandThefeedPostMessagetextTu

--- List of picNames pastebin.com/XdpJVbHz
-- flash is a bool for fading in.
-- iconTypes:
-- 1 : Chat Box
-- 2 : Email
-- 3 : Add Friend Request
-- 4 : Nothing
-- 5 : Nothing
-- 6 : Nothing
-- 7 : Right Jumping Arrow
-- 8 : RP Icon
-- 9 : $ Icon
-- "sender" is the very top header. This can be any old string.
-- "subject" is the header under the sender.
-- "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
-- "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
function EndTextCommandThefeedPostMessagetextWithCrewTag(picTxd, picTxn, flash, iconType, nameStr, subtitleStr, duration, crewPackedStr)
	return _in(0x5CBF7BADE20DB93E, _ts(picTxd), _ts(picTxn), flash, iconType, _ts(nameStr), _ts(subtitleStr), duration, _ts(crewPackedStr), _ri)
end
SetNotificationMessageClanTag = EndTextCommandThefeedPostMessagetextWithCrewTag

--- List of picNames: pastebin.com/XdpJVbHz
-- flash is a bool for fading in.
-- iconTypes:
-- 1 : Chat Box
-- 2 : Email
-- 3 : Add Friend Request
-- 4 : Nothing
-- 5 : Nothing
-- 6 : Nothing
-- 7 : Right Jumping Arrow
-- 8 : RP Icon
-- 9 : $ Icon
-- "sender" is the very top header. This can be any old string.
-- "subject" is the header under the sender.
-- "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
-- "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
-- iconType2 is a mirror of iconType. It shows in the "subject" line, right under the original iconType.
-- int IconNotification(char *text, char *text2, char *Subject)
-- {
-- _SET_NOTIFICATION_TEXT_ENTRY("STRING");
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
-- _SET_NOTIFICATION_MESSAGE_CLAN_TAG_2("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 1, 7, text2, Subject, 1.0f, "__EXAMPLE", 7);
-- return _DRAW_NOTIFICATION(1, 1);
-- }
function EndTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon(picTxd, picTxn, flash, iconType1, nameStr, subtitleStr, duration, crewPackedStr, iconType2, textColor)
	return _in(0x531B84E7DA981FB6, _ts(picTxd), _ts(picTxn), flash, iconType1, _ts(nameStr), _ts(subtitleStr), duration, _ts(crewPackedStr), iconType2, textColor, _ri)
end
SetNotificationMessageClanTag_2 = EndTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon

function EndTextCommandThefeedPostMpticker(blink, bHasTokens)
	return _in(0xF020C96915705B3A, blink, bHasTokens, _ri)
end
DrawNotification_4 = EndTextCommandThefeedPostMpticker

--- returns a notification handle, prints out a notification like below:
-- type range: 0
-- if you set type to 1, image goes from 0 - 39 - Xbox you can add text to
-- example:
-- UI::_0xD202B92CBF1D816F(1, 20, "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");
function EndTextCommandThefeedPostReplayIcon(eType, iIcon, sTitle)
	return _in(0xD202B92CBF1D816F, eType, iIcon, _ts(sTitle), _ri)
end
N_0xd202b92cbf1d816f = EndTextCommandThefeedPostReplayIcon
DrawNotificationWithIcon = EndTextCommandThefeedPostReplayIcon

--- returns a notification handle, prints out a notification like below:
-- type range: 0 - 2
-- if you set type to 1, button accepts "~INPUT_SOMETHING~"
-- example:
-- HUD::_0xDD6CB2CCE7C2735C(1, "~INPUT_TALK~", "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");
-- - imgur.com/UPy0Ial
-- Examples from the scripts:
-- l_D1[1/*1*/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
-- l_D1[2/*1*/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_SAVE_REPLAY_CLIP~","");
-- l_D1[1/*1*/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
-- l_D1[2/*1*/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING_SECONDARY~","");
function EndTextCommandThefeedPostReplayInput(type, button, text)
	return _in(0xDD6CB2CCE7C2735C, type, _ts(button), _ts(text), _ri)
end
N_0xdd6cb2cce7c2735c = EndTextCommandThefeedPostReplayInput
DrawNotificationWithButton = EndTextCommandThefeedPostReplayInput

--- [List of picture names](https://pastebin.com/XdpJVbHz)
-- Example result:
-- ![](https://i.imgur.com/SdEZ22m.png)
-- @return The notification handle.
function EndTextCommandThefeedPostStats(statTitle, iconEnum, stepVal, barValue, isImportant, picTxd, picTxn)
	return _in(0x2B7E9A4EAAA93C89, _ts(statTitle), iconEnum, stepVal, barValue, isImportant, _ts(picTxd), _ts(picTxn), _ri)
end
N_0x2b7e9a4eaaa93c89 = EndTextCommandThefeedPostStats
SetNotificationMessage_2 = EndTextCommandThefeedPostStats

--- Example output preview:
-- ![](https://i.imgur.com/TJvqkYq.png)
-- @param isImportant Makes the notification flash on the screen.
-- @param bHasTokens Makes the notification appear in the "Pause Menu > Info/Brief > Notifications" section.
-- @return The notification handle.
function EndTextCommandThefeedPostTicker(isImportant, bHasTokens)
	return _in(0x2ED7843F8F801023, isImportant, bHasTokens, _ri)
end
DrawNotification = EndTextCommandThefeedPostTicker

function EndTextCommandThefeedPostTickerForced(blink, bHasTokens)
	return _in(0x44FA03975424A0EE, blink, bHasTokens, _ri)
end
DrawNotification_2 = EndTextCommandThefeedPostTickerForced

function EndTextCommandThefeedPostTickerWithTokens(isImportant, bHasTokens)
	return _in(0x378E809BF61EC840, isImportant, bHasTokens, _ri)
end
DrawNotification_3 = EndTextCommandThefeedPostTickerWithTokens

function EndTextCommandThefeedPostUnlock(chTitle, iconType, chSubtitle)
	return _in(0x33EE12743CCD6343, _ts(chTitle), iconType, _ts(chSubtitle), _ri)
end
N_0x33ee12743ccd6343 = EndTextCommandThefeedPostUnlock

function EndTextCommandThefeedPostUnlockTu(chTitle, iconType, chSubtitle, isImportant)
	return _in(0xC8F3AAF93D0600BF, _ts(chTitle), iconType, _ts(chSubtitle), isImportant, _ri)
end
N_0xc8f3aaf93d0600bf = EndTextCommandThefeedPostUnlockTu

function EndTextCommandThefeedPostUnlockTuWithColor(chTitle, iconType, chSubtitle, isImportant, titleColor, p5)
	return _in(0x7AE0589093A2E088, _ts(chTitle), iconType, _ts(chSubtitle), isImportant, titleColor, p5, _ri)
end
N_0x7ae0589093a2e088 = EndTextCommandThefeedPostUnlockTuWithColor

--- NativeDB Added Parameter 7: int hudColorIndex1
-- NativeDB Added Parameter 8: int hudColorIndex2
function EndTextCommandThefeedPostVersusTu(ch1TXD, ch1TXN, val1, ch2TXD, ch2TXN, val2)
	return _in(0xB6871B0555B02996, _ts(ch1TXD), _ts(ch1TXN), val1, _ts(ch2TXD), _ts(ch2TXN), val2, _ri)
end
N_0xb6871b0555b02996 = EndTextCommandThefeedPostVersusTu

--- Internal function for ensuring an entity has a state bag.
function EnsureEntityStateBag(entity)
	return _in(0x3bb78f05, entity)
end

--- Enters cursor mode, suppressing mouse movement to the game and displaying a mouse cursor instead. This function supports
-- SDK infrastructure and is not intended to be used directly from your code.
function EnterCursorMode()
	return _in(0x780da86)
end

function ExecuteCommand(commandString)
	return _in(0x561c060b, _ts(commandString))
end

--- This native is not implemented.
function ExperimentalLoadCloneCreate(data, objectId, tree)
	return _in(0xd2cb95a3, _ts(data), objectId, _ts(tree), _ri)
end

--- This native is not implemented.
function ExperimentalLoadCloneSync(entity, data)
	return _in(0x6bc189ac, entity, _ts(data))
end

--- This native is not implemented.
function ExperimentalSaveCloneCreate(entity)
	return _in(0x9d65cad2, entity, _s)
end

--- This native is not implemented.
function ExperimentalSaveCloneSync(entity)
	return _in(0x38d19210, entity, _s)
end

--- Forces the ped to fall back and kills it.
-- It doesn't really explode the ped's head but it kills the ped
function ExplodePedHead(ped, weaponHash)
	return _in(0x2D05CED3A38D0F3A, ped, _ch(weaponHash))
end

--- WEAPON::EXPLODE_PROJECTILES(PLAYER::PLAYER_PED_ID(), func_221(0x00000003), 0x00000001);
function ExplodeProjectiles(ped, weaponHash, p2)
	return _in(0xFC4BD125DE7611E4, ped, _ch(weaponHash), p2)
end

--- Explodes a selected vehicle.
-- Vehicle vehicle = Vehicle you want to explode.
-- BOOL isAudible = If explosion makes a sound.
-- BOOL isInvisible = If the explosion is invisible or not.
-- First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.
function ExplodeVehicle(vehicle, isAudible, isInvisible)
	return _in(0xBA71116ADF5B514C, vehicle, isAudible, isInvisible)
end

function ExplodeVehicleInCutscene(vehicle, p1)
	return _in(0x786A4EB67B01BF0B, vehicle, p1)
end

--- Appears only 3 times in the scripts, more specifically in michael1.ysc
-- -
-- This can be used to prevent dying if you are "out of the world"
function ExtendWorldBoundaryForPlayer(x, y, z)
	return _in(0x5006D96C995A5827, x, y, z)
end
N_0x5006d96c995a5827 = ExtendWorldBoundaryForPlayer
ExpandWorldLimits = ExtendWorldBoundaryForPlayer

function FacebookDoUnkCheck()
	return _in(0xA75E2B6733DA5142, _r)
end
N_0xa75e2b6733da5142 = FacebookDoUnkCheck

function FacebookIsAvailable()
	return _in(0x43865688AE10F0D7, _r)
end
N_0x43865688ae10f0d7 = FacebookIsAvailable

function FacebookIsSendingData()
	return _in(0x62B9FEC9A11F10EF, _r)
end
N_0x62b9fec9a11f10ef = FacebookIsSendingData

function FacebookSetCreateCharacterComplete()
	return _in(0xDC48473142545431, _r)
end
N_0xdc48473142545431 = FacebookSetCreateCharacterComplete

function FacebookSetHeistComplete(heistName, cashEarned, xpEarned)
	return _in(0x098AB65B9ED9A9EC, _ts(heistName), cashEarned, xpEarned, _r)
end
N_0x098ab65b9ed9a9ec = FacebookSetHeistComplete

--- milestoneId:
-- 0 = "percentcomplete"
-- 1 = "storycomplete"
-- 2 = "vehicles"
-- 3 = "properties"
-- 4 = "psych"
-- 5 = "mapreveal"
-- 6 = "prologue"
function FacebookSetMilestoneComplete(milestoneId)
	return _in(0x0AE1F1653B554AB9, milestoneId, _r)
end
N_0x0ae1f1653b554ab9 = FacebookSetMilestoneComplete

function FadeDecalsInRange(x, y, z, radius, duration)
	return _in(0xD77EDADB0420E6E0, x, y, z, radius, duration)
end

--- Hardcoded to not work in SP.
function FadeOutLocalPlayer(p0)
	return _in(0x416DBD4CD6ED8DD2, p0)
end

function FadeUpPedLight(p0)
	return _in(0xC9B18B4619F48F7B, p0)
end
N_0xc9b18b4619f48f7b = FadeUpPedLight

function FilloutPmPlayerList(p1, p2)
	return _in(0xCBBD7C4991B64809, _i, p1, p2, _r)
end

function FilloutPmPlayerListWithNames(p2, p3)
	return _in(0x716B6DB9D1886106, _i, _i, p2, p3, _r)
end

function FinalizeHeadBlend(ped)
	return _in(0x4668D80430D6C299, ped)
end
N_0x4668d80430d6c299 = FinalizeHeadBlend

--- ```
-- In the script "player_scene_t_bbfight.c4":
-- "if (ENTITY::FIND_ANIM_EVENT_PHASE(&l_16E, &l_19F[v_4/*16*/], v_9, &v_A, &v_B))"
-- -- &l_16E (p0) is requested as an anim dictionary earlier in the script.
-- -- &l_19F[v_4/*16*/] (p1) is used in other natives in the script as the "animation" param.
-- -- v_9 (p2) is instantiated as "victim_fall"; I'm guessing that's another anim
-- --v_A and v_B (p3 & p4) are both set as -1.0, but v_A is used immediately after this native for:
-- "if (v_A < ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(...))"
-- Both v_A and v_B are seemingly used to contain both Vector3's and floats, so I can't say what either really is other than that they are both output parameters. p4 looks more like a *Vector3 though
-- -alphazolam
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function FindAnimEventPhase(animDictionary, animName, p2)
	return _in(0x07F1BE2BCCAA27A7, _ts(animDictionary), _ts(animName), _ts(p2), _i, _i, _r)
end

function FindFirstObject(outEntity)
	return _in(0xfaa6cb5d, _ii(outEntity) --[[ may be optional ]], _ri)
end

function FindFirstPed(outEntity)
	return _in(0xfb012961, _ii(outEntity) --[[ may be optional ]], _ri)
end

function FindFirstPickup(outEntity)
	return _in(0x3ff9d340, _ii(outEntity) --[[ may be optional ]], _ri)
end

function FindFirstVehicle(outEntity)
	return _in(0x15e55694, _ii(outEntity) --[[ may be optional ]], _ri)
end

function FindKvp(handle)
	return _in(0xbd7bebc5, handle, _s)
end

function FindNextObject(findHandle, outEntity)
	return _in(0x4e129dbf, findHandle, _ii(outEntity) --[[ may be optional ]], _r)
end

function FindNextPed(findHandle, outEntity)
	return _in(0xab09b548, findHandle, _ii(outEntity) --[[ may be optional ]], _r)
end

function FindNextPickup(findHandle, outEntity)
	return _in(0x4107ef0f, findHandle, _ii(outEntity) --[[ may be optional ]], _r)
end

function FindNextVehicle(findHandle, outEntity)
	return _in(0x8839120d, findHandle, _ii(outEntity) --[[ may be optional ]], _r)
end

function FindRadioStationIndex(stationNameHash)
	return _in(0x8D67489793FF428B, stationNameHash, _ri)
end

--- Native is significantly more complicated than simply generating a random vector & length.
-- The 'point' is either 400.0 or 250.0 units away from the Ped's current coordinates; and paths into functions like rage::grcViewport\_\__IsSphereVisible.
-- ```
-- NativeDB Introduced: v1290
-- ```
function FindRandomPointInSpace(ped)
	return _in(0x8DC9675797123522, ped, _rv)
end
N_0x8dc9675797123522 = FindRandomPointInSpace

--- Finds a position ahead of the player by predicting the players next actions.
-- The positions match path finding node positions.
-- When roads diverge, the position may rapidly change between two or more positions. This is due to the engine not being certain of which path the player will take.
function FindSpawnPointInDirection(posX, posY, posZ, dirX, dirY, dirZ, distance, spawnPoint)
	return _in(0x6874E2190B0C1972, posX, posY, posZ, dirX, dirY, dirZ, distance, _v, _r)
end

--- Finds the vehicle that is carrying this entity with a handler frame.
-- The model of the entity must be prop_contr_03b_ld or the function will return 0.
function FindVehicleCarryingThisEntity(entity)
	return _in(0x375E7FC44F21C8AB, entity, _ri)
end
N_0x375e7fc44f21c8ab = FindVehicleCarryingThisEntity
GetVehicleAttachedToEntity = FindVehicleCarryingThisEntity

function FireAirDefenseWeapon(zoneId, x, y, z)
	return _in(0x44F1012B69313374, zoneId, x, y, z)
end
N_0x44f1012b69313374 = FireAirDefenseWeapon

--- See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
-- This function is coded to not work on vehicles of type: `CBike`, `Bmx`, `CBoat`, `CTrain`, and `CSubmarine`.
function FixVehicleWindow(vehicle, windowIndex)
	return _in(0x772282EBEB95E682, vehicle, windowIndex)
end

function FlagPlayerContextInTournament(toggle)
	return _in(0xCEF214315D276FD1, toggle)
end
N_0xcef214315d276fd1 = FlagPlayerContextInTournament
SetIsInTournament = FlagPlayerContextInTournament

function FlashAbilityBar(millisecondsToFlash)
	return _in(0x02CFBA0C9E9275CE, millisecondsToFlash)
end

--- adds a short flash to the Radar/Minimap
-- Usage: UI.FLASH_MINIMAP_DISPLAY
function FlashMinimapDisplay()
	return _in(0xF2DD778C22B15BDA)
end

function FlashMinimapDisplayWithColor(hudColorIndex)
	return _in(0x6B1DE27EE78E6A19, hudColorIndex)
end
N_0x6b1de27ee78e6a19 = FlashMinimapDisplayWithColor

function FlashWantedDisplay(p0)
	return _in(0xA18AFB39081B6A1F, p0)
end

function Floor(value)
	return _in(0xF34EE736CF047844, value, _ri)
end

function ForceCinematicRenderingThisUpdate(p0)
	return _in(0xA41BCD7213805AAC, p0)
end
N_0xa41bcd7213805aac = ForceCinematicRenderingThisUpdate

--- used with 1,2,8,64,128 in the scripts
function ForceCleanup(cleanupFlags)
	return _in(0xBC8983F38F78ED51, cleanupFlags)
end

--- PLAYER::FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME("pb_prostitute", 1); // Found in decompilation
function ForceCleanupForAllThreadsWithThisName(name, cleanupFlags)
	return _in(0x4C68DDDDF0097317, _ts(name), cleanupFlags)
end

function ForceCleanupForThreadWithThisId(id, cleanupFlags)
	return _in(0xF745B37630DF176B, id, cleanupFlags)
end

function ForceCloseReportugcMenu()
	return _in(0xEE4C0E6DBC6F2C6F)
end
N_0xee4c0e6dbc6f2c6f = ForceCloseReportugcMenu

function ForceCloseTextInputBox()
	return _in(0x8817605C2BA76200)
end
N_0x8817605c2ba76200 = ForceCloseTextInputBox

--- Based on carmod_shop script decompile this takes a vehicle parameter. It is called when repair is done on initial enter.
function ForceEntityAiAndAnimationUpdate(entity)
	return _in(0x40FDEDB72F8293B2, entity)
end

--- Sets the localplayer playerinfo state back to playing (State 0)
-- States are:
-- -1: "Invalid"
-- 0: "Playing"
-- 1: "Died"
-- 2: "Arrested"
-- 3: "Failed Mission"
-- 4: "Left Game"
-- 5: "Respawn"
-- 6: "In MP Cutscene"
function ForceGameStatePlaying()
	return _in(0xC0AA53F866B3134D)
end
ResetLocalplayerState = ForceGameStatePlaying

--- creates single lightning+thunder at random position
function ForceLightningFlash()
	return _in(0xF6062E089251C898)
end
CreateLightningThunder = ForceLightningFlash

function ForcePedAiAndAnimationUpdate(ped, p1, p2)
	return _in(0x2208438012482A1A, ped, p1, p2)
end
N_0x2208438012482a1a = ForcePedAiAndAnimationUpdate

--- Some motionstate hashes are
-- 0xec17e58 (standing idle), 0xbac0f10b (nothing?), 0x3f67c6af (aiming with pistol 2-h), 0x422d7a25 (stealth), 0xbd8817db, 0x916e828c
-- and those for the strings
-- "motionstate_idle", "motionstate_walk", "motionstate_run", "motionstate_actionmode_idle", and "motionstate_actionmode_walk".
-- Regarding p2, p3 and p4: Most common is 0, 0, 0); followed by 0, 1, 0); and 1, 1, 0); in the scripts. p4 is very rarely something other than 0.
-- [31/03/2017] ins1de :
-- enum MotionState
-- {
-- StopRunning = -530524,
-- StopWalking = -668482597,
-- Idle = 247561816, // 1, 1, 0
-- Idl2 = -1871534317,
-- SkyDive =-1161760501, // 0, 1, 0
-- Stealth = 1110276645,
-- Sprint = -1115154469,
-- Swim = -1855028596,
-- Unknown1 = 1063765679,
-- Unknown2 = -633298724,
-- }
function ForcePedMotionState(ped, motionStateHash, p2, p3, p4)
	return _in(0xF28965D04F570DCA, ped, _ch(motionStateHash), p2, p3, p4, _r)
end

function ForcePedToOpenParachute(ped)
	return _in(0x16E42E800B472221, ped)
end

function ForcePickupRegenerate(p0)
	return _in(0x758A5C1B3B1E1990, p0)
end
N_0x758a5c1b3b1e1990 = ForcePickupRegenerate

--- Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE.
function ForcePlaybackRecordedVehicleUpdate(vehicle, p1)
	return _in(0x1F2E4E06DEA8992B, vehicle, p1)
end
N_0x1f2e4e06dea8992b = ForcePlaybackRecordedVehicleUpdate

--- NativeDB Introduced: v2372
function ForceRadioTrackListPosition(radioStation, trackListName, milliseconds)
	return _in(0x4E0AF9114608257C, _ts(radioStation), _ts(trackListName), milliseconds)
end
N_0x4e0af9114608257c = ForceRadioTrackListPosition

function ForceRenderInGameUi(toggle)
	return _in(0xDC459CFA0CCE245B, toggle)
end
N_0xdc459cfa0cce245b = ForceRenderInGameUi

--- Forces the particular room in an interior to load incase not teleporting into the portal.
function ForceRoomForEntity(entity, interior, roomHashKey)
	return _in(0x52923C4710DD9907, entity, interior, _ch(roomHashKey))
end

function ForceRoomForGameViewport(interiorID, roomHashKey)
	return _in(0x920D853F3E17F1DA, interiorID, _ch(roomHashKey))
end
N_0x920d853f3e17f1da = ForceRoomForGameViewport

--- Forces the game snow pass to render.
-- @param enabled Whether or not to force rendering to use a snow pass.
function ForceSnowPass(enabled)
	return _in(0xe6e16170, enabled)
end

--- Exits the game and downloads a fresh social club update on next restart.
function ForceSocialClubUpdate()
	return _in(0xEB6891F03362FB12)
end

--- Doesn't actually return anything.
function ForceSonarBlipsThisFrame()
	return _in(0x1121BFA1A1A522A8, _ri)
end
N_0x1121bfa1a1a522a8 = ForceSonarBlipsThisFrame

function ForceSubmarineSurfaceMode(vehicle, toggle)
	return _in(0x33506883545AC0DF, vehicle, toggle)
end
N_0x33506883545ac0df = ForceSubmarineSurfaceMode

--- This native sets the audio of the specified vehicle to the audioName (p1).
-- Use the audioNameHash found in vehicles.meta
-- Example:
-- _SET_VEHICLE_AUDIO(veh, "ADDER");
-- The selected vehicle will now have the audio of the Adder.
-- FORCE_VEHICLE_???
function ForceVehicleEngineAudio(vehicle, audioName)
	return _in(0x4F0C413926060B38, vehicle, _ts(audioName))
end
N_0x4f0c413926060b38 = ForceVehicleEngineAudio
SetVehicleAudio = ForceVehicleEngineAudio

function FreeMemoryForHighQualityPhoto()
	return _in(0xD801CC02177FA3F1)
end
N_0xd801cc02177fa3f1 = FreeMemoryForHighQualityPhoto

function FreeMemoryForLowQualityPhoto()
	return _in(0x6A12D88881435DCA)
end
N_0x6a12d88881435dca = FreeMemoryForLowQualityPhoto

function FreeMemoryForMissionCreatorPhoto()
	return _in(0x0A46AF8A78DC5E0A)
end
N_0x0a46af8a78dc5e0a = FreeMemoryForMissionCreatorPhoto

--- Freezes or unfreezes an entity preventing its coordinates to change by the player if set to `true`. You can still change the entity position using SET_ENTITY_COORDS.
-- @param entity The entity to freeze/unfreeze.
-- @param toggle Freeze or unfreeze entity.
function FreezeEntityPosition(entity, toggle)
	return _in(0x428CA6DBD1094446, entity, toggle)
end

function FreezeMicrophone()
	return _in(0xD57AAAE0E2214D11)
end
N_0xd57aaae0e2214d11 = FreezeMicrophone

function FreezePedCameraRotation(ped)
	return _in(0xFF287323B0E2C69A, ped)
end
N_0xff287323b0e2c69a = FreezePedCameraRotation

function FreezeRadioStation(radioStation)
	return _in(0x344F393B027E38C3, _ts(radioStation))
end

--- p3 is 0 in the only game script occurrence (trevor3) but 1 doesn't seem to make a difference
-- distToNxJunction seems to be the distance in metres * 10.0f
-- direction:
-- 0 = This happens randomly during the drive for seemingly no reason but if you consider that this native is only used in trevor3, it seems to mean "Next frame, stop whatever's being said and tell the player the direction."
-- 1 = Route is being calculated or the player is going in the wrong direction
-- 2 = Please Proceed the Highlighted Route
-- 3 = In (distToNxJunction) Turn Left
-- 4 = In (distToNxJunction) Turn Right
-- 5 = In (distToNxJunction) Keep Straight
-- 6 = In (distToNxJunction) Turn Sharply To The Left
-- 7 = In (distToNxJunction) Turn Sharply To The Right
-- 8 = Route is being recalculated or the navmesh is confusing. This happens randomly during the drive but consistently at {2044.0358, 2996.6116, 44.9717} if you face towards the bar and the route needs you to turn right. In that particular case, it could be a bug with how the turn appears to be 270 deg. CCW instead of "right." Either way, this seems to be the engine saying "I don't know the route right now."
-- return value set to 0 always
function GenerateDirectionsToCoord(x, y, z, p3)
	return _in(0xF90125F1F79ECDF8, x, y, z, p3, _i, _f, _f, _ri)
end

--- For Steam.
-- Always returns 0 in retail version of the game.
-- @return Returns the progression of an achievement; 0 if the achievement cannot be progressed.
function GetAchievementProgress(achievement)
	return _in(0x1C186837D0619335, achievement, _ri)
end
N_0x1c186837d0619335 = GetAchievementProgress
GetAchievementProgression = GetAchievementProgress

--- Returns all player indices for 'active' physical players known to the client.
-- The data returned adheres to the following layout:
-- ```
-- [127, 42, 13, 37]
-- ```
-- @return An object containing a list of player indices.
function GetActivePlayers()
	return _in(0xcf143fb9, _ro)
end

--- Returns current screen resolution.
function GetActiveScreenResolution()
	return _in(0x873C9F3104101DD3, _i, _i)
end
GetScreenActiveResolution = GetActiveScreenResolution

--- https://alloc8or.re/gta5/doc/enums/eVehicleMissionType.txt
function GetActiveVehicleMissionType(vehicle)
	return _in(0x534AEBA6E5ED4CAB, vehicle, _ri)
end

--- Returns the current AI BLIP for the specified ped
function GetAiBlip(ped)
	return _in(0x56176892826A4FE8, ped, _ri)
end
N_0x56176892826a4fe8 = GetAiBlip

function GetAiBlip_2(ped)
	return _in(0x7CD934010E115C2C, ped, _ri)
end
N_0x7cd934010e115c2c = GetAiBlip_2

--- Returns all rope handles. The data returned adheres to the following layout:
-- ```
-- [ 770, 1026, 1282, 1538, 1794, 2050, 2306, 2562, 2818, 3074, 3330, 3586, 3842, 4098, 4354, 4610, ...]
-- ```
-- @return An object containing a list of all rope handles.
function GetAllRopes()
	return _in(0x760a2d67, _ro)
end

function GetAllVehicles(vehArray)
	return _in(0x9B8E1BF04B51F2E8, _ii(vehArray) --[[ may be optional ]], _ri)
end

function GetAllocatedStackSize()
	return _in(0x8B3CA62B1EF19B62, _ri)
end

--- Returns profile setting 17.
function GetAllowMovementWhileZoomed()
	return _in(0xFC859E2374407556, _r)
end
N_0xfc859e2374407556 = GetAllowMovementWhileZoomed

--- A getter for [SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME](#\_0x0B919E1FB47CC4E0).
-- @return Returns ambient ped range multiplier value.
function GetAmbientPedRangeMultiplier()
	return _in(0xb550232d, _rf)
end

--- A getter for [SET_AMBIENT_VEHICLE_RANGE_MULTIPLIER_THIS_FRAME](#\_0x90B6DA738A9A25DA).
-- @return Returns ambient vehicle range multiplier value.
function GetAmbientVehicleRangeMultiplier()
	return _in(0x667ec929, _rf)
end

function GetAmbientVoiceNameHash(ped)
	return _in(0x5E203DA2BA15D436, ped, _ri)
end
N_0x5e203da2ba15d436 = GetAmbientVoiceNameHash

function GetAmmoInClip(ped, weaponHash, ammo)
	return _in(0x2E1202248937775C, ped, _ch(weaponHash), _ii(ammo) --[[ may be optional ]], _r)
end

--- WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0)
-- From decompiled scripts
-- Returns total ammo in weapon
-- GTALua Example :
-- natives.WEAPON.GET_AMMO_IN_PED_WEAPON(plyPed, WeaponHash)
function GetAmmoInPedWeapon(ped, weaponhash)
	return _in(0x015A522136D7F951, ped, _ch(weaponhash), _ri)
end

function GetAngleBetween_2dVectors(x1, y1, x2, y2)
	return _in(0x186FC4BE848E1C92, x1, y1, x2, y2, _rf)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function GetAnimDuration(animDict, animName)
	return _in(0xFEDDF04D62B8D790, _ts(animDict), _ts(animName), _rf)
end
GetAnimDuration = GetAnimDuration

--- [Animations list](https://alexguirre.github.io/animations-list/)
function GetAnimInitialOffsetPosition(animDict, animName, x, y, z, xRot, yRot, zRot, p8, p9)
	return _in(0xBE22B26DD764C040, _ts(animDict), _ts(animName), x, y, z, xRot, yRot, zRot, p8, p9, _rv)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function GetAnimInitialOffsetRotation(animDict, animName, x, y, z, xRot, yRot, zRot, p8, p9)
	return _in(0x4B805E6046EE9E47, _ts(animDict), _ts(animName), x, y, z, xRot, yRot, zRot, p8, p9, _rv)
end

function GetAspectRatio(b)
	return _in(0xF1307EF624A80D87, b, _rf)
end
GetScreenAspectRatio = GetAspectRatio

function GetAudibleMusicTrackTextId()
	return _in(0x50B196FC9ED6545B, _ri)
end

function GetBaseElementMetadata(p3, p4)
	return _in(0xB335F761606DB47C, _i, _i, p3, p4, _r)
end
N_0xb335f761606db47c = GetBaseElementMetadata

--- Returns value of the '-benchmarkIterations' command line option.
function GetBenchmarkIterationsFromCommandLine()
	return _in(0x4750FC27570311EC, _ri)
end
N_0x4750fc27570311ec = GetBenchmarkIterationsFromCommandLine

--- Returns value of the '-benchmarkPass' command line option.
function GetBenchmarkPassFromCommandLine()
	return _in(0x1B2366C3F2A5C8DF, _ri)
end
N_0x1b2366c3f2a5c8df = GetBenchmarkPassFromCommandLine

function GetBenchmarkTime()
	return _in(0xE599A503B3837E1B, _rf)
end
N_0xe599a503b3837e1b = GetBenchmarkTime

--- p1 is always 0 in the scripts.
function GetBestPedWeapon(ped, p1)
	return _in(0x8483E98E8B888AE2, ped, p1, _ri)
end

--- In percentage: 0.0 - 100.0
-- ```
-- NativeDB Introduced: v1734
-- ```
function GetBinkMovieTime(binkMovie)
	return _in(0x8E17DDD6B9D5BF29, binkMovie, _rf)
end

function GetBitsInRange(var, rangeStart, rangeEnd)
	return _in(0x53158863FCC0893A, var, rangeStart, rangeEnd, _ri)
end

function GetBlipAlpha(blip)
	return _in(0x970F608F0EE6C885, blip, _ri)
end

function GetBlipColour(blip)
	return _in(0xDF729E8D20CF7327, blip, _ri)
end

function GetBlipCoords(blip)
	return _in(0x586AFE3FF72D996E, blip, _rv)
end

--- Returns the Blip handle of given Entity.
function GetBlipFromEntity(entity)
	return _in(0xBC8DBDCA2436F7E8, entity, _ri)
end

function GetBlipHudColour(blip)
	return _in(0x729B5F1EFBC0AAEE, blip, _ri)
end

function GetBlipInfoIdCoord(blip)
	return _in(0xFA7C7F0AADF25D09, blip, _rv)
end

function GetBlipInfoIdDisplay(blip)
	return _in(0x1E314167F701DC3B, blip, _ri)
end

function GetBlipInfoIdEntityIndex(blip)
	return _in(0x4BA4E2553AFEDC2C, blip, _ri)
end

--- This function is hard-coded to always return 0.
function GetBlipInfoIdPickupIndex(blip)
	return _in(0x9B6786E4C03DD382, blip, _ri)
end

--- Returns a value based on what the blip is attached to
-- 1 - Vehicle
-- 2 - Ped
-- 3 - Object
-- 4 - Coord
-- 5 - unk
-- 6 - Pickup
-- 7 - Radius
function GetBlipInfoIdType(blip)
	return _in(0xBE9B0959FFD0779B, blip, _ri)
end

--- NativeDB Introduced: v2060
function GetBlipRotation(blip)
	return _in(0x003E92BA477F9D7F, blip, _ri)
end
N_0x003e92ba477f9d7f = GetBlipRotation

--- Blips Images + IDs:
-- gtaxscripting.blogspot.com/2016/05/gta-v-blips-id-and-image.html
function GetBlipSprite(blip)
	return _in(0x1FC877464A04FC4F, blip, _ri)
end

function GetBoatBoomPositionRatio(vehicle)
	return _in(0x6636C535F6CC2725, vehicle, _rf)
end
N_0x6636c535f6cc2725 = GetBoatBoomPositionRatio

--- Same call as VEHICLE::_0x0F3B4D4E43177236
function GetBoatBoomPositionRatio_2(vehicle, p1)
	return _in(0xC1F981A6F74F0C23, vehicle, p1)
end
N_0xc1f981a6f74f0c23 = GetBoatBoomPositionRatio_2

function GetBoatBoomPositionRatio_3(vehicle, p1)
	return _in(0x0F3B4D4E43177236, vehicle, p1)
end
N_0x0f3b4d4e43177236 = GetBoatBoomPositionRatio_3

--- Enumerated type defined in camControlHelperMetadataViewModes:
-- ```cpp
-- enum Context {
-- ON_FOOT = 0, // [G|S]ET_FOLLOW_PED_CAM_*
-- IN_VEHICLE = 1, // [G|S]ET_FOLLOW_VEHICLE_CAM_*
-- ON_BIKE = 2,
-- IN_BOAT = 3,
-- IN_AIRCRAFT = 4,
-- IN_SUBMARINE = 5,
-- IN_HELI = 6,
-- IN_TURRET = 7,
-- }
-- ```
-- @return The active view mode context.
function GetCamActiveViewModeContext()
	return _in(0x19CAFA3C87F7C2FF, _ri)
end
N_0x19cafa3c87f7c2ff = GetCamActiveViewModeContext

function GetCamAnimCurrentPhase(cam)
	return _in(0xA10B2DB49E92A6B0, cam, _rf)
end

function GetCamCoord(cam)
	return _in(0xBAC038F7459AE5AE, cam, _rv)
end

function GetCamFarClip(cam)
	return _in(0xB60A9CFEB21CA6AA, cam, _rf)
end

function GetCamFarDof(cam)
	return _in(0x255F8DAFD540D397, cam, _rf)
end

function GetCamFov(cam)
	return _in(0xC3330A45CCCDB26A, cam, _rf)
end

--- Returns the world matrix of the specified camera. To turn this into a view matrix, calculate the inverse.
function GetCamMatrix(camera)
	return _in(0x8f57a89d, camera, _v, _v, _v, _v)
end

function GetCamNearClip(cam)
	return _in(0xC520A34DAFBF24B1, cam, _rf)
end

--- The last parameter, as in other "ROT" methods, is usually 2.
function GetCamRot(cam, rotationOrder)
	return _in(0x7D304C1C955E3E12, cam, rotationOrder, _rv)
end

function GetCamSplineNodeIndex(cam)
	return _in(0xB22B17DF858716A6, cam, _ri)
end

--- I'm pretty sure the parameter is the camera as usual, but I am not certain so I'm going to leave it as is.
function GetCamSplineNodePhase(cam)
	return _in(0xD9D0E694C8282C96, cam, _rf)
end

--- Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.
-- (returns 1.0f when no nodes has been added, reached end of non existing spline)
function GetCamSplinePhase(cam)
	return _in(0xB5349E36C546509A, cam, _rf)
end

--- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the view mode enum.
-- @param context See [`_GET_CAM_ACTIVE_VIEW_MODE_CONTEXT`](#\_0x19CAFA3C87F7C2FF).
function GetCamViewModeForContext(context)
	return _in(0xEE778F8C7E1142E2, context, _ri)
end
N_0xee778f8c7e1142e2 = GetCamViewModeForContext

--- Returns true if the vehicle has the FLAG_JUMPING_CAR flag set.
function GetCanVehicleJump(vehicle)
	return _in(0x9078C0C5EF8C19E9, vehicle, _r)
end
HasVehicleJumpingAbility = GetCanVehicleJump
DoesVehicleHaveJumpingAbility = GetCanVehicleJump

--- Gets the position of the cargobob hook, in world coords.
function GetCargobobHookPosition(cargobob)
	return _in(0xCBDB9B923CACC92D, cargobob, _rv)
end
N_0xcbdb9b923cacc92d = GetCargobobHookPosition

function GetCauseOfMostRecentForceCleanup()
	return _in(0x9A41CF4674A12272, _ri)
end

function GetCgoffset(entity)
	return _in(0x8214A4B5A7A33612, entity, _rv)
end

function GetClipSetForScriptedGunTask(p0)
	return _in(0x3A8CADC7D37AACC5, p0, _s)
end

function GetClockDayOfMonth()
	return _in(0x3D10BC92A4DB1D35, _ri)
end

--- Gets the current day of the week.
-- 0: Sunday
-- 1: Monday
-- 2: Tuesday
-- 3: Wednesday
-- 4: Thursday
-- 5: Friday
-- 6: Saturday
function GetClockDayOfWeek()
	return _in(0xD972E4BD7AEB235F, _ri)
end

--- Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)
function GetClockHours()
	return _in(0x25223CA6B4D20B7F, _ri)
end

--- Gets the current ingame clock minute.
function GetClockMinutes()
	return _in(0x13D2B8ADD79640F2, _ri)
end

function GetClockMonth()
	return _in(0xBBC72712E80257A1, _ri)
end

--- Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in GTA is only 48 minutes in real life.
function GetClockSeconds()
	return _in(0x494E97C2EF27C470, _ri)
end

function GetClockYear()
	return _in(0x961777E64BDAF717, _ri)
end

--- NativeDB Introduced: v1180
function GetClosestBlipOfType(blipSprite)
	return _in(0xD484BF71050CA1EE, blipSprite, _ri)
end
N_0xd484bf71050ca1ee = GetClosestBlipOfType

--- Returns TRUE if it found something. FALSE if not.
function GetClosestFirePos(x, y, z)
	return _in(0x352A9F6BCF90081F, _v, x, y, z, _r)
end

--- Get the closest vehicle node to a given position, unknown1 = 3.0, unknown2 = 0
function GetClosestMajorVehicleNode(x, y, z, unknown1, unknown2)
	return _in(0x2EABE3B06F58C1BE, x, y, z, _v, unknown1, unknown2, _r)
end

--- Has 8 params in the latest patches.
-- isMission - if true doesn't return mission objects
function GetClosestObjectOfType(x, y, z, radius, modelHash, isMission, p6, p7)
	return _in(0xE143FA2249364369, x, y, z, radius, _ch(modelHash), isMission, p6, p7, _ri)
end

--- Gets the closest ped in a radius.
-- Ped Types:
-- Any ped = -1
-- Player = 1
-- Male = 4
-- Female = 5
-- Cop = 6
-- Human = 26
-- SWAT = 27
-- Animal = 28
-- Army = 29
-- ------------------
-- P4 P5 P7 P8
-- 1  0  x  x  = return nearest walking Ped
-- 1  x  0  x  = return nearest walking Ped
-- x  1  1  x  = return Ped you are using
-- 0  0  x  x  = no effect
-- 0  x  0  x  = no effect
-- x = can be 1 or 0. Does not have any obvious changes.
-- This function does not return ped who is:
-- 1. Standing still
-- 2. Driving
-- 3. Fleeing
-- 4. Attacking
-- This function only work if the ped is:
-- 1. walking normally.
-- 2. waiting to cross a road.
-- Note: PED::GET_PED_NEARBY_PEDS works for more peds.
function GetClosestPed(x, y, z, radius, p4, p5, p7, p8, pedType)
	return _in(0xC33AB876A77F8164, x, y, z, radius, p4, p5, _i, p7, p8, pedType, _r)
end

--- p1 seems to be always 1.0f in the scripts
function GetClosestRoad(x, y, z, p3, p4, p10)
	return _in(0x132F52BBA570FE92, x, y, z, p3, p4, _v, _v, _i, _i, _f, p10, _ri)
end

--- Example usage
-- VEHICLE::GET_CLOSEST_VEHICLE(x, y, z, radius, hash, unknown leave at 70)
-- x, y, z: Position to get closest vehicle to.
-- radius: Max radius to get a vehicle.
-- modelHash: Limit to vehicles with this model. 0 for any.
-- flags: The bitwise flags altering the function's behaviour.
-- Does not return police cars or helicopters.
-- It seems to return police cars for me, does not seem to return helicopters, planes or boats for some reason
-- Only returns non police cars and motorbikes with the flag set to 70 and modelHash to 0. ModelHash seems to always be 0 when not a modelHash in the scripts, as stated above.
-- These flags were found in the b617d scripts: 0,2,4,6,7,23,127,260,2146,2175,12294,16384,16386,20503,32768,67590,67711,98309,100359.
-- Converted to binary, each bit probably represents a flag as explained regarding another native here: gtaforums.com/topic/822314-guide-driving-styles
-- Conversion of found flags to binary: pastebin.com/kghNFkRi
-- At exactly 16384 which is 0100000000000000 in binary and 4000 in hexadecimal only planes are returned.
-- It's probably more convenient to use worldGetAllVehicles(int *arr, int arrSize) and check the shortest distance yourself and sort if you want by checking the vehicle type with for example VEHICLE::IS_THIS_MODEL_A_BOAT
-- -------------------------------------------------------------------------
-- Conclusion: This native is not worth trying to use. Use something like this instead: pastebin.com/xiFdXa7h
-- Use flag 127 to return police cars
function GetClosestVehicle(x, y, z, radius, modelHash, flags)
	return _in(0xF73EB622C4F1689B, x, y, z, radius, _ch(modelHash), flags, _ri)
end

--- FYI: When falling through the map (or however you got under it) you will respawn when your player ped's height is <= -200.0 meters (I think you all know this) and when in a vehicle you will actually respawn at the closest vehicle node.
-- ----------
-- Vector3 nodePos;
-- GET_CLOSEST_VEHICLE_NODE(x,y,z,&nodePos,...)
-- p4 is either 0, 1 or 8. 1 means any path/road. 0 means node in the middle of the closest main (asphalt) road.
-- p5, p6 are always the same:
-- 0x40400000 (3.0), 0
-- p5 can also be 100.0 and p6 can be 2.5:
-- PATHFIND::GET_CLOSEST_VEHICLE_NODE(a_0, &v_5, v_9, 100.0, 2.5)
-- Known node types: simple path/asphalt road, only asphalt road, water, under the map at always the same coords.
-- The node types follows a pattern. For example, every fourth node is of the type water i.e. 3, 7, 11, 15, 19, 23, 27, 31, 35, 39... 239. Could not see any difference between nodes within certain types.
-- Starting at 2, every fourth node is under the map, always same coords.
-- Same with only asphalt road (0, 4, 8, etc) and simple path/asphalt road (1, 5, 9, etc).
-- gtaforums.com/topic/843561-pathfind-node-types
function GetClosestVehicleNode(x, y, z, nodeType, p5, p6)
	return _in(0x240A18690AE96513, x, y, z, _v, nodeType, p5, p6, _r)
end

--- p5, p6 and p7 seems to be about the same as p4, p5 and p6 for GET_CLOSEST_VEHICLE_NODE. p6 and/or p7 has something to do with finding a node on the same path/road and same direction(at least for this native, something to do with the heading maybe). Edit this when you find out more.
-- p5 is either 1 or 12. 1 means any path/road. 12, 8, 0 means node in the middle of the closest main (asphalt) road.
-- p6 is always 3.0
-- p7 is always 0.
-- Known node types: simple path/asphalt road, only asphalt road, water, under the map at always the same coords.
-- The node types follows a pattern. For example, every fourth node is of the type water i.e. 3, 7, 11, 15, 19, 23, 27, 31, 35, 39... 239. Could not see any difference between nodes within certain types.
-- Starting at 2, every fourth node is under the map, always same coords.
-- Same with only asphalt road (0, 4, 8, etc) and simple path/asphalt road (1, 5, 9, etc).
-- gtaforums.com/topic/843561-pathfind-node-types
-- Example of usage, moving vehicle to closest path/road:
-- Vector3 coords = ENTITY::GET_ENTITY_COORDS(playerVeh, true);
-- Vector3 closestVehicleNodeCoords;
-- float roadHeading;
-- PATHFIND::GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(coords.x, coords.y, coords.z, &closestVehicleNodeCoords, &roadHeading, 1, 3, 0);
-- ENTITY::SET_ENTITY_HEADING(playerVeh, roadHeading);
-- ENTITY::SET_ENTITY_COORDS(playerVeh, closestVehicleNodeCoords.x, closestVehicleNodeCoords.y, closestVehicleNodeCoords.z, 1, 0, 0, 1);
-- VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(playerVeh);
-- ------------------------------------------------------------------
-- C# Example (ins1de) : pastebin.com/fxtMWAHD
function GetClosestVehicleNodeWithHeading(x, y, z, nodeType, p6, p7)
	return _in(0xFF071FB798B803B0, x, y, z, _v, _f, nodeType, p6, p7, _r)
end

function GetCloudHatOpacity()
	return _in(0x20AC25E781AE4A84, _rf)
end
N_0x20ac25e781ae4a84 = GetCloudHatOpacity

--- Returns POSIX timestamp.
-- Renamed from `_GET_POSIX_TIME` to `GET_CLOUD_TIME_AS_INT` because of conflicting native names ([`0xDA488F299A5B164E`](#\_0xDA488F299A5B164E))
-- @return An int representing the cloud time.
function GetCloudTimeAsInt()
	return _in(0x9A73240B49945C76, _ri)
end
N_0x9a73240b49945c76 = GetCloudTimeAsInt

--- Same as GET_CLOUD_TIME_AS_INT but returns the value as a hex string (%I64X).
function GetCloudTimeAsString()
	return _in(0xF12E6CD06C73D69E, _s)
end
N_0xf12e6cd06c73d69e = GetCloudTimeAsString

function GetCollisionNormalOfLastHitForEntity(entity)
	return _in(0xE465D4AB7CA6AE72, entity, _rv)
end

--- p0: Ped Handle
-- p1: int i | 0 <= i <= 27
-- p1 probably refers to the attributes configured in combatbehavior.meta. There are 13. Example:
-- <BlindFireChance value="0.1"/>
-- <WeaponShootRateModifier value="1.0"/>
-- <TimeBetweenBurstsInCover value="1.25"/>
-- <BurstDurationInCover value="2.0"/>
-- <TimeBetweenPeeks value="10.0"/>
-- <WeaponAccuracy value="0.18"/>
-- <FightProficiency value="0.8"/>
-- <StrafeWhenMovingChance value="1.0"/>
-- <WalkWhenStrafingChance value="0.0"/>
-- <AttackWindowDistanceForCover value="55.0"/>
-- <TimeToInvalidateInjuredTarget value="9.0"/>
-- <TriggerChargeTime_Near value="4.0"/>
-- <TriggerChargeTime_Far value="10.0"/>
-- -------------Confirmed by editing combatbehavior.meta:
-- p1:
-- 0=BlindFireChance
-- 1=BurstDurationInCover
-- 3=TimeBetweenBurstsInCover
-- 4=TimeBetweenPeeks
-- 5=StrafeWhenMovingChance
-- 8=WalkWhenStrafingChance
-- 11=AttackWindowDistanceForCover
-- 12=TimeToInvalidateInjuredTarget
-- 16=OptimalCoverDistance
function GetCombatFloat(ped, p1)
	return _in(0x52DFF8A10508090A, ped, p1, _rf)
end

--- index2 is unused
function GetCommerceItemCat(index, index2)
	return _in(0x6F44CBF56D79FAC0, index, index2, _s)
end
N_0x6f44cbf56d79fac0 = GetCommerceItemCat

function GetCommerceItemId(index)
	return _in(0x662635855957C411, index, _s)
end
N_0x662635855957c411 = GetCommerceItemId

function GetCommerceItemName(index)
	return _in(0xB4271092CA7EDF48, index, _s)
end
N_0xb4271092ca7edf48 = GetCommerceItemName

function GetCommerceItemNumCats(index)
	return _in(0x2A7776C709904AB0, index, _ri)
end
N_0x2a7776c709904ab0 = GetCommerceItemNumCats

--- NativeDB Added Parameter 3: int p2
function GetCommerceItemTexturename(index)
	return _in(0x722F5D28B61C5EA8, index, _s)
end
N_0x722f5d28b61c5ea8 = GetCommerceItemTexturename

function GetCommerceProductPrice(index)
	return _in(0xCA94551B50B4932C, index, _s)
end
N_0xca94551b50b4932c = GetCommerceProductPrice

function GetControlGroupInstructionalButton(padIndex, controlGroup, p2)
	return _in(0x80C2FD58D720C801, padIndex, controlGroup, p2, _s)
end
N_0x80c2fd58d720c801 = GetControlGroupInstructionalButton

--- formerly called _GET_CONTROL_ACTION_NAME incorrectly
-- p2 appears to always be true.
-- p2 is unused variable in function.
-- EG:
-- GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 201, 1) /*INPUT_FRONTEND_ACCEPT (e.g. Enter button)*/
-- GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 202, 1) /*INPUT_FRONTEND_CANCEL (e.g. ESC button)*/
-- GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 51, 1) /*INPUT_CONTEXT (e.g. E button)*/
-- gtaforums.com/topic/819070-c-draw-instructional-buttons-scaleform-movie/#entry1068197378
-- 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
function GetControlInstructionalButton(padIndex, control, p2)
	return _in(0x0499D7B09FC9B407, padIndex, control, p2, _s)
end
N_0x0499d7b09fc9b407 = GetControlInstructionalButton

function GetControlNormal(padIndex, control)
	return _in(0xEC3C9B8D5327B563, padIndex, control, _rf)
end

--- Seems to return values between -1 and 1 for controls like gas and steering.
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
function GetControlUnboundNormal(padIndex, control)
	return _in(0x5B84D09CEC5209C5, padIndex, control, _rf)
end
N_0x5b84d09cec5209c5 = GetControlUnboundNormal

function GetControlValue(padIndex, control)
	return _in(0xD95E79E8686D2C27, padIndex, control, _ri)
end

function GetConvar(varName, default_)
	return _in(0x6ccd2564, _ts(varName), _ts(default_), _s)
end

function GetConvarInt(varName, default_)
	return _in(0x935c0ab2, _ts(varName), default_, _ri)
end

--- ```
-- enum RoofState
-- {
-- ROOFSTATE_UP = 0;
-- ROOFSTATE_LOWERING,
-- ROOFSTATE_DOWN,
-- ROOFSTATE_RAISING
-- };
-- ```
-- Got a "6" return value but not sure about what the value means
-- 6 -> unknown (Stopped but not fully open ?)
function GetConvertibleRoofState(vehicle)
	return _in(0xF8C397922FC03F41, vehicle, _ri)
end

function GetCoordsAndRotationOfClosestObjectOfType(x, y, z, radius, modelHash, rotationOrder)
	return _in(0x163F8B586BC95F2A, x, y, z, radius, _ch(modelHash), _v, _v, rotationOrder, _ri)
end
N_0x163f8b586bc95f2a = GetCoordsAndRotationOfClosestObjectOfType

function GetCoordsOfProjectileTypeInArea(x1, y1, z1, x2, y2, z2, projectileHash, ownedByPlayer)
	return _in(0x8D7A43EC6A5FEA45, x1, y1, z1, x2, y2, z2, _ch(projectileHash), _v, ownedByPlayer, _r)
end
N_0x8d7a43ec6a5fea45 = GetCoordsOfProjectileTypeInArea
GetIsProjectileTypeInArea = GetCoordsOfProjectileTypeInArea

function GetCoordsOfProjectileTypeWithinDistance(ped, weaponHash, distance, ownedByPlayer)
	return _in(0xDFB4138EEFED7B81, ped, _ch(weaponHash), distance, _v, ownedByPlayer, _r)
end
N_0xdfb4138eefed7b81 = GetCoordsOfProjectileTypeWithinDistance
GetProjectileNearPedCoords = GetCoordsOfProjectileTypeWithinDistance

--- if (HUD::GET_CURRENT_FRONTEND_MENU_VERSION() == joaat("fe_menu_version_empty_no_background"))
function GetCurrentFrontendMenuVersion()
	return _in(0x2309595AD6145265, _ri)
end
N_0x2309595ad6145265 = GetCurrentFrontendMenuVersion
GetCurrentFrontendMenu = GetCurrentFrontendMenuVersion

--- This native returns the currently used game's name.
-- @return The game name as a string, one of the following values: gta4, gta5, rdr3
function GetCurrentGameName()
	return _in(0xaca18ecd, _s)
end

--- 0 = american (en-US)
-- 1 = french (fr-FR)
-- 2 = german (de-DE)
-- 3 = italian (it-IT)
-- 4 = spanish (es-ES)
-- 5 = brazilian (pt-BR)
-- 6 = polish (pl-PL)
-- 7 = russian (ru-RU)
-- 8 = korean (ko-KR)
-- 9 = chinesetrad (zh-TW)
-- 10 = japanese (ja-JP)
-- 11 = mexican (es-MX)
-- 12 = chinesesimp (zh-CN)
function GetCurrentLanguage()
	return _in(0x2BDD44CC428A7EAE, _ri)
end
GetUiLanguageId = GetCurrentLanguage
GetCurrentLanguageId = GetCurrentLanguage

function GetCurrentNumberOfCloudPhotos()
	return _in(0x473151EBC762C6DA, _ri)
end
N_0x473151ebc762c6da = GetCurrentNumberOfCloudPhotos
GetNumberOfPhotos = GetCurrentNumberOfCloudPhotos
GetCurrentNumberOfPhotos = GetCurrentNumberOfCloudPhotos

function GetCurrentPedVehicleWeapon(ped, weaponHash)
	return _in(0x1017582BCD3832DC, ped, _ii(weaponHash) --[[ may be optional ]], _r)
end

--- The return value seems to indicate returns true if the hash of the weapon object weapon equals the weapon hash.
-- p2 seems to be 1 most of the time; and is not implemented.
function GetCurrentPedWeapon(ped, p2)
	return _in(0x3A87E44BB9A01D54, ped, _i, p2, _r)
end

--- NativeDB Added Parameter 2: Any p1
function GetCurrentPedWeaponEntityIndex(ped)
	return _in(0x3B390A939AF0B5FC, ped, _ri)
end

function GetCurrentPlaybackForVehicle(vehicle)
	return _in(0x42BC05C27A946054, vehicle, _ri)
end

--- Return the hash of the radio stations current track.
-- NativeDB Introduced: v1493
function GetCurrentRadioTrackName(radioStationName)
	return _in(0x34D66BC058019CE0, _ts(radioStationName), _ri)
end
N_0x34d66bc058019ce0 = GetCurrentRadioTrackName

--- Return the playback time (in milliseconds) of the radio stations current track.
-- NativeDB Introduced: v1493
function GetCurrentRadioTrackPlaybackTime(radioStationName)
	return _in(0x3E65CDE5215832C1, _ts(radioStationName), _ri)
end
N_0x3e65cde5215832c1 = GetCurrentRadioTrackPlaybackTime
GetCurrentRadioStationHash = GetCurrentRadioTrackPlaybackTime

--- Returns the name of the currently executing resource.
-- @return The name of the resource.
function GetCurrentResourceName()
	return _in(0xe5e9ebbb, _s)
end

function GetCurrentScriptedConversationLine()
	return _in(0x480357EE890C295A, _ri)
end

--- Returns the peer address of the remote game server that the user is currently connected to.
-- @return The peer address of the game server (e.g. `127.0.0.1:30120`), or NULL if not available.
function GetCurrentServerEndpoint()
	return _in(0xea11bfba, _s)
end

function GetCurrentWebpageId()
	return _in(0x01A358D9128B7A86, _ri)
end
N_0x01a358d9128b7a86 = GetCurrentWebpageId
GetActiveWebsiteId = GetCurrentWebpageId

function GetCurrentWebsiteId()
	return _in(0x97D47996FC48CBAD, _ri)
end

--- Jenkins hash probably is 0xFD8B1AC2
function GetCutFileNumSections(cutsceneName)
	return _in(0x0ABC54DE641DC0FC, _ts(cutsceneName), _ri)
end
N_0x0abc54de641dc0fc = GetCutFileNumSections

function GetCutsceneSectionPlaying()
	return _in(0x49010A6A396553D8, _ri)
end

function GetCutsceneTime()
	return _in(0xE625BEABBAFFDAB9, _ri)
end

function GetCutsceneTotalDuration()
	return _in(0xEE53B14A19E480D4, _ri)
end

function GetDeadPedPickupCoords(ped, p1, p2)
	return _in(0xCD5003B097200F36, ped, p1, p2, _rv)
end

--- NativeDB Introduced: v2372
function GetDebugCamera()
	return _in(0x77C3CEC46BE286F6, _ri)
end
N_0x77c3cec46be286f6 = GetDebugCamera

function GetDecalWashLevel(decal)
	return _in(0x323F647679A09103, decal, _rf)
end

--- Gets the aggressiveness factor of the ocean waves.
function GetDeepOceanScaler()
	return _in(0x2B2A2CC86778B619, _rf)
end
N_0x2b2a2cc86778b619 = GetDeepOceanScaler
GetWavesIntensity = GetDeepOceanScaler
GetCurrentIntensity = GetDeepOceanScaler

--- This function is hard-coded to always return 1.
function GetDefaultScriptRendertargetRenderId()
	return _in(0x52F0982D7FD156B6, _ri)
end

function GetDisabledControlNormal(padIndex, control)
	return _in(0x11E65974A982637C, padIndex, control, _rf)
end

function GetDisabledControlUnboundNormal(padIndex, control)
	return _in(0x4F8A26A890FD62FB, padIndex, control, _rf)
end
N_0x4f8a26a890fd62fb = GetDisabledControlUnboundNormal

--- Returns model name of vehicle in all caps. Needs to be displayed through localizing text natives to get proper display name.
-- -----------------------------------------------------------------------------------------------------------------------------------------
-- While often the case, this does not simply return the model name of the vehicle (which could be hashed to return the model hash). Variations of the same vehicle may also use the same display name.
-- -----------------------------------------------------------------------------------------------------------------------------------------
-- Returns "CARNOTFOUND" if the hash doesn't match a vehicle hash.
-- Using HUD::_GET_LABEL_TEXT, you can get the localized name.
function GetDisplayNameFromVehicleModel(modelHash)
	return _in(0xB215AAC32D25D019, _ch(modelHash), _s)
end

--- Returns the distance between two three-dimensional points, optionally ignoring the Z values.
-- If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.
-- Consider using this faster native instead: SYSTEM::VDIST - DVIST always takes in consideration the 3D coordinates.
-- @param x1 The X coordinate of the first point.
-- @param y1 The Y coordinate of the first point.
-- @param z1 The Z coordinate of the first point.
-- @param x2 The X coordinate of the second point.
-- @param y2 The Y coordinate of the second point.
-- @param z2 The Z coordinate of the second point.
-- @param useZ Whether or not to use the Z coordinate.
-- @return The distance between the passed points in units.
function GetDistanceBetweenCoords(x1, y1, z1, x2, y2, z2, useZ)
	return _in(0xF1B760881820C952, x1, y1, z1, x2, y2, z2, useZ, _rf)
end

--- The Second item in the struct `*(Hash *)(outData + 1)` is the vehicle hash.
-- @param dlcVehicleIndex takes a number from 0 to `GET_NUM_DLC_VEHICLES()` - 1.
-- @param outData a struct of 3 8-byte items.
-- @return A boolean value return if find or not the dlcVehicleIndex.
function GetDlcVehicleData(dlcVehicleIndex, outData)
	return _in(0x33468EDC08E371F6, dlcVehicleIndex, _ii(outData) --[[ may be optional ]], _r)
end

function GetDlcVehicleFlags(dlcVehicleIndex)
	return _in(0x5549EE11FA22FCF2, dlcVehicleIndex, _ri)
end

function GetDlcVehicleModLockHash(hash)
	return _in(0xC098810437312FFF, _ch(hash), _ri)
end
N_0xc098810437312fff = GetDlcVehicleModLockHash

--- dlcVehicleIndex is 0 to GET_NUM_DLC_VEHICLS()
function GetDlcVehicleModel(dlcVehicleIndex)
	return _in(0xECC01B7C5763333C, dlcVehicleIndex, _ri)
end

--- p0 seems to be the weapon index
-- p1 seems to be the weapon component index
-- struct DlcComponentData{
-- int attachBone;
-- int padding1;
-- int bActiveByDefault;
-- int padding2;
-- int unk;
-- int padding3;
-- int componentHash;
-- int padding4;
-- int unk2;
-- int padding5;
-- int componentCost;
-- int padding6;
-- char nameLabel[64];
-- char descLabel[64];
-- };
function GetDlcWeaponComponentData(dlcWeaponIndex, dlcWeapCompIndex, ComponentDataPtr)
	return _in(0x6CF598A2957C2BF8, dlcWeaponIndex, dlcWeapCompIndex, _ii(ComponentDataPtr) --[[ may be optional ]], _r)
end

--- Same as GET_DLC_WEAPON_COMPONENT_DATA but only works for DLC components that are available in SP.
-- ```
-- NativeDB Introduced: v2060
-- ```
function GetDlcWeaponComponentDataSp(dlcWeaponIndex, dlcWeapCompIndex, ComponentDataPtr)
	return _in(0x31D5E073B6F93CDC, dlcWeaponIndex, dlcWeapCompIndex, _ii(ComponentDataPtr) --[[ may be optional ]], _r)
end

--- dlcWeaponIndex takes a number from 0 - GET_NUM_DLC_WEAPONS() - 1.
-- struct DlcWeaponData
-- {
-- int emptyCheck; //use DLC1::_IS_DLC_DATA_EMPTY on this
-- int padding1;
-- int weaponHash;
-- int padding2;
-- int unk;
-- int padding3;
-- int weaponCost;
-- int padding4;
-- int ammoCost;
-- int padding5;
-- int ammoType;
-- int padding6;
-- int defaultClipSize;
-- int padding7;
-- char nameLabel[64];
-- char descLabel[64];
-- char desc2Label[64]; // usually "the" + name
-- char upperCaseNameLabel[64];
-- };
function GetDlcWeaponData(dlcWeaponIndex, outData)
	return _in(0x79923CD21BECE14E, dlcWeaponIndex, _ii(outData) --[[ may be optional ]], _r)
end

--- Same as GET_DLC_WEAPON_DATA but only works for DLC weapons that are available in SP.
-- ```
-- NativeDB Introduced: v2060
-- ```
function GetDlcWeaponDataSp(dlcWeaponIndex, outData)
	return _in(0x310836EE7129BA33, dlcWeaponIndex, _ii(outData) --[[ may be optional ]], _r)
end

--- NativeDB Introduced: v1604
function GetDoesVehicleHaveTombstone(vehicle)
	return _in(0x71AFB258CCED3A27, vehicle, _r)
end

--- NativeDB Introduced: v2372
function GetDriftTyresEnabled(vehicle)
	return _in(0x2F5A72430E78C8D3, vehicle, _r)
end

--- Returns the NUI window handle for a specified DUI browser object.
-- @param duiObject The DUI browser handle.
-- @return The NUI window handle, for use in e.g. CREATE_RUNTIME_TEXTURE_FROM_DUI_HANDLE.
function GetDuiHandle(duiObject)
	return _in(0x1655d41d, duiObject, _s)
end

function GetEntityAlpha(entity)
	return _in(0x5A47B3B5E63E94C6, entity, _ri)
end

--- ```
-- Returns a float value representing animation's current playtime with respect to its total playtime. This value increasing in a range from [0 to 1] and wrap back to 0 when it reach 1.
-- Example:
-- 0.000000 - mark the starting of animation.
-- 0.500000 - mark the midpoint of the animation.
-- 1.000000 - mark the end of animation.
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function GetEntityAnimCurrentTime(entity, animDict, animName)
	return _in(0x346D81500D088F42, entity, _ts(animDict), _ts(animName), _rf)
end

--- ```
-- Returns a float value representing animation's total playtime in milliseconds.
-- Example:
-- GET_ENTITY_ANIM_TOTAL_TIME(PLAYER_ID(),"amb@world_human_yoga@female@base","base_b")
-- return 20800.000000
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function GetEntityAnimTotalTime(entity, animDict, animName)
	return _in(0x50BD2730B191E360, entity, _ts(animDict), _ts(animName), _rf)
end

--- Returns entity's archetype name, if available.
-- @param entity An entity handle.
-- @return Entity's archetype name
function GetEntityArchetypeName(entity)
	return _in(0x47b870f5, entity, _s)
end

function GetEntityAttachedTo(entity)
	return _in(0x48C2BED9180FE123, entity, _ri)
end

function GetEntityAttachedToCargobob(vehicle)
	return _in(0x99093F60746708CA, vehicle, _ri)
end
N_0x99093f60746708ca = GetEntityAttachedToCargobob

function GetEntityAttachedToTowTruck(towTruck)
	return _in(0xEFEA18DCF10F8F75, towTruck, _ri)
end

function GetEntityBoneCount(entity)
	return _in(0xB328DCC3A3AA401B, entity, _ri)
end
N_0xb328dcc3a3aa401b = GetEntityBoneCount

--- Returns the index of the bone. If the bone was not found, -1 will be returned.
-- list:
-- pastebin.com/D7JMnX1g
-- BoneNames:
-- chassis,
-- windscreen,
-- seat_pside_r,
-- seat_dside_r,
-- bodyshell,
-- suspension_lm,
-- suspension_lr,
-- platelight,
-- attach_female,
-- attach_male,
-- bonnet,
-- boot,
-- chassis_dummy,	//Center of the dummy
-- chassis_Control,	//Not found yet
-- door_dside_f,	//Door left, front
-- door_dside_r,	//Door left, back
-- door_pside_f,	//Door right, front
-- door_pside_r,	//Door right, back
-- Gun_GripR,
-- windscreen_f,
-- platelight,	//Position where the light above the numberplate is located
-- VFX_Emitter,
-- window_lf,	//Window left, front
-- window_lr,	//Window left, back
-- window_rf,	//Window right, front
-- window_rr,	//Window right, back
-- engine,	//Position of the engine
-- gun_ammo,
-- ROPE_ATTATCH,	//Not misspelled. In script "finale_heist2b.c4".
-- wheel_lf,	//Wheel left, front
-- wheel_lr,	//Wheel left, back
-- wheel_rf,	//Wheel right, front
-- wheel_rr,	//Wheel right, back
-- exhaust,	//Exhaust. shows only the position of the stock-exhaust
-- overheat,	//A position on the engine(not exactly sure, how to name it)
-- misc_e,	//Not a car-bone.
-- seat_dside_f,	//Driver-seat
-- seat_pside_f,	//Seat next to driver
-- Gun_Nuzzle,
-- seat_r
-- I doubt that the function is case-sensitive, since I found a "Chassis" and a "chassis". - Just tested: Definitely not case-sensitive.
function GetEntityBoneIndexByName(entity, boneName)
	return _in(0xFB71170B7E76ACBA, entity, _ts(boneName), _ri)
end

--- Gets the world rotation of the specified bone of the specified entity.
-- This native is used in casinoroulette.c but I don't know yet what is the difference with _GET_ENTITY_BONE_ROTATION
function GetEntityBonePosition_2(entity, boneIndex)
	return _in(0x46F8696933A63C9B, entity, boneIndex, _rv)
end
N_0x46f8696933a63c9b = GetEntityBonePosition_2
GetWorldPositionOfEntityBone_2 = GetEntityBonePosition_2

--- Gets the world rotation of the specified bone of the specified entity.
function GetEntityBoneRotation(entity, boneIndex)
	return _in(0xCE6294A232D03786, entity, boneIndex, _rv)
end
N_0xce6294a232d03786 = GetEntityBoneRotation
GetWorldRotationOfEntityBone = GetEntityBoneRotation

--- Gets the local rotation of the specified bone of the specified entity.
-- ```
-- NativeDB Introduced: v1734
-- ```
function GetEntityBoneRotationLocal(entity, boneIndex)
	return _in(0xBD8D32550E5CEBFE, entity, boneIndex, _rv)
end

function GetEntityCanBeDamaged(entity)
	return _in(0xD95CC5D2AB15A09F, entity, _r)
end
N_0xd95cc5d2ab15a09f = GetEntityCanBeDamaged

function GetEntityCollisionDisabled(entity)
	return _in(0xCCF1E97BEFDAE480, entity, _r)
end
N_0xccf1e97befdae480 = GetEntityCollisionDisabled
GetEntityCollisonDisabled = GetEntityCollisionDisabled

--- Gets the current coordinates (world position) for a specified entity.
-- @param entity The entity to get the coordinates from.
-- @param alive Unused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.
-- @return The current entity coordinates.
function GetEntityCoords(entity, alive)
	return _in(0x3FEF770D40960D5A, entity, alive, _rv)
end

--- Gets the entity's forward vector.
-- @param entity The entity to get the forward vector for.
-- @return The forward vector.
function GetEntityForwardVector(entity)
	return _in(0x0A794A5A57F8DF91, entity, _rv)
end

--- Gets the X-component of the entity's forward vector.
function GetEntityForwardX(entity)
	return _in(0x8BB4EF4214E0E6D5, entity, _rf)
end

--- Gets the Y-component of the entity's forward vector.
function GetEntityForwardY(entity)
	return _in(0x866A4A5FAE349510, entity, _rf)
end

--- Returns the heading of the entity in degrees. Also know as the "Yaw" of an entity.
-- @param entity The entity to get the heading from.
-- @return The current entity heading.
function GetEntityHeading(entity)
	return _in(0xE83D4F9BA2A38914, entity, _rf)
end

--- Returns an integer value of entity's current health.
-- Example of range for ped:
-- - Player [0 to 200]
-- - Ped [100 to 200]
-- - Vehicle [0 to 1000]
-- - Object [0 to 1000]
-- Health is actually a float value but this native casts it to int.
-- In order to get the actual value, do:
-- float health = *(float *)(entityAddress + 0x280);
-- @param entity The entity to get the health from.
-- @return The current entity health.
function GetEntityHealth(entity)
	return _in(0xEEF059FAD016D209, entity, _ri)
end

function GetEntityHeight(entity, X, Y, Z, atTop, inWorldCoords)
	return _in(0x5A504562485944DD, entity, X, Y, Z, atTop, inWorldCoords, _rf)
end

--- Return height (z-dimension) above ground.
-- Example: The pilot in a titan plane is 1.844176 above ground.
-- How can i convert it to meters?
-- Everything seems to be in meters, probably this too.
function GetEntityHeightAboveGround(entity)
	return _in(0x1DD55701034110E5, entity, _rf)
end

--- Returns the transient entity index for a specified mapdata/entity pair.
-- This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param mapdata The input map data index from GET_MAPDATA_FROM_HASH_KEY.
-- @param entity The input entity handle from GET_ENTITY_MAPDATA_OWNER.
-- @return A transient (non-persistable) index to the requested entity, or -1.
function GetEntityIndexFromMapdata(mapdata, entity)
	return _in(0xee43540d, mapdata, entity, _ri)
end

function GetEntityIndexOfCutsceneEntity(cutsceneEntName, modelHash)
	return _in(0x0A2E9FDB9A8C62F6, _ts(cutsceneEntName), _ch(modelHash), _ri)
end

function GetEntityIndexOfRegisteredEntity(cutsceneEntName, modelHash)
	return _in(0xC0741A26499654CD, _ts(cutsceneEntName), _ch(modelHash), _ri)
end

--- Returns a handle to the first entity within the a circle spawned inside the 2 points from a radius.
-- @param explosionType See [`ADD_EXPLOSION`](#\_0xE3AD2BDBAEE269AC).
function GetEntityInsideExplosionArea(explosionType, x1, y1, z1, x2, y2, z2, radius)
	return _in(0x14BA4BA137AF6CEC, explosionType, x1, y1, z1, x2, y2, z2, radius, _ri)
end
GetPedInsideExplosionArea = GetEntityInsideExplosionArea

--- NativeDB Introduced: v1290
function GetEntityInsideExplosionSphere(explosionType, x, y, z, radius)
	return _in(0xB3CD51E3DB86F176, explosionType, x, y, z, radius, _ri)
end

--- Returns the LOD distance of an entity.
function GetEntityLodDist(entity)
	return _in(0x4159C2762B5791D6, entity, _ri)
end

--- Retrieves the map data and entity handles from a specific entity.
-- This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param entity An entity owned by map data.
-- @param mapdataHandle The output map data handle.
-- @param entityHandle The output entity handle.
-- @return True if successful, false if not.
function GetEntityMapdataOwner(entity)
	return _in(0xf6b815c5, entity, _i, _i, _r)
end

function GetEntityMatrix(entity)
	return _in(0xECB2FC7235A7D137, entity, _v, _v, _v, _v)
end

--- Return an integer value of entity's maximum health.
-- Example:
-- - Player = 200
function GetEntityMaxHealth(entity)
	return _in(0x15D757606D170C3C, entity, _ri)
end

--- Returns the model hash from the entity
-- @param entity The entity to get the model for.
-- @return The model hash from the entity.
function GetEntityModel(entity)
	return _in(0x9F47B058362C84B5, entity, _ri)
end

--- Gets the heading of the entity physics in degrees, which tends to be more accurate than just "GET_ENTITY_HEADING". This can be clearly seen while, for example, ragdolling a ped/player.
-- NOTE: The name and description of this native are based on independent research. If you find this native to be more suitable under a different name and/or described differently, please feel free to do so.
function GetEntityPhysicsHeading(entity)
	return _in(0x846BF6291198A71E, entity, _rf)
end
N_0x846bf6291198a71e = GetEntityPhysicsHeading

--- GET_ENTITY_*
-- Seems to return the handle of the entity's portable pickup.
-- NativeDB Introduced: v1180
function GetEntityPickup(entity, modelHash)
	return _in(0x1F922734E259BD26, entity, _ch(modelHash), _ri)
end

function GetEntityPitch(entity)
	return _in(0xD45DC2893621E1FE, entity, _rf)
end

--- Returns TRUE if it found an entity in your crosshair within range of your weapon. Assigns the handle of the target to the *entity that you pass it.
-- Returns false if no entity found.
function GetEntityPlayerIsFreeAimingAt(player, entity)
	return _in(0x2975C866E6713290, player, _ii(entity) --[[ may be optional ]], _r)
end

--- A population type, from the following enum: https://alloc8or.re/gta5/doc/enums/ePopulationType.txt
-- @param entity The entity to obtain the population type from.
-- @return A population type, from the enumeration above.
function GetEntityPopulationType(entity)
	return _in(0xF6F5161F4534EDFF, entity, _ri)
end

--- NativeDB Introduced: v1604
function GetEntityProofs(entity)
	return _in(0xBE8CD9BE829BBEBF, entity, _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _i --[[ actually bool ]], _r)
end

--- w is the correct parameter name!
function GetEntityQuaternion(entity)
	return _in(0x7B3703D2D32DFA18, entity, _f, _f, _f, _f)
end

--- Displays the current ROLL axis of the entity [-180.0000/180.0000+]
-- (Sideways Roll) such as a vehicle tipped on its side
function GetEntityRoll(entity)
	return _in(0x831E0242595560DF, entity, _rf)
end

--- ```
-- rotationOrder refers to the order yaw pitch roll is applied; value ranges from 0 to 5 and is usually *2* in scripts.
-- What you use for rotationOrder when getting must be the same as rotationOrder when setting the rotation.
-- What it returns is the yaw on the z part of the vector, which makes sense considering R* considers z as vertical. Here's a picture for those of you who don't understand pitch, yaw, and roll:
-- www.allstar.fiu.edu/aero/images/pic5-1.gif
-- ```
-- ### Rotation Orders
-- *   **0**: ZYX - Rotate around the z-axis, then the y-axis and finally the x-axis.
-- *   **1**: YZX - Rotate around the y-axis, then the z-axis and finally the x-axis.
-- *   **2**: ZXY - Rotate around the z-axis, then the x-axis and finally the y-axis.
-- *   **3**: XZY - Rotate around the x-axis, then the z-axis and finally the y-axis.
-- *   **4**: YXZ - Rotate around the y-axis, then the x-axis and finally the z-axis.
-- *   **5**: XYZ - Rotate around the x-axis, then the y-axis and finally the z-axis.
-- @param entity The entity to get the rotation for.
-- @param rotationOrder The order yaw, pitch and roll is applied. Usually 2.
-- @return A vector where the Z coordinate is the yaw.
function GetEntityRotation(entity, rotationOrder)
	return _in(0xAFBD61CC738D9EB9, entity, rotationOrder, _rv)
end

function GetEntityRotationVelocity(entity)
	return _in(0x213B91045D09B983, entity, _rv)
end

--- All ambient entities in-world seem to have the same value for the second argument (Any *script), depending on when the scripthook was activated/re-activated. I've seen numbers from ~5 to almost 70 when the value was translated with to_string. The function return value seems to always be 0.
function GetEntityScript(entity, script)
	return _in(0xA6E9C38DB51D7748, entity, _ii(script) --[[ may be optional ]], _s)
end

--- result is in meters per second
-- ------------------------------------------------------------
-- So would the conversion to mph and km/h, be along the lines of this.
-- float speed = GET_ENTITY_SPEED(veh);
-- float kmh = (speed * 3.6);
-- float mph = (speed * 2.236936);
function GetEntitySpeed(entity)
	return _in(0xD5037BA82E12416F, entity, _rf)
end

--- Relative can be used for getting speed relative to the frame of the vehicle, to determine for example, if you are going in reverse (-y speed) or not (+y speed).
function GetEntitySpeedVector(entity, relative)
	return _in(0x9A8D700A51CB7B0D, entity, relative, _rv)
end

--- Get how much of the entity is submerged.  1.0f is whole entity.
function GetEntitySubmergedLevel(entity)
	return _in(0xE81AFC1BC4CC41CE, entity, _rf)
end

--- Returns:
-- 0 = no entity
-- 1 = ped
-- 2 = vehicle
-- 3 = object
function GetEntityType(entity)
	return _in(0x8ACD366038D14505, entity, _ri)
end

function GetEntityUprightValue(entity)
	return _in(0x95EED5A694951F9F, entity, _rf)
end

function GetEntityVelocity(entity)
	return _in(0x4805D2B1D8CF94A9, entity, _rv)
end

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
function GetEntryPositionOfDoor(vehicle, doorIndex)
	return _in(0xC0572928C0ABFDA3, vehicle, doorIndex, _rv)
end

--- eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
function GetEventAtIndex(eventGroup, eventIndex)
	return _in(0xD8F66A3A60C62153, eventGroup, eventIndex, _ri)
end

--- eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
-- Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
function GetEventData(eventGroup, eventIndex, eventDataSize)
	return _in(0x2902843FCD2B2D79, eventGroup, eventIndex, _i, eventDataSize, _r)
end

--- eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
function GetEventExists(eventGroup, eventIndex)
	return _in(0x936E6168A9BCEDB5, eventGroup, eventIndex, _r)
end

--- A getter for [SET_RESOURCE_KVP_FLOAT](#\_0x9ADD2938), but for a specified resource.
-- @param resource The resource to fetch from.
-- @param key The key to fetch
-- @return A float that contains the value stored in the Kvp or nil/null if none.
function GetExternalKvpFloat(resource, key)
	return _in(0x3cc98b25, _ts(resource), _ts(key), _rf)
end

--- A getter for [SET_RESOURCE_KVP_INT](#\_0x6A2B1E8), but for a specified resource.
-- @param resource The resource to fetch from.
-- @param key The key to fetch
-- @return A int that contains the value stored in the Kvp or nil/null if none.
function GetExternalKvpInt(resource, key)
	return _in(0x12b8d689, _ts(resource), _ts(key), _ri)
end

--- A getter for [SET_RESOURCE_KVP](#\_0x21C7A35B), but for a specified resource.
-- @param resource The resource to fetch from.
-- @param key The key to fetch
-- @return A string that contains the value stored in the Kvp or nil/null if none.
function GetExternalKvpString(resource, key)
	return _in(0x9080363a, _ts(resource), _ts(key), _s)
end

function GetExtraContentPackHasBeenInstalled()
	return _in(0x8D30F648014A92B5, _r)
end
N_0x8d30f648014a92b5 = GetExtraContentPackHasBeenInstalled

--- See [`GET_TIMECYCLE_MODIFIER_INDEX`](#\_0xFDF3D97C674AFB66) for use, works the same just for the secondary timecycle modifier.
-- @return An integer representing the Timecycle modifier
function GetExtraTimecycleModifierIndex()
	return _in(0xBB0527EC6341496D, _ri)
end
N_0xbb0527ec6341496d = GetExtraTimecycleModifierIndex

function GetFakeWantedLevel()
	return _in(0x4C9296CBCD1B971E, _ri)
end
N_0x4c9296cbcd1b971e = GetFakeWantedLevel

function GetFinalRenderedCamCoord()
	return _in(0xA200EB1EE790F448, _rv)
end
GetGameplayCamCoords = GetFinalRenderedCamCoord

function GetFinalRenderedCamFarClip()
	return _in(0xDFC8CBC606FDB0FC, _rf)
end
N_0xdfc8cbc606fdb0fc = GetFinalRenderedCamFarClip
GetGameplayCamFarClip = GetFinalRenderedCamFarClip

function GetFinalRenderedCamFarDof()
	return _in(0x9780F32BCAF72431, _rf)
end
N_0x9780f32bcaf72431 = GetFinalRenderedCamFarDof
GetGameplayCamFarDof = GetFinalRenderedCamFarDof

function GetFinalRenderedCamFov()
	return _in(0x80EC114669DAEFF4, _rf)
end
N_0x80ec114669daeff4 = GetFinalRenderedCamFov

function GetFinalRenderedCamMotionBlurStrength()
	return _in(0x162F9D995753DC19, _rf)
end
N_0x162f9d995753dc19 = GetFinalRenderedCamMotionBlurStrength
GetGameplayCamFarClip_2 = GetFinalRenderedCamMotionBlurStrength

function GetFinalRenderedCamNearClip()
	return _in(0xD0082607100D7193, _rf)
end
N_0xd0082607100d7193 = GetFinalRenderedCamNearClip
GetGameplayCamNearClip = GetFinalRenderedCamNearClip

function GetFinalRenderedCamNearDof()
	return _in(0xA03502FC581F7D9B, _rf)
end
N_0xa03502fc581f7d9b = GetFinalRenderedCamNearDof
GetGameplayCamNearDof = GetFinalRenderedCamNearDof

function GetFinalRenderedCamRot(rotationOrder)
	return _in(0x5B4E4C817FCC2DFB, rotationOrder, _rv)
end
GetGameplayCamRot_2 = GetFinalRenderedCamRot

function GetFinalRenderedInWhenFriendlyFov(player)
	return _in(0x5F35F6732C3FBBA0, player, _rf)
end
N_0x5f35f6732c3fbba0 = GetFinalRenderedInWhenFriendlyFov

function GetFinalRenderedInWhenFriendlyRot(player, rotationOrder)
	return _in(0x26903D9CD1175F2C, player, rotationOrder, _rv)
end
N_0x26903d9cd1175f2c = GetFinalRenderedInWhenFriendlyRot

function GetFirstBlipInfoId(blipSprite)
	return _in(0x1BEDE233E6CD2A1F, blipSprite, _ri)
end

function GetFirstPersonAimCamZoomFactor()
	return _in(0x7EC52CC40597D170, _rf)
end
GetGameplayCamZoom = GetFirstPersonAimCamZoomFactor

function GetFocusPedOnScreen(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x89215EC747DF244A, p0, p1, p2, p3, p4, p5, p6, p7, p8, _ri)
end
N_0x89215ec747df244a = GetFocusPedOnScreen

--- cpp
-- // view mode enumeration
-- enum _0xA11D7CA8
-- {
-- THIRD_PERSON_NEAR = 0,
-- THIRD_PERSON_MEDIUM = 1,
-- THIRD_PERSON_FAR = 2,
-- CINEMATIC = 3,
-- FIRST_PERSON = 4,
-- };
-- @return Returns a value from the view mode enumeration
function GetFollowPedCamViewMode()
	return _in(0x8D4D46230B2C353A, _ri)
end

--- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
function GetFollowPedCamZoomLevel()
	return _in(0x33E6C8EFD0CD93E9, _ri)
end

--- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
function GetFollowVehicleCamViewMode()
	return _in(0xA4FF579AC0E3AAAE, _ri)
end

--- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
function GetFollowVehicleCamZoomLevel()
	return _in(0xEE82280AB767B690, _ri)
end

function GetForcedComponent(componentHash, forcedComponentIndex)
	return _in(0x6C93ED8C2F74859B, _ch(componentHash), forcedComponentIndex, _i, _i, _i)
end

function GetForcedProp(componentHash, forcedPropIndex)
	return _in(0xE1CA84EBF72E691D, _ch(componentHash), forcedPropIndex, _i, _i, _i)
end
N_0xe1ca84ebf72e691d = GetForcedProp

function GetFrameCount()
	return _in(0xFC8202EFC642E6F2, _ri)
end

--- Gets the high precision frame time of the last frame in seconds.
-- *note: the example above is way less precise.*
-- @return The frame time (in seconds) of the last frame.
function GetFrameTime()
	return _in(0x15C40837039FFAF7, _rf)
end

--- Returns the internal build number of the current game being executed.
-- Possible values:
-- *   FiveM
-- *   1604
-- *   2060
-- *   2189
-- *   2372
-- *   2545
-- *   RedM
-- *   1311
-- *   1355
-- *   1436
-- *   LibertyM
-- *   43
-- *   FXServer
-- *   0
-- @return The build number, or **0** if no build number is known.
function GetGameBuildNumber()
	return _in(0x804b9f7b, _ri)
end

--- Returns the current game being executed.
-- Possible values:
-- | Return value | Meaning                        |
-- | ------------ | ------------------------------ |
-- | `fxserver`   | Server-side code ('Duplicity') |
-- | `fivem`      | FiveM for GTA V                |
-- | `libertym`   | LibertyM for GTA IV            |
-- | `redm`       | RedM for Red Dead Redemption 2 |
-- @return The game the script environment is running in.
function GetGameName()
	return _in(0xe8eaa18b, _s)
end

--- Returns all pool handles for the given pool name; the data returned adheres to the following layout:
-- ```
-- [ 770, 1026, 1282, 1538, 1794, 2050, 2306, 2562, 2818, 3074, 3330, 3586, 3842, 4098, 4354, 4610, ...]
-- ```
-- ### Supported Pools
-- **1**: CPed\
-- **2**: CObject\
-- **3**: CVehicle\
-- **4**: CPickup
-- @return An object containing a list of all pool handles
function GetGamePool(poolname)
	return _in(0x2b9d4f50, _ts(poolname), _ro)
end

function GetGameTimer()
	return _in(0x9CD27B0045628463, _ri)
end

function GetGameplayCamCoord()
	return _in(0x14D6F5678D8F1B37, _rv)
end

function GetGameplayCamFov()
	return _in(0x65019750A0324133, _rf)
end

function GetGameplayCamRelativeHeading()
	return _in(0x743607648ADD4587, _rf)
end

function GetGameplayCamRelativePitch()
	return _in(0x3A6867B4845BEDA2, _rf)
end

--- p0 dosen't seem to change much, I tried it with 0, 1, 2:
-- 0-Pitch(X): -70.000092
-- 0-Roll(Y): -0.000001
-- 0-Yaw(Z): -43.886459
-- 1-Pitch(X): -70.000092
-- 1-Roll(Y): -0.000001
-- 1-Yaw(Z): -43.886463
-- 2-Pitch(X): -70.000092
-- 2-Roll(Y): -0.000002
-- 2-Yaw(Z): -43.886467
function GetGameplayCamRot(rotationOrder)
	return _in(0x837765A25378F0BB, rotationOrder, _rv)
end

--- Returns the ActionScript flagValue.
-- ActionScript flags are global flags that scaleforms use
-- Flags found during testing
-- 0: Returns 1 if the web_browser keyboard is open, otherwise 0
-- 1: Returns 1 if the player has clicked back twice on the opening page, otherwise 0 (web_browser)
-- 2: Returns how many links the player has clicked in the web_browser scaleform, returns 0 when the browser gets closed
-- 9: Returns the current selection on the mobile phone scaleform
-- There are 20 flags in total.
function GetGlobalActionscriptFlag(flagIndex)
	return _in(0xE3B05614DCE1D014, flagIndex, _ri)
end
N_0xe3b05614dce1d014 = GetGlobalActionscriptFlag

--- Returns pointer to an empty string.
-- GET_C*
function GetGlobalCharBuffer()
	return _in(0x24DA7D7667FD7B09, _s)
end
N_0x24da7d7667fd7b09 = GetGlobalCharBuffer

--- NativeDB Introduced: v2189
function GetGlobalWaterType()
	return _in(0xF741BD853611592D, _ri)
end

function GetGpsBlipRouteFound()
	return _in(0x869DAACBBE9FA006, _r)
end
N_0x869daacbbe9fa006 = GetGpsBlipRouteFound

function GetGpsBlipRouteLength()
	return _in(0xBBB45C3CF5C8AA85, _ri)
end
N_0xbbb45c3cf5c8aa85 = GetGpsBlipRouteLength

function GetGroundZAndNormalFor_3dCoord(x, y, z)
	return _in(0x8BDC7BFC57A81E76, x, y, z, _f, _v, _r)
end
N_0x8bdc7bfc57a81e76 = GetGroundZAndNormalFor_3dCoord
GetGroundZCoordWithOffsets = GetGroundZAndNormalFor_3dCoord

--- Bear in mind this native can only calculate the elevation when the coordinates are within the client's render distance.
-- ```
-- ```
-- NativeDB Added Parameter 6: BOOL p5
-- @param x Position on the X-axis to get ground elevation at.
-- @param y Position on the Y-axis to get ground elevation at.
-- @param z Position on the Z-axis to get ground elevation at.
-- @param groundZ The ground elevation at the specified position.
function GetGroundZFor_3dCoord(x, y, z, ignoreWater)
	return _in(0xC906A7DAB05C8D2B, x, y, z, _f, ignoreWater, _r)
end

--- NativeDB Added Parameter 6: BOOL p5
function GetGroundZFor_3dCoord_2(x, y, z, p4)
	return _in(0x9E82F0F362881B29, x, y, z, _f, p4, _r)
end
N_0x9e82f0f362881b29 = GetGroundZFor_3dCoord_2

--- p1 may be a BOOL representing whether or not the group even exists
function GetGroupSize(groupID)
	return _in(0x8DE69FE35CA09A45, groupID, _i, _i)
end

--- GET_*
function GetHasObjectFragInst(object)
	return _in(0x0C112765300C7E1E, object, _r)
end
N_0x0c112765300c7e1e = GetHasObjectFragInst
DoesEntityHaveFragInst = GetHasObjectFragInst

function GetHasRetractableWheels(vehicle)
	return _in(0xDCA174A42133F08C, vehicle, _r)
end
GetHasLowerableWheels = GetHasRetractableWheels
DoesVehicleHaveRetractableWheels = GetHasRetractableWheels

function GetHasRocketBoost(vehicle)
	return _in(0x36D782F68B309BDA, vehicle, _r)
end
HasVehicleRocketBoost = GetHasRocketBoost
DoesVehicleHaveRocketBoost = GetHasRocketBoost

--- This native converts its past string to hash. It is hashed using jenkins one at a time method.
-- @param string The string to hash.
-- @return The hash of `string`.
function GetHashKey(string)
	return _in(0xD24D37CC275948CC, _ts(string), _ri)
end

function GetHashNameForComponent(entity, componentId, drawableVariant, textureVariant)
	return _in(0x0368B3A838070348, entity, componentId, drawableVariant, textureVariant, _ri)
end

function GetHashNameForProp(entity, componentId, propIndex, propTextureIndex)
	return _in(0x5D6160275CAEC8DD, entity, componentId, propIndex, propTextureIndex, _ri)
end

--- Returns a hash representing which part of the map the given coords are located.
-- Possible return values:
-- (Hash of) city -> -289320599
-- (Hash of) countryside -> 2072609373
-- C# Example :
-- Ped player = Game.Player.Character;
-- Hash h = Function.Call<Hash>(Hash.GET_HASH_OF_MAP_AREA_AT_COORDS, player.Position.X, player.Position.Y, player.Position.Z);
function GetHashOfMapAreaAtCoords(x, y, z)
	return _in(0x7EE64D51E8498728, x, y, z, _ri)
end

function GetHashOfThisScriptName()
	return _in(0x8A1C8B1738FFE87E, _ri)
end
GetThisScriptHash = GetHashOfThisScriptName

--- dx = x1 - x2
-- dy = y1 - y2
function GetHeadingFromVector_2d(dx, dy)
	return _in(0x2FFB6B224F4B2926, dx, dy, _rf)
end

--- Returns CGameWorldHeightMap's minimum Z among all grid nodes that intersect with the specified rectangle.
function GetHeightmapBottomZForArea(x1, y1, x2, y2)
	return _in(0x3599D741C9AC6310, x1, y1, x2, y2, _rf)
end
N_0x3599d741c9ac6310 = GetHeightmapBottomZForArea

--- Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
function GetHeightmapBottomZForPosition(x, y)
	return _in(0x336511A34F2E5185, x, y, _rf)
end
N_0x336511a34f2e5185 = GetHeightmapBottomZForPosition

--- Returns CGameWorldHeightMap's maximum Z among all grid nodes that intersect with the specified rectangle.
function GetHeightmapTopZForArea(x1, y1, x2, y2)
	return _in(0x8ABE8608576D9CE3, x1, y1, x2, y2, _rf)
end
N_0x8abe8608576d9ce3 = GetHeightmapTopZForArea

--- Returns CGameWorldHeightMap's maximum Z value at specified point (grid node).
function GetHeightmapTopZForPosition(x, y)
	return _in(0x29C24BFBED8AB8FB, x, y, _rf)
end
N_0x29c24bfbed8ab8fb = GetHeightmapTopZForPosition

--- Max 1000.
-- At 0 the main rotor will stall.
function GetHeliMainRotorHealth(vehicle)
	return _in(0xE4CB7541F413D2C5, vehicle, _rf)
end
GetHeliMainRotorHealth = GetHeliMainRotorHealth

--- Max 1000.
-- At -100 both helicopter rotors will stall.
function GetHeliTailBoomHealth(vehicle)
	return _in(0xAC51915D27E4A5F7, vehicle, _rf)
end
GetHeliEngineHealth = GetHeliTailBoomHealth

--- Max 1000.
-- At 0 the tail rotor will stall.
function GetHeliTailRotorHealth(vehicle)
	return _in(0xAE8CE82A4219AC8C, vehicle, _rf)
end
GetHeliTailRotorHealth = GetHeliTailRotorHealth

--- HUD colors and their values: pastebin.com/d9aHPbXN
function GetHudColour(hudColorIndex)
	return _in(0x7C9C91AB74A0360F, hudColorIndex, _i, _i, _i, _i)
end

function GetHudComponentPosition(id)
	return _in(0x223CA69A8C4417FD, id, _rv)
end

--- World to relative screen coords
-- this world to screen will keep the text on screen. it will keep it in the screen pos
function GetHudScreenPositionFromWorldPosition(worldX, worldY, worldZ)
	return _in(0xF9904D11F1ACBEC3, worldX, worldY, worldZ, _f, _f, _r)
end
N_0xf9904d11f1acbec3 = GetHudScreenPositionFromWorldPosition
Get_2dCoordFrom_3dCoord = GetHudScreenPositionFromWorldPosition

--- NativeDB Introduced: v2372
function GetHydraulicWheelValue(vehicle, wheelId)
	return _in(0x0BB5CBDDD0F25AE3, vehicle, wheelId, _rf)
end

function GetIdOfThisThread()
	return _in(0xC30338E8088E2E21, _ri)
end

--- x1, y1, z1 -- Coords of your ped model
-- x2, y2, z2 -- Coords of the ped you want to switch to
function GetIdealPlayerSwitchType(x1, y1, z1, x2, y2, z2)
	return _in(0xB5D7B26B45720E05, x1, y1, z1, x2, y2, z2, _ri)
end

function GetIndexOfCurrentLevel()
	return _in(0xCBAD6729F7B1F4FC, _ri)
end

function GetIndexedItemInItemset(p0, p1)
	return _in(0x7A197E2521EE2BAB, p0, p1, _ri)
end

function GetInstanceId()
	return _in(0x9f1c4383, _ri)
end

--- Returns interior ID from specified coordinates. If coordinates are outside, then it returns 0.
-- Example for VB.NET
-- Dim interiorID As Integer = Native.Function.Call(Of Integer)(Hash.GET_INTERIOR_AT_COORDS, X, Y, Z)
function GetInteriorAtCoords(x, y, z)
	return _in(0xB0F7F8663821D9C3, x, y, z, _ri)
end

--- Returns the interior ID representing the requested interior at that location (if found?). The supplied interior string is not the same as the one used to load the interior.
-- Use: INTERIOR::UNPIN_INTERIOR(INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(x, y, z, interior))
-- Interior types include: "V_Michael", "V_Franklins", "V_Franklinshouse", etc.. you can find them in the scripts.
-- Not a very useful native as you could just use GET_INTERIOR_AT_COORDS instead and get the same result, without even having to specify the interior type.
function GetInteriorAtCoordsWithType(x, y, z, interiorType)
	return _in(0x05B7A89BD78797FC, x, y, z, _ts(interiorType), _ri)
end
N_0x05b7a89bd78797fc = GetInteriorAtCoordsWithType

--- Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
function GetInteriorAtCoordsWithTypehash(x, y, z, typeHash)
	return _in(0xF0F77ADB9F67E79D, x, y, z, _ch(typeHash), _ri)
end
N_0xf0f77adb9f67e79d = GetInteriorAtCoordsWithTypehash
UnkGetInteriorAtCoords = GetInteriorAtCoordsWithTypehash

function GetInteriorEntitiesExtents(interiorId)
	return _in(0x322b1192, interiorId, _f, _f, _f, _f, _f, _f)
end

function GetInteriorFromCollision(x, y, z)
	return _in(0xEC4CF9FCB29A4424, x, y, z, _ri)
end

--- Returns the handle of the interior that the entity is in. Returns 0 if outside.
function GetInteriorFromEntity(entity)
	return _in(0x2107BA504071A6BB, entity, _ri)
end

--- NativeDB Introduced: v1604
function GetInteriorFromGameplayCam()
	return _in(0xE7D267EC6CA966C3, _ri)
end
N_0xe7d267ec6ca966c3 = GetInteriorFromGameplayCam

--- Returns the group ID of the specified interior. For example, regular interiors have group 0, subway interiors have group 1. There are a few other groups too.
function GetInteriorGroupId(interior)
	return _in(0xE4A84ABF135EF91A, interior, _ri)
end

--- GET_INTERIOR_*
-- NativeDB Introduced: v1493
function GetInteriorHeading(interior)
	return _in(0xF49B58631D9E22D9, interior, _rf)
end

--- GET_INTERIOR_*
-- NativeDB Introduced: v1290
function GetInteriorInfo(interior)
	return _in(0x252BDC06B73FA6EA, interior, _v, _i)
end

function GetInteriorPortalCornerPosition(interiorId, portalIndex, cornerIndex)
	return _in(0xf772bb2c, interiorId, portalIndex, cornerIndex, _f, _f, _f)
end

function GetInteriorPortalCount(interiorId)
	return _in(0xd05bb8b1, interiorId, _ri)
end

function GetInteriorPortalEntityArchetype(interiorId, portalIndex, entityIndex)
	return _in(0x9a0e1700, interiorId, portalIndex, entityIndex, _ri)
end

function GetInteriorPortalEntityCount(interiorId, portalIndex)
	return _in(0xc68021b, interiorId, portalIndex, _ri)
end

function GetInteriorPortalEntityFlag(interiorId, portalIndex, entityIndex)
	return _in(0x9da2e811, interiorId, portalIndex, entityIndex, _ri)
end

function GetInteriorPortalEntityPosition(interiorId, portalIndex, entityIndex)
	return _in(0x9b7ab83c, interiorId, portalIndex, entityIndex, _f, _f, _f)
end

function GetInteriorPortalEntityRotation(interiorId, portalIndex, entityIndex)
	return _in(0x9f9ceb63, interiorId, portalIndex, entityIndex, _f, _f, _f, _f)
end

function GetInteriorPortalFlag(interiorId, portalIndex)
	return _in(0xc74da47c, interiorId, portalIndex, _ri)
end

function GetInteriorPortalRoomFrom(interiorId, portalIndex)
	return _in(0xaa9c141d, interiorId, portalIndex, _ri)
end

function GetInteriorPortalRoomTo(interiorId, portalIndex)
	return _in(0x3f47f0e8, interiorId, portalIndex, _ri)
end

function GetInteriorPosition(interiorId)
	return _in(0x77a435b0, interiorId, _f, _f, _f)
end

function GetInteriorRoomCount(interiorId)
	return _in(0xa2737c2c, interiorId, _ri)
end

function GetInteriorRoomExtents(interiorId, roomIndex)
	return _in(0xf9e795dd, interiorId, roomIndex, _f, _f, _f, _f, _f, _f)
end

function GetInteriorRoomFlag(interiorId, roomIndex)
	return _in(0x6b7af743, interiorId, roomIndex, _ri)
end

function GetInteriorRoomIndexByHash(interiorId, roomHash)
	return _in(0xe0ee05f8, interiorId, roomHash, _ri)
end

function GetInteriorRoomName(interiorId, roomIndex)
	return _in(0x11755df2, interiorId, roomIndex, _s)
end

function GetInteriorRoomTimecycle(interiorId, roomIndex)
	return _in(0x82ba3f88, interiorId, roomIndex, _ri)
end

function GetInteriorRotation(interiorId)
	return _in(0x5a039998, interiorId, _f, _f, _f, _f)
end

function GetInvokingResource()
	return _in(0x4d52fe5b, _s)
end

--- NativeDB Introduced: v1604
function GetIsArenaPropPhysicsDisabled(entity, p1)
	return _in(0x43C677F1E1158005, entity, p1, _r)
end
N_0x43c677f1e1158005 = GetIsArenaPropPhysicsDisabled

--- Returns true if profile setting 208 is equal to 0.
function GetIsAutoSaveOff()
	return _in(0x6E04F06094C87047, _r)
end
N_0x6e04f06094c87047 = GetIsAutoSaveOff

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
function GetIsDoorValid(vehicle, doorIndex)
	return _in(0x645F4B6E8499F632, vehicle, doorIndex, _r)
end
DoesVehicleHaveDoor = GetIsDoorValid

--- false = Any resolution < 1280x720
-- true = Any resolution >= 1280x720
function GetIsHidef()
	return _in(0x84ED31191CC5D2C9, _r)
end

--- From the driver's perspective, is the left headlight broken.
function GetIsLeftVehicleHeadlightDamaged(vehicle)
	return _in(0x5EF77C9ADD3B11A3, vehicle, _r)
end
IsHeadlightLBroken = GetIsLeftVehicleHeadlightDamaged

function GetIsLoadingScreenActive()
	return _in(0x10D0A8F259E93EC9, _r)
end

--- gadgetHash - was always 0xFBAB5776 ("GADGET_PARACHUTE").
function GetIsPedGadgetEquipped(ped, gadgetHash)
	return _in(0xF731332072F5156C, ped, _ch(gadgetHash), _r)
end

function GetIsPetrolDecalInRange(xCoord, yCoord, zCoord, radius)
	return _in(0x2F09F7976C512404, xCoord, yCoord, zCoord, radius, _r)
end
N_0x2f09f7976c512404 = GetIsPetrolDecalInRange

--- Although we don't have a jenkins hash for this one, the name is 100% confirmed.
function GetIsPlayerInAnimalForm()
	return _in(0x9689123E3F213AA5, _r)
end
N_0x9689123e3f213aa5 = GetIsPlayerInAnimalForm

function GetIsPreloadedConversationReady()
	return _in(0xE73364DB90778FFA, _r)
end
N_0xe73364db90778ffa = GetIsPreloadedConversationReady

--- From the driver's perspective, is the right headlight broken.
function GetIsRightVehicleHeadlightDamaged(vehicle)
	return _in(0xA7ECB73355EB2F20, vehicle, _r)
end
IsHeadlightRBroken = GetIsRightVehicleHeadlightDamaged

--- NativeDB Introduced: v1290
function GetIsSubmarineVehicleTransformed(vehicle)
	return _in(0xA77DC70BD689A1E5, vehicle, _r)
end

--- Task index enum: https://alloc8or.re/gta5/doc/enums/eTaskTypeIndex.txt
function GetIsTaskActive(ped, taskIndex)
	return _in(0xB0760331C7AA4155, ped, taskIndex, _r)
end

--- Returns profile setting 225.
function GetIsUsingAlternateDriveby()
	return _in(0x0F70731BACCFBB96, _r)
end
N_0x0f70731baccfbb96 = GetIsUsingAlternateDriveby

--- Returns whether this vehicle is currently disabled by an EMP mine.
-- NativeDB Introduced: v1604
function GetIsVehicleEmpDisabled(vehicle)
	return _in(0x0506ED94363AD905, vehicle, _r)
end

--- Returns true when in a vehicle, false whilst entering/exiting.
function GetIsVehicleEngineRunning(vehicle)
	return _in(0xAE31E7DF9B5B132E, vehicle, _r)
end
IsVehicleEngineOn = GetIsVehicleEngineRunning

function GetIsVehiclePrimaryColourCustom(vehicle)
	return _in(0xF095C0405307B21B, vehicle, _r)
end

--- Check if Vehicle Secondary is avaliable for customize
function GetIsVehicleSecondaryColourCustom(vehicle)
	return _in(0x910A32E7AAD2656C, vehicle, _r)
end

--- NativeDB Introduced: v1604
function GetIsVehicleShuntBoostActive(vehicle)
	return _in(0xA2459F72C14E2E8D, vehicle, _r)
end

function GetIsWaypointRecordingLoaded(name)
	return _in(0xCB4E8BE8A0063C5D, _ts(name), _r)
end

function GetIsWheelsLoweredStateActive(vehicle)
	return _in(0x1DA0DA9CB3F0C8BF, vehicle, _r)
end
N_0x1da0da9cb3f0c8bf = GetIsWheelsLoweredStateActive

--- Setting Aspect Ratio Manually in game will return:
-- false - for Narrow format Aspect Ratios (3:2, 4:3, 5:4, etc. )
-- true - for Wide format Aspect Ratios (5:3, 16:9, 16:10, etc. )
-- Setting Aspect Ratio to "Auto" in game will return "false" or "true" based on the actual set Resolution Ratio.
function GetIsWidescreen()
	return _in(0x30CF4BDA4FCB1905, _r)
end

function GetItemsetSize(x)
	return _in(0xD9127E83ABF7C631, x, _ri)
end

function GetJackTarget(ped)
	return _in(0x5486A79D9FBD342D, ped, _ri)
end

--- Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY
function GetKeyForEntityInRoom(entity)
	return _in(0x399685DB942336BC, entity, _ri)
end

--- Gets a string literal from a label name.
-- GET_F*
function GetLabelText(labelName)
	return _in(0x7B5280EBA9840C72, _ts(labelName), _s)
end

--- ```
-- Landing gear states:
-- 0: Deployed
-- 1: Closing (Retracting)
-- 3: Opening (Deploying)
-- 4: Retracted
-- 5: Broken
-- ```
-- Landing gear state 2 is never used.
-- @param vehicle The vehicle to check.
-- @return The current state of the vehicles landing gear.
function GetLandingGearState(vehicle)
	return _in(0x9B0F3DCA3DB0F4CD, vehicle, _ri)
end
GetVehicleLandingGear = GetLandingGearState

function GetLastDrivenVehicle()
	return _in(0xB2D06FAEDE65B577, _ri)
end
N_0xb2d06faede65b577 = GetLastDrivenVehicle

function GetLastMaterialHitByEntity(entity)
	return _in(0x5C3D0A935F535C4C, entity, _ri)
end

function GetLastPedInVehicleSeat(vehicle, seatIndex)
	return _in(0x83F969AA1EE2A664, vehicle, seatIndex, _ri)
end

--- Returns last vehicle that was rammed by the given vehicle using the shunt boost.
-- NativeDB Introduced: v1604
function GetLastRammedVehicle(vehicle)
	return _in(0x04F2FA6E234162F7, vehicle, _ri)
end

--- Returns the length of the string passed (much like strlen).
function GetLengthOfLiteralString(string)
	return _in(0xF030907CCBB8A9FD, _ts(string), _ri)
end

function GetLengthOfLiteralStringInBytes(string)
	return _in(0x43E4111189E54F0E, _ts(string), _ri)
end
N_0x43e4111189e54f0e = GetLengthOfLiteralStringInBytes
GetLengthOfString = GetLengthOfLiteralStringInBytes

--- Returns the string length of the string from the gxt string .
function GetLengthOfStringWithThisTextLabel(gxt)
	return _in(0x801BD273D3A23F74, _ts(gxt), _ri)
end

--- Second Param = LiveryIndex
-- example
-- int count = VEHICLE::GET_VEHICLE_LIVERY_COUNT(veh);
-- for (int i = 0; i < count; i++)
-- {
-- char* LiveryName = VEHICLE::GET_LIVERY_NAME(veh, i);
-- }
-- this example will work fine to fetch all names
-- for example for Sanchez we get
-- SANC_LV1
-- SANC_LV2
-- SANC_LV3
-- SANC_LV4
-- SANC_LV5
-- Use _GET_LABEL_TEXT, to get the localized livery name.
-- -----------
-- NOTE: You may need to set the vehicle's modKit to 0 by using this function: SET_VEHICLE_MOD_KIT() before getting the name, otherwise this native may return NULL.
-- dev-c.com/nativedb/func/info/1f2aa07f00b3217a
function GetLiveryName(vehicle, liveryIndex)
	return _in(0xB4C7A93837C91A1F, vehicle, liveryIndex, _s)
end

--- Returns the local player's targeting mode. See [`SET_PLAYER_TARGETING_MODE`](#\_0xB1906895227793F3).
function GetLocalPlayerAimState()
	return _in(0xBB41AFBBBC0A0287, _ri)
end

--- Same behavior as GET_LOCAL_PLAYER_AIM_STATE but only used on the PC version.
function GetLocalPlayerAimState_2()
	return _in(0x59B9A7AF4C95133C, _ri)
end
N_0x59b9a7af4c95133c = GetLocalPlayerAimState_2

--- Gets local system time as year, month, day, hour, minute and second.
-- Example usage:
-- int year;
-- int month;
-- int day;
-- int hour;
-- int minute;
-- int second;
-- or use std::tm struct
-- TIME::GET_LOCAL_TIME(&year, &month, &day, &hour, &minute, &second);
function GetLocalTime()
	return _in(0x50C7A99057A69748, _i, _i, _i, _i, _i, _i)
end

function GetLockonDistanceOfCurrentPedWeapon(ped)
	return _in(0x840F03E9041E2C9C, ped, _rf)
end
N_0x840f03e9041e2c9c = GetLockonDistanceOfCurrentPedWeapon
GetLockonRangeOfCurrentPedWeapon = GetLockonDistanceOfCurrentPedWeapon

function GetLodscale()
	return _in(0x0C15B0E443B2349D, _rf)
end
N_0x0c15b0e443b2349d = GetLodscale

function GetMainPlayerBlipId()
	return _in(0xDCD4EC3F419D02FA, _ri)
end

--- Will return a vehicle's manufacturer display label.
-- Returns "CARNOTFOUND" if the hash doesn't match a vehicle hash.
-- ```
-- NativeDB Introduced: v1868
-- ```
function GetMakeNameFromVehicleModel(modelHash)
	return _in(0xF7AF4F159FF99F97, _ch(modelHash), _s)
end

--- Returns the zoom level data by index from mapzoomdata.meta file.
-- @param index Zoom level index.
-- @param zoomScale fZoomScale value.
-- @param zoomSpeed fZoomSpeed value.
-- @param scrollSpeed fScrollSpeed value.
-- @param tilesX vTiles X.
-- @param tilesY vTiles Y.
-- @return A boolean indicating TRUE if the data was received successfully.
function GetMapZoomDataLevel(index)
	return _in(0x1363a998, index, _f, _f, _f, _f, _f, _r)
end

--- Retrieves the map data entity handle.
-- This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param mapDataHash A mapdata hash from `mapDataLoaded` event.
-- @param entityInternalIdx An internal entity's index.
-- @param entityHandle The output entity handle.
-- @return True if successful, false if not.
function GetMapdataEntityHandle(mapDataHash, entityInternalIdx, entityHandle)
	return _in(0x30aa6911, mapDataHash, entityInternalIdx, _ii(entityHandle) --[[ may be optional ]], _r)
end

--- Returns mapdata's entity matrix. This function supports SDK infrastructure and is not intended to be used directly from your code.
-- This should be used from JavaScript or another language supporting mutable buffers like ArrayBuffer.
-- Matrix layout is as follows:
-- *   Element \[0], \[1] and \[2] should represent the right vector.
-- *   Element \[4], \[5] and \[6] should represent the forward vector.
-- *   Element \[8], \[9] and \[10] should represent the up vector.
-- *   Element \[12], \[13] and \[14] should represent X, Y and Z translation coordinates.
-- *   All other elements should be \[0, 0, 0, 1].
-- @param mapDataHash A mapdata hash from `mapDataLoaded` event.
-- @param entityInternalIdx An internal entity's index.
-- @param matrixPtr A mutable pointer to a 64-byte buffer of floating-point values, representing an XMFLOAT4X4 in layout.
-- @return Whether or not the matrix was retrieved.
function GetMapdataEntityMatrix(mapDataHash, entityInternalIdx, matrixPtr)
	return _in(0x2c3cda93, mapDataHash, entityInternalIdx, matrixPtr, _r)
end

--- Returns the transient map data index for a specified hash.
-- This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param mapdataHandle The input map data handle.
-- @return A transient (non-persistable) index to the requested mapdata, or -1.
function GetMapdataFromHashKey(mapdataHandle)
	return _in(0xd29d8edd, _ch(mapdataHandle), _ri)
end

function GetMaxAmmo(ped, weaponHash, ammo)
	return _in(0xDC16122C7A20C933, ped, _ch(weaponHash), _ii(ammo) --[[ may be optional ]], _r)
end

function GetMaxAmmoByType(ped, ammoType, ammo)
	return _in(0x585847C5E4E11709, ped, _ch(ammoType), _ii(ammo) --[[ may be optional ]], _r)
end
N_0x585847c5e4e11709 = GetMaxAmmoByType
GetMaxAmmo_2 = GetMaxAmmoByType

--- p2 is mostly 1 in the scripts.
function GetMaxAmmoInClip(ped, weaponHash, p2)
	return _in(0xA38DCFFCEA8962FA, ped, _ch(weaponHash), p2, _ri)
end

function GetMaxNumNetworkObjects()
	return _in(0xC7BE335216B5EC7C, _ri)
end
N_0xc7be335216b5ec7c = GetMaxNumNetworkObjects

function GetMaxNumNetworkPeds()
	return _in(0x0C1F7D49C39D2289, _ri)
end
N_0x0c1f7d49c39d2289 = GetMaxNumNetworkPeds

function GetMaxNumNetworkPickups()
	return _in(0xA72835064DD63E4C, _ri)
end
N_0xa72835064dd63e4c = GetMaxNumNetworkPickups

function GetMaxNumNetworkVehicles()
	return _in(0x0AFCE529F69B21FF, _ri)
end
N_0x0afce529f69b21ff = GetMaxNumNetworkVehicles

function GetMaxRangeOfCurrentPedWeapon(ped)
	return _in(0x814C9D19DFD69679, ped, _rf)
end

--- Gets the maximum wanted level the player can get.
-- Ranges from 0 to 5.
function GetMaxWantedLevel()
	return _in(0x462E0DB9B137DC5F, _ri)
end

--- This function is hard-coded to always return 96.
function GetMaximumNumberOfCloudPhotos()
	return _in(0xDC54A7AF8B3A14EF, _ri)
end
N_0xdc54a7af8b3a14ef = GetMaximumNumberOfCloudPhotos
GetMaximumNumberOfPhotos_2 = GetMaximumNumberOfCloudPhotos

--- This function is hard-coded to always return 0.
function GetMaximumNumberOfPhotos()
	return _in(0x34D23450F028B0BF, _ri)
end

function GetMeleeTargetForPed(ped)
	return _in(0x18A3E9EE1297FD39, ped, _ri)
end

--- p0 was always 0xAE2602A3.
function GetMenuPedBoolStat(p0, p1)
	return _in(0x052991E59076E4E4, _ch(p0), _ii(p1) --[[ may be optional ]], _r)
end
N_0x052991e59076e4e4 = GetMenuPedBoolStat

function GetMenuPedFloatStat(p0, p1)
	return _in(0x5FBD7095FE7AE57F, p0, _fi(p1) --[[ may be optional ]], _r)
end
N_0x5fbd7095fe7ae57f = GetMenuPedFloatStat

function GetMenuPedIntStat(p0, p1)
	return _in(0xEF4CED81CEBEDC6D, p0, _ii(p1) --[[ may be optional ]], _r)
end
SetUseridsUihidden = GetMenuPedIntStat
N_0xef4ced81cebedc6d = GetMenuPedIntStat

function GetMenuPedMaskedIntStat(p0, p2, p3)
	return _in(0x90A6526CF0381030, p0, _i, p2, p3, _r)
end
N_0x90a6526cf0381030 = GetMenuPedMaskedIntStat

--- Returns how many real ms are equal to one game minute.
-- A getter for [`SetMillisecondsPerGameMinute`](#\_0x36CA2554).
-- @return A number of milliseconds that equals to one game minute.
function GetMillisecondsPerGameMinute()
	return _in(0x2F8B4D1C595B11DB, _ri)
end

function GetMinimapFowCoordinateIsRevealed(x, y, z)
	return _in(0x6E31B91145873922, x, y, z, _r)
end
N_0x6e31b91145873922 = GetMinimapFowCoordinateIsRevealed
IsMinimapAreaRevealed = GetMinimapFowCoordinateIsRevealed

function GetMinimapFowDiscoveryRatio()
	return _in(0xE0130B41D3CF4574, _rf)
end
N_0xe0130b41d3cf4574 = GetMinimapFowDiscoveryRatio
GetMinimapRevealPercentage = GetMinimapFowDiscoveryRatio

function GetMissionFlag()
	return _in(0xA33CDCCDA663159E, _r)
end

function GetMobilePhonePosition(position)
	return _in(0x584FDFDA48805B86, _v)
end

function GetMobilePhoneRenderId(renderId)
	return _in(0xB4A53E05F68B6FA1, _ii(renderId) --[[ may be optional ]])
end

function GetMobilePhoneRotation(p1)
	return _in(0x1CEFB61F193070AE, _v, p1)
end

function GetModSlotName(vehicle, modType)
	return _in(0x51F0FEB9F6AE98C0, vehicle, modType, _s)
end

--- Returns the text label of a mod type for a given vehicle
-- Use _GET_LABEL_TEXT to get the part name in the game's language
-- @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
function GetModTextLabel(vehicle, modType, modValue)
	return _in(0x8935624F8C5592CC, vehicle, modType, modValue, _s)
end

--- Gets the dimensions of a model.
-- Calculate (maximum - minimum) to get the size, in which case, Y will be how long the model is.
-- Example from the scripts: MISC::GET_MODEL_DIMENSIONS(ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), &v_1A, &v_17);
function GetModelDimensions(modelHash)
	return _in(0x03E8D3D5F549087A, _ch(modelHash), _v, _v)
end

--- Function just returns 0
-- void __fastcall ped__get_mount(NativeContext *a1)
-- {
-- NativeContext *v1; // rbx@1
-- v1 = a1;
-- GetAddressOfPedFromScriptHandle(a1->Args->Arg1);
-- v1->Returns->Item1= 0;
-- }
function GetMount(ped)
	return _in(0xE7E11B8DCBED1058, ped, _ri)
end

function GetMusicPlaytime()
	return _in(0xE7A0D23DC414507B, _ri)
end

function GetNameOfThread(threadId)
	return _in(0x05A42BA9FC8DA96B, threadId, _s)
end
GetThreadName = GetNameOfThread

--- AIRP = Los Santos International Airport
-- ALAMO = Alamo Sea
-- ALTA = Alta
-- ARMYB = Fort Zancudo
-- BANHAMC = Banham Canyon Dr
-- BANNING = Banning
-- BEACH = Vespucci Beach
-- BHAMCA = Banham Canyon
-- BRADP = Braddock Pass
-- BRADT = Braddock Tunnel
-- BURTON = Burton
-- CALAFB = Calafia Bridge
-- CANNY = Raton Canyon
-- CCREAK = Cassidy Creek
-- CHAMH = Chamberlain Hills
-- CHIL = Vinewood Hills
-- CHU = Chumash
-- CMSW = Chiliad Mountain State Wilderness
-- CYPRE = Cypress Flats
-- DAVIS = Davis
-- DELBE = Del Perro Beach
-- DELPE = Del Perro
-- DELSOL = La Puerta
-- DESRT = Grand Senora Desert
-- DOWNT = Downtown
-- DTVINE = Downtown Vinewood
-- EAST_V = East Vinewood
-- EBURO = El Burro Heights
-- ELGORL = El Gordo Lighthouse
-- ELYSIAN = Elysian Island
-- GALFISH = Galilee
-- GOLF = GWC and Golfing Society
-- GRAPES = Grapeseed
-- GREATC = Great Chaparral
-- HARMO = Harmony
-- HAWICK = Hawick
-- HORS = Vinewood Racetrack
-- HUMLAB = Humane Labs and Research
-- JAIL = Bolingbroke Penitentiary
-- KOREAT = Little Seoul
-- LACT = Land Act Reservoir
-- LAGO = Lago Zancudo
-- LDAM = Land Act Dam
-- LEGSQU = Legion Square
-- LMESA = La Mesa
-- LOSPUER = La Puerta
-- MIRR = Mirror Park
-- MORN = Morningwood
-- MOVIE = Richards Majestic
-- MTCHIL = Mount Chiliad
-- MTGORDO = Mount Gordo
-- MTJOSE = Mount Josiah
-- MURRI = Murrieta Heights
-- NCHU = North Chumash
-- NOOSE = N.O.O.S.E
-- OCEANA = Pacific Ocean
-- PALCOV = Paleto Cove
-- PALETO = Paleto Bay
-- PALFOR = Paleto Forest
-- PALHIGH = Palomino Highlands
-- PALMPOW = Palmer-Taylor Power Station
-- PBLUFF = Pacific Bluffs
-- PBOX = Pillbox Hill
-- PROCOB = Procopio Beach
-- RANCHO = Rancho
-- RGLEN = Richman Glen
-- RICHM = Richman
-- ROCKF = Rockford Hills
-- RTRAK = Redwood Lights Track
-- SANAND = San Andreas
-- SANCHIA = San Chianski Mountain Range
-- SANDY = Sandy Shores
-- SKID = Mission Row
-- SLAB = Stab City
-- STAD = Maze Bank Arena
-- STRAW = Strawberry
-- TATAMO = Tataviam Mountains
-- TERMINA = Terminal
-- TEXTI = Textile City
-- TONGVAH = Tongva Hills
-- TONGVAV = Tongva Valley
-- VCANA = Vespucci Canals
-- VESP = Vespucci
-- VINE = Vinewood
-- WINDF = Ron Alternates Wind Farm
-- WVINE = West Vinewood
-- ZANCUDO = Zancudo River
-- ZP_ORT = Port of South Los Santos
-- ZQ_UAR = Davis Quartz
-- PROL = Prologue / North Yankton
-- ISHeist = Cayo Perico Island
function GetNameOfZone(x, y, z)
	return _in(0xCD90657D4C30E1CA, x, y, z, _s)
end

function GetNamedRendertargetRenderId(name)
	return _in(0x1A6478B61C6BDC3B, _ts(name), _ri)
end

--- Looks like the last parameter returns true if the path has been calculated, while the first returns the remaining distance to the end of the path.
-- Return value of native is the same as GET_NAVMESH_ROUTE_RESULT
-- Looks like the native returns an int for the path's state:
-- 1 - ???
-- 2 - ???
-- 3 - Finished Generating
function GetNavmeshRouteDistanceRemaining(ped)
	return _in(0xC6F5C0BCDC74D62D, ped, _f, _i --[[ actually bool ]], _ri)
end

--- See [`GET_NAVMESH_ROUTE_DISTANCE_REMAINING`](#\_0xC6F5C0BCDC74D62D) for more details.
function GetNavmeshRouteResult(ped)
	return _in(0x632E831F382A0FA8, ped, _ri)
end

function GetNearestPlayerToEntity(entity)
	return _in(0x7196842CB375CDB3, entity, _ri)
end

function GetNearestPlayerToEntityOnTeam(entity, team)
	return _in(0x4DC9A62F844D9337, entity, team, _ri)
end

--- Could this be used alongside either,
-- SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES or _SET_NETWORK_ID_SYNC_TO_PLAYER to make it so other players can hear the sound while online? It'd be a bit troll-fun to be able to play the Zancudo UFO creepy sounds globally.
function GetNetworkIdFromSoundId(soundId)
	return _in(0x2DE3F0A134FFBC0D, soundId, _ri)
end

function GetNetworkTime()
	return _in(0x7A5487FE9FAA6B48, _ri)
end

--- Returns the same value as [`GetNetworkTime`](#\_0x7A5487FE9FAA6B48) in freemode, but as opposed to `GetNetworkTime` it always gets the most recent time, instead of once per tick.
-- Could be used for benchmarking since it can return times in ticks.
-- @return Returns the network time as an integer
function GetNetworkTimeAccurate()
	return _in(0x89023FBBF9200E9F, _ri)
end
N_0x89023fbbf9200e9f = GetNetworkTimeAccurate

function GetNewSelectedMissionCreatorBlip()
	return _in(0x5C90988E7C8E1AF4, _ri)
end
DisableBlipNameForVar = GetNewSelectedMissionCreatorBlip
N_0x5c90988e7c8e1af4 = GetNewSelectedMissionCreatorBlip

function GetNextBlipInfoId(blipSprite)
	return _in(0x14F96AA50D6FBEA7, blipSprite, _ri)
end

--- Gets the next zone that has been disabled using SET_GPS_DISABLED_ZONE_AT_INDEX.
-- ```
-- NativeDB Removed Parameter 1: int index
-- ```
-- @return The disabled zone index
function GetNextGpsDisabledZoneIndex(index)
	return _in(0xD3A6A0EF48823A8C, index, _ri)
end
N_0xd3a6a0ef48823a8c = GetNextGpsDisabledZoneIndex

--- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
function GetNextWeatherTypeHashName()
	return _in(0x711327CD09C8F162, _ri)
end
GetNextWeatherType = GetNextWeatherTypeHashName

--- Needs more research. Gets the stat name of a masked bool?
-- section - values used in the decompiled scripts:
-- "_NGPSTAT_BOOL"
-- "_NGTATPSTAT_BOOL"
-- "_NGDLCPSTAT_BOOL"
-- "_DLCBIKEPSTAT_BOOL"
-- "_DLCGUNPSTAT_BOOL"
-- "_GUNTATPSTAT_BOOL"
-- "_DLCSMUGCHARPSTAT_BOOL"
-- "_GANGOPSPSTAT_BOOL"
-- "_BUSINESSBATPSTAT_BOOL"
-- "_ARENAWARSPSTAT_BOOL"
-- "_CASINOPSTAT_BOOL"
-- "_CASINOHSTPSTAT_BOOL"
-- "_HEIST3TATTOOSTAT_BOOL"
function GetNgstatBoolHash(index, spStat, charStat, character, section)
	return _in(0xBA52FF538ED2BC71, index, spStat, charStat, character, _ts(section), _ri)
end
N_0xba52ff538ed2bc71 = GetNgstatBoolHash

--- Needs more research. Gets the stat name of a masked int?
-- section - values used in the decompiled scripts:
-- "_NGPSTAT_INT"
-- "_MP_NGPSTAT_INT"
-- "_MP_LRPSTAT_INT"
-- "_MP_APAPSTAT_INT"
-- "_MP_LR2PSTAT_INT"
-- "_MP_BIKEPSTAT_INT"
-- "_MP_IMPEXPPSTAT_INT"
-- "_MP_GUNRPSTAT_INT"
-- "_NGDLCPSTAT_INT"
-- "_MP_NGDLCPSTAT_INT"
-- "_DLCSMUGCHARPSTAT_INT"
-- "_GANGOPSPSTAT_INT"
-- "_BUSINESSBATPSTAT_INT"
-- "_ARENAWARSPSTAT_INT"
-- "_CASINOPSTAT_INT"
-- "_CASINOHSTPSTAT_INT"
function GetNgstatIntHash(index, spStat, charStat, character, section)
	return _in(0x2B4CDCA6F07FF3DA, index, spStat, charStat, character, _ts(section), _ri)
end
N_0x2b4cdca6f07ff3da = GetNgstatIntHash

function GetNoLoadingScreen()
	return _in(0x18C1270EA7F199BC, _r)
end
GetNoLoadingScreen = GetNoLoadingScreen

function GetNorthRadarBlip()
	return _in(0x3F0CF9CB7E589B88, _ri)
end
N_0x3f0cf9cb7e589b88 = GetNorthRadarBlip

function GetNthClosestVehicleNode(x, y, z, nthClosest, unknown1, unknown2, unknown3)
	return _in(0xE50E52416CCF948B, x, y, z, nthClosest, _v, unknown1, unknown2, unknown3, _r)
end

--- See gtaforums.com/topic/843561-pathfind-node-types for node type info. 0 = paved road only, 1 = any road, 3 = water
-- p10 always equal 0x40400000
-- p11 always equal 0
function GetNthClosestVehicleNodeFavourDirection(x, y, z, desiredX, desiredY, desiredZ, nthClosest, nodetype, p10, p11)
	return _in(0x45905BE8654AE067, x, y, z, desiredX, desiredY, desiredZ, nthClosest, _v, _f, nodetype, p10, p11, _r)
end

--- Returns the id.
function GetNthClosestVehicleNodeId(x, y, z, nth, nodetype, p5, p6)
	return _in(0x22D7275A79FE8215, x, y, z, nth, nodetype, p5, p6, _ri)
end

function GetNthClosestVehicleNodeIdWithHeading(x, y, z, nthClosest, p6, p7, p8)
	return _in(0x6448050E9C2A7207, x, y, z, nthClosest, _v, _f, p6, p7, p8, _ri)
end

--- Get the nth closest vehicle node and its heading. (unknown2 = 9, unknown3 = 3.0, unknown4 = 2.5)
function GetNthClosestVehicleNodeWithHeading(x, y, z, nthClosest, unknown2, unknown3, unknown4)
	return _in(0x80CA6A8B6C094CC4, x, y, z, nthClosest, _v, _f, _i, unknown2, unknown3, unknown4, _r)
end

function GetNuiCursorPosition()
	return _in(0xbdba226f, _i, _i)
end

function GetNumCommerceItems()
	return _in(0xF2EAC213D5EA0623, _ri)
end
N_0xf2eac213d5ea0623 = GetNumCommerceItems

function GetNumCreatedMissionObjects(p0)
	return _in(0x12B6281B6C6706C0, p0, _ri)
end
N_0x12b6281b6c6706c0 = GetNumCreatedMissionObjects

function GetNumCreatedMissionPeds(p0)
	return _in(0xCB215C4B56A7FAE7, p0, _ri)
end
N_0xcb215c4b56a7fae7 = GetNumCreatedMissionPeds

function GetNumCreatedMissionVehicles(p0)
	return _in(0x0CD9AB83489430EA, p0, _ri)
end
N_0x0cd9ab83489430ea = GetNumCreatedMissionVehicles

function GetNumDispatchedUnitsForPlayer(dispatchService)
	return _in(0xEB4A0C2D56441717, dispatchService, _ri)
end
N_0xeb4a0c2d56441717 = GetNumDispatchedUnitsForPlayer
GetNumberOfDispatchedUnitsForPlayer = GetNumDispatchedUnitsForPlayer

--- Returns the total number of DLC vehicles.
function GetNumDlcVehicles()
	return _in(0xA7A866D21CD2329B, _ri)
end

--- Returns the total number of DLC weapon components.
function GetNumDlcWeaponComponents(dlcWeaponIndex)
	return _in(0x405425358A7D61FE, dlcWeaponIndex, _ri)
end

--- Returns the total number of DLC weapon components that are available in SP.
-- ```
-- NativeDB Introduced: v2060
-- ```
function GetNumDlcWeaponComponentsSp(dlcWeaponIndex)
	return _in(0xAD2A7A6DFF55841B, dlcWeaponIndex, _ri)
end

--- Returns the total number of DLC weapons.
function GetNumDlcWeapons()
	return _in(0xEE47635F352DA367, _ri)
end

--- Returns the total number of DLC weapons that are available in SP (availableInSP field in shop_weapon.meta).
-- ```
-- NativeDB Introduced: v2060
-- ```
function GetNumDlcWeaponsSp()
	return _in(0x4160B65AE085B5A9, _ri)
end

--- Used for freemode (online) characters.
function GetNumHairColors()
	return _in(0xE5C0CF872C2AD150, _ri)
end

function GetNumMakeupColors()
	return _in(0xD1F7CA1535D22818, _ri)
end
N_0xd1f7ca1535d22818 = GetNumMakeupColors

--- paintType:
-- 0: Normal
-- 1: Metallic
-- 2: Pearl
-- 3: Matte
-- 4: Metal
-- 5: Chrome
function GetNumModColors(paintType, p1)
	return _in(0xA551BE18C11A476D, paintType, p1, _ri)
end

function GetNumModKits(vehicle)
	return _in(0x33F2E3FE70EAAE1D, vehicle, _ri)
end

--- p0 appears to be for MP
-- ```
-- ```
-- NativeDB Added Parameter 2: Any p1
function GetNumReservedMissionObjects(p0)
	return _in(0xAA81B5F10BC43AC2, p0, _ri)
end

--- p0 appears to be for MP
-- ```
-- ```
-- NativeDB Added Parameter 2: Any p1
function GetNumReservedMissionPeds(p0)
	return _in(0x1F13D5AE5CB17E17, p0, _ri)
end

--- p0 appears to be for MP
-- ```
-- ```
-- NativeDB Added Parameter 2: Any p1
function GetNumReservedMissionVehicles(p0)
	return _in(0xCF3A965906452031, p0, _ri)
end

--- Gets the amount of metadata values with the specified key existing in the specified resource's manifest.
-- See also: [Resource manifest](https://docs.fivem.net/resources/manifest/)
-- @param resourceName The resource name.
-- @param metadataKey The key to look up in the resource manifest.
function GetNumResourceMetadata(resourceName, metadataKey)
	return _in(0x776e864, _ts(resourceName), _ts(metadataKey), _ri)
end

function GetNumResources()
	return _in(0x863f27b, _ri)
end

function GetNumSuccessfulStuntJumps()
	return _in(0x996DD1E1E02F1008, _ri)
end
N_0x996dd1e1e02f1008 = GetNumSuccessfulStuntJumps

--- Character types:
-- 0 = Michael,
-- 1 = Franklin,
-- 2 = Trevor,
-- 3 = MPMale,
-- 4 = MPFemale
function GetNumTattooShopDlcItems(character)
	return _in(0x278F76C3B0A8F109, character, _ri)
end
N_0x278f76c3b0a8f109 = GetNumTattooShopDlcItems
GetNumDecorations = GetNumTattooShopDlcItems

function GetNumUnlockedRadioStations()
	return _in(0xF1620ECB50E01DE7, _ri)
end
MaxRadioStationIndex = GetNumUnlockedRadioStations

--- Returns how many possible mods a vehicle has for a given mod type
-- @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
function GetNumVehicleMods(vehicle, modType)
	return _in(0xE38E9162A2500646, vehicle, modType, _ri)
end

function GetNumVehicleWindowTints()
	return _in(0x9D1224004B3A6707, _ri)
end

function GetNumberOfActiveBlips()
	return _in(0x9A3FF3DE163034E8, _ri)
end

--- eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
function GetNumberOfEvents(eventGroup)
	return _in(0x5F92A689A06620AA, eventGroup, _ri)
end

function GetNumberOfFiresInRange(x, y, z, radius)
	return _in(0x50CAD495A460B305, x, y, z, radius, _ri)
end

function GetNumberOfFreeStacksOfThisSize(stackSize)
	return _in(0xFEAD16FC8F9DFC0F, stackSize, _ri)
end
GetFreeStackSlotsCount = GetNumberOfFreeStacksOfThisSize

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function GetNumberOfPedDrawableVariations(ped, componentId)
	return _in(0x27561561732A7842, ped, componentId, _ri)
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function GetNumberOfPedPropDrawableVariations(ped, propId)
	return _in(0x5FAF9754E789FB47, ped, propId, _ri)
end

--- Need to check behavior when drawableId = -1
-- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function GetNumberOfPedPropTextureVariations(ped, propId, drawableId)
	return _in(0xA6E7F1CEB523E171, ped, propId, drawableId, _ri)
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function GetNumberOfPedTextureVariations(ped, componentId, drawableId)
	return _in(0x8F7156A3142A6BAD, ped, componentId, drawableId, _ri)
end

--- Gets the number of players in the current session.
-- If not multiplayer, always returns 1.
function GetNumberOfPlayers()
	return _in(0x407C7F91DDB46C16, _ri)
end

--- NativeDB Introduced: v1180
function GetNumberOfPlayersInTeam(team)
	return _in(0x1FC200409F10E6F1, team, _ri)
end

--- Gets the number of instances of the specified script is currently running.
-- Actually returns numRefs - 1.
-- if (program)
-- v3 = rage::scrProgram::GetNumRefs(program) - 1;
-- return v3;
function GetNumberOfReferencesOfScriptWithNameHash(scriptHash)
	return _in(0x2C83A9DA6BFFC4F9, _ch(scriptHash), _ri)
end
GetNumberOfInstancesOfStreamedScript = GetNumberOfReferencesOfScriptWithNameHash
GetNumberOfInstancesOfScriptWithNameHash = GetNumberOfReferencesOfScriptWithNameHash

function GetNumberOfStreamingRequests()
	return _in(0x4060057271CEBC89, _ri)
end

--- Actually number of color combinations
function GetNumberOfVehicleColours(vehicle)
	return _in(0x3B963160CD65D41E, vehicle, _ri)
end

function GetNumberOfVehicleDoors(vehicle)
	return _in(0x92922A607497B14D, vehicle, _ri)
end

--- Returns the number of *types* of licence plates, enumerated below in SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX.
function GetNumberOfVehicleNumberPlates()
	return _in(0x4C4D6B2644F458CB, _ri)
end

function GetObjectFragmentDamageHealth(p0, p1)
	return _in(0xB6FBFD079B8D0596, p0, p1, _rf)
end

--- Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
function GetObjectIndexFromEntityIndex(entity)
	return _in(0xD7E3B9735C0F89D6, entity, _ri)
end

function GetObjectOffsetFromCoords(xPos, yPos, zPos, heading, xOffset, yOffset, zOffset)
	return _in(0x163E252DE035A133, xPos, yPos, zPos, heading, xOffset, yOffset, zOffset, _rv)
end

function GetObjectTextureVariation(object)
	return _in(0xE84EB93729C5F36A, object, _ri)
end
N_0xe84eb93729c5f36a = GetObjectTextureVariation

--- Converts world coords (posX - Z) to coords relative to the entity
-- Example:
-- posX = 50
-- posY = 1000
-- posZ = 60
-- Entity's coords are: x=30, y=1000, z=60.
-- All three returned coords will then be in range of [-20,20] depending on rotation of the entity.
function GetOffsetFromEntityGivenWorldCoords(entity, posX, posY, posZ)
	return _in(0x2274BC1C4885E333, entity, posX, posY, posZ, _rv)
end

--- Offset values are relative to the entity.
-- x = left/right
-- y = forward/backward
-- z = up/down
function GetOffsetFromEntityInWorldCoords(entity, offsetX, offsetY, offsetZ)
	return _in(0x1899F328B0E12848, entity, offsetX, offsetY, offsetZ, _rv)
end

function GetOffsetFromInteriorInWorldCoords(interior, x, y, z)
	return _in(0x9E3B3E6D66F6E22F, interior, x, y, z, _rv)
end

--- Online version is defined here: update\update.rpf\common\data\version.txt
-- Example:
-- [ONLINE_VERSION_NUMBER]
-- 1.33
-- _GET_ONLINE_VERSION() will return "1.33"
function GetOnlineVersion()
	return _in(0xFCA9373EF340AC0A, _s)
end
GetGameVersion = GetOnlineVersion

--- Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.
function GetOnscreenKeyboardResult()
	return _in(0x8362B09B91893647, _s)
end

function GetPackedBoolStatKey(index, spStat, charStat, character)
	return _in(0x80C75307B1C42837, index, spStat, charStat, character, _ri)
end
N_0x80c75307b1c42837 = GetPackedBoolStatKey
GetPstatBoolHash = GetPackedBoolStatKey

function GetPackedIntStatKey(index, spStat, charStat, character)
	return _in(0x61E111E323419E07, index, spStat, charStat, character, _ri)
end
N_0x61e111e323419e07 = GetPackedIntStatKey
GetPstatIntHash = GetPackedIntStatKey

function GetPackedTuBoolStatKey(index, spStat, charStat, character)
	return _in(0xC4BB08EE7907471E, index, spStat, charStat, character, _ri)
end
N_0xc4bb08ee7907471e = GetPackedTuBoolStatKey
GetTupstatBoolHash = GetPackedTuBoolStatKey
GetPackedTitleUpdateBoolStatKey = GetPackedTuBoolStatKey

function GetPackedTuIntStatKey(index, spStat, charStat, character)
	return _in(0xD16C2AD6B8E32854, index, spStat, charStat, character, _ri)
end
N_0xd16c2ad6b8e32854 = GetPackedTuIntStatKey
GetTupstatIntHash = GetPackedTuIntStatKey
GetPackedTitleUpdateIntStatKey = GetPackedTuIntStatKey

--- A getter for [SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME](#\_0xEAE6DCC7EEE3DB1D).
-- @return Returns parked vehicle density multiplier value.
function GetParkedVehicleDensityMultiplier()
	return _in(0xff72df84, _rf)
end

--- Name between `GET_ONSCREEN_KEYBOARD_RESULT` and `GET_PAUSE_MENU_STATE`. Likely, `GET_PAUSE_MENU_*`.
-- @return If the pause menu is open, it will return a Vector3, Z is always 0.
-- 		If the pause menu is closed, it will return Vector3.Zero
function GetPauseMenuCursorPosition()
	return _in(0x5BFF36D6ED83E0AE, _rv)
end
N_0x5bff36d6ed83e0ae = GetPauseMenuCursorPosition

function GetPauseMenuSelection()
	return _in(0x36C1451A88A09630, _i, _i)
end
N_0x36c1451a88a09630 = GetPauseMenuSelection

--- lastItemMenuId: this is the menuID of the last selected item minus 1000 (lastItem.menuID - 1000)
-- selectedItemMenuId: same as lastItemMenuId except for the currently selected menu item
-- selectedItemUniqueId: this is uniqueID of the currently selected menu item
-- when the pausemenu is closed:
-- lastItemMenuId = -1
-- selectedItemMenuId = -1
-- selectedItemUniqueId = 0
-- when the header gains focus:
-- lastItemMenuId updates as normal or 0 if the pausemenu was just opened
-- selectedItemMenuId becomes a unique id for the pausemenu page that focus was taken from (?) or 0 if the pausemenu was just opened
-- selectedItemUniqueId = -1
-- when focus is moved from the header to a pausemenu page:
-- lastItemMenuId becomes a unique id for the pausemenu page that focus was moved to (?)
-- selectedItemMenuId = -1
-- selectedItemUniqueId updates as normal
function GetPauseMenuSelectionData()
	return _in(0x7E17BE53E1AAABAF, _i, _i, _i)
end
N_0x7e17be53e1aaabaf = GetPauseMenuSelectionData

--- Returns:
-- 0
-- 5
-- 10
-- 15
-- 20
-- 25
-- 30
-- 35
function GetPauseMenuState()
	return _in(0x272ACD84970869C5, _ri)
end

function GetPedAccuracy(ped)
	return _in(0x37F4AD56ECBC0CD6, ped, _ri)
end

--- Returns the ped's alertness (0-3).
-- Values :
-- 0 : Neutral
-- 1 : Heard something (gun shot, hit, etc)
-- 2 : Knows (the origin of the event)
-- 3 : Fully alerted (is facing the event?)
-- If the Ped does not exist, returns -1.
function GetPedAlertness(ped)
	return _in(0xF6AA118530443FD2, ped, _ri)
end

function GetPedAmmoByType(ped, ammoType)
	return _in(0x39D22031557946C1, ped, _ch(ammoType), _ri)
end

--- Returns the current ammo type of the specified ped's specified weapon.
-- MkII magazines will change the return value, like Pistol MkII returning AMMO_PISTOL without any components and returning AMMO_PISTOL_TRACER after Tracer Rounds component is attached.
-- Use 0xF489B44DD5AF4BD9 if you always want AMMO_PISTOL.
function GetPedAmmoTypeFromWeapon(ped, weaponHash)
	return _in(0x7FEAD38B326B9F74, ped, _ch(weaponHash), _ri)
end
GetPedAmmoType = GetPedAmmoTypeFromWeapon

--- Returns the base/default ammo type of the specified ped's specified weapon.
-- Use GET_PED_AMMO_TYPE_FROM_WEAPON if you want current ammo type (like AMMO_MG_INCENDIARY/AMMO_MG_TRACER while using MkII magazines) and use this if you want base ammo type. (AMMO_MG)
function GetPedAmmoTypeFromWeapon_2(ped, weaponHash)
	return _in(0xF489B44DD5AF4BD9, ped, _ch(weaponHash), _ri)
end

function GetPedArmour(ped)
	return _in(0x9483AF821605B1D8, ped, _ri)
end

function GetPedAsGroupLeader(groupID)
	return _in(0x5CCE68DBD5FE93EC, groupID, _ri)
end
GetPedAsGroupLeader = GetPedAsGroupLeader

--- from fm_mission_controller.c4 (variable names changed for clarity):
-- int groupID = PLAYER::GET_PLAYER_GROUP(PLAYER::PLAYER_ID());
-- PED::GET_GROUP_SIZE(group, &unused, &groupSize);
-- if (groupSize >= 1) {
-- . . . . for (int memberNumber = 0; memberNumber < groupSize; memberNumber++) {
-- . . . . . . . . Ped ped1 = PED::GET_PED_AS_GROUP_MEMBER(groupID, memberNumber);
-- . . . . . . . . //and so on
function GetPedAsGroupMember(groupID, memberNumber)
	return _in(0x51455483CF23ED97, groupID, memberNumber, _ri)
end

--- Gets the position of the specified bone of the specified ped.
-- ped: The ped to get the position of a bone from.
-- boneId: The ID of the bone to get the position from. This is NOT the index.
-- offsetX: The X-component of the offset to add to the position relative to the bone's rotation.
-- offsetY: The Y-component of the offset to add to the position relative to the bone's rotation.
-- offsetZ: The Z-component of the offset to add to the position relative to the bone's rotation.
function GetPedBoneCoords(ped, boneId, offsetX, offsetY, offsetZ)
	return _in(0x17C07FC640E86B4E, ped, boneId, offsetX, offsetY, offsetZ, _rv)
end

--- enum ePedBoneId : uint16_t
-- {
-- SKEL_ROOT = 0x0,
-- SKEL_Pelvis = 0x2E28,
-- SKEL_L_Thigh = 0xE39F,
-- SKEL_L_Calf = 0xF9BB,
-- SKEL_L_Foot = 0x3779,
-- SKEL_L_Toe0 = 0x83C,
-- EO_L_Foot = 0x84C5,
-- EO_L_Toe = 0x68BD,
-- IK_L_Foot = 0xFEDD,
-- PH_L_Foot = 0xE175,
-- MH_L_Knee = 0xB3FE,
-- SKEL_R_Thigh = 0xCA72,
-- SKEL_R_Calf = 0x9000,
-- SKEL_R_Foot = 0xCC4D,
-- SKEL_R_Toe0 = 0x512D,
-- EO_R_Foot = 0x1096,
-- EO_R_Toe = 0x7163,
-- IK_R_Foot = 0x8AAE,
-- PH_R_Foot = 0x60E6,
-- MH_R_Knee = 0x3FCF,
-- RB_L_ThighRoll = 0x5C57,
-- RB_R_ThighRoll = 0x192A,
-- SKEL_Spine_Root = 0xE0FD,
-- SKEL_Spine0 = 0x5C01,
-- SKEL_Spine1 = 0x60F0,
-- SKEL_Spine2 = 0x60F1,
-- SKEL_Spine3 = 0x60F2,
-- SKEL_L_Clavicle = 0xFCD9,
-- SKEL_L_UpperArm = 0xB1C5,
-- SKEL_L_Forearm = 0xEEEB,
-- SKEL_L_Hand = 0x49D9,
-- SKEL_L_Finger00 = 0x67F2,
-- SKEL_L_Finger01 = 0xFF9,
-- SKEL_L_Finger02 = 0xFFA,
-- SKEL_L_Finger10 = 0x67F3,
-- SKEL_L_Finger11 = 0x1049,
-- SKEL_L_Finger12 = 0x104A,
-- SKEL_L_Finger20 = 0x67F4,
-- SKEL_L_Finger21 = 0x1059,
-- SKEL_L_Finger22 = 0x105A,
-- SKEL_L_Finger30 = 0x67F5,
-- SKEL_L_Finger31 = 0x1029,
-- SKEL_L_Finger32 = 0x102A,
-- SKEL_L_Finger40 = 0x67F6,
-- SKEL_L_Finger41 = 0x1039,
-- SKEL_L_Finger42 = 0x103A,
-- PH_L_Hand = 0xEB95,
-- IK_L_Hand = 0x8CBD,
-- RB_L_ForeArmRoll = 0xEE4F,
-- RB_L_ArmRoll = 0x1470,
-- MH_L_Elbow = 0x58B7,
-- SKEL_R_Clavicle = 0x29D2,
-- SKEL_R_UpperArm = 0x9D4D,
-- SKEL_R_Forearm = 0x6E5C,
-- SKEL_R_Hand = 0xDEAD,
-- SKEL_R_Finger00 = 0xE5F2,
-- SKEL_R_Finger01 = 0xFA10,
-- SKEL_R_Finger02 = 0xFA11,
-- SKEL_R_Finger10 = 0xE5F3,
-- SKEL_R_Finger11 = 0xFA60,
-- SKEL_R_Finger12 = 0xFA61,
-- SKEL_R_Finger20 = 0xE5F4,
-- SKEL_R_Finger21 = 0xFA70,
-- SKEL_R_Finger22 = 0xFA71,
-- SKEL_R_Finger30 = 0xE5F5,
-- SKEL_R_Finger31 = 0xFA40,
-- SKEL_R_Finger32 = 0xFA41,
-- SKEL_R_Finger40 = 0xE5F6,
-- SKEL_R_Finger41 = 0xFA50,
-- SKEL_R_Finger42 = 0xFA51,
-- PH_R_Hand = 0x6F06,
-- IK_R_Hand = 0x188E,
-- RB_R_ForeArmRoll = 0xAB22,
-- RB_R_ArmRoll = 0x90FF,
-- MH_R_Elbow = 0xBB0,
-- SKEL_Neck_1 = 0x9995,
-- SKEL_Head = 0x796E,
-- IK_Head = 0x322C,
-- FACIAL_facialRoot = 0xFE2C,
-- FB_L_Brow_Out_000 = 0xE3DB,
-- FB_L_Lid_Upper_000 = 0xB2B6,
-- FB_L_Eye_000 = 0x62AC,
-- FB_L_CheekBone_000 = 0x542E,
-- FB_L_Lip_Corner_000 = 0x74AC,
-- FB_R_Lid_Upper_000 = 0xAA10,
-- FB_R_Eye_000 = 0x6B52,
-- FB_R_CheekBone_000 = 0x4B88,
-- FB_R_Brow_Out_000 = 0x54C,
-- FB_R_Lip_Corner_000 = 0x2BA6,
-- FB_Brow_Centre_000 = 0x9149,
-- FB_UpperLipRoot_000 = 0x4ED2,
-- FB_UpperLip_000 = 0xF18F,
-- FB_L_Lip_Top_000 = 0x4F37,
-- FB_R_Lip_Top_000 = 0x4537,
-- FB_Jaw_000 = 0xB4A0,
-- FB_LowerLipRoot_000 = 0x4324,
-- FB_LowerLip_000 = 0x508F,
-- FB_L_Lip_Bot_000 = 0xB93B,
-- FB_R_Lip_Bot_000 = 0xC33B,
-- FB_Tongue_000 = 0xB987,
-- RB_Neck_1 = 0x8B93,
-- SPR_L_Breast = 0xFC8E,
-- SPR_R_Breast = 0x885F,
-- IK_Root = 0xDD1C,
-- SKEL_Neck_2 = 0x5FD4,
-- SKEL_Pelvis1 = 0xD003,
-- SKEL_PelvisRoot = 0x45FC,
-- SKEL_SADDLE = 0x9524,
-- MH_L_CalfBack = 0x1013,
-- MH_L_ThighBack = 0x600D,
-- SM_L_Skirt = 0xC419,
-- MH_R_CalfBack = 0xB013,
-- MH_R_ThighBack = 0x51A3,
-- SM_R_Skirt = 0x7712,
-- SM_M_BackSkirtRoll = 0xDBB,
-- SM_L_BackSkirtRoll = 0x40B2,
-- SM_R_BackSkirtRoll = 0xC141,
-- SM_M_FrontSkirtRoll = 0xCDBB,
-- SM_L_FrontSkirtRoll = 0x9B69,
-- SM_R_FrontSkirtRoll = 0x86F1,
-- SM_CockNBalls_ROOT = 0xC67D,
-- SM_CockNBalls = 0x9D34,
-- MH_L_Finger00 = 0x8C63,
-- MH_L_FingerBulge00 = 0x5FB8,
-- MH_L_Finger10 = 0x8C53,
-- MH_L_FingerTop00 = 0xA244,
-- MH_L_HandSide = 0xC78A,
-- MH_Watch = 0x2738,
-- MH_L_Sleeve = 0x933C,
-- MH_R_Finger00 = 0x2C63,
-- MH_R_FingerBulge00 = 0x69B8,
-- MH_R_Finger10 = 0x2C53,
-- MH_R_FingerTop00 = 0xEF4B,
-- MH_R_HandSide = 0x68FB,
-- MH_R_Sleeve = 0x92DC,
-- FACIAL_jaw = 0xB21,
-- FACIAL_underChin = 0x8A95,
-- FACIAL_L_underChin = 0x234E,
-- FACIAL_chin = 0xB578,
-- FACIAL_chinSkinBottom = 0x98BC,
-- FACIAL_L_chinSkinBottom = 0x3E8F,
-- FACIAL_R_chinSkinBottom = 0x9E8F,
-- FACIAL_tongueA = 0x4A7C,
-- FACIAL_tongueB = 0x4A7D,
-- FACIAL_tongueC = 0x4A7E,
-- FACIAL_tongueD = 0x4A7F,
-- FACIAL_tongueE = 0x4A80,
-- FACIAL_L_tongueE = 0x35F2,
-- FACIAL_R_tongueE = 0x2FF2,
-- FACIAL_L_tongueD = 0x35F1,
-- FACIAL_R_tongueD = 0x2FF1,
-- FACIAL_L_tongueC = 0x35F0,
-- FACIAL_R_tongueC = 0x2FF0,
-- FACIAL_L_tongueB = 0x35EF,
-- FACIAL_R_tongueB = 0x2FEF,
-- FACIAL_L_tongueA = 0x35EE,
-- FACIAL_R_tongueA = 0x2FEE,
-- FACIAL_chinSkinTop = 0x7226,
-- FACIAL_L_chinSkinTop = 0x3EB3,
-- FACIAL_chinSkinMid = 0x899A,
-- FACIAL_L_chinSkinMid = 0x4427,
-- FACIAL_L_chinSide = 0x4A5E,
-- FACIAL_R_chinSkinMid = 0xF5AF,
-- FACIAL_R_chinSkinTop = 0xF03B,
-- FACIAL_R_chinSide = 0xAA5E,
-- FACIAL_R_underChin = 0x2BF4,
-- FACIAL_L_lipLowerSDK = 0xB9E1,
-- FACIAL_L_lipLowerAnalog = 0x244A,
-- FACIAL_L_lipLowerThicknessV = 0xC749,
-- FACIAL_L_lipLowerThicknessH = 0xC67B,
-- FACIAL_lipLowerSDK = 0x7285,
-- FACIAL_lipLowerAnalog = 0xD97B,
-- FACIAL_lipLowerThicknessV = 0xC5BB,
-- FACIAL_lipLowerThicknessH = 0xC5ED,
-- FACIAL_R_lipLowerSDK = 0xA034,
-- FACIAL_R_lipLowerAnalog = 0xC2D9,
-- FACIAL_R_lipLowerThicknessV = 0xC6E9,
-- FACIAL_R_lipLowerThicknessH = 0xC6DB,
-- FACIAL_nose = 0x20F1,
-- FACIAL_L_nostril = 0x7322,
-- FACIAL_L_nostrilThickness = 0xC15F,
-- FACIAL_noseLower = 0xE05A,
-- FACIAL_L_noseLowerThickness = 0x79D5,
-- FACIAL_R_noseLowerThickness = 0x7975,
-- FACIAL_noseTip = 0x6A60,
-- FACIAL_R_nostril = 0x7922,
-- FACIAL_R_nostrilThickness = 0x36FF,
-- FACIAL_noseUpper = 0xA04F,
-- FACIAL_L_noseUpper = 0x1FB8,
-- FACIAL_noseBridge = 0x9BA3,
-- FACIAL_L_nasolabialFurrow = 0x5ACA,
-- FACIAL_L_nasolabialBulge = 0xCD78,
-- FACIAL_L_cheekLower = 0x6907,
-- FACIAL_L_cheekLowerBulge1 = 0xE3FB,
-- FACIAL_L_cheekLowerBulge2 = 0xE3FC,
-- FACIAL_L_cheekInner = 0xE7AB,
-- FACIAL_L_cheekOuter = 0x8161,
-- FACIAL_L_eyesackLower = 0x771B,
-- FACIAL_L_eyeball = 0x1744,
-- FACIAL_L_eyelidLower = 0x998C,
-- FACIAL_L_eyelidLowerOuterSDK = 0xFE4C,
-- FACIAL_L_eyelidLowerOuterAnalog = 0xB9AA,
-- FACIAL_L_eyelashLowerOuter = 0xD7F6,
-- FACIAL_L_eyelidLowerInnerSDK = 0xF151,
-- FACIAL_L_eyelidLowerInnerAnalog = 0x8242,
-- FACIAL_L_eyelashLowerInner = 0x4CCF,
-- FACIAL_L_eyelidUpper = 0x97C1,
-- FACIAL_L_eyelidUpperOuterSDK = 0xAF15,
-- FACIAL_L_eyelidUpperOuterAnalog = 0x67FA,
-- FACIAL_L_eyelashUpperOuter = 0x27B7,
-- FACIAL_L_eyelidUpperInnerSDK = 0xD341,
-- FACIAL_L_eyelidUpperInnerAnalog = 0xF092,
-- FACIAL_L_eyelashUpperInner = 0x9B1F,
-- FACIAL_L_eyesackUpperOuterBulge = 0xA559,
-- FACIAL_L_eyesackUpperInnerBulge = 0x2F2A,
-- FACIAL_L_eyesackUpperOuterFurrow = 0xC597,
-- FACIAL_L_eyesackUpperInnerFurrow = 0x52A7,
-- FACIAL_forehead = 0x9218,
-- FACIAL_L_foreheadInner = 0x843,
-- FACIAL_L_foreheadInnerBulge = 0x767C,
-- FACIAL_L_foreheadOuter = 0x8DCB,
-- FACIAL_skull = 0x4221,
-- FACIAL_foreheadUpper = 0xF7D6,
-- FACIAL_L_foreheadUpperInner = 0xCF13,
-- FACIAL_L_foreheadUpperOuter = 0x509B,
-- FACIAL_R_foreheadUpperInner = 0xCEF3,
-- FACIAL_R_foreheadUpperOuter = 0x507B,
-- FACIAL_L_temple = 0xAF79,
-- FACIAL_L_ear = 0x19DD,
-- FACIAL_L_earLower = 0x6031,
-- FACIAL_L_masseter = 0x2810,
-- FACIAL_L_jawRecess = 0x9C7A,
-- FACIAL_L_cheekOuterSkin = 0x14A5,
-- FACIAL_R_cheekLower = 0xF367,
-- FACIAL_R_cheekLowerBulge1 = 0x599B,
-- FACIAL_R_cheekLowerBulge2 = 0x599C,
-- FACIAL_R_masseter = 0x810,
-- FACIAL_R_jawRecess = 0x93D4,
-- FACIAL_R_ear = 0x1137,
-- FACIAL_R_earLower = 0x8031,
-- FACIAL_R_eyesackLower = 0x777B,
-- FACIAL_R_nasolabialBulge = 0xD61E,
-- FACIAL_R_cheekOuter = 0xD32,
-- FACIAL_R_cheekInner = 0x737C,
-- FACIAL_R_noseUpper = 0x1CD6,
-- FACIAL_R_foreheadInner = 0xE43,
-- FACIAL_R_foreheadInnerBulge = 0x769C,
-- FACIAL_R_foreheadOuter = 0x8FCB,
-- FACIAL_R_cheekOuterSkin = 0xB334,
-- FACIAL_R_eyesackUpperInnerFurrow = 0x9FAE,
-- FACIAL_R_eyesackUpperOuterFurrow = 0x140F,
-- FACIAL_R_eyesackUpperInnerBulge = 0xA359,
-- FACIAL_R_eyesackUpperOuterBulge = 0x1AF9,
-- FACIAL_R_nasolabialFurrow = 0x2CAA,
-- FACIAL_R_temple = 0xAF19,
-- FACIAL_R_eyeball = 0x1944,
-- FACIAL_R_eyelidUpper = 0x7E14,
-- FACIAL_R_eyelidUpperOuterSDK = 0xB115,
-- FACIAL_R_eyelidUpperOuterAnalog = 0xF25A,
-- FACIAL_R_eyelashUpperOuter = 0xE0A,
-- FACIAL_R_eyelidUpperInnerSDK = 0xD541,
-- FACIAL_R_eyelidUpperInnerAnalog = 0x7C63,
-- FACIAL_R_eyelashUpperInner = 0x8172,
-- FACIAL_R_eyelidLower = 0x7FDF,
-- FACIAL_R_eyelidLowerOuterSDK = 0x1BD,
-- FACIAL_R_eyelidLowerOuterAnalog = 0x457B,
-- FACIAL_R_eyelashLowerOuter = 0xBE49,
-- FACIAL_R_eyelidLowerInnerSDK = 0xF351,
-- FACIAL_R_eyelidLowerInnerAnalog = 0xE13,
-- FACIAL_R_eyelashLowerInner = 0x3322,
-- FACIAL_L_lipUpperSDK = 0x8F30,
-- FACIAL_L_lipUpperAnalog = 0xB1CF,
-- FACIAL_L_lipUpperThicknessH = 0x37CE,
-- FACIAL_L_lipUpperThicknessV = 0x38BC,
-- FACIAL_lipUpperSDK = 0x1774,
-- FACIAL_lipUpperAnalog = 0xE064,
-- FACIAL_lipUpperThicknessH = 0x7993,
-- FACIAL_lipUpperThicknessV = 0x7981,
-- FACIAL_L_lipCornerSDK = 0xB1C,
-- FACIAL_L_lipCornerAnalog = 0xE568,
-- FACIAL_L_lipCornerThicknessUpper = 0x7BC,
-- FACIAL_L_lipCornerThicknessLower = 0xDD42,
-- FACIAL_R_lipUpperSDK = 0x7583,
-- FACIAL_R_lipUpperAnalog = 0x51CF,
-- FACIAL_R_lipUpperThicknessH = 0x382E,
-- FACIAL_R_lipUpperThicknessV = 0x385C,
-- FACIAL_R_lipCornerSDK = 0xB3C,
-- FACIAL_R_lipCornerAnalog = 0xEE0E,
-- FACIAL_R_lipCornerThicknessUpper = 0x54C3,
-- FACIAL_R_lipCornerThicknessLower = 0x2BBA,
-- MH_MulletRoot = 0x3E73,
-- MH_MulletScaler = 0xA1C2,
-- MH_Hair_Scale = 0xC664,
-- MH_Hair_Crown = 0x1675,
-- SM_Torch = 0x8D6,
-- FX_Light = 0x8959,
-- FX_Light_Scale = 0x5038,
-- FX_Light_Switch = 0xE18E,
-- BagRoot = 0xAD09,
-- BagPivotROOT = 0xB836,
-- BagPivot = 0x4D11,
-- BagBody = 0xAB6D,
-- BagBone_R = 0x937,
-- BagBone_L = 0x991,
-- SM_LifeSaver_Front = 0x9420,
-- SM_R_Pouches_ROOT = 0x2962,
-- SM_R_Pouches = 0x4141,
-- SM_L_Pouches_ROOT = 0x2A02,
-- SM_L_Pouches = 0x4B41,
-- SM_Suit_Back_Flapper = 0xDA2D,
-- SPR_CopRadio = 0x8245,
-- SM_LifeSaver_Back = 0x2127,
-- MH_BlushSlider = 0xA0CE,
-- SKEL_Tail_01 = 0x347,
-- SKEL_Tail_02 = 0x348,
-- MH_L_Concertina_B = 0xC988,
-- MH_L_Concertina_A = 0xC987,
-- MH_R_Concertina_B = 0xC8E8,
-- MH_R_Concertina_A = 0xC8E7,
-- MH_L_ShoulderBladeRoot = 0x8711,
-- MH_L_ShoulderBlade = 0x4EAF,
-- MH_R_ShoulderBladeRoot = 0x3A0A,
-- MH_R_ShoulderBlade = 0x54AF,
-- FB_R_Ear_000 = 0x6CDF,
-- SPR_R_Ear = 0x63B6,
-- FB_L_Ear_000 = 0x6439,
-- SPR_L_Ear = 0x5B10,
-- FB_TongueA_000 = 0x4206,
-- FB_TongueB_000 = 0x4207,
-- FB_TongueC_000 = 0x4208,
-- SKEL_L_Toe1 = 0x1D6B,
-- SKEL_R_Toe1 = 0xB23F,
-- SKEL_Tail_03 = 0x349,
-- SKEL_Tail_04 = 0x34A,
-- SKEL_Tail_05 = 0x34B,
-- SPR_Gonads_ROOT = 0xBFDE,
-- SPR_Gonads = 0x1C00,
-- FB_L_Brow_Out_001 = 0xE3DB,
-- FB_L_Lid_Upper_001 = 0xB2B6,
-- FB_L_Eye_001 = 0x62AC,
-- FB_L_CheekBone_001 = 0x542E,
-- FB_L_Lip_Corner_001 = 0x74AC,
-- FB_R_Lid_Upper_001 = 0xAA10,
-- FB_R_Eye_001 = 0x6B52,
-- FB_R_CheekBone_001 = 0x4B88,
-- FB_R_Brow_Out_001 = 0x54C,
-- FB_R_Lip_Corner_001 = 0x2BA6,
-- FB_Brow_Centre_001 = 0x9149,
-- FB_UpperLipRoot_001 = 0x4ED2,
-- FB_UpperLip_001 = 0xF18F,
-- FB_L_Lip_Top_001 = 0x4F37,
-- FB_R_Lip_Top_001 = 0x4537,
-- FB_Jaw_001 = 0xB4A0,
-- FB_LowerLipRoot_001 = 0x4324,
-- FB_LowerLip_001 = 0x508F,
-- FB_L_Lip_Bot_001 = 0xB93B,
-- FB_R_Lip_Bot_001 = 0xC33B,
-- FB_Tongue_001 = 0xB987
-- };
function GetPedBoneIndex(ped, boneId)
	return _in(0x3F428D08BE5AAE31, ped, boneId, _ri)
end

--- Returns the hash of the weapon/model/object that killed the ped.
function GetPedCauseOfDeath(ped)
	return _in(0x16FFE42AB2D2DC59, ped, _ri)
end

function GetPedCombatMovement(ped)
	return _in(0xDEA92412FCAEB3F5, ped, _ri)
end

function GetPedCombatRange(ped)
	return _in(0xF9D9F7F2DB8E2FA0, ped, _ri)
end

--- See [`SET_PED_CONFIG_FLAG`](#\_0x1913FE4CBF41C463).
function GetPedConfigFlag(ped, flagId, p2)
	return _in(0x7EE53118C892B513, ped, flagId, p2, _r)
end

function GetPedCurrentMovementSpeed(ped)
	return _in(0xF60165E1D2C5370B, ped, _f, _f, _r)
end
N_0xf60165e1d2c5370b = GetPedCurrentMovementSpeed

--- Returns the zoneID for the overlay if it is a member of collection.
-- enum ePedDecorationZone
-- {
-- ZONE_TORSO = 0,
-- ZONE_HEAD = 1,
-- ZONE_LEFT_ARM = 2,
-- ZONE_RIGHT_ARM = 3,
-- ZONE_LEFT_LEG = 4,
-- ZONE_RIGHT_LEG = 5,
-- ZONE_UNKNOWN = 6,
-- ZONE_NONE = 7
-- };
function GetPedDecorationZoneFromHashes(collection, overlay)
	return _in(0x9FD452BFBE7A7A8B, _ch(collection), _ch(overlay), _ri)
end
GetTattooZone = GetPedDecorationZoneFromHashes

function GetPedDecorationsState(ped)
	return _in(0x71EAB450D86954A1, ped, _ri)
end
N_0x71eab450d86954a1 = GetPedDecorationsState

function GetPedDefensiveAreaPosition(ped, p1)
	return _in(0x3C06B8786DD94CD1, ped, p1, _rv)
end

--- A getter for [SET_PED_DENSITY_MULTIPLIER_THIS_FRAME](#\_0x95E3D6257B166CF2).
-- @return Returns ped density multiplier value.
function GetPedDensityMultiplier()
	return _in(0xf5a904f9, _rf)
end

function GetPedDesiredMoveBlendRatio(ped)
	return _in(0x8517D4A6CA8513ED, ped, _rf)
end

--- Ids
-- 0 - Head
-- 1 - Beard
-- 2 - Hair
-- 3 - Torso
-- 4 - Legs
-- 5 - Hands
-- 6 - Foot
-- 7 - ------
-- 8 - Accessories 1
-- 9 - Accessories 2
-- 10- Decals
-- 11 - Auxiliary parts for torso
function GetPedDrawableVariation(ped, componentId)
	return _in(0x67F3780DD425D4FC, ped, componentId, _ri)
end

--- Use [`SetPedIlluminatedClothingGlowIntensity`](#\_0x4E90D746056E273D) to set the illuminated clothing glow intensity for a specific ped.
-- @param ped The ped to get the glow intensity from.
-- @return A float between 0.0 and 1.0 representing the current illuminated clothing glow intensity.
function GetPedEmissiveIntensity(ped)
	return _in(0x1461B28A06717D68, ped, _rf)
end
N_0x1461b28a06717d68 = GetPedEmissiveIntensity
GetPedIlluminatedClothingGlowIntensity = GetPedEmissiveIntensity

function GetPedEnveffScale(ped)
	return _in(0x9C14D30395A51A3C, ped, _rf)
end

--- NativeDB Introduced: v2189
function GetPedEventData(ped, eventType, outData)
	return _in(0xBA656A3BB01BDEA3, ped, eventType, _ii(outData) --[[ may be optional ]], _r)
end

--- Gets the offset the specified ped has moved since the previous tick.
-- If worldSpace is false, the returned offset is relative to the ped. That is, if the ped has moved 1 meter right and 5 meters forward, it'll return 1,5,0.
-- If worldSpace is true, the returned offset is relative to the world. That is, if the ped has moved 1 meter on the X axis and 5 meters on the Y axis, it'll return 1,5,0.
function GetPedExtractedDisplacement(ped, worldSpace)
	return _in(0xE0AF41401ADF87E3, ped, worldSpace, _rv)
end

--- A getter for [`_SET_PED_EYE_COLOR`](#\_0x50B56988B170AFDF).
-- @param ped The target ped
-- @return Returns ped's eye colour, or -1 if fails to get.
function GetPedEyeColor(ped)
	return _in(0x76BBA2CEE66D47E9, ped, _ri)
end
N_0x76bba2cee66d47e9 = GetPedEyeColor

--- A getter for [\_SET_PED_EYE_COLOR](#\_0x50B56988B170AFDF). Returns -1 if fails to get.
-- @param ped The target ped
-- @return Returns ped's eye colour, or -1 if fails to get.
function GetPedEyeColor(ped)
	return _in(0xa47b860f, ped, _ri)
end

--- A getter for [\_SET_PED_FACE_FEATURE](#\_0x71A5C1DBA060049E). Returns 0.0 if fails to get.
-- @param ped The target ped
-- @param index Face feature index
-- @return Returns ped's face feature value, or 0.0 if fails to get.
function GetPedFaceFeature(ped, index)
	return _in(0xba352add, ped, index, _rf)
end

--- Returns the group id of which the specified ped is a member of.
function GetPedGroupIndex(ped)
	return _in(0xF162E133B4E7A675, ped, _ri)
end

--- A getter for [\_SET_PED_HAIR_COLOR](#\_0x4CFFC65454C93A49). Returns -1 if fails to get.
-- @param ped The target ped
-- @return Returns ped's primary hair colour.
function GetPedHairColor(ped)
	return _in(0xa3ea2893, ped, _ri)
end

--- A getter for [\_SET_PED_HAIR_COLOR](#\_0x4CFFC65454C93A49). Returns -1 if fails to get.
-- @param ped The target ped
-- @return Returns ped's secondary hair colour.
function GetPedHairHighlightColor(ped)
	return _in(0x4b087305, ped, _ri)
end

--- Input: Haircolor index, value between 0 and 63 (inclusive).
-- Output: RGB values for the haircolor specified in the input.
-- This is used with the hair color swatches scaleform.
-- Use [`_0x013E5CFC38CD5387`](#\_0x013E5CFC38CD5387) to get the makeup colors.
-- @param hairColorIndex The hair color index. Value between 0-63 (inclusive).
-- @param outR Output red value.
-- @param outG Output green value.
-- @param outB Output blue value.
function GetPedHairRgbColor(hairColorIndex)
	return _in(0x4852FC386E2E1BB5, hairColorIndex, _i, _i, _i)
end
N_0x4852fc386e2e1bb5 = GetPedHairRgbColor
GetHairRgbColor = GetPedHairRgbColor

--- The pointer is to a padded struct that matches the arguments to SET_PED_HEAD_BLEND_DATA(...). There are 4 bytes of padding after each field.
-- pass this struct in the second parameter
-- typedef struct
-- {
-- int shapeFirst, shapeSecond, shapeThird;
-- int skinFirst, skinSecond, skinThird;
-- float shapeMix, skinMix, thirdMix;
-- } headBlendData;
function GetPedHeadBlendData(ped, headBlendData)
	return _in(0x2746BD9D88C5C5D0, ped, _ii(headBlendData) --[[ may be optional ]], _r)
end
GetPedHeadBlendData = GetPedHeadBlendData

--- Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
-- Used when calling SET_PED_HEAD_BLEND_DATA.
function GetPedHeadBlendFirstIndex(type)
	return _in(0x68D353AB88B97E0C, type, _ri)
end
GetFirstParentIdForPedType = GetPedHeadBlendFirstIndex

--- Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
function GetPedHeadBlendNumHeads(type)
	return _in(0x5EF37013A6539C9D, type, _ri)
end
GetNumParentPedsOfType = GetPedHeadBlendNumHeads

--- A getter for [SET_PED_HEAD_OVERLAY](#\_0x48F44967FA05CC1E) and [\_SET_PED_HEAD_OVERLAY_COLOR](#\_0x497BF74A7B9CB952) natives.
-- @param ped The target ped
-- @param index Overlay index
-- @param overlayValue Overlay value pointer
-- @param colourType Colour type pointer
-- @param firstColour First colour pointer
-- @param secondColour Second colour pointer
-- @param overlayOpacity Opacity pointer
-- @return Returns ped's head overlay data.
function GetPedHeadOverlayData(ped, index)
	return _in(0xc46ee605, ped, index, _i, _i, _i, _i, _f, _r)
end

--- Used with freemode (online) characters.
function GetPedHeadOverlayNum(overlayID)
	return _in(0xCF1CE768BB43480E, overlayID, _ri)
end
GetNumHeadOverlayValues = GetPedHeadOverlayNum

--- Likely a char, if that overlay is not set, e.i. "None" option, returns 255;
-- This might be the once removed native GET_PED_HEAD_OVERLAY.
function GetPedHeadOverlayValue(ped, overlayID)
	return _in(0xA60EF3B6461A4D43, ped, overlayID, _ri)
end

function GetPedHelmetStoredHatPropIndex(ped)
	return _in(0x451294E859ECC018, ped, _ri)
end
N_0x451294e859ecc018 = GetPedHelmetStoredHatPropIndex

function GetPedHelmetStoredHatTexIndex(ped)
	return _in(0x9D728C1E12BF5518, ped, _ri)
end
N_0x9d728c1e12bf5518 = GetPedHelmetStoredHatTexIndex

--- Gets the ped in the specified seat of the passed vehicle.
-- If there is no ped in the seat, and the game considers the vehicle as ambient population, this will create a random occupant ped in the seat, which may be cleaned up by the game fairly soon if not marked as script-owned mission entity.
-- **NativeDB Added Parameter 3**: BOOL p2 (uses a different GetOccupant function)
-- @param vehicle The vehicle to get the ped for.
-- @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
-- @return A handle to a ped in the specified vehicle seat, or 0 if no such ped existed.
function GetPedInVehicleSeat(vehicle, seatIndex)
	return _in(0xBB40DD2270B65366, vehicle, seatIndex, _ri)
end

--- Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
function GetPedIndexFromEntityIndex(entity)
	return _in(0x04A2A40C73395041, entity, _ri)
end

function GetPedLastDamageBone(ped, outBone)
	return _in(0xD75960F6BD9EA49C, ped, _ii(outBone) --[[ may be optional ]], _r)
end

--- Pass ped. Pass address of Vector3.
-- The coord will be put into the Vector3.
-- The return will determine whether there was a coord found or not.
function GetPedLastWeaponImpactCoord(ped, coords)
	return _in(0x6C4D0409BA1A2BC2, ped, _v, _r)
end

--- Input: Makeup color index, value between 0 and 63 (inclusive).
-- Output: RGB values for the makeup color specified in the input.
-- This is used with the makeup color swatches scaleform.
-- Use [`_0x4852FC386E2E1BB5`](#\_0x4852FC386E2E1BB5) to get the hair colors.
-- @param makeupColorIndex The hair color index. Value between 0-63 (inclusive).
-- @param outR Output red value.
-- @param outG Output green value.
-- @param outB Output blue value.
function GetPedMakeupRgbColor(makeupColorIndex)
	return _in(0x013E5CFC38CD5387, makeupColorIndex, _i, _i, _i)
end
N_0x013e5cfc38cd5387 = GetPedMakeupRgbColor
GetMakeupRgbColor = GetPedMakeupRgbColor

function GetPedMaxHealth(ped)
	return _in(0x4700A416E8324EF3, ped, _ri)
end

function GetPedMoney(ped)
	return _in(0x3F69145BBA87BAE7, ped, _ri)
end

--- Console/PC structure definitions and example: pastebin.com/SsFej963
-- For FiveM/Cfx.Re use-cases refer to: [`GET_GAME_POOL`](#\_0x2B9D4F50).
-- @param ignore Ped type to ignore
function GetPedNearbyPeds(ped, ignore)
	return _in(0x23F8F5FC7E8C4A6B, ped, _i, ignore, _ri)
end

--- Returns size of array, passed into the second variable.
-- See below for usage information.
-- This function actually requires a struct, where the first value is the maximum number of elements to return.  Here is a sample of how I was able to get it to work correctly, without yet knowing the struct format.
-- //Setup the array
-- const int numElements = 10;
-- const int arrSize = numElements * 2 + 2;
-- Any veh[arrSize];
-- //0 index is the size of the array
-- veh[0] = numElements;
-- int count = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), veh);
-- if (veh != NULL)
-- {
-- //Simple loop to go through results
-- for (int i = 0; i < count; i++)
-- {
-- int offsettedID = i * 2 + 2;
-- //Make sure it exists
-- if (veh[offsettedID] != NULL && ENTITY::DOES_ENTITY_EXIST(veh[offsettedID]))
-- {
-- //Do something
-- }
-- }
-- }
-- Here's the right way to do it (console and pc):
-- pastebin.com/SsFej963
function GetPedNearbyVehicles(ped, sizeAndVehs)
	return _in(0xCFF869CBFA210D82, ped, _ii(sizeAndVehs) --[[ may be optional ]], _ri)
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function GetPedPaletteVariation(ped, componentId)
	return _in(0xE3DD5F2A84B42281, ped, componentId, _ri)
end

--- -1: no landing
-- 0: landing on both feet
-- 1: stumbling
-- 2: rolling
-- 3: ragdoll
function GetPedParachuteLandingType(ped)
	return _in(0x8B9F1FC6AE8166C0, ped, _ri)
end

--- Returns:
-- -1: Normal
-- 0: Wearing parachute on back
-- 1: Parachute opening
-- 2: Parachute open
-- 3: Falling to doom (e.g. after exiting parachute)
-- Normal means no parachute?
function GetPedParachuteState(ped)
	return _in(0x79CFD9827CC979B6, ped, _ri)
end

function GetPedParachuteTintIndex(ped, outTintIndex)
	return _in(0xEAF5F7E5AE7C6C9D, ped, _ii(outTintIndex) --[[ may be optional ]])
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function GetPedPropIndex(ped, componentId)
	return _in(0x898CC20EA75BACD8, ped, componentId, _ri)
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function GetPedPropTextureIndex(ped, componentId)
	return _in(0xE131A28626F81AB2, ped, componentId, _ri)
end

function GetPedRagdollBoneIndex(ped, bone)
	return _in(0x2057EF813397A772, ped, bone, _ri)
end

function GetPedRelationshipGroupDefaultHash(ped)
	return _in(0x42FDD0F017B1E38E, ped, _ri)
end

function GetPedRelationshipGroupHash(ped)
	return _in(0x7DBDD04862D95F04, ped, _ri)
end

function GetPedResetFlag(ped, flagId)
	return _in(0xAF9E59B1B1FBF2A0, ped, flagId, _r)
end

--- Returns the Entity (Ped, Vehicle, or ?Object?) that killed the 'ped'
-- Is best to check if the Ped is dead before asking for its killer.
function GetPedSourceOfDeath(ped)
	return _in(0x93C8B64DEB84728C, ped, _ri)
end
GetPedKiller = GetPedSourceOfDeath

--- Returns whether the entity is in stealth mode
function GetPedStealthMovement(ped)
	return _in(0x7C2AC9CA66575FBF, ped, _r)
end

--- NativeDB Introduced: v2372
function GetPedTaskCombatTarget(ped, p1)
	return _in(0x32C27A11307B01CC, ped, p1, _ri)
end
N_0x32c27a11307b01cc = GetPedTaskCombatTarget

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function GetPedTextureVariation(ped, componentId)
	return _in(0x04A355E041E004E6, ped, componentId, _ri)
end

function GetPedTimeOfDeath(ped)
	return _in(0x1E98817B311AE98A, ped, _ri)
end
GetPedTimeOfDeath = GetPedTimeOfDeath
N_0x1e98817b311ae98a = GetPedTimeOfDeath

--- Ped types:
-- ```cpp
-- enum ePedType
-- {
-- PED_TYPE_PLAYER_0,
-- PED_TYPE_PLAYER_1,
-- PED_TYPE_NETWORK_PLAYER,
-- PED_TYPE_PLAYER_2,
-- PED_TYPE_CIVMALE,
-- PED_TYPE_CIVFEMALE,
-- PED_TYPE_COP,
-- PED_TYPE_GANG_ALBANIAN,
-- PED_TYPE_GANG_BIKER_1,
-- PED_TYPE_GANG_BIKER_2,
-- PED_TYPE_GANG_ITALIAN,
-- PED_TYPE_GANG_RUSSIAN,
-- PED_TYPE_GANG_RUSSIAN_2,
-- PED_TYPE_GANG_IRISH,
-- PED_TYPE_GANG_JAMAICAN,
-- PED_TYPE_GANG_AFRICAN_AMERICAN,
-- PED_TYPE_GANG_KOREAN,
-- PED_TYPE_GANG_CHINESE_JAPANESE,
-- PED_TYPE_GANG_PUERTO_RICAN,
-- PED_TYPE_DEALER,
-- PED_TYPE_MEDIC,
-- PED_TYPE_FIREMAN,
-- PED_TYPE_CRIMINAL,
-- PED_TYPE_BUM,
-- PED_TYPE_PROSTITUTE,
-- PED_TYPE_SPECIAL,
-- PED_TYPE_MISSION,
-- PED_TYPE_SWAT,
-- PED_TYPE_ANIMAL,
-- PED_TYPE_ARMY
-- };
-- ```
function GetPedType(ped)
	return _in(0xFF059E1E4C01E63C, ped, _ri)
end

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
function GetPedUsingVehicleDoor(vehicle, doorIndex)
	return _in(0x218297BF0CFD853B, vehicle, doorIndex, _ri)
end
N_0x218297bf0cfd853b = GetPedUsingVehicleDoor
GetPedUsingVehicleDoor = GetPedUsingVehicleDoor

--- NativeDB Introduced: v1493
function GetPedVisualFieldCenterAngle(ped)
	return _in(0xEF2C71A32CAD5FBD, ped, _rf)
end

function GetPedWaypointDistance(p0)
	return _in(0xE6A877C64CAF1BC5, p0, _rf)
end

function GetPedWaypointProgress(ped)
	return _in(0x2720AAA75001E094, ped, _ri)
end

function GetPedWeaponLiveryColor(ped, weaponHash, camoComponentHash)
	return _in(0xF0A60040BE558F2D, ped, _ch(weaponHash), _ch(camoComponentHash), _ri)
end
N_0xf0a60040be558f2d = GetPedWeaponLiveryColor

function GetPedWeaponTintIndex(ped, weaponHash)
	return _in(0x2B9EEDC07BD06B9F, ped, _ch(weaponHash), _ri)
end

function GetPedWeapontypeInSlot(ped, weaponSlot)
	return _in(0xEFFED78E9011134D, ped, _ch(weaponSlot), _ri)
end

--- gtaforums.com/topic/885580-ped-headshotmugshot-txd/
function GetPedheadshotTxdString(id)
	return _in(0xDB4EACD4AD0A5D6B, id, _s)
end

function GetPedsJacker(ped)
	return _in(0x9B128DC36C1E04CF, ped, _ri)
end

function GetPhoneGestureAnimCurrentTime(ped)
	return _in(0x47619ABE8B268C60, ped, _rf)
end

function GetPhoneGestureAnimTotalTime(ped)
	return _in(0x1EE0F68A7C25DEC6, ped, _rf)
end

function GetPickupCoords(pickup)
	return _in(0x225B8B35C88029B3, pickup, _rv)
end

function GetPickupGenerationRangeMultiplier()
	return _in(0xB3ECA65C7317F174, _rf)
end
N_0xb3eca65c7317f174 = GetPickupGenerationRangeMultiplier

--- returns pickup hash.
function GetPickupHash(pickupHash)
	return _in(0x5EAAD83F8CFB4575, _ch(pickupHash), _ri)
end
N_0x5eaad83f8cfb4575 = GetPickupHash

--- NativeDB Introduced: v1290
function GetPickupHashFromWeapon(weapon)
	return _in(0xD6429A016084F1A5, _ch(weapon), _ri)
end
N_0xd6429a016084f1a5 = GetPickupHashFromWeapon

function GetPickupObject(pickup)
	return _in(0x5099BC55630B25AE, pickup, _ri)
end
N_0x5099bc55630b25ae = GetPickupObject

function GetPlayerCurrentStealthNoise(player)
	return _in(0x2F395D61F3A1F877, player, _rf)
end

function GetPlayerFakeWantedLevel(player)
	return _in(0x56105E599CAB0EFA, player, _ri)
end
N_0x56105e599cab0efa = GetPlayerFakeWantedLevel

function GetPlayerFromServerId(serverId)
	return _in(0x344ea166, serverId, _ri)
end

--- Returns the group ID the player is member of.
function GetPlayerGroup(player)
	return _in(0x0D127585F77030AF, player, _ri)
end

function GetPlayerHasReserveParachute(player)
	return _in(0x5DDFE2FF727F3CA3, player, _r)
end

function GetPlayerHealthRechargeLimit(player)
	return _in(0x8BC515BAE4AAF8FF, player, _rf)
end
N_0x8bc515bae4aaf8ff = GetPlayerHealthRechargeLimit

--- Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT
function GetPlayerIndex()
	return _in(0xA5EDC40EF369B48D, _ri)
end

--- Returns the Player's Invincible status.
-- This function will always return false if 0x733A643B5B0C53C1 is used to set the invincibility status. To always get the correct result, use this:
-- bool IsPlayerInvincible(Player player)
-- {
-- auto addr = getScriptHandleBaseAddress(GET_PLAYER_PED(player));
-- if (addr)
-- {
-- DWORD flag = *(DWORD *)(addr + 0x188);
-- return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);
-- }
-- return false;
-- }
-- ============================================================
-- This has bothered me for too long, whoever may come across this, where did anyone ever come up with this made up hash? 0x733A643B5B0C53C1 I've looked all over old hash list, and this nativedb I can not find that PC hash anywhere. What native name is it now or was it?
function GetPlayerInvincible(player)
	return _in(0xB721981B2B939E07, player, _r)
end

--- Unlike [GET_PLAYER_INVINCIBLE](#\_0xB721981B2B939E07) this native gets both [SET_PLAYER_INVINCIBLE_KEEP_RAGDOLL_ENABLED](#\_0x6BC97F4F4BB3C04B) and [SET_PLAYER_INVINCIBLE](#\_0x239528EACDC3E7DE) invincibility state.
-- @param player The player id
-- @return A boolean to tell if the player is invincible.
function GetPlayerInvincible_2(player)
	return _in(0xf2e3912b, player, _r)
end

function GetPlayerMaxArmour(player)
	return _in(0x92659B4CE1863CB3, player, _ri)
end

function GetPlayerMaxStamina(playerId)
	return _in(0xd014ab79, playerId, _rf)
end

--- A getter for [SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER](#\_0x4A3DC7ECCC321032).
-- @param playerId The player index.
-- @return Returns player melee weapon damage modifier value.
function GetPlayerMeleeWeaponDamageModifier(playerId)
	return _in(0x8689a825, playerId, _rf)
end

--- A getter for [SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER](#\_0xAE540335B4ABC4E2).
-- @param playerId The player index.
-- @return The value of player melee weapon defense modifier.
function GetPlayerMeleeWeaponDefenseModifier(playerId)
	return _in(0x27e94ef8, playerId, _rf)
end

--- Returns the players name from a specified player index
-- @param player The player index, or -1 to get the local player ped.
-- @return The name of the queried player. "**Invalid**" if the player does not exist.
function GetPlayerName(player)
	return _in(0x6D0DE6A7B5DA71F8, player, _s)
end

--- NativeDB Introduced: v2372
function GetPlayerParachuteModelOverride(player)
	return _in(0xC219887CA3E65C41, player, _ri)
end

function GetPlayerParachutePackTintIndex(player, tintIndex)
	return _in(0x6E9C742F340CE5A2, player, _ii(tintIndex) --[[ may be optional ]])
end

function GetPlayerParachuteSmokeTrailColor(player)
	return _in(0xEF56DBABD3CD4887, player, _i, _i, _i)
end

--- Tints:
-- None = -1,
-- Rainbow = 0,
-- Red = 1,
-- SeasideStripes = 2,
-- WidowMaker = 3,
-- Patriot = 4,
-- Blue = 5,
-- Black = 6,
-- Hornet = 7,
-- AirFocce = 8,
-- Desert = 9,
-- Shadow = 10,
-- HighAltitude = 11,
-- Airbone = 12,
-- Sunrise = 13,
function GetPlayerParachuteTintIndex(player, tintIndex)
	return _in(0x75D3F7A1B0D9B145, player, _ii(tintIndex) --[[ may be optional ]])
end

--- Gets the ped for a specified player index.
-- @param playerId The player index, or -1 to get the local player ped.
-- @return The specified player's ped, or 0 if invalid.
function GetPlayerPed(playerId)
	return _in(0x43A66C31C68491C0, playerId, _ri)
end

function GetPlayerPedIsFollowing(ped)
	return _in(0x6A3975DEA89F9A17, ped, _ri)
end

--- Does the same like PLAYER::GET_PLAYER_PED
function GetPlayerPedScriptIndex(player)
	return _in(0x50FAC3A3E030A6E1, player, _ri)
end

function GetPlayerRadioStationGenre()
	return _in(0xA571991A7FE6CCEB, _ri)
end

--- Returns 255 (radio off index) if the function fails.
function GetPlayerRadioStationIndex()
	return _in(0xE8AF77C4C06ADC93, _ri)
end

--- Returns active radio station name
function GetPlayerRadioStationName()
	return _in(0xF6D733C32076AD03, _s)
end

--- NativeDB Introduced: v2372
function GetPlayerReserveParachuteModelOverride(player)
	return _in(0x37FAAA68DCA9D08D, player, _ri)
end

--- Tints:
-- None = -1,
-- Rainbow = 0,
-- Red = 1,
-- SeasideStripes = 2,
-- WidowMaker = 3,
-- Patriot = 4,
-- Blue = 5,
-- Black = 6,
-- Hornet = 7,
-- AirFocce = 8,
-- Desert = 9,
-- Shadow = 10,
-- HighAltitude = 11,
-- Airbone = 12,
-- Sunrise = 13,
function GetPlayerReserveParachuteTintIndex(player, index)
	return _in(0xD5A016BC3C09CF40, player, _ii(index) --[[ may be optional ]])
end

function GetPlayerRgbColour(player)
	return _in(0xE902EF951DCE178F, player, _i, _i, _i)
end

function GetPlayerServerId(player)
	return _in(0x4d97bcc7, player, _ri)
end

function GetPlayerShortSwitchState()
	return _in(0x20F898A5D9782800, _ri)
end

function GetPlayerSprintStaminaRemaining(player)
	return _in(0x3F9F16F8E65A7ED7, player, _rf)
end

function GetPlayerSprintTimeRemaining(player)
	return _in(0x1885BC9B108B4C99, player, _rf)
end

function GetPlayerStamina(playerId)
	return _in(0xe415ec5c, playerId, _rf)
end

function GetPlayerSwitchInterpOutCurrentTime()
	return _in(0x5B48A06DD0E792A5, _ri)
end
N_0x5b48a06dd0e792a5 = GetPlayerSwitchInterpOutCurrentTime

function GetPlayerSwitchInterpOutDuration()
	return _in(0x08C2D6C52A3104BB, _ri)
end
SetPlayerInvertedUp = GetPlayerSwitchInterpOutDuration
N_0x08c2d6c52a3104bb = GetPlayerSwitchInterpOutDuration

function GetPlayerSwitchJumpCutIndex()
	return _in(0x78C0D93253149435, _ri)
end
N_0x78c0d93253149435 = GetPlayerSwitchJumpCutIndex

function GetPlayerSwitchState()
	return _in(0x470555300D10B2A5, _ri)
end

function GetPlayerSwitchType()
	return _in(0xB3C94A90D9FC9E62, _ri)
end

--- Assigns the handle of locked-on melee target to *entity that you pass it.
-- Returns false if no entity found.
function GetPlayerTargetEntity(player, entity)
	return _in(0x13EDE1A5DBF797C9, player, _ii(entity) --[[ may be optional ]], _r)
end

--- Gets the player's team.
-- Does nothing in singleplayer.
function GetPlayerTeam(player)
	return _in(0x37039302F4E0A008, player, _ri)
end

function GetPlayerUnderwaterTimeRemaining(player)
	return _in(0xA1FCF8E6AF40B731, player, _rf)
end

--- A getter for [SET_PLAYER_VEHICLE_DAMAGE_MODIFIER](#\_0xA50E117CDDF82F0C).
-- @param playerId The player index.
-- @return The value of player vehicle damage modifier.
function GetPlayerVehicleDamageModifier(playerId)
	return _in(0x78f27b1f, playerId, _rf)
end

--- A getter for [SET_PLAYER_VEHICLE_DEFENSE_MODIFIER](#\_0x4C60E6EFDAFF2462).
-- @param playerId The player index.
-- @return The value of player vehicle defense modifier.
function GetPlayerVehicleDefenseModifier(playerId)
	return _in(0x8326e7cd, playerId, _rf)
end

function GetPlayerWantedCentrePosition(player)
	return _in(0x0C92BA89F1AF26F8, player, _rv)
end

function GetPlayerWantedLevel(player)
	return _in(0xE28E54788CE8F12D, player, _ri)
end

--- A getter for [SET_PLAYER_WEAPON_DAMAGE_MODIFIER](#\_0xCE07B9F7817AADA3).
-- @param playerId The player index.
-- @return The value of player weapon damage modifier.
function GetPlayerWeaponDamageModifier(playerId)
	return _in(0x2a3d7cda, playerId, _rf)
end

--- A getter for [SET_PLAYER_WEAPON_DEFENSE_MODIFIER](#\_0x2D83BC011CA14A3C).
-- @param playerId The player index.
-- @return The value of player weapon defense modifier.
function GetPlayerWeaponDefenseModifier(playerId)
	return _in(0xf1543251, playerId, _rf)
end

--- A getter for [\_SET_PLAYER_WEAPON_DEFENSE_MODIFIER\_2](#\_0xBCFDE9EDE4CF27DC).
-- @param playerId The player index.
-- @return The value of player weapon defense modifier 2.
function GetPlayerWeaponDefenseModifier_2(playerId)
	return _in(0x986b65ff, playerId, _rf)
end

--- Alternative: GET_VEHICLE_PED_IS_IN(PLAYER_PED_ID(), 1);
function GetPlayersLastVehicle()
	return _in(0xB6997A7EB3F5C8C0, _ri)
end

function GetPointOnRoadSide(x, y, z, p3, outPosition)
	return _in(0x16F46FB18C8009E4, x, y, z, p3, _v, _r)
end
N_0x16f46fb18c8009e4 = GetPointOnRoadSide

--- Distance traveled in the vehicles current recording.
function GetPositionInRecording(vehicle)
	return _in(0x2DACD605FC681475, vehicle, _rf)
end

--- This native does no interpolation between pathpoints. The same position will be returned for all times up to the next pathpoint in the recording.
-- See [`REQUEST_VEHICLE_RECORDING`](#\_0xAF514CABE74CBF15).
function GetPositionOfVehicleRecordingAtTime(recording, time, script)
	return _in(0xD242728AA6F0FBA2, recording, time, _ts(script), _rv)
end

function GetPositionOfVehicleRecordingIdAtTime(id, time)
	return _in(0x92523B76657A517D, id, time, _rv)
end
N_0x92523b76657a517d = GetPositionOfVehicleRecordingIdAtTime

--- Gets system time as year, month, day, hour, minute and second.
-- Example usage:
-- int year;
-- int month;
-- int day;
-- int hour;
-- int minute;
-- int second;
-- TIME::GET_POSIX_TIME(&year, &month, &day, &hour, &minute, &second);
function GetPosixTime()
	return _in(0xDA488F299A5B164E, _i, _i, _i, _i, _i, _i)
end

--- Returns duration of how long the game has been in power-saving mode (aka "constrained") in milliseconds.
function GetPowerSavingModeDuration()
	return _in(0xABB2FA71C83A1B72, _ri)
end
N_0xabb2fa71c83a1b72 = GetPowerSavingModeDuration

--- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
function GetPrevWeatherTypeHashName()
	return _in(0x564B884A05EC45A3, _ri)
end
GetPrevWeatherType = GetPrevWeatherTypeHashName

function GetProfileSetting(profileSetting)
	return _in(0xC488FF2356EA7791, profileSetting, _ri)
end

function GetProjectileNearPed(ped, weaponHash, distance, ownedByPlayer)
	return _in(0x82FDE6A57EE4EE44, ped, _ch(weaponHash), distance, _v, _i, ownedByPlayer, _r)
end
N_0x82fde6a57ee4ee44 = GetProjectileNearPed

--- Returns String with radio station name.
function GetRadioStationName(radioStation)
	return _in(0xB28ECA15046CA8B9, radioStation, _s)
end

function GetRainLevel()
	return _in(0x96695E368AD855F3, _rf)
end

function GetRandomEventFlag()
	return _in(0xD2D57F1D764117B1, _r)
end

function GetRandomFloatInRange(startRange, endRange)
	return _in(0x313CE5879CEB6FCD, startRange, endRange, _rf)
end

function GetRandomIntInRange(startRange, endRange)
	return _in(0xD53343AA4FB7DD28, startRange, endRange, _ri)
end

--- NativeDB Introduced: v1734
function GetRandomIntInRange_2(startRange, endRange)
	return _in(0xF2D49816A804D134, startRange, endRange, _ri)
end

--- Gets a random ped in the x/y/zRadius near the x/y/z coordinates passed.
-- Ped Types:
-- Any = -1
-- Player = 1
-- Male = 4
-- Female = 5
-- Cop = 6
-- Human = 26
-- SWAT = 27
-- Animal = 28
-- Army = 29
function GetRandomPedAtCoord(x, y, z, xRadius, yRadius, zRadius, pedType)
	return _in(0x876046A8E3A4B71C, x, y, z, xRadius, yRadius, zRadius, pedType, _ri)
end

function GetRandomVehicleBackBumperInSphere(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xB50807EABE20A8DC, p0, p1, p2, p3, p4, p5, p6, _ri)
end

--- A getter for [SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME](#\_0xB3B3359379FE77D3).
-- Same as vehicle density multiplier.
-- @return Returns random vehicle density multiplier value.
function GetRandomVehicleDensityMultiplier()
	return _in(0x7b0d00c5, _rf)
end

function GetRandomVehicleFrontBumperInSphere(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xC5574E0AEB86BA68, p0, p1, p2, p3, p4, p5, p6, _ri)
end

--- Gets a random vehicle in a sphere at the specified position, of the specified radius.
-- x: The X-component of the position of the sphere.
-- y: The Y-component of the position of the sphere.
-- z: The Z-component of the position of the sphere.
-- radius: The radius of the sphere. Max is 9999.9004.
-- modelHash: The vehicle model to limit the selection to. Pass 0 for any model.
-- flags: The bitwise flags that modifies the behaviour of this function.
function GetRandomVehicleInSphere(x, y, z, radius, modelHash, flags)
	return _in(0x386F6CE5BAF6091C, x, y, z, radius, _ch(modelHash), flags, _ri)
end

--- Not present in the retail version! It's just a nullsub.
-- p0 always true (except in one case)
-- p1 a random vehicle hash loaded in memory
-- successIndicator: 0 if success, -1 if failed
function GetRandomVehicleModelInMemory(p0)
	return _in(0x055BF0AC0C34F4FD, p0, _i, _i)
end

function GetRandomVehicleNode(x, y, z, radius, p4, p5, p6)
	return _in(0x93E0DB8440B73A7D, x, y, z, radius, p4, p5, p6, _v, _i, _r)
end

--- Example:
-- OBJECT::GET_RAYFIRE_MAP_OBJECT(-809.9619750976562, 170.919, 75.7406997680664, 3.0, "des_tvsmash");
function GetRayfireMapObject(x, y, z, radius, name)
	return _in(0xB48FCED898292E52, x, y, z, radius, _ts(name), _ri)
end
N_0xb48fced898292e52 = GetRayfireMapObject
GetDesObject = GetRayfireMapObject

--- `object`: The des-object handle to get the animation progress from.
-- Return value is a float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0.
-- @param object The des-object handle to get the animation progress from.
-- @return A float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0.
function GetRayfireMapObjectAnimPhase(object)
	return _in(0x260EE4FDBDF4DB01, object, _rf)
end
N_0x260ee4fdbdf4db01 = GetRayfireMapObjectAnimPhase
GetDesObjectAnimProgress = GetRayfireMapObjectAnimPhase

--- Returns all commands that are registered in the command system.
-- The data returned adheres to the following layout:
-- ```
-- [
-- {
-- "name": "cmdlist"
-- },
-- {
-- "name": "command1"
-- }
-- ]
-- ```
-- @return An object containing registered commands.
function GetRegisteredCommands()
	return _in(0xd4bef069, _ro)
end

--- Gets the relationship between two groups. This should be called twice (once for each group).
-- Relationship types:
-- 0 = Companion
-- 1 = Respect
-- 2 = Like
-- 3 = Neutral
-- 4 = Dislike
-- 5 = Hate
-- 255 = Pedestrians
-- Example:
-- PED::GET_RELATIONSHIP_BETWEEN_GROUPS(l_1017, 0xA49E591C);
-- PED::GET_RELATIONSHIP_BETWEEN_GROUPS(0xA49E591C, l_1017);
function GetRelationshipBetweenGroups(group1, group2)
	return _in(0x9E6B70061662AE5C, _ch(group1), _ch(group2), _ri)
end

--- Gets the relationship between two peds. This should be called twice (once for each ped).
-- Relationship types:
-- 0 = Companion
-- 1 = Respect
-- 2 = Like
-- 3 = Neutral
-- 4 = Dislike
-- 5 = Hate
-- 255 = Pedestrians
-- (Credits: Inco)
-- Example:
-- PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, l_1017, 0xA49E591C);
-- PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, 0xA49E591C, l_1017);
function GetRelationshipBetweenPeds(ped1, ped2)
	return _in(0xEBA5AD3A0EAF7121, ped1, ped2, _ri)
end

--- This gets the height of the FONT and not the total text. You need to get the number of lines your text uses, and get the height of a newline (I'm using a smaller value) to get the total text height.
-- Old name: _GET_TEXT_SCALE_HEIGHT
function GetRenderedCharacterHeight(size, font)
	return _in(0xDB88A37483346780, size, font, _rf)
end
N_0xdb88a37483346780 = GetRenderedCharacterHeight
GetTextScaleHeight = GetRenderedCharacterHeight

function GetRenderingCam()
	return _in(0x5234F9F10919EABA, _ri)
end

function GetReplayStatAtIndex(index)
	return _in(0x8098C8D6597AAE18, index, _ri)
end
N_0x8098c8d6597aae18 = GetReplayStatAtIndex

function GetReplayStatCount()
	return _in(0xDC9274A7EF6B2867, _ri)
end
N_0xdc9274a7ef6b2867 = GetReplayStatCount

function GetReplayStatMissionType()
	return _in(0x2B626A0150E4D449, _ri)
end
N_0x2b626a0150e4d449 = GetReplayStatMissionType

function GetRequestingnightvision()
	return _in(0x35FB78DC42B7BD21, _r)
end
N_0x35fb78dc42b7bd21 = GetRequestingnightvision

function GetResourceByFindIndex(findIndex)
	return _in(0x387246b7, findIndex, _s)
end

--- A getter for [SET_RESOURCE_KVP_FLOAT](#\_0x9ADD2938).
-- @param key The key to fetch
-- @return A float that contains the value stored in the Kvp or nil/null if none.
function GetResourceKvpFloat(key)
	return _in(0x35bdceea, _ts(key), _rf)
end

--- A getter for [SET_RESOURCE_KVP_INT](#\_0x6A2B1E8).
-- @param key The key to fetch
-- @return A int that contains the value stored in the Kvp or nil/null if none.
function GetResourceKvpInt(key)
	return _in(0x557b586a, _ts(key), _ri)
end

--- A getter for [SET_RESOURCE_KVP](#\_0x21C7A35B).
-- @param key The key to fetch
-- @return A string that contains the value stored in the Kvp or nil/null if none.
function GetResourceKvpString(key)
	return _in(0x5240da5a, _ts(key), _s)
end

--- Gets the metadata value at a specified key/index from a resource's manifest.
-- See also: [Resource manifest](https://docs.fivem.net/resources/manifest/)
-- @param resourceName The resource name.
-- @param metadataKey The key in the resource manifest.
-- @param index The value index, in a range from \[0..GET_NUM_RESOURCE_METDATA-1].
function GetResourceMetadata(resourceName, metadataKey, index)
	return _in(0x964bab1d, _ts(resourceName), _ts(metadataKey), index, _s)
end

--- Returns the current state of the specified resource.
-- @param resourceName The name of the resource.
-- @return The resource state. One of `"missing", "started", "starting", "stopped", "stopping", "uninitialized" or "unknown"`.
function GetResourceState(resourceName)
	return _in(0x4039b485, _ts(resourceName), _s)
end

function GetRoadSidePointWithHeading(x, y, z, heading, outPosition)
	return _in(0xA0F8A7517A273C05, x, y, z, heading, _v, _r)
end
N_0xa0f8a7517a273c05 = GetRoadSidePointWithHeading

function GetRoomKeyForGameViewport()
	return _in(0xA6575914D2A0B450, _ri)
end
N_0xa6575914d2a0b450 = GetRoomKeyForGameViewport
GetRoomKeyFromGameplayCam = GetRoomKeyForGameViewport

--- Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.
function GetRoomKeyFromEntity(entity)
	return _in(0x47C2A06D4F5F424B, entity, _ri)
end

--- cpp
-- enum eRopeFlags
-- {
-- DrawShadowEnabled = 2,
-- Breakable = 4,
-- RopeUnwindingFront = 8,
-- RopeWinding = 32
-- }
-- @param rope The rope to get the flags for.
-- @return The rope's flags.
function GetRopeFlags(rope)
	return _in(0xa80ffe99, rope, _ri)
end

function GetRopeLastVertexCoord(ropeId)
	return _in(0x21BB0FBD3E217C2D, ropeId, _rv)
end

function GetRopeLengthChangeRate(rope)
	return _in(0x66d70ea3, rope, _rf)
end

function GetRopeTimeMultiplier(rope)
	return _in(0xf341e6ca, rope, _rf)
end

function GetRopeUpdateOrder(rope)
	return _in(0x2ab2e0f6, rope, _ri)
end

function GetRopeVertexCoord(ropeId, vertex)
	return _in(0xEA61CA8E80F09E4D, ropeId, vertex, _rv)
end

function GetRopeVertexCount(ropeId)
	return _in(0x3655F544CD30F0B5, ropeId, _ri)
end

function GetRotationOfVehicleRecordingAtTime(recording, time, script)
	return _in(0x2058206FBE79A8AD, recording, time, _ts(script), _rv)
end

function GetRotationOfVehicleRecordingIdAtTime(id, time)
	return _in(0xF0F2103EFAF8CBA7, id, time, _rv)
end
N_0xf0f2103efaf8cba7 = GetRotationOfVehicleRecordingIdAtTime

--- Gets the height of the specified runtime texture.
-- @param tex A handle to the runtime texture.
-- @return The height in pixels.
function GetRuntimeTextureHeight(tex)
	return _in(0x3574aace, tex, _ri)
end

--- Gets the row pitch of the specified runtime texture, for use when creating data for `SET_RUNTIME_TEXTURE_ARGB_DATA`.
-- @param tex A handle to the runtime texture.
-- @return The row pitch in bytes.
function GetRuntimeTexturePitch(tex)
	return _in(0xca0a085f, tex, _ri)
end

--- Gets the width of the specified runtime texture.
-- @param tex A handle to the runtime texture.
-- @return The width in pixels.
function GetRuntimeTextureWidth(tex)
	return _in(0xc9f55558, tex, _ri)
end

--- Flags are:
-- 1 = 1 = B02_IsFootpath
-- 2 = 4 = !B15_InteractionUnk
-- 4 = 0x20 = !B14_IsInterior
-- 8 = 0x40 = !B07_IsWater
-- 16 = 0x200 = B17_IsFlatGround
-- When onGround == true outPosition is a position located on the nearest pavement.
-- When a safe coord could not be found the result of a function is false and outPosition == Vector3.Zero.
-- In the scripts these flags are used: 0, 14, 12, 16, 20, 21, 28. 0 is most commonly used, then 16.
-- 16 works for me, 0 crashed the script.
function GetSafeCoordForPed(x, y, z, onGround, flags)
	return _in(0xB61C8E878A4199CA, x, y, z, onGround, _v, flags, _r)
end

function GetSafePickupCoords(x, y, z, p3, p4)
	return _in(0x6E16BC2503FF1FF0, x, y, z, p3, p4, _rv)
end

--- Gets the scale of safe zone. if the safe zone size scale is max, it will return 1.0.
function GetSafeZoneSize()
	return _in(0xBAF107B6BB2C97F0, _rf)
end

--- Gets mouse selection data from scaleforms with mouse support. Must be checked every frame
-- Selection types, found in MOUSE_EVENTS.as:
-- MOUSE_DRAG_OUT = 0;
-- MOUSE_DRAG_OVER = 1;
-- MOUSE_DOWN = 2;
-- MOUSE_MOVE = 3;
-- MOUSE_UP = 4;
-- MOUSE_PRESS = 5;
-- MOUSE_RELEASE = 6;
-- MOUSE_RELEASE_OUTSIDE = 7;
-- MOUSE_ROLL_OUT = 8;
-- MOUSE_ROLL_OVER = 9;
-- MOUSE_WHEEL_UP = 10;
-- MOUSE_WHEEL_DOWN = 11;
-- Scaleforms that this works with:
-- *   COLOUR_SWITCHER\_02
-- *   MP_RESULTS_PANEL
-- *   MP_NEXT_JOB_SELECTION
-- *   SC_LEADERBOARD
-- Probably works with other scaleforms, needs more research.
-- @param scaleformHandle Handle of the scaleform
-- @param received Returns a boolean indicating if the data was received successfully
-- @param slotIndex Index of the slot the mouse is hovering on
-- @param p4 Purpose unknown, always returns -1 or 0. Returns item index if using the COLOUR_SWITCHER\_02 scaleform
function GetScaleformMovieCursorSelection(scaleformHandle)
	return _in(0x632B2940C67F4EA9, scaleformHandle, _i --[[ actually bool ]], _i, _i, _i, _r)
end
N_0x632b2940c67f4ea9 = GetScaleformMovieCursorSelection

--- methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
function GetScaleformMovieMethodReturnValueBool(methodReturn)
	return _in(0xD80A80346A45D761, methodReturn, _r)
end
N_0xd80a80346a45d761 = GetScaleformMovieMethodReturnValueBool

--- Used to get a return value from a scaleform function. Returns an int in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING returns a string.
-- @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
-- @return Returns an int in the same way `GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING` returns a string.
function GetScaleformMovieMethodReturnValueInt(method_return)
	return _in(0x2DE7EFA66B906036, method_return, _ri)
end
N_0x2de7efa66b906036 = GetScaleformMovieMethodReturnValueInt
GetScaleformMovieFunctionReturnInt = GetScaleformMovieMethodReturnValueInt

--- Used to get a return value from a scaleform function. Returns a string in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT returns an int.
-- @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
-- @return Returns a string in the same way `GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT` returns an int.
function GetScaleformMovieMethodReturnValueString(method_return)
	return _in(0xE1E258829A885245, method_return, _s)
end
SittingTv = GetScaleformMovieMethodReturnValueString
GetScaleformMovieFunctionReturnString = GetScaleformMovieMethodReturnValueString

--- A getter for [SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME](#\_0x7A556143A1C03898).
-- @return Returns scenario ped density multiplier value.
function GetScenarioPedDensityMultiplier()
	return _in(0x77c598b2, _rf)
end

--- Convert a world coordinate into its relative screen coordinate.  (WorldToScreen)
-- Returns a boolean; whether or not the operation was successful. It will return false if the coordinates given are not visible to the rendering camera.
-- For .NET users...
-- VB:
-- Public Shared Function World3DToScreen2d(pos as vector3) As Vector2
-- Dim x2dp, y2dp As New Native.OutputArgument
-- Native.Function.Call(Of Boolean)(Native.Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.x, pos.y, pos.z, x2dp, y2dp)
-- Return New Vector2(x2dp.GetResult(Of Single), y2dp.GetResult(Of Single))
-- End Function
-- C#:
-- Vector2 World3DToScreen2d(Vector3 pos)
-- {
-- var x2dp = new OutputArgument();
-- var y2dp = new OutputArgument();
-- Function.Call<bool>(Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.X, pos.Y, pos.Z, x2dp, y2dp);
-- return new Vector2(x2dp.GetResult<float>(), y2dp.GetResult<float>());
-- }
-- //USE VERY SMALL VALUES FOR THE SCALE OF RECTS/TEXT because it is dramatically larger on screen than in 3D, e.g '0.05' small.
-- Used to be called _WORLD3D_TO_SCREEN2D
-- I thought we lost you from the scene forever. It does seem however that calling SET_DRAW_ORIGIN then your natives, then ending it. Seems to work better for certain things such as keeping boxes around people for a predator missile e.g.
function GetScreenCoordFromWorldCoord(worldX, worldY, worldZ)
	return _in(0x34E82F05DF2974F5, worldX, worldY, worldZ, _f, _f, _r)
end
World3dToScreen2d = GetScreenCoordFromWorldCoord

--- Hardcoded to always return 1280x720. Use [`_GET_ACTIVE_SCREEN_RESOLUTION`](?\_0x873C9F3104101DD3) to retrieve the correct screen resolution.
function GetScreenResolution()
	return _in(0x888D57E407E63624, _i, _i)
end

function GetScreenblurFadeCurrentTime()
	return _in(0x5CCABFFCA31DDE33, _rf)
end
IsParticleFxDelayedBlink = GetScreenblurFadeCurrentTime

--- Calculates the effective X/Y fractions when applying the values set by `SET_SCRIPT_GFX_ALIGN` and
-- `SET_SCRIPT_GFX_ALIGN_PARAMS`.
-- @param x The input X coordinate.
-- @param y The input Y coordinate.
-- @param calculatedX A pointer to the calculated X value.
-- @param calculatedY A pointer to the calculated Y value.
function GetScriptGfxPosition(x, y)
	return _in(0x6DD8F5AA635EB4B2, x, y, _f, _f)
end
N_0x6dd8f5aa635eb4b2 = GetScriptGfxPosition

--- Gets the status of a script-assigned task.
-- taskHash: https://alloc8or.re/gta5/doc/enums/eScriptTaskHash.txt
function GetScriptTaskStatus(ped, taskHash)
	return _in(0x77F1BEB8863288D5, ped, _ch(taskHash), _ri)
end

function GetScriptedCoverPointCoords(coverpoint)
	return _in(0x594A1028FC2A3E85, coverpoint, _rv)
end

function GetSeatPedIsTryingToEnter(ped)
	return _in(0x6F4C85ACD641BCD2, ped, _ri)
end

function GetSelectedPedWeapon(ped)
	return _in(0x0A6DB4965674D243, ped, _ri)
end

--- returned values:
-- 0 to 7 = task that's currently in progress, 0 meaning the first one.
-- -1 no task sequence in progress.
function GetSequenceProgress(ped)
	return _in(0x00A9010CFE1E3533, ped, _ri)
end

--- Returns the result of a shape test.
-- When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
-- Unless the return value is 2, the other return values are undefined.
-- @param shapeTestHandle A shape test handle.
-- @param hit Whether or not the shape test hit any collisions.
-- @param endCoords The resulting coordinates where the shape test hit a collision.
-- @param surfaceNormal The surface normal of the hit position.
-- @param entityHit Any dynamic entity hit by the shape test.
-- @return `0` if the handle is invalid, `1` if the shape test is still pending, or `2` if the shape test has completed, and the handle should be invalidated.
function GetShapeTestResult(shapeTestHandle)
	return _in(0x3D87450E15D98694, shapeTestHandle, _i --[[ actually bool ]], _v, _v, _i, _ri)
end
GetRaycastResult = GetShapeTestResult

--- Returns the result of a shape test, also returning the material of any touched surface.
-- When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
-- Unless the return value is 2, the other return values are undefined.
-- @param shapeTestHandle A shape test handle.
-- @param hit Whether or not the shape test hit any collisions.
-- @param endCoords The resulting coordinates where the shape test hit a collision.
-- @param surfaceNormal The surface normal of the hit position.
-- @param materialHash hash of the hit material or surface type, see materialFX.dat
-- @param entityHit Any dynamic entity hit by the shape test.
-- @return `0` if the handle is invalid, `1` if the shape test is still pending, or `2` if the shape test has completed, and the handle should be invalidated.
function GetShapeTestResultIncludingMaterial(shapeTestHandle)
	return _in(0x65287525D951F6BE, shapeTestHandle, _i --[[ actually bool ]], _v, _v, _i, _i, _ri)
end
N_0x65287525d951f6be = GetShapeTestResultIncludingMaterial
GetShapeTestResultEx = GetShapeTestResultIncludingMaterial

--- Returns number of possible values of the forcedComponentIndex argument of GET_FORCED_COMPONENT.
function GetShopPedApparelForcedComponentCount(componentHash)
	return _in(0xC6B9DB42C04DD8C3, _ch(componentHash), _ri)
end
GetNumForcedComponents = GetShopPedApparelForcedComponentCount

--- Returns number of possible values of the forcedPropIndex argument of GET_FORCED_PROP.
function GetShopPedApparelForcedPropCount(componentHash)
	return _in(0x017568A8182D98A6, _ch(componentHash), _ri)
end
N_0x017568a8182d98a6 = GetShopPedApparelForcedPropCount

function GetShopPedApparelVariantComponentCount(componentHash)
	return _in(0xC17AD0E5752BECDA, _ch(componentHash), _ri)
end
N_0xc17ad0e5752becda = GetShopPedApparelVariantComponentCount

function GetShopPedApparelVariantPropCount(propHash)
	return _in(0xD40AAC51E8E4C663, _ch(propHash), _ri)
end
N_0xd40aac51e8e4c663 = GetShopPedApparelVariantPropCount

--- More info here: https://gist.github.com/root-cause/3b80234367b0c856d60bf5cb4b826f86
function GetShopPedComponent(componentHash, outComponent)
	return _in(0x74C0E2A57EC66760, _ch(componentHash), _ii(outComponent) --[[ may be optional ]])
end

function GetShopPedOutfit(p0, p1)
	return _in(0xB7952076E444979D, p0, _ii(p1) --[[ may be optional ]])
end

function GetShopPedOutfitComponentVariant(outfit, slot, outComponentVariant)
	return _in(0x19F2A026EDF0013F, _ch(outfit), slot, _ii(outComponentVariant) --[[ may be optional ]], _r)
end
GetPropFromOutfit = GetShopPedOutfitComponentVariant

function GetShopPedOutfitLocate(p0)
	return _in(0x073CA26B079F956E, p0, _ri)
end
N_0x073ca26b079f956e = GetShopPedOutfitLocate

function GetShopPedOutfitPropVariant(outfitHash, variantIndex, outPropVariant)
	return _in(0xA9F9C2E0FDE11CBB, _ch(outfitHash), variantIndex, _ii(outPropVariant) --[[ may be optional ]], _r)
end
N_0xa9f9c2e0fde11cbb = GetShopPedOutfitPropVariant

function GetShopPedProp(componentHash, outProp)
	return _in(0x5D5CAFF661DDF6FC, _ch(componentHash), _ii(outProp) --[[ may be optional ]])
end
N_0x5d5caff661ddf6fc = GetShopPedProp

function GetShopPedQueryComponent(componentId, outComponent)
	return _in(0x249E310B2D920699, componentId, _ii(outComponent) --[[ may be optional ]])
end

--- struct Outfit_s
-- {
-- int mask, torso, pants, parachute, shoes, misc1, tops1, armour, crew, tops2, hat, glasses, earpiece;
-- int maskTexture, torsoTexture, pantsTexture, parachuteTexture, shoesTexture, misc1Texture, tops1Texture,
-- armourTexture, crewTexture, tops2Texture, hatTexture, glassesTexture, earpieceTexture;
-- };
function GetShopPedQueryOutfit(outfitIndex, outfit)
	return _in(0x6D793F03A631FE56, outfitIndex, _ii(outfit) --[[ may be optional ]])
end

function GetShopPedQueryProp(componentId, outProp)
	return _in(0xDE44A00999B2837D, componentId, _ii(outProp) --[[ may be optional ]])
end

function GetSizeOfSaveData(p0)
	return _in(0xA09F896CE912481F, p0, _ri)
end
N_0xa09f896ce912481f = GetSizeOfSaveData

function GetSnowLevel()
	return _in(0xC5868A966E5BE3AE, _rf)
end

function GetSoundId()
	return _in(0x430386FE9BF80B45, _ri)
end

--- Counterpart: [`GET_NETWORK_ID_FROM_SOUND_ID`](#\_0x2DE3F0A134FFBC0D).
-- @param netId Network ID of sound.
-- @return Integer representing a sound id, -1 (0xFFFFFFFF) on failure.
function GetSoundIdFromNetworkId(netId)
	return _in(0x75262FD12D0A1C84, netId, _ri)
end
N_0x75262fd12d0a1c84 = GetSoundIdFromNetworkId

function GetStandardBlipEnumId()
	return _in(0x4A9923385BDB9DAD, _ri)
end
N_0x4a9923385bdb9dad = GetStandardBlipEnumId
GetLevelBlipSprite = GetStandardBlipEnumId

--- Returns the value of a state bag key.
-- @return Value.
function GetStateBagValue(bagName, key)
	return _in(0x637f4c75, _ts(bagName), _ts(key), _ro)
end

--- locked is 0 if no door is found
-- locked is 0 if door is unlocked
-- locked is 1 if door is found and unlocked.
-- -------------
-- the locked bool is either 0(unlocked)(false) or 1(locked)(true)
function GetStateOfClosestDoorOfType(type, x, y, z)
	return _in(0xEDC1A5B84AEF33FF, _ch(type), x, y, z, _i --[[ actually bool ]], _f)
end

--- See [`SET_STATE_OF_RAYFIRE_MAP_OBJECT`](#\_0x5C29F698D404C5E1) to see the different states
-- Get a destructible object's state. Substract 1 to get the real state. For example, if the object just spawned (state 2), the native will return 3.
function GetStateOfRayfireMapObject(object)
	return _in(0x899BA936634A322E, object, _ri)
end
N_0x899ba936634a322e = GetStateOfRayfireMapObject
GetDesObjectState = GetStateOfRayfireMapObject

function GetStatusOfLoadMissionCreatorPhoto(p0)
	return _in(0x1670F8D05056F257, _ts(p0), _ri)
end
N_0x1670f8d05056f257 = GetStatusOfLoadMissionCreatorPhoto

function GetStatusOfMissionRepeatSave()
	return _in(0x2B5E102E4A42F2BF, _ri)
end
N_0x2b5e102e4a42f2bf = GetStatusOfMissionRepeatSave

function GetStatusOfSaveHighQualityPhoto()
	return _in(0x0C0C4E81E1AC60A0, _ri)
end
N_0x0c0c4e81e1ac60a0 = GetStatusOfSaveHighQualityPhoto

--- 3 matches across 3 scripts. First 2 were 0, 3rd was 1. Possibly a bool.
-- appcamera, appmedia, and cellphone_controller.
function GetStatusOfSortedListOperation(p0)
	return _in(0xF5BED327CEA362B1, p0, _ri)
end
N_0xf5bed327cea362b1 = GetStatusOfSortedListOperation

function GetStatusOfTakeHighQualityPhoto()
	return _in(0x0D6CA79EEEBD8CA3, _ri)
end
N_0x0d6ca79eeebd8ca3 = GetStatusOfTakeHighQualityPhoto

function GetStatusOfTakeMissionCreatorPhoto()
	return _in(0x90A78ECAA4E78453, _ri)
end
N_0x90a78ecaa4e78453 = GetStatusOfTakeMissionCreatorPhoto

--- 0 = succeeded
-- 1 = pending
-- 2 = failed
function GetStatusOfTextureDownload(p0)
	return _in(0x8BD6C6DEA20E82C6, p0, _ri)
end
N_0x8bd6c6dea20e82c6 = GetStatusOfTextureDownload
GetStatusOfTextureDownload = GetStatusOfTextureDownload

function GetStreamPlayTime()
	return _in(0x4E72BBDBCA58A3DB, _ri)
end

--- Determines the name of the street which is the closest to the given coordinates.
-- x,y,z - the coordinates of the street
-- streetName - returns a hash to the name of the street the coords are on
-- crossingRoad - if the coordinates are on an intersection, a hash to the name of the crossing road
-- Note: the names are returned as hashes, the strings can be returned using the function HUD::GET_STREET_NAME_FROM_HASH_KEY.
function GetStreetNameAtCoord(x, y, z)
	return _in(0x2EB41072B4C1E4C0, x, y, z, _i, _i)
end

--- Converts the hash of a street name into a readable string. To retrieve a hash for a given (street) coordinate, see [`GET_STREET_NAME_AT_COORD`](#\_0x2EB41072B4C1E4C0).
function GetStreetNameFromHashKey(hash)
	return _in(0xD0EF8A959B8A4CB9, _ch(hash), _s)
end

--- NativeDB Introduced: v2189
function GetSubmarineCrushDepthWarningState(submarine)
	return _in(0x093D6DDCA5B8FBAE, submarine, _ri)
end

--- NativeDB Introduced: v2189
function GetSubmarineIsBelowFirstCrushDepth(submarine)
	return _in(0x3E71D0B300B7AA79, submarine, _r)
end

function GetSynchronizedScenePhase(sceneID)
	return _in(0xE4A310B1D7FA73CC, sceneID, _rf)
end

function GetSynchronizedSceneRate(sceneID)
	return _in(0xD80932D577274D40, sceneID, _rf)
end

function GetTaskMoveNetworkEvent(ped, eventName)
	return _in(0xB4F47213DF45A64C, ped, _ts(eventName), _r)
end
N_0xb4f47213df45a64c = GetTaskMoveNetworkEvent

function GetTaskMoveNetworkSignalBool(ped, signalName)
	return _in(0xA7FFBA498E4AAF67, ped, _ts(signalName), _r)
end
N_0xa7ffba498e4aaf67 = GetTaskMoveNetworkSignalBool

--- NativeDB Introduced: v1493
function GetTaskMoveNetworkSignalFloat(ped, signalName)
	return _in(0x44AB0B3AFECCE242, ped, _ts(signalName), _rf)
end

function GetTaskMoveNetworkState(ped)
	return _in(0x717E4D1F2048376D, ped, _s)
end
N_0x717e4d1f2048376d = GetTaskMoveNetworkState

--- Character types:
-- ```
-- 0 = Michael,
-- 1 = Franklin,
-- 2 = Trevor,
-- 3 = MPMale,
-- 4 = MPFemale
-- ```
-- ```csharp
-- enum TattooZoneData
-- {
-- ZONE_TORSO = 0,
-- ZONE_HEAD = 1,
-- ZONE_LEFT_ARM = 2,
-- ZONE_RIGHT_ARM = 3,
-- ZONE_LEFT_LEG = 4,
-- ZONE_RIGHT_LEG = 5,
-- ZONE_UNKNOWN = 6,
-- ZONE_NONE = 7,
-- };
-- struct outComponent
-- {
-- // these vars are suffixed with 4 bytes of padding each.
-- uint unk;
-- int unk2;
-- uint tattooCollectionHash;
-- uint tattooNameHash;
-- int unk3;
-- TattooZoneData zoneId;
-- uint unk4;
-- uint unk5;
-- // maybe more, not sure exactly, decompiled scripts are very vague around this part.
-- }
-- ```
-- @param characterType Character types 0 = Michael, 1 = Franklin, 2 = Trevor, 3 = MPMale, 4 = MPFemale.
-- @param decorationIndex Tattoo index, value between 0 and GetNumDecorations(characterType).
-- @param outComponent The referenced struct.
-- @return A bool indicating that the tattoo data could be fetched(?)
function GetTattooShopDlcItemData(characterType, decorationIndex, outComponent)
	return _in(0xFF56381874F82086, characterType, decorationIndex, _ii(outComponent) --[[ may be optional ]], _r)
end
N_0xff56381874f82086 = GetTattooShopDlcItemData
GetTattooCollectionData = GetTattooShopDlcItemData

function GetTennisSwingAnimComplete(ped)
	return _in(0x17DF68D720AA77F8, ped, _r)
end
N_0x17df68d720aa77f8 = GetTennisSwingAnimComplete

--- Returns a substring of a specified length starting at a specified position.
-- Example:
-- // Get "STRING" text from "MY_STRING"
-- subStr = HUD::_GET_TEXT_SUBSTRING("MY_STRING", 3, 6);
function GetTextSubstring(text, position, length)
	return _in(0x169BD9382084C8C0, _ts(text), position, length, _s)
end

--- Returns a substring of a specified length starting at a specified position. The result is guaranteed not to exceed the specified max length.
-- NOTE: The 'maxLength' parameter might actually be the size of the buffer that is returned. More research is needed. -CL69
-- Example:
-- // Condensed example of how Rockstar uses this function
-- strLen = HUD::GET_LENGTH_OF_LITERAL_STRING(MISC::GET_ONSCREEN_KEYBOARD_RESULT());
-- subStr = HUD::_GET_TEXT_SUBSTRING_SAFE(MISC::GET_ONSCREEN_KEYBOARD_RESULT(), 0, strLen, 63);
-- --
-- "fm_race_creator.ysc", line 85115:
-- // parameters modified for clarity
-- BOOL sub_8e5aa(char *text, int length) {
-- for (i = 0; i <= (length - 2); i += 1) {
-- if (!MISC::ARE_STRINGS_EQUAL(HUD::_GET_TEXT_SUBSTRING_SAFE(text, i, i + 1, 1), " ")) {
-- return FALSE;
-- }
-- }
-- return TRUE;
-- }
function GetTextSubstringSafe(text, position, length, maxLength)
	return _in(0xB2798643312205C5, _ts(text), position, length, maxLength, _s)
end

--- Returns a substring that is between two specified positions. The length of the string will be calculated using (endPosition - startPosition).
-- Example:
-- // Get "STRING" text from "MY_STRING"
-- subStr = HUD::_GET_TEXT_SUBSTRING_SLICE("MY_STRING", 3, 9);
-- // Overflows are possibly replaced with underscores (needs verification)
-- subStr = HUD::_GET_TEXT_SUBSTRING_SLICE("MY_STRING", 3, 10); // "STRING_"?
function GetTextSubstringSlice(text, startPosition, endPosition)
	return _in(0xCE94AEBA5D82908A, _ts(text), startPosition, endPosition, _s)
end

--- Returns the texture resolution of the passed texture dict+name.
-- Note: Most texture resolutions are doubled compared to the console version of the game.
function GetTextureResolution(textureDict, textureName)
	return _in(0x35736EE65BD00C11, _ts(textureDict), _ts(textureName), _rv)
end

function GetThisScriptName()
	return _in(0x442E0A7EDE4A738A, _s)
end

function GetTimeAsString(time)
	return _in(0x9E23B1777A927DAD, time, _s)
end
FormatTime = GetTimeAsString

--- Subtracts the second argument from the first.
function GetTimeDifference(timeA, timeB)
	return _in(0xA2C6FC031D46FFF0, timeA, timeB, _ri)
end

--- GET_TIME_*
function GetTimeOfLastPedWeaponDamage(ped, weaponHash)
	return _in(0x36B77BB84687C318, ped, _ch(weaponHash), _ri)
end
N_0x36b77bb84687c318 = GetTimeOfLastPedWeaponDamage

--- Adds the first argument to the second.
function GetTimeOffset(timeA, timeB)
	return _in(0x017008CCDAD48503, timeA, timeB, _ri)
end

--- Can be used with GET_TOTAL_DURATION_OF_VEHICLE_RECORDING{_ID} to compute a percentage.
function GetTimePositionInRecording(vehicle)
	return _in(0x5746F3A7AB7FE544, vehicle, _rf)
end

--- Returns the time since the character was arrested in (ms) milliseconds.
-- example
-- var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_ARREST();
-- UI.DrawSubtitle(time.ToString());
-- if player has not been arrested, the int returned will be -1.
function GetTimeSinceLastArrest()
	return _in(0x5063F92F07C2A316, _ri)
end

--- Returns the time since the character died in (ms) milliseconds.
-- example
-- var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_DEATH();
-- UI.DrawSubtitle(time.ToString());
-- if player has not died, the int returned will be -1.
function GetTimeSinceLastDeath()
	return _in(0xC7034807558DDFCA, _ri)
end

--- The number of milliseconds since last padIndex registered pressed
function GetTimeSinceLastInput(padIndex)
	return _in(0xD7D22F5592AED8BA, padIndex, _ri)
end
N_0xd7d22f5592aed8ba = GetTimeSinceLastInput

function GetTimeSincePlayerDroveAgainstTraffic(player)
	return _in(0xDB89591E290D9182, player, _ri)
end

function GetTimeSincePlayerDroveOnPavement(player)
	return _in(0xD559D2BE9E37853B, player, _ri)
end

function GetTimeSincePlayerHitPed(player)
	return _in(0xE36A25322DC35F42, player, _ri)
end

function GetTimeSincePlayerHitVehicle(player)
	return _in(0x5D35ECF3A81A0EE0, player, _ri)
end

--- Only use for this in the PC scripts is:
-- if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)
-- For a full list, see here: pastebin.com/cnk7FTF2
function GetTimecycleModifierIndex()
	return _in(0xFDF3D97C674AFB66, _ri)
end

function GetTimecycleTransitionModifierIndex()
	return _in(0x459FD2C8D0AB78BC, _ri)
end
N_0x459fd2c8d0ab78bc = GetTimecycleTransitionModifierIndex

function GetTogglePausedRenderphasesStatus()
	return _in(0xEB3DAC2C86001E5E, _r)
end
N_0xeb3dac2c86001e5e = GetTogglePausedRenderphasesStatus

function GetTotalDurationOfVehicleRecording(recording, script)
	return _in(0x0E48D1C262390950, recording, _ts(script), _rf)
end

function GetTotalDurationOfVehicleRecordingId(id)
	return _in(0x102D125411A7B6E6, id, _rf)
end

function GetTotalSuccessfulStuntJumps()
	return _in(0x6856EC3D35C81EA4, _ri)
end
N_0x6856ec3d35c81ea4 = GetTotalSuccessfulStuntJumps

--- Corrected p1. it's basically the 'carriage/trailer number'. So if the train has 3 trailers you'd call the native once with a var or 3 times with 1, 2, 3.
function GetTrainCarriage(train, trailerNumber)
	return _in(0x08AAFD0814722BC3, train, trailerNumber, _ri)
end

function GetTrainCurrentTrackNode(train)
	return _in(0xe015e854, train, _ri)
end

--- Gets the door count for the specified train.
-- @param train The train to obtain the door count for.
-- @return The door count.
function GetTrainDoorCount(train)
	return _in(0x99974721, train, _ri)
end

--- Gets the ratio that a door is open for on a train.
-- @param train The train to obtain the door ratio for.
-- @param doorIndex Zero-based door index.
-- @return A value between 0.0 (fully closed) and 1.0 (fully open).
function GetTrainDoorOpenRatio(train, doorIndex)
	return _in(0x40b16551, train, doorIndex, _rf)
end

function GetTvChannel()
	return _in(0xFC1E275A90D39995, _ri)
end

function GetTvVolume()
	return _in(0x2170813D3DD8661B, _rf)
end

--- NativeDB Introduced: v1868
function GetTyreHealth(vehicle, wheelIndex)
	return _in(0x55EAB010FAEE9380, vehicle, wheelIndex, _rf)
end

--- NativeDB Introduced: v2060
function GetTyreWearMultiplier(vehicle, wheelIndex)
	return _in(0x6E387895952F4F71, vehicle, wheelIndex, _rf)
end

--- 0.0 = no memory used
-- 1.0 = all memory used
-- Maximum model memory (as defined in common\data\missioncreatordata.meta) is 100 MiB
-- GET_*
function GetUsedCreatorModelMemoryPercentage()
	return _in(0x3D3D8B3BE5A83D35, _rf)
end
N_0x3d3d8b3be5a83d35 = GetUsedCreatorModelMemoryPercentage

function GetUsingnightvision()
	return _in(0x2202A3F42C8E5F79, _r)
end
IsNightvisionInactive = GetUsingnightvision
IsNightvisionActive = GetUsingnightvision

function GetUsingseethrough()
	return _in(0x44B80ABAB9D80BD3, _r)
end
IsSeethroughActive = GetUsingseethrough

--- Gets current UTC time
function GetUtcTime()
	return _in(0x8117E09A19EEF4D3, _i, _i, _i, _i, _i, _i)
end
GetLocalTime = GetUtcTime
GetUtcTime = GetUtcTime

function GetVariantComponent(componentHash, variantComponentIndex)
	return _in(0x6E11F282F11863B6, _ch(componentHash), variantComponentIndex, _i, _i, _i)
end

function GetVariantProp(componentHash, variantPropIndex)
	return _in(0xD81B7F27BC773E66, _ch(componentHash), variantPropIndex, _i, _i, _i)
end
N_0xd81b7f27bc773e66 = GetVariantProp

--- static - max acceleration
function GetVehicleAcceleration(vehicle)
	return _in(0x5DD35C8D074E57AE, vehicle, _rf)
end

function GetVehicleAlarmTimeLeft(vehicle)
	return _in(0xc62aac98, vehicle, _ri)
end

--- Returns attached vehicle (Vehicle in parameter must be cargobob)
function GetVehicleAttachedToCargobob(cargobob)
	return _in(0x873B82D42AC2B9E5, cargobob, _ri)
end

--- Seems related to vehicle health, like the one in IV.
-- Max 1000, min 0.
-- Vehicle does not necessarily explode or become undrivable at 0.
function GetVehicleBodyHealth(vehicle)
	return _in(0xF271147EB7B40F12, vehicle, _rf)
end

--- NativeDB Added Parameter 2: float maxEngineHealth
-- NativeDB Added Parameter 3: float maxPetrolTankHealth
-- NativeDB Added Parameter 4: float maxBodyHealth
-- NativeDB Added Parameter 5: float maxMainRotorHealth
-- NativeDB Added Parameter 6: float maxTailRotorHealth
-- NativeDB Added Parameter 7: float maxUnkHealth
function GetVehicleBodyHealth_2(vehicle)
	return _in(0xB8EF61207C2393A9, vehicle, _rf)
end

--- Gets the amount of bombs that this vehicle has. As far as I know, this does *not* impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
-- In decompiled scripts this is used to check if the vehicle has enough bombs before a bomb can be dropped (bombs are dropped by using [`_SHOOT_SINGLE_BULLET_BETWEEN_COORDS_WITH_EXTRA_PARAMS`](#\_0xBFE5756E7407064A)).
-- Use [`_SET_AIRCRAFT_BOMB_COUNT`](#\_0xF4B2ED59DEB5D774) to set the amount of bombs on that vehicle.
-- @param aircraft The vehicle to get the amount of bombs from.
-- @return An int indicating the amount of bombs remaining on that plane.
function GetVehicleBombCount(aircraft)
	return _in(0xEA12BD130D7569A1, aircraft, _ri)
end
N_0xea12bd130d7569a1 = GetVehicleBombCount
GetAircraftBombCount = GetVehicleBombCount

function GetVehicleCanActivateParachute(vehicle)
	return _in(0xA916396DF4154EE3, vehicle, _r)
end
CanVehicleParachuteBeActivated = GetVehicleCanActivateParachute

--- iVar3 = get_vehicle_cause_of_destruction(uLocal_248[iVar2]);
-- if (iVar3 == joaat("weapon_stickybomb"))
-- {
-- func_171(726);
-- iLocal_260 = 1;
-- }
function GetVehicleCauseOfDestruction(vehicle)
	return _in(0xE495D1EF4C91FD20, vehicle, _ri)
end

--- A getter for [SET_VEHICLE_CHEAT_POWER_INCREASE](#\_0xB59E4BD37AE292DB).
-- @param vehicle The target vehicle.
-- @return Returns vehicle's cheat power increase modifier value.
function GetVehicleCheatPowerIncrease(vehicle)
	return _in(0xc3c93f28, vehicle, _rf)
end

--- Returns an int
-- Vehicle Classes:
-- 0: Compacts
-- 1: Sedans
-- 2: SUVs
-- 3: Coupes
-- 4: Muscle
-- 5: Sports Classics
-- 6: Sports
-- 7: Super
-- 8: Motorcycles
-- 9: Off-road
-- 10: Industrial
-- 11: Utility
-- 12: Vans
-- 13: Cycles
-- 14: Boats
-- 15: Helicopters
-- 16: Planes
-- 17: Service
-- 18: Emergency
-- 19: Military
-- 20: Commercial
-- 21: Trains
-- char buffer[128];
-- std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS(vehicle));
-- char* className = UI::_GET_LABEL_TEXT(buffer);
function GetVehicleClass(vehicle)
	return _in(0x29439776AAA00A62, vehicle, _ri)
end

function GetVehicleClassEstimatedMaxSpeed(vehicleClass)
	return _in(0x00C09F246ABEDD82, vehicleClass, _rf)
end
N_0x00c09f246abedd82 = GetVehicleClassEstimatedMaxSpeed
GetVehicleClassMaxSpeed = GetVehicleClassEstimatedMaxSpeed

--- For a full enum, see here : pastebin.com/i2GGAjY0
-- char buffer[128];
-- std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS_FROM_NAME (hash));
-- const char* className = HUD::_GET_LABEL_TEXT(buffer);
function GetVehicleClassFromName(modelHash)
	return _in(0xDEDF1C8BD47C2200, _ch(modelHash), _ri)
end

function GetVehicleClassMaxAcceleration(vehicleClass)
	return _in(0x2F83E7E45D9EA7AE, vehicleClass, _rf)
end

function GetVehicleClassMaxAgility(vehicleClass)
	return _in(0x4F930AD022D6DE3B, vehicleClass, _rf)
end

function GetVehicleClassMaxBraking(vehicleClass)
	return _in(0x4BF54C16EC8FEC03, vehicleClass, _rf)
end

function GetVehicleClassMaxTraction(vehicleClass)
	return _in(0xDBC86D85C5059461, vehicleClass, _rf)
end

function GetVehicleClutch(vehicle)
	return _in(0x1dad4583, vehicle, _rf)
end

--- See [`SET_VEHICLE_CUSTOM_PRIMARY_COLOUR`](#\_0x7141766F91D15BEA) and [`SET_VEHICLE_CUSTOM_SECONDARY_COLOUR`](#\_0x36CED73BFED89754).
-- @param vehicle The target vehicle
function GetVehicleColor(vehicle)
	return _in(0xF3CC740D36221548, vehicle, _i, _i, _i)
end

function GetVehicleColourCombination(vehicle)
	return _in(0x6A842D197F845D56, vehicle, _ri)
end

function GetVehicleColours(vehicle)
	return _in(0xA19435F193E081AC, vehicle, _i, _i)
end

--- Similar to [`_GET_AIRCRAFT_BOMB_COUNT`](#\_0xEA12BD130D7569A1), this gets the amount of countermeasures that are present on this vehicle.
-- Use [`_SET_AIRCRAFT_COUNTERMEASURE_COUNT`](#\_0x9BDA23BF666F0855) to set the current amount.
-- @param aircraft The vehicle to get the amount of countermeasures from.
-- @return An int indicating the amount of countermeasures remaining on that plane.
function GetVehicleCountermeasureCount(aircraft)
	return _in(0xF846AA63DF56B804, aircraft, _ri)
end
N_0xf846aa63df56b804 = GetVehicleCountermeasureCount
GetAircraftCountermeasureCount = GetVehicleCountermeasureCount

function GetVehicleCrewEmblemRequestState(vehicle, p1)
	return _in(0xFE26117A5841B2FF, vehicle, p1, _ri)
end
N_0xfe26117a5841b2ff = GetVehicleCrewEmblemRequestState

function GetVehicleCurrentGear(vehicle)
	return _in(0xb4f4e566, vehicle, _ri)
end

function GetVehicleCurrentRpm(vehicle)
	return _in(0xe7b12b54, vehicle, _rf)
end

--- Returns a float value between 0.0 and 3.0 related to its slipstream draft (boost/speedup).
-- GET_VEHICLE_*
function GetVehicleCurrentSlipstreamDraft(vehicle)
	return _in(0x36492C2F0D134C56, vehicle, _rf)
end
N_0x36492c2f0d134c56 = GetVehicleCurrentSlipstreamDraft

function GetVehicleCustomPrimaryColour(vehicle)
	return _in(0xB64CF2CCA9D95F52, vehicle, _i, _i, _i)
end

function GetVehicleCustomSecondaryColour(vehicle)
	return _in(0x8389CD56CA8072DC, vehicle, _i, _i, _i)
end

function GetVehicleDashboardColor(vehicle, color)
	return _in(0xB7635E80A5C31BFF, vehicle, _ii(color) --[[ may be optional ]])
end
GetVehicleDashboardColour = GetVehicleDashboardColor

function GetVehicleDashboardSpeed(vehicle)
	return _in(0x9aad420e, vehicle, _rf)
end

--- Returns hash of default vehicle horn
-- Hash is stored in audVehicleAudioEntity
function GetVehicleDefaultHorn(vehicle)
	return _in(0x02165D55000219AC, vehicle, _ri)
end

function GetVehicleDefaultHornIgnoreMods(vehicle)
	return _in(0xACB5DCCA1EC76840, vehicle, _ri)
end
N_0xacb5dcca1ec76840 = GetVehicleDefaultHornIgnoreMods
GetVehicleHornHash = GetVehicleDefaultHornIgnoreMods

--- NativeDB Introduced: v1365
function GetVehicleDefaultHornVariation(vehicle)
	return _in(0xD53F3A29BCE2580E, vehicle, _ri)
end
N_0xd53f3a29bce2580e = GetVehicleDefaultHornVariation
N_0x22fecb546c276a30 = GetVehicleDefaultHornVariation

--- The only example I can find of this function in the scripts, is this:
-- struct _s = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(rPtr((A_0) + 4), 1.21f, 6.15f, 0.3f);
-- -----------------------------------------------------------------------------------------------------------------------------------------
-- PC scripts:
-- v_5/*{3}*/ = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(a_0._f1, 1.21, 6.15, 0.3);
function GetVehicleDeformationAtPos(vehicle, offsetX, offsetY, offsetZ)
	return _in(0x4EC6CFBC7B2E9536, vehicle, offsetX, offsetY, offsetZ, _rv)
end

--- A getter for [SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME](#\_0x245A6883D966D537).
-- @return Returns vehicle density multiplier value.
function GetVehicleDensityMultiplier()
	return _in(0xef7c6538, _rf)
end

--- A getter for [`SET_VEHICLE_DIRT_LEVEL`](#\_0x79D3B596FE44EE8B).
-- @param vehicle The vehicle to check.
-- @return A number between 0.0 and 15.0 representing the vehicles dirt level.
function GetVehicleDirtLevel(vehicle)
	return _in(0x8F17BC8BA08DA62B, vehicle, _rf)
end

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
function GetVehicleDoorAngleRatio(vehicle, doorIndex)
	return _in(0xFE3F9C29F7B32BD5, vehicle, doorIndex, _rf)
end

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- Returns vehicle door destroy type previously set with \_SET_VEHICLE_DOOR_DESTROY_TYPE
function GetVehicleDoorDestroyType(vehicle, doorIndex)
	return _in(0xCA4AC3EAAE46EC7B, vehicle, doorIndex, _ri)
end
N_0xca4ac3eaae46ec7b = GetVehicleDoorDestroyType

--- enum VehicleLockStatus = {
-- None = 0,
-- Unlocked = 1,
-- Locked = 2,
-- LockedForPlayer = 3,
-- StickPlayerInside = 4, -- Doesn't allow players to exit the vehicle with the exit vehicle key.
-- CanBeBrokenInto = 7, -- Can be broken into the car. If the glass is broken, the value will be set to 1
-- CanBeBrokenIntoPersist = 8, -- Can be broken into persist
-- CannotBeTriedToEnter = 10, -- Cannot be tried to enter (Nothing happens when you press the vehicle enter key).
-- }
function GetVehicleDoorLockStatus(vehicle)
	return _in(0x25BC98A59C2EA962, vehicle, _ri)
end

function GetVehicleDoorsLockedForPlayer(vehicle, player)
	return _in(0xF6AF6CB341349015, vehicle, player, _r)
end

--- Gets a vehicle's multiplier used with a wheel's GET_VEHICLE_WHEEL_STEERING_ANGLE to determine the angle the wheel is rendered.
function GetVehicleDrawnWheelAngleMult(vehicle)
	return _in(0x21c1da8e, vehicle, _rf)
end

--- Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.
-- Minimum: -4000
-- Maximum: 1000
-- -4000: Engine is destroyed
-- 0 and below: Engine catches fire and health rapidly declines
-- 300: Engine is smoking and losing functionality
-- 1000: Engine is perfect
function GetVehicleEngineHealth(vehicle)
	return _in(0xC45D23BAF168AAB8, vehicle, _rf)
end

function GetVehicleEngineTemperature(vehicle)
	return _in(0xf4f495cb, vehicle, _rf)
end

--- formerly known as _GET_VEHICLE_PAINT_FADE
-- The result is a value from 0-1, where 0 is fresh paint.
function GetVehicleEnveffScale(vehicle)
	return _in(0xA82819CAC9C4C403, vehicle, _rf)
end
GetVehiclePaintFade = GetVehicleEnveffScale

function GetVehicleEstimatedMaxSpeed(vehicle)
	return _in(0x53AF99BAA671CA47, vehicle, _rf)
end
N_0x53af99baa671ca47 = GetVehicleEstimatedMaxSpeed
GetVehicleMaxSpeed = GetVehicleEstimatedMaxSpeed

function GetVehicleExtraColours(vehicle)
	return _in(0x3BC4245933A166F7, vehicle, _i, _i)
end

function GetVehicleFlightNozzlePosition(aircraft)
	return _in(0xDA62027C8BDB326E, aircraft, _rf)
end
N_0xda62027c8bdb326e = GetVehicleFlightNozzlePosition
GetPlaneHoverModePercentage = GetVehicleFlightNozzlePosition
GetVehicleHoverModePercentage = GetVehicleFlightNozzlePosition
GetPlaneVtolDirection = GetVehicleFlightNozzlePosition

function GetVehicleFuelLevel(vehicle)
	return _in(0x5f739bb8, vehicle, _rf)
end

function GetVehicleGravityAmount(vehicle)
	return _in(0xb48a1292, vehicle, _rf)
end

function GetVehicleHandbrake(vehicle)
	return _in(0x483b013c, vehicle, _r)
end

--- Returns the effective handling data of a vehicle as a floating-point value.
-- Example: `local fSteeringLock = GetVehicleHandlingFloat(vehicle, 'CHandlingData', 'fSteeringLock')`
-- @param vehicle The vehicle to obtain data for.
-- @param class_ The handling class to get. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to get. These match the keys in `handling.meta`.
-- @return A floating-point value.
function GetVehicleHandlingFloat(vehicle, class_, fieldName)
	return _in(0x642fc12f, vehicle, _ts(class_), _ts(fieldName), _rf)
end

--- Returns the effective handling data of a vehicle as an integer value.
-- Example: `local modelFlags = GetVehicleHandlingInt(vehicle, 'CHandlingData', 'strModelFlags')`
-- @param vehicle The vehicle to obtain data for.
-- @param class_ The handling class to get. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to get. These match the keys in `handling.meta`.
-- @return An integer.
function GetVehicleHandlingInt(vehicle, class_, fieldName)
	return _in(0x27396c75, vehicle, _ts(class_), _ts(fieldName), _ri)
end

--- Returns the effective handling data of a vehicle as a vector value.
-- Example: `local inertiaMultiplier = GetVehicleHandlingVector(vehicle, 'CHandlingData', 'vecInertiaMultiplier')`
-- @param vehicle The vehicle to obtain data for.
-- @param class_ The handling class to get. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to get. These match the keys in `handling.meta`.
-- @return An integer.
function GetVehicleHandlingVector(vehicle, class_, fieldName)
	return _in(0xfb341304, vehicle, _ts(class_), _ts(fieldName), _rv)
end

function GetVehicleHasKers(vehicle)
	return _in(0x50634E348C8D44EF, vehicle, _r)
end
N_0x50634e348c8d44ef = GetVehicleHasKers
HasVehicleKersBoost = GetVehicleHasKers

function GetVehicleHasParachute(vehicle)
	return _in(0xBC9CFF381338CB4F, vehicle, _r)
end
HasVehicleParachute = GetVehicleHasParachute
DoesVehicleHaveParachute = GetVehicleHasParachute

function GetVehicleHighGear(vehicle)
	return _in(0xf1d1d689, vehicle, _ri)
end

--- Returns a value depending on the lock-on state of vehicle weapons.
-- 0: not locked on
-- 1: locking on
-- 2: locked on
function GetVehicleHomingLockonState(vehicle)
	return _in(0xE6B0E8CFC3633BF0, vehicle, _ri)
end
N_0xe6b0e8cfc3633bf0 = GetVehicleHomingLockonState

--- Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
function GetVehicleIndexFromEntityIndex(entity)
	return _in(0x4B53F92932ADFAC0, entity, _ri)
end

--- Gets the vehicle indicator light state. 0 = off, 1 = left, 2 = right, 3 = both
-- @return An integer.
function GetVehicleIndicatorLights(vehicle)
	return _in(0x83070354, vehicle, _ri)
end

function GetVehicleInteriorColor(vehicle, color)
	return _in(0x7D1464D472D32136, vehicle, _ii(color) --[[ may be optional ]])
end
GetVehicleInteriorColour = GetVehicleInteriorColor

function GetVehicleLayoutHash(vehicle)
	return _in(0x28D37D4F71AC5C58, vehicle, _ri)
end

function GetVehicleLightMultiplier(vehicle)
	return _in(0x7e6e219c, vehicle, _rf)
end

function GetVehicleLightsState(vehicle)
	return _in(0xB91B4C20085BD12F, vehicle, _i --[[ actually bool ]], _i --[[ actually bool ]], _r)
end

--- -1 = no livery
function GetVehicleLivery(vehicle)
	return _in(0x2BB9230590DA5E8A, vehicle, _ri)
end

--- Returns -1 if the vehicle has no livery
function GetVehicleLiveryCount(vehicle)
	return _in(0x87B63E25A529D526, vehicle, _ri)
end

function GetVehicleLockOnTarget(vehicle, entity)
	return _in(0x8F5EBAB1F260CFCE, vehicle, _ii(entity) --[[ may be optional ]], _r)
end
GetVehicleOwner = GetVehicleLockOnTarget

function GetVehicleMaxBraking(vehicle)
	return _in(0xAD7E85FC227197C4, vehicle, _rf)
end

function GetVehicleMaxNumberOfPassengers(vehicle)
	return _in(0xA7C4F2C6E744A550, vehicle, _ri)
end

function GetVehicleMaxTraction(vehicle)
	return _in(0xA132FB5370554DB0, vehicle, _rf)
end

--- Returns -1 if the vehicle mod is stock
-- @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
function GetVehicleMod(vehicle, modType)
	return _in(0x772960298DA26FDB, vehicle, modType, _ri)
end

function GetVehicleModColor_1(vehicle)
	return _in(0xE8D65CA700C9A693, vehicle, _i, _i, _i)
end

--- returns a string which is the codename of the vehicle's currently selected primary color
-- p1 is always 0
function GetVehicleModColor_1Name(vehicle, p1)
	return _in(0xB45085B721EFD38C, vehicle, p1, _s)
end
N_0xb45085b721efd38c = GetVehicleModColor_1Name

function GetVehicleModColor_2(vehicle)
	return _in(0x81592BE4E3878728, vehicle, _i, _i)
end

--- returns a string which is the codename of the vehicle's currently selected secondary color
function GetVehicleModColor_2Name(vehicle)
	return _in(0x4967A516ED23A5A1, vehicle, _s)
end
N_0x4967a516ed23a5a1 = GetVehicleModColor_2Name

--- Can be used for IS_DLC_VEHICLE_MOD and _0xC098810437312FFF
-- @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
function GetVehicleModIdentifierHash(vehicle, modType, modIndex)
	return _in(0x4593CF82AA179706, vehicle, modType, modIndex, _ri)
end
N_0x4593cf82aa179706 = GetVehicleModIdentifierHash
GetVehicleModData = GetVehicleModIdentifierHash

function GetVehicleModKit(vehicle)
	return _in(0x6325D1A044AE510D, vehicle, _ri)
end

function GetVehicleModKitType(vehicle)
	return _in(0xFC058F5121E54C32, vehicle, _ri)
end

function GetVehicleModModifierValue(vehicle, modType, modIndex)
	return _in(0x90A38E9838E0A8C1, vehicle, modType, modIndex, _rf)
end

--- Only used for wheels(ModType = 23/24) Returns true if the wheels are custom wheels
-- @param modType Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
function GetVehicleModVariation(vehicle, modType)
	return _in(0xB3924ECD70E095DC, vehicle, modType, _r)
end

--- Returns the acceleration of the specified model.
function GetVehicleModelAcceleration(modelHash)
	return _in(0x8C044C5C84505B6A, _ch(modelHash), _rf)
end

--- GET_VEHICLE_MODEL_*
-- 9.8 * thrust if air vehicle, else 0.38 + drive force?
function GetVehicleModelEstimatedAgility(modelHash)
	return _in(0x53409B5163D5B846, _ch(modelHash), _rf)
end
N_0x53409b5163d5b846 = GetVehicleModelEstimatedAgility
GetVehicleModelDownForce = GetVehicleModelEstimatedAgility

--- Returns max speed (without mods) of the specified vehicle model in m/s.
function GetVehicleModelEstimatedMaxSpeed(modelHash)
	return _in(0xF417C2502FFFED43, _ch(modelHash), _rf)
end
GetVehicleModelMaxSpeed = GetVehicleModelEstimatedMaxSpeed

--- Returns max braking of the specified vehicle model.
function GetVehicleModelMaxBraking(modelHash)
	return _in(0xDC53FD41B4ED944C, _ch(modelHash), _rf)
end

function GetVehicleModelMaxBrakingMaxMods(modelHash)
	return _in(0xBFBA3BA79CFF7EBF, _ch(modelHash), _rf)
end
N_0xbfba3ba79cff7ebf = GetVehicleModelMaxBrakingMaxMods
GetVehicleModelHandBrake = GetVehicleModelMaxBrakingMaxMods

--- GET_VEHICLE_MODEL_*
-- Function pertains only to aviation vehicles.
function GetVehicleModelMaxKnots(modelHash)
	return _in(0xC6AD107DDC9054CC, _ch(modelHash), _rf)
end
N_0xc6ad107ddc9054cc = GetVehicleModelMaxKnots

--- Returns max traction of the specified vehicle model.
function GetVehicleModelMaxTraction(modelHash)
	return _in(0x539DE94D44FDFD0D, _ch(modelHash), _rf)
end

--- Returns `nMonetaryValue` from handling.meta for specific model.
function GetVehicleModelMonetaryValue(vehicleModel)
	return _in(0x5873C14A52D74236, _ch(vehicleModel), _ri)
end
N_0x5873c14a52d74236 = GetVehicleModelMonetaryValue

--- GET_VEHICLE_MODEL_*
-- called if the vehicle is a boat -- returns vecMoveResistanceX?
function GetVehicleModelMoveResistance(modelHash)
	return _in(0x5AA3F878A178C4FC, _ch(modelHash), _rf)
end
N_0x5aa3f878a178c4fc = GetVehicleModelMoveResistance

--- Returns max number of passengers (including the driver) for the specified vehicle model.
function GetVehicleModelNumberOfSeats(modelHash)
	return _in(0x2AD93716F184EDA4, _ch(modelHash), _ri)
end
GetVehicleModelMaxNumberOfPassengers = GetVehicleModelNumberOfSeats

--- Gets the color of the neon lights of the specified vehicle.
-- See [`_SET_VEHICLE_NEON_LIGHTS_COLOUR`](#\_0x8E0A582209A62695) for more information
function GetVehicleNeonLightsColour(vehicle)
	return _in(0x7619EEE8C886757F, vehicle, _i, _i, _i)
end

function GetVehicleNextGear(vehicle)
	return _in(0xddb298ae, vehicle, _ri)
end

--- Returns false for nodes that aren't used for GPS routes.
-- Example:
-- Nodes in Fort Zancudo and LSIA are false
function GetVehicleNodeIsGpsAllowed(nodeID)
	return _in(0xA2AE5C478B96E3B6, nodeID, _r)
end
N_0xa2ae5c478b96e3b6 = GetVehicleNodeIsGpsAllowed
GetSupportsGpsRouteFlag = GetVehicleNodeIsGpsAllowed

--- Returns true when the node is Offroad. Alleys, some dirt roads, and carparks return true.
-- Normal roads where plenty of Peds spawn will return false
function GetVehicleNodeIsSwitchedOff(nodeID)
	return _in(0x4F5070AA58F69279, nodeID, _r)
end
N_0x4f5070aa58f69279 = GetVehicleNodeIsSwitchedOff
GetIsSlowRoadFlag = GetVehicleNodeIsSwitchedOff

--- Calling this with an invalid node id, will crash the game.
-- Note that IS_VEHICLE_NODE_ID_VALID simply checks if nodeId is not zero. It does not actually ensure that the id is valid.
-- Eg. IS_VEHICLE_NODE_ID_VALID(1) will return true, but will crash when calling GET_VEHICLE_NODE_POSITION().
function GetVehicleNodePosition(nodeId, outPosition)
	return _in(0x703123E5E7D429C2, nodeId, _v)
end

--- Gets the density and flags of the closest node to the specified position.
-- Density is a value between 0 and 15, indicating how busy the road is.
-- Flags is a bit field.
function GetVehicleNodeProperties(x, y, z)
	return _in(0x0568566ACBB5DEDC, x, y, z, _i, _i, _r)
end

function GetVehicleNumberOfBrokenBones(vehicle)
	return _in(0x2C8CBFE1EA5FC631, vehicle, _ri)
end
N_0x2c8cbfe1ea5fc631 = GetVehicleNumberOfBrokenBones

--- Also includes some "turnOffBones" when vehicle mods are installed.
function GetVehicleNumberOfBrokenOffBones(vehicle)
	return _in(0x42A4BEB35D372407, vehicle, _ri)
end
N_0x42a4beb35d372407 = GetVehicleNumberOfBrokenOffBones

--- Gets the number of passengers, NOT including the driver. Use IS_VEHICLE_SEAT_FREE(Vehicle, -1) to also check for the driver
function GetVehicleNumberOfPassengers(vehicle)
	return _in(0x24CB2137731FFE89, vehicle, _ri)
end

function GetVehicleNumberOfWheels(vehicle)
	return _in(0xedf4b0fc, vehicle, _ri)
end

--- Returns the license plate text from a vehicle.  8 chars maximum.
function GetVehicleNumberPlateText(vehicle)
	return _in(0x7CE1CCB9B293020E, vehicle, _s)
end

--- Returns the PlateType of a vehicle
-- Blue_on_White_1 = 3,
-- Blue_on_White_2 = 0,
-- Blue_on_White_3 = 4,
-- Yellow_on_Blue = 2,
-- Yellow_on_Black = 1,
-- North_Yankton = 5,
function GetVehicleNumberPlateTextIndex(vehicle)
	return _in(0xF11BC2DD9A3E7195, vehicle, _ri)
end

function GetVehicleOilLevel(vehicle)
	return _in(0xfc7f8ef4, vehicle, _rf)
end

function GetVehiclePedIsEntering(ped)
	return _in(0xF92691AED837A5FC, ped, _ri)
end
SetExclusivePhoneRelationships = GetVehiclePedIsEntering

--- Gets the vehicle the specified Ped is in. Returns 0 if the ped is/was not in a vehicle.
-- If the Ped is not in a vehicle and includeLastVehicle is true, the vehicle they were last in is returned.
-- @param ped The target ped
-- @param lastVehicle False = CurrentVehicle, True = LastVehicle
-- @return The vehicle id. Returns 0 if the ped is/was not in a vehicle.
function GetVehiclePedIsIn(ped, lastVehicle)
	return _in(0x9A9112A0FE9A4713, ped, lastVehicle, _ri)
end

function GetVehiclePedIsTryingToEnter(ped)
	return _in(0x814FA8BE5449445D, ped, _ri)
end

--- Gets ID of vehicle player using. It means it can get ID at any interaction with vehicle. Enter\exit for example. And that means it is faster than GET_VEHICLE_PED_IS_IN but less safe.
function GetVehiclePedIsUsing(ped)
	return _in(0x6094AD011A2EA87D, ped, _ri)
end

--- 1000 is max health
-- Begins leaking gas at around 650 health
function GetVehiclePetrolTankHealth(vehicle)
	return _in(0x7D5DABE888D2D074, vehicle, _rf)
end

--- Returns the plates a vehicle has.
-- ```
-- enum eVehiclePlateType
-- {
-- VPT_FRONT_AND_BACK_PLATES = 0,
-- VPT_FRONT_PLATES = 1,
-- VPT_BACK_PLATES = 2,
-- VPT_NONE = 3,
-- };
-- ```
-- Motorcycles with no visible plates will sometimes return a 2 for unknown reasons.
function GetVehiclePlateType(vehicle)
	return _in(0x9CCC9525BF2408E0, vehicle, _ri)
end

--- See [`REQUEST_VEHICLE_RECORDING`](#\_0xAF514CABE74CBF15).
function GetVehicleRecordingId(recording, script)
	return _in(0x21543C612379DB3C, recording, _ts(script), _ri)
end

--- Returns index of the current vehicle's rooftop livery.
-- A getter for [\_SET_VEHICLE_ROOF_LIVERY](#\_0xA6D3A8750DC73270).
-- @param vehicle The vehicle handle.
-- @return An index of the current vehicle's rooftop livery.
function GetVehicleRoofLivery(vehicle)
	return _in(0x60190048C0764A26, vehicle, _ri)
end
N_0x60190048c0764a26 = GetVehicleRoofLivery

--- Returns a number of available rooftop liveries, or -1 if vehicle has no rooftop liveries available.
-- @param vehicle The vehicle handle.
-- @return A number of available rooftop liveries for vehicle.
function GetVehicleRoofLiveryCount(vehicle)
	return _in(0x5ECB40269053C0D4, vehicle, _ri)
end
N_0x5ecb40269053c0d4 = GetVehicleRoofLiveryCount

function GetVehicleSteeringAngle(vehicle)
	return _in(0x1382fcea, vehicle, _rf)
end

function GetVehicleSteeringScale(vehicle)
	return _in(0x954465de, vehicle, _rf)
end

--- Outputs 2 Vector3's.
-- Scripts check if out2.x - out1.x > something.x
-- Could be suspension related, as in max suspension height and min suspension height, considering the natives location.
function GetVehicleSuspensionBounds(vehicle)
	return _in(0xDF7E3EEB29642C38, vehicle, _v, _v)
end
N_0xdf7e3eeb29642c38 = GetVehicleSuspensionBounds

--- Gets the height of the vehicle's suspension.
-- The higher the value the lower the suspension. Each 0.002 corresponds with one more level lowered.
-- 0.000 is the stock suspension.
-- 0.008 is Ultra Suspension.
function GetVehicleSuspensionHeight(vehicle)
	return _in(0x53952FD2BAA19F17, vehicle, _rf)
end

function GetVehicleThrottleOffset(vehicle)
	return _in(0xd1d07351, vehicle, _rf)
end
GetVehicleCurrentAcceleration = GetVehicleThrottleOffset

--- A getter for [MODIFY_VEHICLE_TOP_SPEED](#\_0x93A3996368C94158). Returns -1.0 if a modifier is not set.
-- @param vehicle The target vehicle.
-- @return Returns vehicle's modified top speed.
function GetVehicleTopSpeedModifier(vehicle)
	return _in(0x998b7fee, vehicle, _rf)
end

--- Gets the trailer of a vehicle and puts it into the trailer parameter.
function GetVehicleTrailerVehicle(vehicle, trailer)
	return _in(0x1CDD6BADC297830D, vehicle, _ii(trailer) --[[ may be optional ]], _r)
end

function GetVehicleTurboPressure(vehicle)
	return _in(0xe02b51d7, vehicle, _rf)
end

function GetVehicleTyreSmokeColor(vehicle)
	return _in(0xB635392A4938B3C3, vehicle, _i, _i, _i)
end

function GetVehicleTyresCanBurst(vehicle)
	return _in(0x678B9BB8C3F58FEB, vehicle, _r)
end

function GetVehicleWaypointProgress(vehicle)
	return _in(0x9824CFF8FC66E159, vehicle, _ri)
end

function GetVehicleWaypointTargetPoint(vehicle)
	return _in(0x416B62AC8B9E5BBD, vehicle, _ri)
end

function GetVehicleWeaponCapacity(vehicle, weaponIndex)
	return _in(0x8181CE2F25CB9BB7, vehicle, weaponIndex, _ri)
end
N_0x8181ce2f25cb9bb7 = GetVehicleWeaponCapacity

--- Gets brake pressure of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- Normal values around 1.0f when braking.
function GetVehicleWheelBrakePressure(vehicle, wheelIndex)
	return _in(0x70fe2eff, vehicle, wheelIndex, _rf)
end

--- Gets the flags of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- @return An unsigned int containing bit flags.
function GetVehicleWheelFlags(vehicle, wheelIndex)
	return _in(0xc70fa0c7, vehicle, wheelIndex, _ri)
end

function GetVehicleWheelHealth(vehicle, wheelIndex)
	return _in(0x54a677f5, vehicle, wheelIndex, _rf)
end

--- Gets whether the wheel is powered.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- This is a shortcut to a flag in GET_VEHICLE_WHEEL_FLAGS.
function GetVehicleWheelIsPowered(vehicle, wheelIndex)
	return _in(0x3ccf1b49, vehicle, wheelIndex, _r)
end

--- Gets power being sent to a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
function GetVehicleWheelPower(vehicle, wheelIndex)
	return _in(0xd203287, vehicle, wheelIndex, _rf)
end

function GetVehicleWheelRimColliderSize(vehicle, wheelIndex)
	return _in(0xcee21ab2, vehicle, wheelIndex, _rf)
end

--- Gets the rotation speed of a wheel.
-- This is used internally to calcuate GET_VEHICLE_WHEEL_SPEED.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- @return The angular velocity of the wheel.
function GetVehicleWheelRotationSpeed(vehicle, wheelIndex)
	return _in(0xea1859e5, vehicle, wheelIndex, _rf)
end

--- Returns vehicle's wheels' size (size is the same for all the wheels, cannot get/set specific wheel of vehicle).
-- Only works on non-default wheels (returns 0 in case of default wheels).
-- @param vehicle The vehicle to obtain data for.
-- @return Float representing size of the wheel (usually between 0.5 and 1.5)
function GetVehicleWheelSize(vehicle)
	return _in(0x4046b66, vehicle, _rf)
end

--- Gets speed of a wheel at the tyre.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- @return An integer.
function GetVehicleWheelSpeed(vehicle, wheelIndex)
	return _in(0x149c9da0, vehicle, wheelIndex, _rf)
end

--- Gets steering angle of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- @return The steering angle of the wheel, with 0 being straight.
function GetVehicleWheelSteeringAngle(vehicle, wheelIndex)
	return _in(0xa0867448, vehicle, wheelIndex, _rf)
end

function GetVehicleWheelSurfaceMaterial(vehicle, wheelIndex)
	return _in(0xa7f04022, vehicle, wheelIndex, _ri)
end

--- Gets the current suspension compression of a wheel.
-- Returns a positive value. 0 means the suspension is fully extended, the wheel is off the ground.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- @return The current compression of the wheel's suspension.
function GetVehicleWheelSuspensionCompression(vehicle, wheelIndex)
	return _in(0x2b48175b, vehicle, wheelIndex, _rf)
end

function GetVehicleWheelTireColliderSize(vehicle, wheelIndex)
	return _in(0xe0ba9fe6, vehicle, wheelIndex, _rf)
end

function GetVehicleWheelTireColliderWidth(vehicle, wheelIndex)
	return _in(0xef65929c, vehicle, wheelIndex, _rf)
end

--- Gets the traction vector length of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
function GetVehicleWheelTractionVectorLength(vehicle, wheelIndex)
	return _in(0x3bcfee14, vehicle, wheelIndex, _rf)
end

--- cpp
-- enum eVehicleWheelType
-- {
-- VWT_SPORT = 0,
-- VWT_MUSCLE = 1,
-- VWT_LOWRIDER = 2,
-- VWT_SUV = 3,
-- VWT_OFFROAD = 4,
-- VWT_TUNER = 5,
-- VWT_BIKE = 6,
-- VWT_HIEND = 7,
-- VWT_SUPERMOD1 = 8, // Benny's Original
-- VWT_SUPERMOD2 = 9, // Benny's Bespoke
-- VWT_SUPERMOD3 = 10, // Open Wheel
-- VWT_SUPERMOD4 = 11, // Street
-- VWT_SUPERMOD5 = 12, // Track
-- };
-- @return Returns an eVehicleWheelType integer value.
function GetVehicleWheelType(vehicle)
	return _in(0xB3ED1BFB4BE636DC, vehicle, _ri)
end

--- Returns vehicle's wheels' width (width is the same for all the wheels, cannot get/set specific wheel of vehicle).
-- Only works on non-default wheels (returns 0 in case of default wheels).
-- @param vehicle The vehicle to obtain data for.
-- @return Float representing width of the wheel (usually between 0.1 and 1.5)
function GetVehicleWheelWidth(vehicle)
	return _in(0x9c7b59f9, vehicle, _rf)
end

--- Returns the offset of the specified wheel relative to the wheel's axle center.
function GetVehicleWheelXOffset(vehicle, wheelIndex)
	return _in(0xcc90cbca, vehicle, wheelIndex, _rf)
end

function GetVehicleWheelYRotation(vehicle, wheelIndex)
	return _in(0x2ea4affe, vehicle, wheelIndex, _rf)
end
GetVehicleWheelXrot = GetVehicleWheelYRotation

--- List of known states:
-- ```
-- 1: Not wheeling.
-- 65: Vehicle is ready to do wheelie (burnouting).
-- 129: Vehicle is doing wheelie.
-- ```
-- @param vehicle Vehicle
-- @return Vehicle's current wheelie state.
function GetVehicleWheelieState(vehicle)
	return _in(0x137260d1, vehicle, _ri)
end

function GetVehicleWindowTint(vehicle)
	return _in(0x0EE21293DAD47C95, vehicle, _ri)
end

--- Returns the headlight color index from the vehicle. Value between 0, 12.
-- Use [\_SET_VEHICLE_HEADLIGHTS_COLOUR](#\_0xE41033B25D003A07) to set the headlights color for the vehicle.
-- Must enable xenon headlights before it'll take affect.
-- List of colors and ids:
-- ```
-- enum headlightColors {
-- Default = -1,
-- White = 0,
-- Blue = 1,
-- Electric_Blue = 2,
-- Mint_Green = 3,
-- Lime_Green = 4,
-- Yellow = 5,
-- Golden_Shower = 6,
-- Orange = 7,
-- Red = 8,
-- Pony_Pink = 9,
-- Hot_Pink = 10,
-- Purple = 11,
-- Blacklight = 12
-- }
-- ```
-- @param vehicle The vehicle to get the headlight color from.
-- @return Returns an int, value between 0-12 or 255 if no color is set.
function GetVehicleXenonLightsColor(vehicle)
	return _in(0x3DFF319A831E0CDB, vehicle, _ri)
end
N_0x3dff319a831e0cdb = GetVehicleXenonLightsColor
GetVehicleHeadlightsColour = GetVehicleXenonLightsColor
GetVehicleXenonLightsColour = GetVehicleXenonLightsColor

--- NativeDB Introduced: v2372
function GetWantedLevelParoleDuration()
	return _in(0xA72200F51875FEA4, _ri)
end
N_0xa72200f51875fea4 = GetWantedLevelParoleDuration

--- Remnant from GTA IV. Does nothing in GTA V.
function GetWantedLevelRadius(player)
	return _in(0x085DEB493BE80812, player, _rf)
end

--- Drft
function GetWantedLevelThreshold(wantedLevel)
	return _in(0xFDD179EAF45B556C, wantedLevel, _ri)
end

--- NativeDB Introduced: v1290
function GetWarningMessageTitleHash()
	return _in(0x81DF9ABA6C83DFF9, _ri)
end

--- This function set height to the value of z-axis of the water surface.
-- This function works with sea and lake. However it does not work with shallow rivers (e.g. raton canyon will return -100000.0f)
-- note: seems to return true when you are in water
function GetWaterHeight(x, y, z, height)
	return _in(0xF6829842C06AE524, x, y, z, _fi(height) --[[ may be optional ]], _r)
end

function GetWaterHeightNoWaves(x, y, z, height)
	return _in(0x8EE6B53CE13A9794, x, y, z, _fi(height) --[[ may be optional ]], _r)
end

function GetWaypointBlipEnumId()
	return _in(0x186E5D252FA50E7D, _ri)
end
GetBlipInfoIdIterator = GetWaypointBlipEnumId

function GetWaypointDistanceAlongRoute(p0, p1)
	return _in(0xA5B769058763E497, _ts(p0), p1, _rf)
end

--- A getter for [SET_WEAPON_ANIMATION_OVERRIDE](\_0x1055AC3A667F09D9).
-- @param ped The target ped.
-- @return The weapon animation override.
function GetWeaponAnimationOverride(ped)
	return _in(0x63ed2e7, ped, _ri)
end

--- // Returns the size of the default weapon component clip.
-- Use it like this:
-- char cClipSize[32];
-- Hash cur;
-- if (WEAPON::GET_CURRENT_PED_WEAPON(playerPed, &cur, 1))
-- {
-- if (WEAPON::IS_WEAPON_VALID(cur))
-- {
-- int iClipSize = WEAPON::GET_WEAPON_CLIP_SIZE(cur);
-- sprintf_s(cClipSize, "ClipSize: %.d", iClipSize);
-- vDrawString(cClipSize, 0.5f, 0.5f);
-- }
-- }
function GetWeaponClipSize(weaponHash)
	return _in(0x583BE370B1EC6EB4, _ch(weaponHash), _ri)
end

--- A getter for `CWeaponAccuracyModifier` in a weapon component.
-- @param componentHash Weapon component name hash.
-- @return A weapon component accuracy modifier.
function GetWeaponComponentAccuracyModifier(componentHash)
	return _in(0xc693e278, _ch(componentHash), _rf)
end

--- A getter for `CameraHash` in a weapon scope component.
-- @param componentHash Weapon component name hash.
-- @return The hash of the scope camera.
function GetWeaponComponentCameraHash(componentHash)
	return _in(0xacb7e68f, _ch(componentHash), _ri)
end

--- A getter for `ClipSize` in a weapon component.
-- @param componentHash Weapon component name hash.
-- @return A weapon component clip size.
function GetWeaponComponentClipSize(componentHash)
	return _in(0xe14cf665, _ch(componentHash), _ri)
end

--- A getter for `CWeaponDamageModifier` in a weapon component.
-- @param componentHash Weapon component name hash.
-- @return A weapon component damage modifier.
function GetWeaponComponentDamageModifier(componentHash)
	return _in(0x4a0e3855, _ch(componentHash), _rf)
end

function GetWeaponComponentHudStats(componentHash, outData)
	return _in(0xB3CAF387AE12E9F8, _ch(componentHash), _ii(outData) --[[ may be optional ]], _r)
end

--- A getter for `CWeaponFallOffModifier` damage modifier value in a weapon component.
-- @param componentHash Weapon component name hash.
-- @return A weapon component damage modifier.
function GetWeaponComponentRangeDamageModifier(componentHash)
	return _in(0xe134fb8d, _ch(componentHash), _rf)
end

--- A getter for `CWeaponFallOffModifier` range modifier value in a weapon component.
-- @param componentHash Weapon component name hash.
-- @return A weapon component range modifier.
function GetWeaponComponentRangeModifier(componentHash)
	return _in(0x2fd0bc1b, _ch(componentHash), _rf)
end

--- A getter for `ReticuleHash` in a weapon scope component.
-- @param componentHash Weapon component name hash.
-- @return The hash of the reticule camera.
function GetWeaponComponentReticuleHash(componentHash)
	return _in(0xf9ab9297, _ch(componentHash), _ri)
end

function GetWeaponComponentTypeModel(componentHash)
	return _in(0x0DB57B41EC1DB083, _ch(componentHash), _ri)
end

function GetWeaponComponentVariantExtraComponentCount(componentHash)
	return _in(0x6558AC7C17BFEF58, _ch(componentHash), _ri)
end
N_0x6558ac7c17bfef58 = GetWeaponComponentVariantExtraComponentCount

function GetWeaponComponentVariantExtraComponentModel(componentHash, extraComponentIndex)
	return _in(0x4D1CB8DC40208A17, _ch(componentHash), extraComponentIndex, _ri)
end
N_0x4d1cb8dc40208a17 = GetWeaponComponentVariantExtraComponentModel

--- This native does not return damages of weapons from the melee and explosive group.
-- @param componentHash 0 in the decompiled scripts.
-- @return Damages of the weapon.
function GetWeaponDamage(weaponHash, componentHash)
	return _in(0x3133B907D8B32053, _ch(weaponHash), _ch(componentHash), _rf)
end
N_0x3133b907d8b32053 = GetWeaponDamage
GetWeaponDamage = GetWeaponDamage

--- A getter for [\_SET_WEAPON_DAMAGE_MODIFIER](#\_0x4757F00BC6323CFE).
-- @param weaponHash Weapon name hash.
-- @return A weapon damage modifier.
function GetWeaponDamageModifier(weaponHash)
	return _in(0xd979143, _ch(weaponHash), _rf)
end

--- 0=unknown (or incorrect weaponHash)
-- 1= no damage (flare,snowball, petrolcan)
-- 2=melee
-- 3=bullet
-- 4=force ragdoll fall
-- 5=explosive (RPG, Railgun, grenade)
-- 6=fire(molotov)
-- 8=fall(WEAPON_HELI_CRASH)
-- 10=electric
-- 11=barbed wire
-- 12=extinguisher
-- 13=gas
-- 14=water cannon(WEAPON_HIT_BY_WATER_CANNON)
function GetWeaponDamageType(weaponHash)
	return _in(0x3BE0BB12D25FB305, _ch(weaponHash), _ri)
end

--- // members should be aligned to 8 bytes by default but it's best to use alignas here, just to be sure
-- struct WeaponHudStatsData
-- {
-- alignas(8) uint8_t hudDamage; // 0x0000
-- alignas(8) uint8_t hudSpeed; // 0x0008
-- alignas(8) uint8_t hudCapacity; // 0x0010
-- alignas(8) uint8_t hudAccuracy; // 0x0018
-- alignas(8) uint8_t hudRange; // 0x0020
-- };
-- Usage:
-- WeaponHudStatsData data;
-- if (GET_WEAPON_HUD_STATS(weaponHash, (Any*)&data))
-- {
-- // uint8_t damagePercentage = data.hudDamage etc...
-- }
function GetWeaponHudStats(weaponHash, outData)
	return _in(0xD92C739EE34C9EBA, _ch(weaponHash), _ii(outData) --[[ may be optional ]], _r)
end

--- Drops the current weapon and returns the object
-- Unknown behavior when unarmed.
function GetWeaponObjectFromPed(ped, p1)
	return _in(0xCAE1DC9A0E22A16D, ped, p1, _ri)
end

function GetWeaponObjectLiveryColor(weaponObject, camoComponentHash)
	return _in(0xB3EA4FEABF41464B, weaponObject, _ch(camoComponentHash), _ri)
end
N_0xb3ea4feabf41464b = GetWeaponObjectLiveryColor

function GetWeaponObjectTintIndex(weapon)
	return _in(0xCD183314F7CD2E57, weapon, _ri)
end

function GetWeaponTimeBetweenShots(weaponHash)
	return _in(0x065D2AACAD8CF7A4, _ch(weaponHash), _rf)
end
N_0x065d2aacad8cf7a4 = GetWeaponTimeBetweenShots

function GetWeaponTintCount(weaponHash)
	return _in(0x5DCF6C5CAB2E9BF7, _ch(weaponHash), _ri)
end

function GetWeaponTypeFromPickupType(pickupHash)
	return _in(0x08F96CA6C551AD51, _ch(pickupHash), _ri)
end
N_0x08f96ca6c551ad51 = GetWeaponTypeFromPickupType
GetWeaponHashFromPickup = GetWeaponTypeFromPickupType

function GetWeapontypeGroup(weaponHash)
	return _in(0xC3287EE3050FB74C, _ch(weaponHash), _ri)
end

--- Returns the model of any weapon.
-- Can also take an ammo hash?
-- sub_6663a(&l_115B, WEAPON::GET_WEAPONTYPE_MODEL(${ammo_rpg}));
function GetWeapontypeModel(weaponHash)
	return _in(0xF46CDC33180FDA94, _ch(weaponHash), _ri)
end

function GetWeapontypeSlot(weaponHash)
	return _in(0x4215460B9B8B7FA0, _ch(weaponHash), _ri)
end

--- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
function GetWeatherTypeTransition()
	return _in(0xF3BBE884A14BB413, _i, _i, _f)
end

function GetWindDirection()
	return _in(0x1F400FEF721170DA, _rv)
end

function GetWindSpeed()
	return _in(0xA8CF1CC0AFCD3F12, _rf)
end

--- Returns the coordinates of an entity-bone.
function GetWorldPositionOfEntityBone(entity, boneIndex)
	return _in(0x44A8FCB8ED227738, entity, boneIndex, _rv)
end

function GetZoneAtCoords(x, y, z)
	return _in(0x27040C25DE6CB2F4, x, y, z, _ri)
end

--- 'zoneName' corresponds to an entry in 'popzone.ipl'.
-- AIRP = Los Santos International Airport
-- ALAMO = Alamo Sea
-- ALTA = Alta
-- ARMYB = Fort Zancudo
-- BANHAMC = Banham Canyon Dr
-- BANNING = Banning
-- BEACH = Vespucci Beach
-- BHAMCA = Banham Canyon
-- BRADP = Braddock Pass
-- BRADT = Braddock Tunnel
-- BURTON = Burton
-- CALAFB = Calafia Bridge
-- CANNY = Raton Canyon
-- CCREAK = Cassidy Creek
-- CHAMH = Chamberlain Hills
-- CHIL = Vinewood Hills
-- CHU = Chumash
-- CMSW = Chiliad Mountain State Wilderness
-- CYPRE = Cypress Flats
-- DAVIS = Davis
-- DELBE = Del Perro Beach
-- DELPE = Del Perro
-- DELSOL = La Puerta
-- DESRT = Grand Senora Desert
-- DOWNT = Downtown
-- DTVINE = Downtown Vinewood
-- EAST_V = East Vinewood
-- EBURO = El Burro Heights
-- ELGORL = El Gordo Lighthouse
-- ELYSIAN = Elysian Island
-- GALFISH = Galilee
-- GOLF = GWC and Golfing Society
-- GRAPES = Grapeseed
-- GREATC = Great Chaparral
-- HARMO = Harmony
-- HAWICK = Hawick
-- HORS = Vinewood Racetrack
-- HUMLAB = Humane Labs and Research
-- JAIL = Bolingbroke Penitentiary
-- KOREAT = Little Seoul
-- LACT = Land Act Reservoir
-- LAGO = Lago Zancudo
-- LDAM = Land Act Dam
-- LEGSQU = Legion Square
-- LMESA = La Mesa
-- LOSPUER = La Puerta
-- MIRR = Mirror Park
-- MORN = Morningwood
-- MOVIE = Richards Majestic
-- MTCHIL = Mount Chiliad
-- MTGORDO = Mount Gordo
-- MTJOSE = Mount Josiah
-- MURRI = Murrieta Heights
-- NCHU = North Chumash
-- NOOSE = N.O.O.S.E
-- OCEANA = Pacific Ocean
-- PALCOV = Paleto Cove
-- PALETO = Paleto Bay
-- PALFOR = Paleto Forest
-- PALHIGH = Palomino Highlands
-- PALMPOW = Palmer-Taylor Power Station
-- PBLUFF = Pacific Bluffs
-- PBOX = Pillbox Hill
-- PROCOB = Procopio Beach
-- RANCHO = Rancho
-- RGLEN = Richman Glen
-- RICHM = Richman
-- ROCKF = Rockford Hills
-- RTRAK = Redwood Lights Track
-- SANAND = San Andreas
-- SANCHIA = San Chianski Mountain Range
-- SANDY = Sandy Shores
-- SKID = Mission Row
-- SLAB = Stab City
-- STAD = Maze Bank Arena
-- STRAW = Strawberry
-- TATAMO = Tataviam Mountains
-- TERMINA = Terminal
-- TEXTI = Textile City
-- TONGVAH = Tongva Hills
-- TONGVAV = Tongva Valley
-- VCANA = Vespucci Canals
-- VESP = Vespucci
-- VINE = Vinewood
-- WINDF = Ron Alternates Wind Farm
-- WVINE = West Vinewood
-- ZANCUDO = Zancudo River
-- ZP_ORT = Port of South Los Santos
-- ZQ_UAR = Davis Quartz
function GetZoneFromNameId(zoneName)
	return _in(0x98CD1D2934B76CC1, _ts(zoneName), _ri)
end

function GetZonePopschedule(zoneId)
	return _in(0x4334BC40AA0CB4BB, zoneId, _ri)
end

--- cellphone range 1- 5 used for signal bar in iFruit phone
function GetZoneScumminess(zoneId)
	return _in(0x5F7B268D15BA0739, zoneId, _ri)
end

--- Achievements from 0-57
-- more achievements came with update 1.29 (freemode events update), I'd say that they now go to 60, but I'll need to check.
function GiveAchievementToPlayer(achievement)
	return _in(0xBEC7076D64130195, achievement, _r)
end

--- Gives a weapon to PED with a delay, example:
-- WEAPON::GIVE_DELAYED_WEAPON_TO_PED(PED::PLAYER_PED_ID(), MISC::GET_HASH_KEY("WEAPON_PISTOL"), 1000, false)
function GiveDelayedWeaponToPed(ped, weaponHash, ammoCount, bForceInHand)
	return _in(0xB282DC6EBD803C75, ped, _ch(weaponHash), ammoCount, bForceInHand)
end

function GiveLoadoutToPed(ped, loadoutHash)
	return _in(0x68F8BE6AF5CDF8A6, ped, _ch(loadoutHash))
end
N_0x68f8be6af5cdf8a6 = GiveLoadoutToPed

--- PoliceMotorcycleHelmet   1024
-- RegularMotorcycleHelmet   4096
-- FiremanHelmet 16384
-- PilotHeadset  32768
-- PilotHelmet   65536
-- --
-- p2 is generally 4096 or 16384 in the scripts. p1 varies between 1 and 0.
function GivePedHelmet(ped, cannotRemove, helmetFlag, textureIndex)
	return _in(0x54C7C4A94367717E, ped, cannotRemove, helmetFlag, textureIndex)
end

--- Sends the message that was created by a call to CREATE_NM_MESSAGE to the specified Ped.
-- If a message hasn't been created already, this function does nothing.
-- If the Ped is not ragdolled with Euphoria enabled, this function does nothing.
-- The following call can be used to ragdoll the Ped with Euphoria enabled: SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);
-- Call order:
-- SET_PED_TO_RAGDOLL
-- CREATE_NM_MESSAGE
-- GIVE_PED_NM_MESSAGE
-- Multiple messages can be chained. Eg. to make the ped stagger and swing his arms around, the following calls can be made:
-- SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);
-- CREATE_NM_MESSAGE(true, 0); // stopAllBehaviours - Stop all other behaviours, in case the Ped is already doing some Euphoria stuff.
-- GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
-- CREATE_NM_MESSAGE(true, 1151); // staggerFall - Attempt to walk while falling.
-- GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
-- CREATE_NM_MESSAGE(true, 372); // armsWindmill - Swing arms around.
-- GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
function GivePedNmMessage(ped)
	return _in(0xB158DFCCC56E5C5B, ped)
end

--- ```
-- p1 is either 1 or 2 in the PC scripts.
-- ```
-- This native is used to "give"/duplicate a player ped to a frontend menu as configured via the `ACTIVATE_FRONTEND_MENU` native, you first must utilize the `CLONE_PED` ( https://runtime.fivem.net/doc/natives/#\_0xEF29A16337FACADB ) to clone said ped.
function GivePedToPauseMenu(ped, p1)
	return _in(0xAC0BFBDC3BE00E14, ped, p1)
end

function GivePlayerRagdollControl(player, toggle)
	return _in(0x3C49C870E66F0A28, player, toggle)
end

function GiveWeaponComponentToPed(ped, weaponHash, componentHash)
	return _in(0xD966D51AA5B28BB9, ped, _ch(weaponHash), _ch(componentHash))
end

--- addonHash:
-- (use WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL() to get hash value)
-- ${component_at_ar_flsh}, ${component_at_ar_supp}, ${component_at_pi_flsh}, ${component_at_scope_large}, ${component_at_ar_supp_02}
function GiveWeaponComponentToWeaponObject(weaponObject, addonHash)
	return _in(0x33E179436C0B31DB, weaponObject, _ch(addonHash))
end

function GiveWeaponObjectToPed(weaponObject, ped)
	return _in(0xB1FA61371AF7C4B7, weaponObject, ped)
end

function GiveWeaponToPed(ped, weaponHash, ammoCount, isHidden, bForceInHand)
	return _in(0xBF0FD6E56C964FCB, ped, _ch(weaponHash), ammoCount, isHidden, bForceInHand)
end

function GolfTrailGetMaxHeight()
	return _in(0xA4819F5E23E2FFAD, _rf)
end
N_0xa4819f5e23e2ffad = GolfTrailGetMaxHeight

function GolfTrailGetVisualControlPoint(p0)
	return _in(0xA4664972A9B8F8BA, p0, _rv)
end
N_0xa4664972a9b8f8ba = GolfTrailGetVisualControlPoint

function GolfTrailSetColour(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
	return _in(0x12995F2E53FFA601, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
end
N_0x12995f2e53ffa601 = GolfTrailSetColour

function GolfTrailSetEnabled(toggle)
	return _in(0xA51C4B86B71652AE, toggle)
end
N_0xa51c4b86b71652ae = GolfTrailSetEnabled

function GolfTrailSetFacing(p0)
	return _in(0x06F761EA47C1D3ED, p0)
end
N_0x06f761ea47c1d3ed = GolfTrailSetFacing

--- 12 matches across 4 scripts. All 4 scripts were job creators.
-- type ranged from 0 - 2.
-- p4 was always 0.2f. Likely scale.
-- assuming p5 - p8 is RGBA, the graphic is always yellow (255, 255, 0, 255).
-- Tested but noticed nothing.
function GolfTrailSetFixedControlPoint(type, xPos, yPos, zPos, p4, red, green, blue, alpha)
	return _in(0xB1BB03742917A5D6, type, xPos, yPos, zPos, p4, red, green, blue, alpha)
end
N_0xb1bb03742917a5d6 = GolfTrailSetFixedControlPoint

--- p8 seems to always be false.
function GolfTrailSetPath(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x312342E1A4874F3F, p0, p1, p2, p3, p4, p5, p6, p7, p8)
end
N_0x312342e1a4874f3f = GolfTrailSetPath

function GolfTrailSetRadius(p0, p1, p2)
	return _in(0x2485D34E50A22E84, p0, p1, p2)
end
N_0x2485d34e50a22e84 = GolfTrailSetRadius

--- Only appeared in Golf & Golf_mp. Parameters were all ptrs
function GolfTrailSetShaderParams(p0, p1, p2, p3, p4)
	return _in(0x9CFDD90B2B844BF7, p0, p1, p2, p3, p4)
end
N_0x9cfdd90b2b844bf7 = GolfTrailSetShaderParams

function GolfTrailSetTessellation(p0, p1)
	return _in(0xDBAA5EC848BA2D46, p0, p1)
end
N_0xdbaa5ec848ba2d46 = GolfTrailSetTessellation

function GrassLodResetScriptAreas()
	return _in(0x302C91AB2D477F7E)
end
N_0x302c91ab2d477f7e = GrassLodResetScriptAreas

--- Wraps 0xAAE9BE70EC7C69AB with FLT_MAX as p7, Jenkins: 0x73E96210?
function GrassLodShrinkScriptAreas(x, y, z, radius, p4, p5, p6)
	return _in(0x6D955F6A9E0295B1, x, y, z, radius, p4, p5, p6)
end
N_0x6d955f6a9e0295b1 = GrassLodShrinkScriptAreas

function HasAchievementBeenPassed(achievement)
	return _in(0x867365E111A3B6EB, achievement, _r)
end

function HasActionModeAssetLoaded(asset)
	return _in(0xE4B5F4BF2CB24E65, _ts(asset), _r)
end

function HasAdditionalTextLoaded(slot)
	return _in(0x02245FE4BED318B8, slot, _r)
end

function HasAnimDictLoaded(animDict)
	return _in(0xD031A9162D01088C, _ts(animDict), _r)
end

--- if (ENTITY::HAS_ANIM_EVENT_FIRED(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("CreateObject")))
function HasAnimEventFired(entity, actionHash)
	return _in(0xEAF4CD9EA3E7E922, entity, _ch(actionHash), _r)
end

--- Gets whether the specified animation set has finished loading. An animation set provides movement animations for a ped.
-- Animation set and clip set are synonymous. See [`SET_PED_MOVEMENT_CLIPSET`](#\_0xAF8A94EDE7712BEF).
function HasAnimSetLoaded(animSet)
	return _in(0xC4EA073D86FB29B0, _ts(animSet), _r)
end

--- Hardcoded to always return true.
function HasAsyncInstallFinished()
	return _in(0x14832BF2ABA53FC5, _r)
end
N_0x14832bf2aba53fc5 = HasAsyncInstallFinished

--- p3 - possibly radius?
function HasBulletImpactedInArea(x, y, z, p3, p4, p5)
	return _in(0x9870ACFB89A90995, x, y, z, p3, p4, p5, _r)
end

function HasBulletImpactedInBox(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xDC8C5D7CFEAB8394, p0, p1, p2, p3, p4, p5, p6, p7, _r)
end

--- This native appears on the cheat_controller script and tracks a combination of buttons, which may be used to toggle cheats in-game. Credits to ThreeSocks for the info. The hash contains the combination, while the "amount" represents the amount of buttons used in a combination. The following page can be used to make a button combination: gta5offset.com/ts/hash/
-- INT_SCORES_SCORTED was a hash collision
function HasButtonCombinationJustBeenEntered(hash, amount)
	return _in(0x071E2A839DE82D90, _ch(hash), amount, _r)
end
N_0x071e2a839de82d90 = HasButtonCombinationJustBeenEntered

--- Get inputted "Cheat code", for example:
-- while (TRUE)
-- {
-- if (MISC::_557E43C447E700A8(${fugitive}))
-- {
-- // Do something.
-- }
-- SYSTEM::WAIT(0);
-- }
-- Calling this will also set the last saved string hash to zero.
function HasCheatStringJustBeenEntered(hash)
	return _in(0x557E43C447E700A8, _ch(hash), _r)
end
N_0x557e43c447e700a8 = HasCheatStringJustBeenEntered

--- Alias for HAS_ANIM_SET_LOADED.
function HasClipSetLoaded(clipSet)
	return _in(0x318234F4F3738AF3, _ts(clipSet), _r)
end

function HasClosestObjectOfTypeBeenBroken(p0, p1, p2, p3, modelHash, p5)
	return _in(0x761B0E69AC4D007E, p0, p1, p2, p3, _ch(modelHash), p5, _r)
end

function HasClosestObjectOfTypeBeenCompletelyDestroyed(x, y, z, radius, modelHash, p5)
	return _in(0x46494A2475701343, x, y, z, radius, _ch(modelHash), p5, _r)
end
N_0x46494a2475701343 = HasClosestObjectOfTypeBeenCompletelyDestroyed

--- Sets the value of the specified variable to 0.
-- Always returns true.
function HasCloudRequestsFinished(unused)
	return _in(0x46E2B844905BC5F0, _i --[[ actually bool ]], unused, _r)
end
Nullify = HasCloudRequestsFinished

function HasCollisionForModelLoaded(model)
	return _in(0x22CCA434E368F03A, _ch(model), _r)
end

function HasCollisionLoadedAroundEntity(entity)
	return _in(0xE9676F61BC0B3321, entity, _r)
end

--- Simply checks if the cutscene has loaded and doesn't check via CutSceneManager as opposed to HAS_[THIS]_CUTSCENE_LOADED.
function HasCutFileLoaded(cutsceneName)
	return _in(0xA1C996C2A744262E, _ts(cutsceneName), _r)
end
N_0xa1c996c2a744262e = HasCutFileLoaded

function HasCutsceneCutThisFrame()
	return _in(0x708BDD8CD795B043, _r)
end
N_0x708bdd8cd795b043 = HasCutsceneCutThisFrame

function HasCutsceneFinished()
	return _in(0x7C0A893088881D57, _r)
end

function HasCutsceneLoaded()
	return _in(0xC59F528E9AB9F339, _r)
end

--- HAS_*
function HasDirectorModeBeenTriggered()
	return _in(0xA277800A9EAE340E, _r)
end
N_0xa277800a9eae340e = HasDirectorModeBeenTriggered

--- ```
-- P3 is always 3 as far as i cant tell
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function HasEntityAnimFinished(entity, animDict, animName, p3)
	return _in(0x20B711662962B472, entity, _ts(animDict), _ts(animName), p3, _r)
end

function HasEntityBeenDamagedByAnyObject(entity)
	return _in(0x95EB9964FF5C5C65, entity, _r)
end

function HasEntityBeenDamagedByAnyPed(entity)
	return _in(0x605F5A140F202491, entity, _r)
end

function HasEntityBeenDamagedByAnyVehicle(entity)
	return _in(0xDFD5033FDBA0A9C8, entity, _r)
end

--- Entity 1 = Victim
-- Entity 2 = Attacker
-- p2 seems to always be 1
function HasEntityBeenDamagedByEntity(entity1, entity2, p2)
	return _in(0xC86D67D52A707CF8, entity1, entity2, p2, _r)
end

--- It determines what weapons caused damage:
-- If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
-- If you want to define any melee weapon, second parameter=0, third parameter=1.
-- If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
function HasEntityBeenDamagedByWeapon(entity, weaponHash, weaponType)
	return _in(0x131D401334815E94, entity, _ch(weaponHash), weaponType, _r)
end

--- Checks if entity1 has a clear line of sight to entity2. So a simple raycast which if it collides with any of the given colliderTypes returns false.
-- The direction of the check matters with for example bushes, so checking from inside to outside a bush with traceType 256 returns true, but the other way around returns false.
-- @param entity1 Entity to start from
-- @param entity2 Entity to check to
-- @param flags A bit mask with bits 1, 2, 4, etc, relating to collider types (see: [START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE](#\_0x377906D8A31E5586)). 17 is most common in GTA scripts.
-- @return Returns `true` if no collider of specified bitmask is hit.
function HasEntityClearLosToEntity(entity1, entity2, flags)
	return _in(0xFCDFF7B72D23A1AC, entity1, entity2, flags, _r)
end

--- Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.
-- This is one of the most CPU demanding BOOL natives in the game; avoid calling this in things like nested for-loops
function HasEntityClearLosToEntityInFront(entity1, entity2)
	return _in(0x0267D00AF114F17A, entity1, entity2, _r)
end

--- NativeDB Introduced: v1868
function HasEntityClearLosToEntity_2(entity1, entity2, traceType)
	return _in(0x394BDE2A7BBA031E, entity1, entity2, traceType, _ri)
end
N_0x394bde2a7bba031e = HasEntityClearLosToEntity_2

--- Called on tick.
-- Tested with vehicles, returns true whenever the vehicle is touching any entity.
-- Note: for vehicles, the wheels can touch the ground and it will still return false, but if the body of the vehicle touches the ground, it will return true.
function HasEntityCollidedWithAnything(entity)
	return _in(0x8BAD02F0368D9E14, entity, _r)
end

--- HAS_*
function HasFilledVehiclePopulation()
	return _in(0x91D6DD290888CBAB, _r)
end
N_0x91d6dd290888cbab = HasFilledVehiclePopulation

function HasForceCleanupOccurred(cleanupFlags)
	return _in(0xC968670BFACE42D9, cleanupFlags, _r)
end

--- Returns whether or not the specific minimap overlay has loaded.
-- @param id A minimap overlay ID.
-- @return A boolean indicating load status.
function HasMinimapOverlayLoaded(id)
	return _in(0xf7535f32, id, _r)
end

--- Checks if the specified model has loaded into memory.
function HasModelLoaded(model)
	return _in(0x98A4EB5D89A0C952, _ch(model), _r)
end

--- HAS_*
function HasMultiplayerAudioDataLoaded()
	return _in(0x544810ED9DB6BBE6, _r)
end
N_0x544810ed9db6bbe6 = HasMultiplayerAudioDataLoaded

--- HAS_*
function HasMultiplayerAudioDataUnloaded()
	return _in(0x5B50ABB1FE3746F4, _r)
end
N_0x5b50abb1fe3746f4 = HasMultiplayerAudioDataUnloaded

function HasNamedPtfxAssetLoaded(fxName)
	return _in(0x8702416E512EC454, _ts(fxName), _r)
end

function HasNetworkTimeStarted()
	return _in(0x46718ACEEDEAFC84, _r)
end
N_0x46718aceedeafc84 = HasNetworkTimeStarted

--- NativeDB Added Parameter 2: Any p1
function HasObjectBeenBroken(object)
	return _in(0x8ABFB70C49CC43E2, object, _r)
end

--- It determines what weapons caused damage:
-- If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
-- If you want to define any melee weapon, second parameter=0, third parameter=1.
-- If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
function HasPedBeenDamagedByWeapon(ped, weaponHash, weaponType)
	return _in(0x2D343D2219CD027A, ped, _ch(weaponHash), weaponType, _r)
end

--- p2 should be FALSE, otherwise it seems to always return FALSE
-- Bool does not check if the weapon is current equipped, unfortunately.
function HasPedGotWeapon(ped, weaponHash, p2)
	return _in(0x8DECB02F88F428BC, ped, _ch(weaponHash), p2, _r)
end

function HasPedGotWeaponComponent(ped, weaponHash, componentHash)
	return _in(0xC593212475FAE340, ped, _ch(weaponHash), _ch(componentHash), _r)
end

function HasPedHeadBlendFinished(ped)
	return _in(0x654CD0A825161131, ped, _r)
end

function HasPedPreloadPropDataFinished(ped)
	return _in(0x784002A632822099, ped, _r)
end
N_0x784002a632822099 = HasPedPreloadPropDataFinished

function HasPedPreloadVariationDataFinished(ped)
	return _in(0x66680A92700F43DF, ped, _r)
end
N_0x66680a92700f43df = HasPedPreloadVariationDataFinished

function HasPedReceivedEvent(ped, eventId)
	return _in(0x8507BCB710FA6DC0, ped, eventId, _r)
end

function HasPedheadshotImgUploadFailed()
	return _in(0x876928DDDFCCC9CD, _r)
end
N_0x876928dddfccc9cd = HasPedheadshotImgUploadFailed

function HasPedheadshotImgUploadSucceeded()
	return _in(0xE8A169E666CBC541, _r)
end
N_0xe8a169e666cbc541 = HasPedheadshotImgUploadSucceeded

function HasPickupBeenCollected(pickup)
	return _in(0x80EC48E6679313F9, pickup, _r)
end

function HasPlayerBeenSpottedInStolenVehicle(player)
	return _in(0xD705740BB0A1CF4C, player, _r)
end

function HasPlayerDamagedAtLeastOneNonAnimalPed(player)
	return _in(0xE4B90F367BD81752, player, _r)
end

function HasPlayerDamagedAtLeastOnePed(player)
	return _in(0x20CE80B0C2BF4ACC, player, _r)
end

function HasPlayerLeftTheWorld(player)
	return _in(0xD55DDFB47991A294, player, _r)
end

function HasPreloadModsFinished(p0)
	return _in(0x06F43E5175EB6D96, p0, _r)
end

function HasPtfxAssetLoaded()
	return _in(0xCA7D9B86ECA7481B, _r)
end

--- Hardcoded to return false.
function HasResumedFromSuspend()
	return _in(0xE8B9C0EC9E183F35, _r)
end
N_0xe8b9c0ec9e183f35 = HasResumedFromSuspend

function HasScaleformContainerMovieLoadedIntoParent(scaleformHandle)
	return _in(0x8217150E1217EBFD, scaleformHandle, _r)
end

--- Only values used in the scripts are:
-- "heist_mp"
-- "heistmap_mp"
-- "instructional_buttons"
-- "heist_pre"
function HasScaleformMovieFilenameLoaded(scaleformName)
	return _in(0x0C1C5D756FB5F337, _ts(scaleformName), _r)
end
N_0x0c1c5d756fb5f337 = HasScaleformMovieFilenameLoaded
HasNamedScaleformMovieLoaded = HasScaleformMovieFilenameLoaded

function HasScaleformMovieLoaded(scaleformHandle)
	return _in(0x85F01B8D5B90570E, scaleformHandle, _r)
end

function HasScaleformScriptHudMovieLoaded(hudComponent)
	return _in(0xDF6E5987D2B4D140, hudComponent, _r)
end
HasHudScaleformLoaded = HasScaleformScriptHudMovieLoaded

--- Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
function HasScriptLoaded(scriptName)
	return _in(0xE6CC9F3BA0FB9EF1, _ts(scriptName), _r)
end

function HasScriptWithNameHashLoaded(scriptHash)
	return _in(0x5F0F0C783EB16C04, _ch(scriptHash), _r)
end
HasStreamedScriptLoaded = HasScriptWithNameHashLoaded

function HasSoundFinished(soundId)
	return _in(0xFCBDCE714A7C88E5, soundId, _r)
end

function HasStealthModeAssetLoaded(asset)
	return _in(0xE977FC5B08AF3441, _ts(asset), _r)
end

function HasStreamedTextureDictLoaded(textureDict)
	return _in(0x0145F696AAAAD2E4, _ts(textureDict), _r)
end

--- Checks if the specified gxt has loaded into the passed slot.
function HasThisAdditionalTextLoaded(gxt, slot)
	return _in(0xADBF060E2B30C5BC, _ts(gxt), slot, _r)
end

function HasThisCutsceneLoaded(cutsceneName)
	return _in(0x228D3D94F8A11C3C, _ts(cutsceneName), _r)
end

function HasVehicleAssetLoaded(vehicleAsset)
	return _in(0x1BBE0523B8DB9A21, vehicleAsset, _r)
end

--- Third Parameter = unsure, but pretty sure it is weapon hash
-- --> get_hash_key("weapon_stickybomb")
-- Fourth Parameter = unsure, almost always -1
function HasVehicleGotProjectileAttached(driver, vehicle, weaponHash, p3)
	return _in(0x717C8481234E3B88, driver, vehicle, _ch(weaponHash), p3, _r)
end

function HasVehiclePhoneExplosiveDevice()
	return _in(0x6ADAABD3068C5235, _r)
end
N_0x6adaabd3068c5235 = HasVehiclePhoneExplosiveDevice

function HasVehicleRecordingBeenLoaded(recording, script)
	return _in(0x300D614A4C785FC4, recording, _ts(script), _r)
end

function HasWeaponAssetLoaded(weaponHash)
	return _in(0x36E353271F0E90EE, _ch(weaponHash), _r)
end

function HasWeaponGotWeaponComponent(weapon, addonHash)
	return _in(0x76A18844E743BF91, weapon, _ch(addonHash), _r)
end

function HaveAllStreamingRequestsCompleted(ped)
	return _in(0x7350823473013C02, ped, _r)
end
N_0x7350823473013c02 = HaveAllStreamingRequestsCompleted
HasStreamedPedAssetsLoaded = HaveAllStreamingRequestsCompleted

function HaveCreditsReachedEnd()
	return _in(0x075F1D57402C93BA, _r)
end
N_0x075f1d57402c93ba = HaveCreditsReachedEnd

function HaveVehicleModsStreamedIn(vehicle)
	return _in(0x9A83F5F9963775EF, vehicle, _r)
end
N_0x9a83f5f9963775ef = HaveVehicleModsStreamedIn
IsVehicleModLoadDone = HaveVehicleModsStreamedIn

--- HIDE_*_THIS_FRAME
-- Hides area and vehicle name HUD components for one frame.
function HideAreaAndVehicleNameThisFrame()
	return _in(0xA4DEDE28B1814289)
end
N_0xa4dede28b1814289 = HideAreaAndVehicleNameThisFrame

function HideHelpTextThisFrame()
	return _in(0xD46923FC481CA285)
end

--- I think this works, but seems to prohibit switching to other weapons (or accessing the weapon wheel)
function HideHudAndRadarThisFrame()
	return _in(0x719FF505F097FD20)
end

--- This function hides various HUD (Heads-up Display) components.
-- Listed below are the integers and the corresponding HUD component.
-- *   1 : WANTED_STARS
-- *   2 : WEAPON_ICON
-- *   3 : CASH
-- *   4 : MP_CASH
-- *   5 : MP_MESSAGE
-- *   6 : VEHICLE_NAME
-- *   7 : AREA_NAME
-- *   8 : VEHICLE_CLASS
-- *   9 : STREET_NAME
-- *   10 : HELP_TEXT
-- *   11 : FLOATING_HELP_TEXT\_1
-- *   12 : FLOATING_HELP_TEXT\_2
-- *   13 : CASH_CHANGE
-- *   14 : RETICLE
-- *   15 : SUBTITLE_TEXT
-- *   16 : RADIO_STATIONS
-- *   17 : SAVING_GAME
-- *   18 : GAME_STREAM
-- *   19 : WEAPON_WHEEL
-- *   20 : WEAPON_WHEEL_STATS
-- *   21 : HUD_COMPONENTS
-- *   22 : HUD_WEAPONS
-- These integers also work for the [`SHOW_HUD_COMPONENT_THIS_FRAME`](#\_0x0B4DF1FA60C0E664) native, but instead shows the HUD Component.
function HideHudComponentThisFrame(id)
	return _in(0x6806C51AD12B83B8, id)
end

function HideLoadingOnFadeThisFrame()
	return _in(0x4B0311D3CDC4648F)
end

function HideMinimapExteriorMapThisFrame()
	return _in(0x5FBAE526203990C9)
end
DisableRadarThisFrame = HideMinimapExteriorMapThisFrame

function HideMinimapInteriorMapThisFrame()
	return _in(0x20FE7FDFEEAD38C0)
end
N_0x20fe7fdfeead38c0 = HideMinimapInteriorMapThisFrame

function HideNumberOnBlip(blip)
	return _in(0x532CFF637EF80148, blip)
end

function HidePedBloodDamageByZone(ped, p1, p2)
	return _in(0x62AB793144DE75DC, ped, p1, p2)
end
N_0x62ab793144de75dc = HidePedBloodDamageByZone

--- Hides the players weapon during a cutscene.
function HidePedWeaponForScriptedCutscene(ped, toggle)
	return _in(0x6F6981D2253C208F, ped, toggle)
end

function HidePickup(pickup, toggle)
	return _in(0x867458251D47CCB2, pickup, toggle)
end
N_0x867458251d47ccb2 = HidePickup

function HideScriptedHudComponentThisFrame(id)
	return _in(0xE374C498D8BADC14, id)
end

--- NativeDB Introduced: v1604
function HideVehicleTombstone(vehicle, toggle)
	return _in(0xAE71FB656C600587, vehicle, toggle)
end

--- NativeDB Added Parameter 3: Any p2
function HintAmbientAudioBank(p0, p1)
	return _in(0x8F8C0E370AE62F5C, p0, p1, _ri)
end

--- NativeDB Added Parameter 3: Any p2
function HintScriptAudioBank(p0, p1)
	return _in(0xFB380A29641EC31A, p0, p1, _ri)
end

function HiredLimo(p0, p1)
	return _in(0x792271AB35C356A4, p0, p1)
end
N_0x792271ab35c356a4 = HiredLimo

--- Displays loading screen tips, requires `_0x56C8B608CFD49854` to be called beforehand.
function HudDisplayLoadingScreenTips()
	return _in(0x488043841BBE156F)
end
N_0x488043841bbe156f = HudDisplayLoadingScreenTips

--- Forces the weapon wheel to show/hide.
function HudForceWeaponWheel(show)
	return _in(0xEB354E5376BC81A7, show)
end
N_0xeb354e5376bc81a7 = HudForceWeaponWheel
ShowWeaponWheel = HudForceWeaponWheel

--- Set the active slotIndex in the wheel weapon to the slot associated with the provided Weapon hash
function HudSetWeaponWheelTopSlot(weaponHash)
	return _in(0x72C1056D678BB7D8, _ch(weaponHash))
end
N_0x72c1056d678bb7d8 = HudSetWeaponWheelTopSlot
HudWeaponWheelSetSlotHash = HudSetWeaponWheelTopSlot

--- Returns the weapon hash to the selected/highlighted weapon in the wheel
function HudWeaponWheelGetSelectedHash()
	return _in(0xA48931185F0536FE, _ri)
end
N_0xa48931185f0536fe = HudWeaponWheelGetSelectedHash

--- Returns the weapon hash active in a specific weapon wheel slotList
function HudWeaponWheelGetSlotHash(weaponTypeIndex)
	return _in(0xA13E93403F26C812, weaponTypeIndex, _ri)
end
N_0xa13e93403f26c812 = HudWeaponWheelGetSlotHash

--- Sets a global that disables many weapon input tasks (shooting, aiming, etc.). Does not work with vehicle weapons, only used in selector.ysc
function HudWeaponWheelIgnoreControlInput(toggle)
	return _in(0x14C9FDCC41F81F63, toggle)
end
N_0x14c9fdcc41f81f63 = HudWeaponWheelIgnoreControlInput

--- Calling this each frame, stops the player from receiving a weapon via the weapon wheel.
function HudWeaponWheelIgnoreSelection()
	return _in(0x0AFC4AF510774B47)
end
BlockWeaponWheelThisFrame = HudWeaponWheelIgnoreSelection
N_0x0afc4af510774b47 = HudWeaponWheelIgnoreSelection

function IgnoreNextRestart(toggle)
	return _in(0x21FFB63D8C615361, toggle)
end

function InitCreatorBudget()
	return _in(0xB5A4DB34FE89B88A)
end
N_0xb5a4db34fe89b88a = InitCreatorBudget
LoadMissionCreatorData = InitCreatorBudget

function InitShopPedComponent(outComponent)
	return _in(0x1E8C308FD312C036, _ii(outComponent) --[[ may be optional ]])
end

function InitShopPedProp(outProp)
	return _in(0xEB0A2B758F7B850F, _ii(outProp) --[[ may be optional ]])
end

function InstantlyFillPedPopulation()
	return _in(0x4759CC730F947C81)
end
N_0x4759cc730f947c81 = InstantlyFillPedPopulation

function InstantlyFillVehiclePopulation()
	return _in(0x48ADC8A773564670)
end
N_0x48adc8a773564670 = InstantlyFillVehiclePopulation

--- Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
-- --------------------------------------------------------
-- if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(i)))
function IntToParticipantindex(value)
	return _in(0x9EC6603812C24710, value, _ri)
end

--- Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
function IntToPlayerindex(value)
	return _in(0x41BD2A6B006AF756, value, _ri)
end

function InterruptConversation(p0)
	return _in(0xA018A12E5C5C2FA6, p0, _i, _i)
end

--- One call found in the b617d scripts:
-- AUDIO::_8A694D7A68F8DC38(NETWORK::NET_TO_PED(l_3989._f26F[0/*1*/]), "CONV_INTERRUPT_QUIT_IT", "LESTER");
function InterruptConversationAndPause(ped, p1, p2)
	return _in(0x8A694D7A68F8DC38, ped, _ts(p1), _ts(p2))
end
N_0x8a694d7a68f8dc38 = InterruptConversationAndPause

--- Resets the idle camera timer. Calling that in a loop once every few seconds is enough to disable the idle cinematic camera.
function InvalidateIdleCam()
	return _in(0xF4F2C0D4EE209E20)
end
N_0xf4f2c0d4ee209e20 = InvalidateIdleCam

--- Resets the vehicle idle camera timer. Calling this in a loop will disable the idle camera.
function InvalidateVehicleIdleCam()
	return _in(0x9E4CFFF989258472)
end
N_0x9e4cfff989258472 = InvalidateVehicleIdleCam

function InvokeFunctionReference(referenceIdentity, argsSerialized, argsLength, retvalLength)
	return _in(0xe3551879, _ts(referenceIdentity), _ts(argsSerialized), argsLength, _ii(retvalLength) --[[ may be optional ]], _s)
end

function IsAceAllowed(object)
	return _in(0x7ebb9929, _ts(object), _r)
end

function IsAimCamActive()
	return _in(0x68EDDA28A5976D07, _r)
end

--- IS_A*
function IsAimCamThirdPersonActive()
	return _in(0x74BD83EA840F6BC9, _r)
end
N_0x74bd83ea840f6bc9 = IsAimCamThirdPersonActive

--- Example:
-- bool playing = AUDIO::IS_ALARM_PLAYING("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS");
function IsAlarmPlaying(alarmName)
	return _in(0x226435CB96CCFC8C, _ts(alarmName), _r)
end

--- Common in the scripts:
-- AUDIO::IS_AMBIENT_SPEECH_DISABLED(PLAYER::PLAYER_PED_ID());
function IsAmbientSpeechDisabled(ped)
	return _in(0x932C2D096A2C3FFF, ped, _r)
end

function IsAmbientSpeechPlaying(ped)
	return _in(0x9072C8B49907BFAD, ped, _r)
end

function IsAmbientZoneEnabled(ambientZone)
	return _in(0x01E2817A479A7F9B, _ts(ambientZone), _r)
end

function IsAnEntity(handle)
	return _in(0x731EC8A916BD11A1, handle, _r)
end

function IsAnimalVocalizationPlaying(pedHandle)
	return _in(0xC265DF9FB44A9FBD, pedHandle, _r)
end
N_0xc265df9fb44a9fbd = IsAnimalVocalizationPlaying

function IsAnyAirDefenseZoneInsideSphere(x, y, z, radius, outZoneId)
	return _in(0xDAB963831DBFD3F4, x, y, z, radius, outZoneId, _r)
end
N_0xdab963831dbfd3f4 = IsAnyAirDefenseZoneInsideSphere
IsAirDefenseZoneInsideSphere = IsAnyAirDefenseZoneInsideSphere

function IsAnyEntityAttachedToHandlerFrame(vehicle)
	return _in(0x62CA17B74C435651, vehicle, _r)
end
N_0x62ca17b74c435651 = IsAnyEntityAttachedToHandlerFrame

function IsAnyEntityEntirelyInsideGarage(garageHash, p1, p2, p3, p4)
	return _in(0x673ED815D6E323B7, _ch(garageHash), p1, p2, p3, p4, _r)
end
N_0x673ed815d6e323b7 = IsAnyEntityEntirelyInsideGarage

function IsAnyHostilePedNearPoint(ped, x, y, z, radius)
	return _in(0x68772DB2B2526F9F, ped, x, y, z, radius, _r)
end
N_0x68772db2b2526f9f = IsAnyHostilePedNearPoint

function IsAnyObjectNearPoint(x, y, z, range, p4)
	return _in(0x397DC58FF00298D1, x, y, z, range, p4, _r)
end

function IsAnyPedNearPoint(x, y, z, radius)
	return _in(0x083961498679DC9F, x, y, z, radius, _r)
end

function IsAnyPedRappellingFromHeli(vehicle)
	return _in(0x291E373D483E7EE7, vehicle, _r)
end
N_0x291e373d483e7ee7 = IsAnyPedRappellingFromHeli
AnyPassengersRappeling = IsAnyPedRappellingFromHeli
IsAnyPassengerRappelingFromVehicle = IsAnyPedRappellingFromHeli

function IsAnyPedShootingInArea(x1, y1, z1, x2, y2, z2, p6, p7)
	return _in(0xA0D3D71EA1086C55, x1, y1, z1, x2, y2, z2, p6, p7, _r)
end

function IsAnySpeechPlaying(ped)
	return _in(0x729072355FA39EC9, ped, _r)
end

function IsAnyVehicleNearPoint(x, y, z, radius)
	return _in(0x61E1DD6125A3EEE6, x, y, z, radius, _r)
end

function IsAreaOccupied(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)
	return _in(0xA61B4DF533DCB56E, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, _r)
end

function IsAudioSceneActive(scene)
	return _in(0xB65B60556E2A9225, _ts(scene), _r)
end

--- if (MISC::IS_AUSSIE_VERSION()) {
-- sub_127a9(&l_31, 1024); // l_31 |= 1024
-- l_129 = 3;
-- sub_129d2("AUSSIE VERSION IS TRUE!?!?!"); // DEBUG
-- }
-- Used to block some of the prostitute stuff due to laws in Australia.
function IsAussieVersion()
	return _in(0x9F1935CA1F724008, _r)
end

function IsAutoSaveInProgress()
	return _in(0x69240733738C19A0, _r)
end

function IsBigVehicle(vehicle)
	return _in(0x9F243D3919F442FE, vehicle, _r)
end

--- <!-- Native implemented by Disquse. 0xFFF65C63 -->
-- Returns true if the minimap is currently expanded. False if it's the normal minimap state.
-- Use [`IsBigmapFull`](#\_0x66EE14B2) to check if the full map is currently revealed on the minimap.
-- @return A bool indicating if the minimap is currently expanded or normal state.
function IsBigmapActive()
	return _in(0xfff65c63, _r)
end

--- <!-- Native implemented by Disquse. 0x66EE14B2 -->
-- @return Returns true if the full map is currently revealed on the minimap.
-- 		Use [`IsBigmapActive`](#\_0xFFF65C63) to check if the minimap is currently expanded or in it's normal state.
function IsBigmapFull()
	return _in(0x66ee14b2, _r)
end

--- Returns bit's boolean state from [offset] of [address].
-- Example:
-- MISC::IS_BIT_SET(bitAddress, 1);
-- To enable and disable bits, see:
-- MISC::SET_BIT(&bitAddress, 1);   // enable
-- MISC::CLEAR_BIT(&bitAddress, 1); // disable
function IsBitSet(address, offset)
	return _in(0xA921AA820C25702F, address, offset, _r)
end

function IsBlipFlashing(blip)
	return _in(0xA5E41FD83AD6CEF0, blip, _r)
end

function IsBlipOnMinimap(blip)
	return _in(0xE41CA53051197A27, blip, _r)
end

function IsBlipShortRange(blip)
	return _in(0xDA5F8727EB75B926, blip, _r)
end

--- IS_*
function IsBoatAnchoredAndFrozen(vehicle)
	return _in(0xB0AD1238A709B1A2, vehicle, _r)
end
N_0xb0ad1238a709b1a2 = IsBoatAnchoredAndFrozen

--- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- For projectiles, see: [`IS_PROJECTILE_TYPE_IN_ANGLED_AREA`](#\_0xF0BC12401061DEA0)
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
-- @return True if a bullet, as maintained by a pool within CWeaponManager, has been fired into the defined angled area.
function IsBulletInAngledArea(x1, y1, z1, x2, y2, z2, width, ownedByPlayer)
	return _in(0x1A8B5F3C01E2B477, x1, y1, z1, x2, y2, z2, width, ownedByPlayer, _r)
end

function IsBulletInArea(x, y, z, radius, ownedByPlayer)
	return _in(0x3F2023999AD51C1F, x, y, z, radius, ownedByPlayer, _r)
end

function IsBulletInBox(x1, y1, z1, x2, y2, z2, ownedByPlayer)
	return _in(0xDE0F6D7450D37351, x1, y1, z1, x2, y2, z2, ownedByPlayer, _r)
end

--- Returns whether or not the passed camera handle is active.
function IsCamActive(cam)
	return _in(0xDFB2B516207D3534, cam, _r)
end

function IsCamInterpolating(cam)
	return _in(0x036F97C908C2B52C, cam, _r)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function IsCamPlayingAnim(cam, animName, animDictionary)
	return _in(0xC90621D8A0CEECF2, cam, _ts(animName), _ts(animDictionary), _r)
end

function IsCamRendering(cam)
	return _in(0x02EC0AF5C5A49B7A, cam, _r)
end

function IsCamShaking(cam)
	return _in(0x6B24BFE83A2BE47B, cam, _r)
end

function IsCamSplinePaused(p0)
	return _in(0x0290F35C0AD97864, p0, _r)
end

--- NativeDB Introduced: v1493
function IsCinematicCamActive()
	return _in(0xF5F1E89A970B7796, _r)
end
N_0xf5f1e89a970b7796 = IsCinematicCamActive

function IsCinematicCamRendering()
	return _in(0xB15162CB5826E9E8, _r)
end

function IsCinematicCamShaking()
	return _in(0xBBC08F6B4CB8FF0A, _r)
end

function IsCinematicIdleCamRendering()
	return _in(0xCA9D2AA3E326D720, _r)
end
N_0xca9d2aa3e326d720 = IsCinematicIdleCamRendering

function IsCinematicShotActive(p0)
	return _in(0xCC9F3371A7C28BC9, p0, _r)
end

--- Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
function IsCollisionMarkedOutside(x, y, z)
	return _in(0xEEA5AC2EDA7C33E8, x, y, z, _r)
end
N_0xeea5ac2eda7c33e8 = IsCollisionMarkedOutside
AreCoordsCollidingWithExterior = IsCollisionMarkedOutside

--- Returns true if command line option '-benchmark' is set.
function IsCommandLineBenchmarkValueSet()
	return _in(0xA049A5BE0F04F2F8, _r)
end
N_0xa049a5be0f04f2f8 = IsCommandLineBenchmarkValueSet

function IsCommerceDataValid()
	return _in(0xEA14EEF5B7CD2C30, _r)
end
N_0xea14eef5b7cd2c30 = IsCommerceDataValid

function IsCommerceStoreOpen()
	return _in(0x2EAC52B4019E2782, _r)
end
N_0x2eac52b4019e2782 = IsCommerceStoreOpen

function IsContentItemLocked(itemHash)
	return _in(0xD4D7B033C3AA243C, _ch(itemHash), _r)
end
IsOutfitEmpty = IsContentItemLocked
IsDlcDataEmpty = IsContentItemLocked

function IsControlEnabled(padIndex, control)
	return _in(0x1CEA6BFDF248E5D9, padIndex, control, _r)
end

--- Returns whether a control was newly pressed since the last check.
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- @return True if the control was pressed.
function IsControlJustPressed(padIndex, control)
	return _in(0x580417101DDB492F, padIndex, control, _r)
end

--- Returns whether a control was newly released since the last check.
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- @return True if the control was recently released.
function IsControlJustReleased(padIndex, control)
	return _in(0x50F940259D3841E6, padIndex, control, _r)
end

--- Returns whether a control is currently pressed.
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- @return True if the control was pressed.
function IsControlPressed(padIndex, control)
	return _in(0xF3A21BCD95725A4A, padIndex, control, _r)
end

--- Returns whether a control is currently *not* pressed.
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- @return True if the control is not pressed.
function IsControlReleased(padIndex, control)
	return _in(0x648EE3E7F38877DD, padIndex, control, _r)
end

function IsConversationPedDead(ped)
	return _in(0xE0A0AEC214B1FABA, ped, _r)
end

--- xyz - relative to the world origin.
function IsCopPedInArea_3d(x1, y1, z1, x2, y2, z2)
	return _in(0x16EC4839969F9F5E, x1, y1, z1, x2, y2, z2, _r)
end

--- Usage:
-- public bool isCopInRange(Vector3 Location, float Range)
-- {
-- return Function.Call<bool>(Hash.IS_COP_PED_IN_AREA_3D, Location.X - Range, Location.Y - Range, Location.Z - Range, Location.X + Range, Location.Y + Range, Location.Z + Range);
-- }
function IsCopVehicleInArea_3d(x1, x2, y1, y2, z1, z2)
	return _in(0x7EEF65D5F153E26A, x1, x2, y1, y2, z1, z2, _r)
end

function IsCutsceneActive()
	return _in(0x991251AFC3981F84, _r)
end

function IsCutscenePlaybackFlagSet(flag)
	return _in(0x71B74D2AE19338D0, flag, _r)
end
N_0x71b74d2ae19338d0 = IsCutscenePlaybackFlagSet

function IsCutscenePlaying()
	return _in(0xD3C2E180A40F031E, _r)
end

function IsDamageTrackerActiveOnNetworkId(netID)
	return _in(0x6E192E33AD436366, netID, _r)
end

function IsDamageTrackerActiveOnPlayer(player)
	return _in(0xB2092A1EAA7FD45F, player, _r)
end
N_0xb2092a1eaa7fd45f = IsDamageTrackerActiveOnPlayer

function IsDecalAlive(decal)
	return _in(0xC694D74949CAFD0C, decal, _r)
end

function IsDisabledControlJustPressed(padIndex, control)
	return _in(0x91AEF906BCA88877, padIndex, control, _r)
end

function IsDisabledControlJustReleased(padIndex, control)
	return _in(0x305C8DCD79DA8B0F, padIndex, control, _r)
end

function IsDisabledControlPressed(padIndex, control)
	return _in(0xE2587F8CBBD87B1D, padIndex, control, _r)
end

function IsDisabledControlReleased(padIndex, control)
	return _in(0xFB6C4072E9A32E92, padIndex, control, _r)
end
N_0xfb6c4072e9a32e92 = IsDisabledControlReleased

--- Example:
-- DLC::IS_DLC_PRESENT($\mpbusiness2\);
-- ($ = gethashkey)
-- bruteforce these:
-- 0xB119F6D
-- 0x96F02EE6
function IsDlcPresent(dlcHash)
	return _in(0x812595A0644CE1DE, _ch(dlcHash), _r)
end

function IsDlcVehicleMod(hash)
	return _in(0x0564B9FF9631B82C, _ch(hash), _r)
end
N_0x0564b9ff9631b82c = IsDlcVehicleMod

function IsDoorClosed(doorHash)
	return _in(0xC531EE8A1145A149, _ch(doorHash), _r)
end

--- if (OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(doorHash))
-- {
-- OBJECT::REMOVE_DOOR_FROM_SYSTEM(doorHash);
-- }
function IsDoorRegisteredWithSystem(doorHash)
	return _in(0xC153C43EA202C8C1, _ch(doorHash), _r)
end
N_0xc153c43ea202c8c1 = IsDoorRegisteredWithSystem
DoesDoorExist = IsDoorRegisteredWithSystem

function IsDrivebyTaskUnderneathDrivingTask(ped)
	return _in(0x8785E6E40C7A8818, ped, _r)
end

--- Returns whether or not a browser is created for a specified DUI browser object.
-- @param duiObject The DUI browser handle.
-- @return A boolean indicating TRUE if the browser is created.
function IsDuiAvailable(duiObject)
	return _in(0x7aac3b4c, duiObject, _r)
end

--- Gets whether or not this is the CitizenFX server.
-- @return A boolean value.
function IsDuplicityVersion()
	return _in(0xcf24c52e, _r)
end

function IsDurangoVersion()
	return _in(0x4D982ADB1978442D, _r)
end

function IsEntityAMissionEntity(entity)
	return _in(0x0A7B270912999B3C, entity, _r)
end

function IsEntityAPed(entity)
	return _in(0x524AC5ECEA15343E, entity, _r)
end

function IsEntityAVehicle(entity)
	return _in(0x6AC7003FA6E5575E, entity, _r)
end

function IsEntityAnObject(entity)
	return _in(0x8D68C8FD0FACA94E, entity, _r)
end

--- Checks if entity is within x/y/zSize distance of x/y/z.
-- Last three are unknown ints, almost always p7 = 0, p8 = 1, p9 = 0
function IsEntityAtCoord(entity, xPos, yPos, zPos, xSize, ySize, zSize, p7, p8, p9)
	return _in(0x20B60995556D004F, entity, xPos, yPos, zPos, xSize, ySize, zSize, p7, p8, p9, _r)
end

--- Checks if entity1 is within the box defined by x/y/zSize of entity2.
-- Last three parameters are almost alwasy p5 = 0, p6 = 1, p7 = 0
function IsEntityAtEntity(entity1, entity2, xSize, ySize, zSize, p5, p6, p7)
	return _in(0x751B70C3D034E187, entity1, entity2, xSize, ySize, zSize, p5, p6, p7, _r)
end

function IsEntityAttached(entity)
	return _in(0xB346476EF1A64897, entity, _r)
end

function IsEntityAttachedToAnyObject(entity)
	return _in(0xCF511840CEEDE0CC, entity, _r)
end

function IsEntityAttachedToAnyPed(entity)
	return _in(0xB1632E9A5F988D11, entity, _r)
end

function IsEntityAttachedToAnyVehicle(entity)
	return _in(0x26AA915AD89BFB4B, entity, _r)
end

function IsEntityAttachedToEntity(from, to)
	return _in(0xEFBE71898A993728, from, to, _r)
end

function IsEntityAttachedToHandlerFrame(vehicle, entity)
	return _in(0x57715966069157AD, vehicle, entity, _r)
end
SetPedEnabledBikeRingtone = IsEntityAttachedToHandlerFrame
IsVehicleNearEntity = IsEntityAttachedToHandlerFrame

--- NativeDB Added Parameter 2: BOOL p1
function IsEntityDead(entity)
	return _in(0x5F9532F3B5CC2551, entity, _r)
end

function IsEntityFocus(entity)
	return _in(0x2DDFF3FB9075D747, entity, _r)
end

function IsEntityGhostedToLocalPlayer(entity)
	return _in(0x21D04D7BC538C146, entity, _r)
end
N_0x21d04d7bc538c146 = IsEntityGhostedToLocalPlayer
IsEntityAGhost = IsEntityGhostedToLocalPlayer

function IsEntityInAir(entity)
	return _in(0x886E37EC497200B6, entity, _r)
end

--- p10 is some entity flag check, also used in [`IS_ENTITY_AT_ENTITY`](#\_0x751B70C3D034E187), [`IS_ENTITY_IN_AREA`](#\_0x54736AA40E271165) and [`IS_ENTITY_AT_COORD`](#\_0x20B60995556D004F).
-- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
-- @param debug a debug flag invoking functions in the same path as `DRAW_MARKER`
-- @param includez If true, include the Z dimension when doing the height check; otherwise the query becomes two-dimensional
function IsEntityInAngledArea(entity, x1, y1, z1, x2, y2, z2, width, debug, includez, p10)
	return _in(0x51210CED3DA1C78A, entity, x1, y1, z1, x2, y2, z2, width, debug, includez, p10, _r)
end

function IsEntityInArea(entity, x1, y1, z1, x2, y2, z2, p7, p8, p9)
	return _in(0x54736AA40E271165, entity, x1, y1, z1, x2, y2, z2, p7, p8, p9, _r)
end

function IsEntityInWater(entity)
	return _in(0xCFB0A0D8EDD145A3, entity, _r)
end

function IsEntityInZone(entity, zone)
	return _in(0xB6463CF6AF527071, entity, _ts(zone), _r)
end

function IsEntityOccluded(entity)
	return _in(0xE31C2C72B8692B64, entity, _r)
end

function IsEntityOnFire(entity)
	return _in(0x28D3FED7190D3A0B, entity, _r)
end

--- Returns true if the entity is in between the minimum and maximum values for the 2d screen coords.
-- This means that it will return true even if the entity is behind a wall for example, as long as you're looking at their location.
-- Chipping
function IsEntityOnScreen(entity)
	return _in(0xE659E47AF827484B, entity, _r)
end

--- See also [`IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM`](#\_0x6EC47A344923E1ED)
-- ```
-- Taken from ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "creatures@shark@move", "attack_player", 3)
-- p4 is always 3 in the scripts.
-- taskFlag:
-- 2 - Check synchronized scene
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function IsEntityPlayingAnim(entity, animDict, animName, taskFlag)
	return _in(0x1F0B79228E461EC9, entity, _ts(animDict), _ts(animName), taskFlag, _r)
end

--- A getter for [FREEZE_ENTITY_POSITION](#\_0x428CA6DBD1094446).
-- @param entity The entity to check for
-- @return Boolean stating if it is frozen or not.
function IsEntityPositionFrozen(entity)
	return _in(0xedbe6add, entity, _r)
end

--- A static ped will not react to natives like "APPLY_FORCE_TO_ENTITY" or "SET_ENTITY_VELOCITY" and oftentimes will not react to task-natives like "AI::TASK_COMBAT_PED". The only way I know of to make one of these peds react is to ragdoll them (or sometimes to use CLEAR_PED_TASKS_IMMEDIATELY(). Static peds include almost all far-away peds, beach-combers, peds in certain scenarios, peds crossing a crosswalk, peds walking to get back into their cars, and others. If anyone knows how to make a ped non-static without ragdolling them, please edit this with the solution.
-- ^ Attach a phCollider to the ped.
function IsEntityStatic(entity)
	return _in(0x1218E6886D3D8327, entity, _r)
end

function IsEntityTouchingEntity(entity, targetEntity)
	return _in(0x17FFC1B2BA35A494, entity, targetEntity, _r)
end

function IsEntityTouchingModel(entity, modelHash)
	return _in(0x0F42323798A58C8C, entity, _ch(modelHash), _r)
end

function IsEntityUpright(entity, angle)
	return _in(0x5333F526F6AB19AA, entity, angle, _r)
end

function IsEntityUpsidedown(entity)
	return _in(0x1DBD58820FA61D71, entity, _r)
end

function IsEntityVisible(entity)
	return _in(0x47D6F43D77935C75, entity, _r)
end

function IsEntityVisibleToScript(entity)
	return _in(0xD796CB5BA8F20E32, entity, _r)
end

function IsEntityWaitingForWorldCollision(entity)
	return _in(0xD05BFF0C0A12C68F, entity, _r)
end

function IsExplosionActiveInArea(explosionType, x1, y1, z1, x2, y2, z2)
	return _in(0x6070104B699B2EF4, explosionType, x1, y1, z1, x2, y2, z2, _r)
end
N_0x6070104b699b2ef4 = IsExplosionActiveInArea

--- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- @param explosionType explosion enum, -1 for any explosion type. See [ADD_EXPLOSION](#\_0xE3AD2BDBAEE269AC).
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
function IsExplosionInAngledArea(explosionType, x1, y1, z1, x2, y2, z2, width)
	return _in(0xA079A6C51525DC4B, explosionType, x1, y1, z1, x2, y2, z2, width, _r)
end

function IsExplosionInArea(explosionType, x1, y1, z1, x2, y2, z2)
	return _in(0x2E2EBA0EE7CED0E0, explosionType, x1, y1, z1, x2, y2, z2, _r)
end

function IsExplosionInSphere(explosionType, x, y, z, radius)
	return _in(0xAB0F816885B0E483, explosionType, x, y, z, radius, _r)
end

function IsFirstPersonAimCamActive()
	return _in(0x5E346D934122613F, _r)
end

function IsFlashLightOn(ped)
	return _in(0x4B7620C47217126C, ped, _r)
end
SetWeaponSmokegrenadeAssigned = IsFlashLightOn

function IsFloatingHelpTextOnScreen(hudIndex)
	return _in(0x2432784ACA090DA4, hudIndex, _r)
end
N_0x2432784aca090da4 = IsFloatingHelpTextOnScreen

function IsFollowPedCamActive()
	return _in(0xC6D3D26810C8E0F9, _r)
end

function IsFollowVehicleCamActive()
	return _in(0xCBBDE6D335D6D496, _r)
end

--- This function is hard-coded to always return 0.
function IsFrontendFading()
	return _in(0x7EA2B6AF97ECA6ED, _r)
end

function IsFrontendReadyForControl()
	return _in(0x3BAB9A4E4F2FF5C7, _r)
end
N_0x3bab9a4e4f2ff5c7 = IsFrontendReadyForControl

--- Hardcoded to return 1
function IsGameInControlOfMusic()
	return _in(0x6D28DC1671E334FD, _r)
end

function IsGameplayCamLookingBehind()
	return _in(0x70FDA869F3317EA9, _r)
end

--- Examples when this function will return 0 are:
-- - During busted screen.
-- - When player is coming out from a hospital.
-- - When player is coming out from a police station.
-- - When player is buying gun from AmmuNation.
function IsGameplayCamRendering()
	return _in(0x39B5D1B10383F0C8, _r)
end

function IsGameplayCamShaking()
	return _in(0x016C090630DF1F89, _r)
end

function IsGameplayHintActive()
	return _in(0xE520FF1AD2785B40, _r)
end

function IsGarageEmpty(garageHash, p1, p2)
	return _in(0x90E47239EA1980B8, _ch(garageHash), p1, p2, _r)
end

function IsHandlerFrameAboveContainer(handler, container)
	return _in(0x89D630CF5EA96D23, handler, container, _r)
end
N_0x89d630cf5ea96d23 = IsHandlerFrameAboveContainer

function IsHeliLandingAreaBlocked(vehicle)
	return _in(0x634148744F385576, vehicle, _r)
end
N_0x634148744f385576 = IsHeliLandingAreaBlocked

function IsHeliPartBroken(vehicle, p1, p2, p3)
	return _in(0xBC74B4BE25EB6C8A, vehicle, p1, p2, p3, _r)
end

function IsHelpMessageBeingDisplayed()
	return _in(0x4D79439A6B55AC67, _r)
end

function IsHelpMessageFadingOut()
	return _in(0x327EDEEEAC55C369, _r)
end

function IsHelpMessageOnScreen()
	return _in(0xDAD37F45428801AE, _r)
end

--- Checks whether the horn of a vehicle is currently played.
function IsHornActive(vehicle)
	return _in(0x9D6BFC12B05C6121, vehicle, _r)
end

function IsHoveringOverMissionCreatorBlip()
	return _in(0x4167EFE0527D706E, _r)
end
N_0x4167efe0527d706e = IsHoveringOverMissionCreatorBlip

--- Full list of components below
-- HUD = 0;
-- HUD_WANTED_STARS = 1;
-- HUD_WEAPON_ICON = 2;
-- HUD_CASH = 3;
-- HUD_MP_CASH = 4;
-- HUD_MP_MESSAGE = 5;
-- HUD_VEHICLE_NAME = 6;
-- HUD_AREA_NAME = 7;
-- HUD_VEHICLE_CLASS = 8;
-- HUD_STREET_NAME = 9;
-- HUD_HELP_TEXT = 10;
-- HUD_FLOATING_HELP_TEXT_1 = 11;
-- HUD_FLOATING_HELP_TEXT_2 = 12;
-- HUD_CASH_CHANGE = 13;
-- HUD_RETICLE = 14;
-- HUD_SUBTITLE_TEXT = 15;
-- HUD_RADIO_STATIONS = 16;
-- HUD_SAVING_GAME = 17;
-- HUD_GAME_STREAM = 18;
-- HUD_WEAPON_WHEEL = 19;
-- HUD_WEAPON_WHEEL_STATS = 20;
-- MAX_HUD_COMPONENTS = 21;
-- MAX_HUD_WEAPONS = 22;
-- MAX_SCRIPTED_HUD_COMPONENTS = 141;
function IsHudComponentActive(id)
	return _in(0xBC4C9EA5391ECC0D, id, _r)
end

function IsHudHidden()
	return _in(0xA86478C6958735C5, _r)
end

function IsHudPreferenceSwitchedOn()
	return _in(0x1930DFA731813EC4, _r)
end

function IsInItemset(p0, p1)
	return _in(0x2D0FC594D1E9C107, p0, p1, _r)
end

--- aka "constrained"
function IsInPowerSavingMode()
	return _in(0x684A41975F077262, _r)
end
N_0x684a41975f077262 = IsInPowerSavingMode

function IsInVehicleCamDisabled()
	return _in(0x4F32C0D5A90A9B40, _r)
end
N_0x4f32c0d5a90a9b40 = IsInVehicleCamDisabled

--- =======================================================
-- Correction, I have change this to int, instead of int*
-- as it doesn't use a pointer to the createdIncident.
-- If you try it you will crash (or) freeze.
-- =======================================================
function IsIncidentValid(incidentId)
	return _in(0xC8BC6461E629BEAA, incidentId, _r)
end

function IsInteriorCapped(interiorID)
	return _in(0x92BAC8ACF88CEC26, interiorID, _r)
end

function IsInteriorDisabled(interior)
	return _in(0xBC5115A5A939DD15, interior, _r)
end

function IsInteriorEntitySetActive(interior, entitySetName)
	return _in(0x35F7DD45E8C0A16D, interior, _ts(entitySetName), _r)
end
N_0x35f7dd45e8c0a16d = IsInteriorEntitySetActive
IsInteriorPropEnabled = IsInteriorEntitySetActive

function IsInteriorReady(interiorID)
	return _in(0x6726BDCCC1932F0E, interiorID, _r)
end

--- Returns a bool if interior rendering is disabled, if yes, all "normal" rendered interiors are invisible
function IsInteriorRenderingDisabled()
	return _in(0x95AB8B5C992C7B58, _r)
end

function IsInteriorScene()
	return _in(0xBC72B5D7A1CBD54D, _r)
end

function IsIplActive(iplName)
	return _in(0x88A741E44A2B3495, _ts(iplName), _r)
end

function IsItemsetValid(p0)
	return _in(0xB1B1EA596344DFAB, p0, _r)
end

function IsLookInverted()
	return _in(0x77B612531280010D, _r)
end

function IsMemoryCardInUse()
	return _in(0x8A75CE2956274ADD, _r)
end

function IsMessageBeingDisplayed()
	return _in(0x7984C03AA5CC2F41, _r)
end

function IsMinigameInProgress()
	return _in(0x2B4A15E44DE0F478, _r)
end

function IsMinimapInInterior()
	return _in(0x9049FE339D5F6F6F, _r)
end
N_0x9049fe339d5f6f6f = IsMinimapInInterior

function IsMinimapRendering()
	return _in(0xAF754F20EB5CD51A, _r)
end
N_0xaf754f20eb5cd51a = IsMinimapRendering
IsRadarEnabled = IsMinimapRendering

function IsMissionCompletePlaying()
	return _in(0x19A30C23F5827F8A, _r)
end

function IsMissionCompleteReadyForUi()
	return _in(0x6F259F82D873B8B8, _r)
end
N_0x6f259f82d873b8b8 = IsMissionCompleteReadyForUi

function IsMissionCreatorBlip(blip)
	return _in(0x26F49BF3381D933D, blip, _r)
end

function IsMissionNewsStoryUnlocked(newsStory)
	return _in(0x66E49BF55B4B1874, newsStory, _r)
end
GetNumberOfPassengerVoiceVariations = IsMissionNewsStoryUnlocked

--- NativeDB Introduced: v2372
function IsMissionTrain(vehicle)
	return _in(0xAD464F2E18836BFC, vehicle, _r)
end

function IsMobilePhoneCallOngoing()
	return _in(0x7497D2CE2C30D24C, _r)
end

function IsMobilePhoneRadioActive()
	return _in(0xB35CE999E8EF317E, _r)
end

function IsModelAPed(model)
	return _in(0x75816577FEA6DAD5, _ch(model), _r)
end

--- Returns whether the specified model represents a vehicle.
function IsModelAVehicle(model)
	return _in(0x19AAC8F07BFEC53E, _ch(model), _r)
end

--- Check if model is in cdimage(rpf)
function IsModelInCdimage(model)
	return _in(0x35B9E0803292B641, _ch(model), _r)
end

--- Returns whether the specified model exists in the game.
function IsModelValid(model)
	return _in(0xC0296A2EDF545E92, _ch(model), _r)
end

function IsMountedWeaponTaskUnderneathDrivingTask(ped)
	return _in(0xA320EF046186FA3B, ped, _r)
end

--- Returns true if the cursor is hovering above instructional buttons.
-- Note: The buttons need to support mouse (with the TOGGLE_MOUSE_SUPPORT scaleform movie method) for it to return true.
function IsMouseCursorAboveInstructionalButtons()
	return _in(0x3D9ACB1EB139E702, _r)
end
N_0x3d9acb1eb139e702 = IsMouseCursorAboveInstructionalButtons

function IsMoveBlendRatioRunning(ped)
	return _in(0xD4D8636C0199A939, ped, _r)
end

function IsMoveBlendRatioSprinting(ped)
	return _in(0x24A2AD74FA9814E2, ped, _r)
end

function IsMoveBlendRatioStill(ped)
	return _in(0x349CE7B56DAFD95C, ped, _r)
end

function IsMoveBlendRatioWalking(ped)
	return _in(0xF133BBBE91E1691F, ped, _r)
end

function IsMpGamerTagActive(gamerTagId)
	return _in(0x4E929E7A5796FD26, gamerTagId, _r)
end
N_0x4e929e7a5796fd26 = IsMpGamerTagActive

function IsMpGamerTagFree(gamerTagId)
	return _in(0x595B5178E412E199, gamerTagId, _r)
end
AddTrevorRandomModifier = IsMpGamerTagFree

function IsMpGamerTagMovieActive()
	return _in(0x6E0EB3EB47C8D7AA, _r)
end
N_0x6e0eb3eb47c8d7aa = IsMpGamerTagMovieActive
HasMpGamerTag = IsMpGamerTagMovieActive

--- Returns whether or not the text chat (MULTIPLAYER_CHAT Scaleform component) is active.
function IsMultiplayerChatActive()
	return _in(0xB118AF58B5F332A1, _r)
end
IsTextChatActive = IsMultiplayerChatActive

function IsMusicOneshotPlaying()
	return _in(0xA097AB275061FB21, _r)
end
N_0xa097ab275061fb21 = IsMusicOneshotPlaying

function IsNamedRendertargetLinked(modelHash)
	return _in(0x113750538FA31298, _ch(modelHash), _r)
end

function IsNamedRendertargetRegistered(name)
	return _in(0x78DCDC15C9F116B4, _ts(name), _r)
end

function IsNavigatingMenuContent()
	return _in(0x4E3CD0EF8A489541, _ri)
end
N_0x4e3cd0ef8a489541 = IsNavigatingMenuContent

--- Returns whether navmesh for the region is loaded. The region is a rectangular prism defined by it's top left deepest corner to it's bottom right shallowest corner.
-- If you can re-word this so it makes more sense, please do. I'm horrible with words sometimes...
function IsNavmeshLoadedInArea(x1, y1, z1, x2, y2, z2)
	return _in(0xF813C7E63F9062A5, x1, y1, z1, x2, y2, z2, _r)
end

--- IS_*
function IsNavmeshRequiredRegionOwnedByAnyThread()
	return _in(0x705A844002B39DC0, _r)
end
N_0x705a844002b39dc0 = IsNavmeshRequiredRegionOwnedByAnyThread

function IsNetworkIdOwnedByParticipant(netId)
	return _in(0xA1607996431332DF, netId, _r)
end
N_0xa1607996431332df = IsNetworkIdOwnedByParticipant
NetworkCanNetworkIdBeSeen = IsNetworkIdOwnedByParticipant

function IsNetworkLoadingScene()
	return _in(0x41CA5A33160EA4AB, _r)
end

function IsNewLoadSceneActive()
	return _in(0xA41A05B6CB741B85, _r)
end

function IsNewLoadSceneLoaded()
	return _in(0x01B8247A7A8B9AD1, _r)
end

--- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
function IsNextWeatherType(weatherType)
	return _in(0x2FAA3A30BEC0F25D, _ts(weatherType), _r)
end

--- Checks if keyboard input is enabled during NUI focus using `SET_NUI_FOCUS_KEEP_INPUT`.
-- @return True or false.
function IsNuiFocusKeepingInput()
	return _in(0x39c9dc92, _r)
end

--- Returns the current NUI focus state previously set with `SET_NUI_FOCUS`.
-- @return True or false.
function IsNuiFocused()
	return _in(0x98545e6d, _r)
end

function IsObjectAPickup(object)
	return _in(0x0378C08504160D0D, object, _r)
end
N_0x0378c08504160d0d = IsObjectAPickup

--- NativeDB Introduced: v1365
function IsObjectAPortablePickup(object)
	return _in(0xFC481C641EBBD27D, object, _r)
end
N_0xfc481c641ebbd27d = IsObjectAPortablePickup

function IsObjectEntirelyInsideGarage(garageHash, entity, p2, p3)
	return _in(0x372EF6699146A1E4, _ch(garageHash), entity, p2, p3, _r)
end
N_0x372ef6699146a1e4 = IsObjectEntirelyInsideGarage

function IsObjectNearPoint(objectHash, x, y, z, range)
	return _in(0x8C90FE4B381BA60A, _ch(objectHash), x, y, z, range, _r)
end

function IsObjectPartiallyInsideGarage(garageHash, entity, p2)
	return _in(0xF0EED5A6BC7B237A, _ch(garageHash), entity, p2, _r)
end
N_0xf0eed5a6bc7b237a = IsObjectPartiallyInsideGarage

function IsObjectVisible(object)
	return _in(0x8B32ACE6326A7546, object, _r)
end

function IsObjectWithinBrainActivationRange(object)
	return _in(0xCCBA154209823057, object, _r)
end

--- Returns the same as `IS_SOCIAL_CLUB_ACTIVE`.
function IsOnlinePoliciesMenuActive()
	return _in(0x6F72CD94F7B5B68C, _r)
end
N_0x6f72cd94f7b5b68c = IsOnlinePoliciesMenuActive

function IsOrbisVersion()
	return _in(0xA72BC0B675B1519E, _r)
end

function IsPauseMenuActive()
	return _in(0xB0034A223497FFCB, _r)
end

function IsPauseMenuRestarting()
	return _in(0x1C491717107431C7, _r)
end

function IsPcVersion()
	return _in(0x48AF36444B965238, _r)
end

--- Returns true if the given ped has a valid pointer to CPlayerInfo in its CPed class. That's all.
function IsPedAPlayer(ped)
	return _in(0x12534C348C6CB68B, ped, _r)
end

--- When passing a ped parameter, the function returns true if the ped is currently in any scenario.
function IsPedActiveInScenario(ped)
	return _in(0xAA135F9482C82CC3, ped, _r)
end

function IsPedAimingFromCover(ped)
	return _in(0x3998B1276A3300E5, ped, _r)
end

--- Checks if the ped is currently equipped with a weapon matching a bit specified using a bitwise-or in typeFlags.
-- | Bit value | Effect            |
-- |-----------|-------------------|
-- | 1         | Melee weapons     |
-- | 2         | Explosive weapons |
-- | 4         | Any other weapons |
-- Not specifying any bit will lead to the native *always* returning 'false', and for example specifying '4 | 2' will check for any weapon except fists and melee weapons.
-- @param ped The ped to check armed state on.
-- @param typeFlags Type flags to check.
-- @return Whether or not the ped is currently equipped with any weapon matching typeFlags.
function IsPedArmed(ped, typeFlags)
	return _in(0x475768A975D5AD17, ped, typeFlags, _r)
end

--- This function is hard-coded to always return 0.
function IsPedBeingArrested(ped)
	return _in(0x90A09F3A45FED688, ped, _r)
end

function IsPedBeingJacked(ped)
	return _in(0x9A497FE2DF198913, ped, _r)
end

function IsPedBeingStealthKilled(ped)
	return _in(0x863B23EFDE9C5DF2, ped, _r)
end

--- p1 is always 0
function IsPedBeingStunned(ped, p1)
	return _in(0x4FBACCE3B4138EE8, ped, p1, _r)
end

function IsPedBlushColorValid(colorID)
	return _in(0x604E810189EE3A59, colorID, _r)
end
N_0x604e810189ee3a59 = IsPedBlushColorValid

function IsPedBlushColorValid_2(colorId)
	return _in(0xF41B5D290C99A3D6, colorId, _r)
end
N_0xf41b5d290c99a3d6 = IsPedBlushColorValid_2

--- NativeDB Introduced: v1290
function IsPedBodyBlemishValid(colorID)
	return _in(0x09E7ECA981D9B210, colorID, _r)
end
N_0x09e7eca981d9b210 = IsPedBodyBlemishValid

function IsPedClimbing(ped)
	return _in(0x53E8CB4F48BFE623, ped, _r)
end

--- Checks if the component variation is valid, this works great for randomizing components using loops.
-- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function IsPedComponentVariationValid(ped, componentId, drawableId, textureId)
	return _in(0xE825F6B6CEA7671D, ped, componentId, drawableId, textureId, _r)
end

function IsPedCuffed(ped)
	return _in(0x74E559B3BC910685, ped, _r)
end

--- This native returns a true or false value.
-- Ped ped = The ped whose weapon you want to check.
function IsPedCurrentWeaponSilenced(ped)
	return _in(0x65F0C5AE05943EC7, ped, _r)
end

--- Seems to consistently return true if the ped is dead, however, it does not detect the dying phase.
-- @param ped the ped
-- @param p1 always passed 1 in the scripts; requires more research.
-- @return Whether the ped is dead or dying.
function IsPedDeadOrDying(ped, p1)
	return _in(0x3317DEDB88C95038, ped, p1, _r)
end

function IsPedDefensiveAreaActive(ped, p1)
	return _in(0xBA63D9FE45412247, ped, p1, _r)
end
N_0xba63d9fe45412247 = IsPedDefensiveAreaActive

function IsPedDiving(ped)
	return _in(0x5527B8246FEF9B11, ped, _r)
end

function IsPedDoingBeastJump(ped)
	return _in(0x451D05012CCEC234, ped, _r)
end
N_0x451d05012ccec234 = IsPedDoingBeastJump

function IsPedDoingDriveby(ped)
	return _in(0xB2C086CC1BF8F2BF, ped, _r)
end

function IsPedDucking(ped)
	return _in(0xD125AE748725C6BC, ped, _r)
end

--- Presumably returns the Entity that the Ped is currently diving out of the way of.
-- var num3;
-- if (PED::IS_PED_EVASIVE_DIVING(A_0, &num3) != 0)
-- if (ENTITY::IS_ENTITY_A_VEHICLE(num3) != 0)
function IsPedEvasiveDiving(ped, evadingEntity)
	return _in(0x414641C26E105898, ped, _ii(evadingEntity) --[[ may be optional ]], _r)
end

function IsPedExclusiveDriverOfVehicle(ped, vehicle, outIndex)
	return _in(0xB09D25E77C33EB3F, ped, vehicle, outIndex, _r)
end
N_0xb09d25e77c33eb3f = IsPedExclusiveDriverOfVehicle

--- angle is ped's view cone
function IsPedFacingPed(ped, otherPed, angle)
	return _in(0xD71649DB0A545AA3, ped, otherPed, angle, _r)
end

function IsPedFalling(ped)
	return _in(0xFB92A102F1C4DFA3, ped, _r)
end

--- Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.
-- If the handle is invalid, the function returns true.
function IsPedFatallyInjured(ped)
	return _in(0xD839450756ED5A80, ped, _r)
end

function IsPedFleeing(ped)
	return _in(0xBBCCE00B381F8482, ped, _r)
end

function IsPedGettingIntoAVehicle(ped)
	return _in(0xBB062B2B5722478E, ped, _r)
end

function IsPedGettingUp(ped)
	return _in(0x2A74E1D5F2F00EEC, ped, _r)
end

function IsPedGoingIntoCover(ped)
	return _in(0x9F65DBC537E59AD5, ped, _r)
end

function IsPedGroupMember(ped, groupId)
	return _in(0x9BB01E3834671191, ped, groupId, _r)
end

function IsPedHairColorValid(colorID)
	return _in(0xE0D36E5D9E99CC21, colorID, _r)
end
N_0xe0d36e5d9e99cc21 = IsPedHairColorValid

function IsPedHairColorValid_2(colorId)
	return _in(0xED6D8E27A43B8CDE, colorId, _r)
end
N_0xed6d8e27a43b8cde = IsPedHairColorValid_2

function IsPedHangingOnToVehicle(ped)
	return _in(0x1C86D8AEF8254B78, ped, _r)
end

function IsPedHeadingTowardsPosition(ped, x, y, z, p4)
	return _in(0xFCF37A457CB96DC0, ped, x, y, z, p4, _r)
end
N_0xfcf37a457cb96dc0 = IsPedHeadingTowardsPosition

function IsPedHeadtrackingEntity(ped, entity)
	return _in(0x813A0A7C9D2E831F, ped, entity, _r)
end

function IsPedHeadtrackingPed(ped1, ped2)
	return _in(0x5CD3CB88A7F8850D, ped1, ped2, _r)
end

function IsPedHelmetUnk(ped)
	return _in(0xB9496CE47546DB2C, ped, _r)
end
N_0xb9496ce47546db2c = IsPedHelmetUnk

--- Returns true/false if the ped is/isn't humanoid.
function IsPedHuman(ped)
	return _in(0xB980061DA992779D, ped, _r)
end

--- Returns whether the specified ped is hurt.
function IsPedHurt(ped)
	return _in(0x5983BB449D7FDB12, ped, _r)
end

function IsPedInAnyBoat(ped)
	return _in(0x2E0E1C2B4F6CB339, ped, _r)
end

function IsPedInAnyHeli(ped)
	return _in(0x298B91AE825E5705, ped, _r)
end

function IsPedInAnyPlane(ped)
	return _in(0x5FFF4CFC74D8FB80, ped, _r)
end

function IsPedInAnyPoliceVehicle(ped)
	return _in(0x0BD04E29640C9C12, ped, _r)
end

function IsPedInAnySub(ped)
	return _in(0xFBFC01CCFB35D99E, ped, _r)
end

function IsPedInAnyTaxi(ped)
	return _in(0x6E575D6A898AB852, ped, _r)
end

function IsPedInAnyTrain(ped)
	return _in(0x6F972C1AB75A1ED0, ped, _r)
end

--- Returns whether the specified ped is in any vehicle. If `atGetIn` is set to true, also returns true if the ped is
-- currently in the process of entering a vehicle (a specific stage check for `CTaskEnterVehicle`).
-- @param ped The ped to check.
-- @param atGetIn `true` to also consider attempting to enter a vehicle.
-- @return Whether or not the ped is currently involved in any vehicle.
function IsPedInAnyVehicle(ped, atGetIn)
	return _in(0x997ABD671D25CA0B, ped, atGetIn, _r)
end

--- Checks to see if ped and target are in combat with eachother. Only goes one-way: if target is engaged in combat with ped but ped has not yet reacted, the function will return false until ped starts fighting back.
-- p1 is usually 0 in the scripts because it gets the ped id during the task sequence. For instance: PED::IS_PED_IN_COMBAT(l_42E[4/*14*/], PLAYER::PLAYER_PED_ID()) // armenian2.ct4: 43794
function IsPedInCombat(ped, target)
	return _in(0x4859F1FC66A6278E, ped, target, _r)
end

--- p1 is nearly always 0 in the scripts.
function IsPedInCover(ped, exceptUseWeapon)
	return _in(0x60DFD0691A170B88, ped, exceptUseWeapon, _r)
end

function IsPedInCoverFacingLeft(ped)
	return _in(0x845333B3150583AB, ped, _r)
end

function IsPedInCurrentConversation(ped)
	return _in(0x049E937F18F4020C, ped, _r)
end

function IsPedInFlyingVehicle(ped)
	return _in(0x9134873537FA419C, ped, _r)
end

function IsPedInGroup(ped)
	return _in(0x5891CAC5D4ACFF74, ped, _r)
end

function IsPedInHighCover(ped)
	return _in(0x6A03BF943D767C93, ped, _r)
end
N_0x6a03bf943d767c93 = IsPedInHighCover
IsPedStandingInCover = IsPedInHighCover

--- Notes: The function only returns true while the ped is:
-- A.) Swinging a random melee attack (including pistol-whipping)
-- B.) Reacting to being hit by a melee attack (including pistol-whipping)
-- C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter).
-- You don't have to be holding the melee-targetting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds
function IsPedInMeleeCombat(ped)
	return _in(0x4E209B2C1EAD5159, ped, _r)
end

function IsPedInModel(ped, modelHash)
	return _in(0x796D90EFB19AA332, ped, _ch(modelHash), _r)
end

function IsPedInParachuteFreeFall(ped)
	return _in(0x7DCE8BDA0F1C1200, ped, _r)
end

--- Gets a value indicating whether the specified ped is in the specified vehicle.
-- If 'atGetIn' is false, the function will not return true until the ped is sitting in the vehicle and is about to close the door. If it's true, the function returns true the moment the ped starts to get onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, the function will not return true until the ped has descended down into the submersible and gotten into the seat, while if it's true, it'll return true the moment the hatch has been opened and the ped is about to descend into the submersible.
function IsPedInVehicle(ped, vehicle, atGetIn)
	return _in(0xA3EE4A07279BB9DB, ped, vehicle, atGetIn, _r)
end

--- This native checks if a ped is on the ground, in pain from a (gunshot) wound.
-- @return Returns `true` if the ped is in [writhe](https://dictionary.cambridge.org/dictionary/english/writhe), `false` otherwise.
function IsPedInWrithe(ped)
	return _in(0xDEB6D52126E7D640, ped, _r)
end

--- Gets a value indicating whether this ped's health is below its injured threshold.
-- The default threshold is 100.
function IsPedInjured(ped)
	return _in(0x84A2DD9AC37C35C1, ped, _r)
end

function IsPedJacking(ped)
	return _in(0x4AE4FF911DFB61DA, ped, _r)
end

function IsPedJumping(ped)
	return _in(0xCEDABC5900A0BF97, ped, _r)
end

function IsPedJumpingOutOfVehicle(ped)
	return _in(0x433DDFFE2044B636, ped, _r)
end

function IsPedLipstickColorValid(colorID)
	return _in(0x0525A2C2562F3CD4, colorID, _r)
end
N_0x0525a2c2562f3cd4 = IsPedLipstickColorValid

function IsPedLipstickColorValid_2(colorId)
	return _in(0x3E802F11FBE27674, colorId, _r)
end
N_0x3e802f11fbe27674 = IsPedLipstickColorValid_2

--- Returns true/false if the ped is/isn't male.
function IsPedMale(ped)
	return _in(0x6D9F5FAA7488BA46, ped, _r)
end

function IsPedModel(ped, modelHash)
	return _in(0xC9D55B1A358A5BF7, ped, _ch(modelHash), _r)
end

function IsPedOnAnyBike(ped)
	return _in(0x94495889E22C6479, ped, _r)
end

function IsPedOnFoot(ped)
	return _in(0x01FEE67DB37F59B2, ped, _r)
end

--- Same function call as PED::GET_MOUNT, aka just returns 0
function IsPedOnMount(ped)
	return _in(0x460BC76A0E10655E, ped, _r)
end

function IsPedOnSpecificVehicle(ped, vehicle)
	return _in(0xEC5F66E459AF3BB2, ped, vehicle, _r)
end

--- Gets a value indicating whether the specified ped is on top of any vehicle.
-- Return 1 when ped is on vehicle.
-- Return 0 when ped is not on a vehicle.
function IsPedOnVehicle(ped)
	return _in(0x67722AEB798E5FAB, ped, _r)
end

--- IS_PED_*
-- Returns true if the ped is currently opening a door (CTaskOpenDoor).
function IsPedOpeningADoor(ped)
	return _in(0x26AF0E8E30BD2A2C, ped, _r)
end
N_0x26af0e8e30bd2a2c = IsPedOpeningADoor

function IsPedPerformingDependentComboLimit(ped)
	return _in(0xEBD0EDBA5BE957CF, ped, _r)
end
N_0xebd0edba5be957cf = IsPedPerformingDependentComboLimit

function IsPedPerformingMeleeAction(ped)
	return _in(0xDCCA191DF9980FD7, ped, _r)
end
N_0xdcca191df9980fd7 = IsPedPerformingMeleeAction

function IsPedPerformingStealthKill(ped)
	return _in(0xFD4CCDBCC59941B7, ped, _r)
end

function IsPedPlantingBomb(ped)
	return _in(0xC70B5FAE151982D8, ped, _r)
end

function IsPedPlayingBaseClipInScenario(ped)
	return _in(0x621C6E4729388E41, ped, _r)
end
N_0x621c6e4729388e41 = IsPedPlayingBaseClipInScenario

function IsPedProne(ped)
	return _in(0xD6A86331A537A7B9, ped, _r)
end

--- If the ped handle passed through the parenthesis is in a ragdoll state this will return true.
function IsPedRagdoll(ped)
	return _in(0x47E4E977581C5B55, ped, _r)
end

--- Returns whether the specified ped is reloading.
function IsPedReloading(ped)
	return _in(0x24B100C68C645951, ped, _r)
end

function IsPedRespondingToEvent(ped, event)
	return _in(0x625B774D75C87068, ped, event, _r)
end

function IsPedRingtonePlaying(ped)
	return _in(0x1E8E5E20937E3137, ped, _r)
end

function IsPedRunning(ped)
	return _in(0xC5286FFC176F28A2, ped, _r)
end

function IsPedRunningArrestTask(ped)
	return _in(0x3DC52677769B4AE0, ped, _r)
end

function IsPedRunningMeleeTask(ped)
	return _in(0xD1871251F3B5ACD7, ped, _r)
end
N_0xd1871251f3b5acd7 = IsPedRunningMeleeTask

function IsPedRunningMobilePhoneTask(ped)
	return _in(0x2AFE52F782F25775, ped, _r)
end

function IsPedRunningRagdollTask(ped)
	return _in(0xE3B6097CC25AA69E, ped, _r)
end

function IsPedShaderEffectValid(ped)
	return _in(0x81AA517FBBA05D39, ped, _r)
end
N_0x81aa517fbba05d39 = IsPedShaderEffectValid

--- Returns whether the specified ped is shooting.
function IsPedShooting(ped)
	return _in(0x34616828CD07F1A1, ped, _r)
end

function IsPedShootingInArea(ped, x1, y1, z1, x2, y2, z2, p7, p8)
	return _in(0x7E9DFE24AC1E58EF, ped, x1, y1, z1, x2, y2, z2, p7, p8, _r)
end

--- Detect if ped is in any vehicle
-- [True/False]
function IsPedSittingInAnyVehicle(ped)
	return _in(0x826AA586EDB9FEF8, ped, _r)
end

--- Detect if ped is sitting in the specified vehicle
-- [True/False]
function IsPedSittingInVehicle(ped, vehicle)
	return _in(0xA808AA1D79230FC2, ped, vehicle, _r)
end

function IsPedSprinting(ped)
	return _in(0x57E457CD2C0FC168, ped, _r)
end

function IsPedStill(ped)
	return _in(0xAC29253EEF8F0180, ped, _r)
end

--- Returns true if the ped doesn't do any movement. If the ped is being pushed forwards by using APPLY_FORCE_TO_ENTITY for example, the function returns false.
function IsPedStopped(ped)
	return _in(0x530944F6F4B8A214, ped, _r)
end

--- What's strafing?
function IsPedStrafing(ped)
	return _in(0xE45B7F222DE47E09, ped, _r)
end

function IsPedSwappingWeapon(Ped)
	return _in(0x3795688A307E1EB6, Ped, _r)
end
N_0x3795688a307e1eb6 = IsPedSwappingWeapon

function IsPedSwimming(ped)
	return _in(0x9DE327631295B4C2, ped, _r)
end

function IsPedSwimmingUnderWater(ped)
	return _in(0xC024869A53992F34, ped, _r)
end

function IsPedTakingOffHelmet(ped)
	return _in(0x14590DDBEDB1EC85, ped, _r)
end
N_0x14590ddbedb1ec85 = IsPedTakingOffHelmet

function IsPedTracked(ped)
	return _in(0x4C5E1F087CD10BB7, ped, _r)
end

function IsPedTryingToEnterALockedVehicle(ped)
	return _in(0x44D28D5DDFE5F68C, ped, _r)
end

function IsPedUsingActionMode(ped)
	return _in(0x00E73468D085F745, ped, _r)
end

function IsPedUsingAnyScenario(ped)
	return _in(0x57AB4A3080F85143, ped, _r)
end

function IsPedUsingScenario(ped, scenario)
	return _in(0x1BF094736DD62C2E, ped, _ts(scenario), _r)
end

function IsPedVaulting(ped)
	return _in(0x117C70D1F5730B5E, ped, _r)
end

function IsPedWalking(ped)
	return _in(0xDE4C184B2B9B071A, ped, _r)
end

function IsPedWeaponComponentActive(ped, weaponHash, componentHash)
	return _in(0x0D78DE0572D3969E, ped, _ch(weaponHash), _ch(componentHash), _r)
end

function IsPedWeaponReadyToShoot(ped)
	return _in(0xB80CA294F2F26749, ped, _r)
end

--- Returns true if the ped passed through the parenthesis is wearing a helmet.
function IsPedWearingHelmet(ped)
	return _in(0xF33BDFE19B309B19, ped, _r)
end

function IsPedheadshotImgUploadAvailable()
	return _in(0xEBB376779A760AA8, _r)
end
N_0xebb376779a760aa8 = IsPedheadshotImgUploadAvailable

--- gtaforums.com/topic/885580-ped-headshotmugshot-txd/
function IsPedheadshotReady(id)
	return _in(0x7085228842B13A67, id, _r)
end

--- gtaforums.com/topic/885580-ped-headshotmugshot-txd/
function IsPedheadshotValid(id)
	return _in(0xA0A9668F158129A2, id, _r)
end

function IsPickupWeaponObjectValid(object)
	return _in(0x11D1E53A726891FE, object, _r)
end
N_0x11d1e53a726891fe = IsPickupWeaponObjectValid

function IsPlaneLandingGearIntact(plane)
	return _in(0x4198AB0022B15F87, plane, _r)
end
N_0x4198ab0022b15f87 = IsPlaneLandingGearIntact
VehicleHasLandingGear = IsPlaneLandingGearIntact

function IsPlaybackGoingOnForVehicle(vehicle)
	return _in(0x1C8A4C2C19E68EEC, vehicle, _r)
end

function IsPlaybackUsingAiGoingOnForVehicle(vehicle)
	return _in(0xAEA8FD591FAD4106, vehicle, _r)
end

--- Returns true if an unk value is greater than 0.0f
function IsPlayerBattleAware(player)
	return _in(0x38D28DA81E4E9BF9, player, _r)
end
N_0x38d28da81e4e9bf9 = IsPlayerBattleAware

--- Return true while player is being arrested / busted.
-- If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)
-- If atArresting is set to 0, this function will return 1 only when the busted screen is shown.
function IsPlayerBeingArrested(player, atArresting)
	return _in(0x388A47C51ABDAC8E, player, atArresting, _r)
end

function IsPlayerBluetoothEnable(player)
	return _in(0x65FAEE425DE637B0, player, _r)
end
N_0x65faee425de637b0 = IsPlayerBluetoothEnable

--- Returns true when the player is not able to control the cam i.e. when running a benchmark test, switching the player or viewing a cutscene.
-- Note: I am not 100% sure if the native actually checks if the cam control is disabled but it seems promising.
function IsPlayerCamControlDisabled()
	return _in(0x7C814D2FB49F40C0, _r)
end
N_0x7c814d2fb49f40c0 = IsPlayerCamControlDisabled

--- Returns TRUE if the player ('s ped) is climbing at the moment.
function IsPlayerClimbing(player)
	return _in(0x95E8F73DC65EFB9C, player, _r)
end

--- Can the player control himself, used to disable controls for player for things like a cutscene.
-- ---
-- You can't disable controls with this, use SET_PLAYER_CONTROL(...) for this.
function IsPlayerControlOn(player)
	return _in(0x49C32D60007AFA47, player, _r)
end

function IsPlayerDead(player)
	return _in(0x424D4687FA1E5652, player, _r)
end

function IsPlayerEntirelyInsideGarage(garageHash, player, p2, p3)
	return _in(0x024A60DEB0EA69F0, _ch(garageHash), player, p2, p3, _r)
end
N_0x024a60deb0ea69f0 = IsPlayerEntirelyInsideGarage

--- Gets a value indicating whether the specified player is currently aiming freely.
function IsPlayerFreeAiming(player)
	return _in(0x2E397FD2ECD37C87, player, _r)
end

--- Gets a value indicating whether the specified player is currently aiming freely at the specified entity.
function IsPlayerFreeAimingAtEntity(player, entity)
	return _in(0x3C06B5C839B38F7B, player, entity, _r)
end

function IsPlayerFreeForAmbientTask(player)
	return _in(0xDCCFD3F106C36AB4, player, _r)
end

function IsPlayerInCutscene(player)
	return _in(0xE73092F4157CD126, player, _r)
end

--- this function is hard-coded to always return 0.
function IsPlayerLoggingInNp()
	return _in(0x74556E1420867ECA, _r)
end

--- Returns TRUE if the game is in online mode and FALSE if in offline mode.
-- This is an alias for NETWORK_IS_SIGNED_ONLINE.
function IsPlayerOnline()
	return _in(0xF25D331DC2627BBC, _r)
end

function IsPlayerPartiallyInsideGarage(garageHash, player, p2)
	return _in(0x1761DC5D8471CBAA, _ch(garageHash), player, p2, _r)
end
N_0x1761dc5d8471cbaa = IsPlayerPartiallyInsideGarage

--- Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.
function IsPlayerPlaying(player)
	return _in(0x5E9564D8246B909A, player, _r)
end

function IsPlayerPressingHorn(player)
	return _in(0xFA1E2BF8B10598F9, player, _r)
end

function IsPlayerReadyForCutscene(player)
	return _in(0x908CBECC2CAA3690, player, _r)
end

--- Returns true if the player is riding a train.
function IsPlayerRidingTrain(player)
	return _in(0x4EC12697209F2196, player, _r)
end

function IsPlayerScriptControlOn(player)
	return _in(0x8A876A65283DD7D7, player, _r)
end

--- Returns true if the player is currently switching, false otherwise.
-- (When the camera is in the sky moving from Trevor to Franklin for example)
function IsPlayerSwitchInProgress()
	return _in(0xD9D2CFFF49FAB35F, _r)
end
N_0xd9d2cfff49fab35f = IsPlayerSwitchInProgress

function IsPlayerTargettingAnything(player)
	return _in(0x78CFE51896B6B8A4, player, _r)
end

function IsPlayerTargettingEntity(player, entity)
	return _in(0x7912F7FC4F6264B6, player, entity, _r)
end

function IsPlayerTeleportActive()
	return _in(0x02B15662D7F8886F, _r)
end

function IsPlayerVehRadioEnable()
	return _in(0x5F43D83FD6738741, _r)
end
N_0x5f43d83fd6738741 = IsPlayerVehRadioEnable
IsPlayerVehicleRadioEnabled = IsPlayerVehRadioEnable

function IsPlayerWantedLevelGreater(player, wantedLevel)
	return _in(0x238DB2A2C23EE9EF, player, wantedLevel, _r)
end

function IsPlayingPhoneGestureAnim(ped)
	return _in(0xB8EBB1E9D3588C10, ped, _r)
end

--- NativeDB Introduced: v1604
function IsPlaylistUnk(tvChannel, p1)
	return _in(0x1F710BFF7DAE6261, tvChannel, p1, _r)
end

--- An **angled area** is an X-Z oriented rectangle with three parameters:
-- 1.  **origin**: the mid-point along a base edge of the rectangle;
-- 2.  **extent**: the mid-point of opposite base edge on the other Z;
-- 3.  **width**: the length of the base edge; (named derived from logging strings `CNetworkRoadNodeWorldStateData`).
-- The oriented rectangle can then be derived from the direction of the two points (`norm(origin - extent)`), its orthonormal, and the width, e.g:
-- 1.  [golf_mp](https://i.imgur.com/JhsQAK9.png)
-- 2.  [am_taxi](https://i.imgur.com/TJWCZaT.jpg)
-- @param xPos The x coordinate.
-- @param yPos The y coordinate.
-- @param zPos The z coordinate.
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
-- @param p10 a debug flag invoking functions in the same path as `DRAW_MARKER`
-- @param includez If true, include the Z dimension when doing the height check; otherwise the query becomes two-dimensional
function IsPointInAngledArea(xPos, yPos, zPos, x1, y1, z1, x2, y2, z2, width, p10, includez)
	return _in(0x2A70BAE8883E4C81, xPos, yPos, zPos, x1, y1, z1, x2, y2, z2, width, p10, includez, _r)
end

function IsPointObscuredByAMissionEntity(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xE54E209C35FFA18D, p0, p1, p2, p3, p4, p5, p6, _r)
end

--- Gets a value indicating whether the specified position is on a road.
-- The vehicle parameter is not implemented (ignored).
function IsPointOnRoad(x, y, z, vehicle)
	return _in(0x125BF4ABFC536B09, x, y, z, vehicle, _r)
end

--- NativeDB Introduced: v1290
function IsPopMultiplierAreaUnk(id)
	return _in(0x1312F4B242609CE3, id, _r)
end

--- The BOOL parameters that are documented have not been confirmed. They are just documented from what I've found during testing. They may not work as expected in all cases.
-- @param x X coordinate of the position to check.
-- @param y Y coordinate of the position to check.
-- @param z Z coordinate of the position to check.
-- @param range The range, seems to not be very accurate during testing.
-- @param p4 Unknown, when set to true it seems to always return true no matter what I try.
-- @param checkVehicles Check for any vehicles in that area.
-- @param checkPeds Check for any peds in that area.
-- @param p7 Unknown.
-- @param p8 Unknown.
-- @param ignoreEntity This entity will be ignored if it's in the area. Set to 0 if you don't want to exclude any entities.
-- @param p10 Unknown.
-- @return Returns true if there is anything in that location matching the provided parameters.
function IsPositionOccupied(x, y, z, range, p4, checkVehicles, checkPeds, p7, p8, ignoreEntity, p10)
	return _in(0xADCDE75E1C60F32D, x, y, z, range, p4, checkVehicles, checkPeds, p7, p8, ignoreEntity, p10, _r)
end

--- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
function IsPrevWeatherType(weatherType)
	return _in(0x44F28F86433B10A9, _ts(weatherType), _r)
end

function IsPrincipalAceAllowed(principal, object)
	return _in(0x37cf52ce, _ts(principal), _ts(object), _r)
end

--- Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.
-- ownedByPlayer = only projectiles fired by the player will be detected.
function IsProjectileInArea(x1, y1, z1, x2, y2, z2, ownedByPlayer)
	return _in(0x5270A8FBC098C3F8, x1, y1, z1, x2, y2, z2, ownedByPlayer, _r)
end

--- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- ```
-- NativeDB Removed Parameter 7: float p7
-- ```
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
function IsProjectileTypeInAngledArea(x1, y1, z1, x2, y2, z2, width, p7, weaponHash, ownedByPlayer)
	return _in(0xF0BC12401061DEA0, x1, y1, z1, x2, y2, z2, width, p7, _ch(weaponHash), ownedByPlayer, _r)
end

--- Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a axis-aligned bounding box.
function IsProjectileTypeInArea(x1, y1, z1, x2, y2, z2, type, ownedByPlayer)
	return _in(0x2E0DC353342C4A6D, x1, y1, z1, x2, y2, z2, type, ownedByPlayer, _r)
end

function IsProjectileTypeWithinDistance(x, y, z, projHash, radius, ownedByPlayer)
	return _in(0x34318593248C8FB2, x, y, z, _ch(projHash), radius, ownedByPlayer, _r)
end
N_0x34318593248c8fb2 = IsProjectileTypeWithinDistance
IsProjectileTypeInRadius = IsProjectileTypeWithinDistance

function IsPs3Version()
	return _in(0xCCA1072C29D096C2, _r)
end

function IsRadarHidden()
	return _in(0x157F93B036700462, _r)
end

function IsRadarPreferenceSwitchedOn()
	return _in(0x9EB6522EA68F22FE, _r)
end

function IsRadioFadedOut()
	return _in(0x0626A247D2405330, _r)
end
N_0x0626a247d2405330 = IsRadioFadedOut

function IsRadioRetuning()
	return _in(0xA151A7394A214E65, _r)
end

--- Checks if you're recording, returns TRUE when you start recording (F1) or turn on action replay (F2)
-- mov al, cs:g_bIsRecordingGameplay // byte_141DD0CD0 in b944
-- retn
function IsRecording()
	return _in(0x1897CA71995A90B4, _r)
end

function IsReportugcMenuOpen()
	return _in(0x9135584D09A3437E, _r)
end
N_0x9135584d09a3437e = IsReportugcMenuOpen

function IsRockstarMessageReadyForScript()
	return _in(0xBC1CC91205EC8D6E, _r)
end
N_0xbc1cc91205ec8d6e = IsRockstarMessageReadyForScript

--- methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
-- Returns true if the return value of a scaleform function is ready to be collected (using GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING or GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT).
-- @param method_return The return value of this native: `EndScaleformMovieMethodReturn`
-- @return Returns true if the return value of a scaleform function is ready to be collected
function IsScaleformMovieMethodReturnValueReady(method_return)
	return _in(0x768FF8961BA904D6, method_return, _r)
end
N_0x768ff8961ba904d6 = IsScaleformMovieMethodReturnValueReady
GetScaleformMovieFunctionReturnBool = IsScaleformMovieMethodReturnValueReady

--- Occurrences in the b617d scripts:
-- "ARMY_GUARD",
-- "ARMY_HELI",
-- "BLIMP",
-- "Cinema_Downtown",
-- "Cinema_Morningwood",
-- "Cinema_Textile",
-- "City_Banks",
-- "Countryside_Banks",
-- "DEALERSHIP",
-- "KORTZ_SECURITY",
-- "LSA_Planes",
-- "MP_POLICE",
-- "Observatory_Bikers",
-- "POLICE_POUND1",
-- "POLICE_POUND2",
-- "POLICE_POUND3",
-- "POLICE_POUND4",
-- "POLICE_POUND5",
-- "Rampage1",
-- "SANDY_PLANES",
-- "SCRAP_SECURITY",
-- "SEW_MACHINE",
-- "SOLOMON_GATE"
-- Sometimes used with DOES_SCENARIO_GROUP_EXIST:
-- if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") &&   (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {
-- else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {
function IsScenarioGroupEnabled(scenarioGroup)
	return _in(0x367A09DED4E05B99, _ts(scenarioGroup), _r)
end

function IsScenarioOccupied(p0, p1, p2, p3, p4)
	return _in(0x788756D73AC2E07C, p0, p1, p2, p3, p4, _r)
end

--- Occurrences in the b617d scripts:
-- "PROP_HUMAN_SEAT_CHAIR",
-- "WORLD_HUMAN_DRINKING",
-- "WORLD_HUMAN_HANG_OUT_STREET",
-- "WORLD_HUMAN_SMOKING",
-- "WORLD_MOUNTAIN_LION_WANDER",
-- "WORLD_HUMAN_DRINKING"
-- Sometimes used together with MISC::IS_STRING_NULL_OR_EMPTY in the scripts.
-- scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.
function IsScenarioTypeEnabled(scenarioType)
	return _in(0x3A815DB3EA088722, _ts(scenarioType), _r)
end

function IsScreenFadedIn()
	return _in(0x5A859503B0C08678, _r)
end

function IsScreenFadedOut()
	return _in(0xB16FCE9DDC7BA182, _r)
end

function IsScreenFadingIn()
	return _in(0x5C544BC6C57AC575, _r)
end

function IsScreenFadingOut()
	return _in(0x797AC7CB535BA28F, _r)
end

--- Returns whether screen transition to blur/from blur is running.
function IsScreenblurFadeRunning()
	return _in(0x7B226C785A52A0A9, _r)
end
N_0x7b226c785a52a0a9 = IsScreenblurFadeRunning

--- In drunk_controller.c4, sub_309
-- if (CAM::IS_SCRIPT_GLOBAL_SHAKING()) {
-- CAM::STOP_SCRIPT_GLOBAL_SHAKING(0);
-- }
function IsScriptGlobalShaking()
	return _in(0xC912AF078AF19212, _r)
end
N_0xc912af078af19212 = IsScriptGlobalShaking

function IsScriptedConversationLoaded()
	return _in(0xDF0D54BE7A776737, _r)
end

function IsScriptedConversationOngoing()
	return _in(0x16754C556D2EDE3D, _r)
end

function IsScriptedHudComponentActive(id)
	return _in(0xDD100EB17A94FF65, id, _r)
end

function IsScriptedHudComponentHiddenThisFrame(id)
	return _in(0x09C0403ED9A751C2, id, _r)
end
N_0x09c0403ed9a751c2 = IsScriptedHudComponentHiddenThisFrame

--- [Animations list](https://alexguirre.github.io/animations-list/)
function IsScriptedScenarioPedUsingConditionalAnim(ped, animDict, anim)
	return _in(0x6EC47A344923E1ED, ped, _ts(animDict), _ts(anim), _r)
end

function IsScriptedSpeechPlaying(p0)
	return _in(0xCC9AA18DCC7084F4, p0, _r)
end

--- NativeDB Introduced: v1493
function IsScubaGearLightEnabled(ped)
	return _in(0x88274C11CF0D866D, ped, _r)
end

function IsSeatWarpOnly(vehicle, seatIndex)
	return _in(0xF7F203E31F96F6A1, vehicle, seatIndex, _r)
end
N_0xf7f203e31f96f6a1 = IsSeatWarpOnly

--- eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
function IsShockingEventInSphere(eventType, x, y, z, radius)
	return _in(0x1374ABB7C15BAB92, eventType, x, y, z, radius, _r)
end

--- Determines whether there is a sniper bullet within the specified coordinates. The coordinates form an axis-aligned bounding box.
function IsSniperBulletInArea(x1, y1, z1, x2, y2, z2)
	return _in(0xFEFCF11B01287125, x1, y1, z1, x2, y2, z2, _r)
end

--- This function is hard-coded to always return 0.
function IsSniperInverted()
	return _in(0x61A23B7EDA9BDA24, _r)
end

function IsSocialClubActive()
	return _in(0xC406BE343FC4B9AF, _r)
end
N_0xc406be343fc4b9af = IsSocialClubActive

--- NativeDB Added Parameter 2: Any p1
function IsSpecialAbilityActive(player)
	return _in(0x3E5F7FC85D854E15, player, _r)
end

--- NativeDB Added Parameter 2: Any p1
function IsSpecialAbilityEnabled(player)
	return _in(0xB1D200FE26AEF3CB, player, _r)
end

--- NativeDB Added Parameter 2: Any p1
function IsSpecialAbilityMeterFull(player)
	return _in(0x05A1FE504B7F2587, player, _r)
end

function IsSpecialAbilityUnlocked(playerModel)
	return _in(0xC6017F6A6CDFA694, _ch(playerModel), _r)
end

function IsSphereVisible(x, y, z, radius)
	return _in(0xE33D59DA70B58FDF, x, y, z, radius, _r)
end

function IsSphereVisibleToAnotherMachine(p0, p1, p2, p3)
	return _in(0xD82CF8E64C8729D8, p0, p1, p2, p3, _r)
end

function IsSphereVisibleToPlayer(p0, p1, p2, p3, p4)
	return _in(0xDC3A310219E5DA62, p0, p1, p2, p3, p4, _r)
end

--- Returns true when the srl from BEGIN_SRL is loaded.
-- @return *   A boolean once BeginSrl srl is loaded.
function IsSrlLoaded()
	return _in(0xD0263801A4C5B0BB, _r)
end

function IsStoreAvailableToUser()
	return _in(0x883D79C4071E18B3, _r)
end
N_0x883d79c4071e18b3 = IsStoreAvailableToUser

function IsStreamPlaying()
	return _in(0xD11FA52EB849D978, _r)
end

function IsStreamingAdditionalText(p0)
	return _in(0x8B6817B71B85EBF0, p0, _r)
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Returns whether an asynchronous streaming file registration completed.
-- @param registerAs The file name to check, for example `asset.ydr`.
-- @return Whether or not the streaming file has been registered.
function IsStreamingFileReady(registerAs)
	return _in(0xa194934d, _ts(registerAs), _r)
end

function IsStreamvolActive()
	return _in(0xBC9823AB80A3DCAC, _r)
end
N_0xbc9823ab80a3dcac = IsStreamvolActive

function IsStringNull(string)
	return _in(0xF22B6C47C6EAB066, _ts(string), _r)
end

function IsStringNullOrEmpty(string)
	return _in(0xCA042B6957743895, _ts(string), _r)
end

function IsStuntJumpInProgress()
	return _in(0x7A3F19700A4D0525, _r)
end

function IsStuntJumpMessageShowing()
	return _in(0x2272B0A1343129F4, _r)
end
N_0x2272b0a1343129f4 = IsStuntJumpMessageShowing

function IsSubtitlePreferenceSwitchedOn()
	return _in(0xAD6DACA4BA53E0A4, _r)
end

function IsSwitchReadyForDescent()
	return _in(0xDFA80CB25D0A19B3, _r)
end
N_0xdfa80cb25d0a19b3 = IsSwitchReadyForDescent

function IsSwitchSkippingDescent()
	return _in(0x5B74EA8CFD5E3E7E, _r)
end
DestroyPlayerInPauseMenu = IsSwitchSkippingDescent

function IsSynchronizedSceneHoldLastFrame(sceneID)
	return _in(0x7F2F4F13AC5257EF, sceneID, _r)
end
N_0x7f2f4f13ac5257ef = IsSynchronizedSceneHoldLastFrame

function IsSynchronizedSceneLooped(sceneID)
	return _in(0x62522002E0C391BA, sceneID, _r)
end

--- Returns true if a synchronized scene is running
function IsSynchronizedSceneRunning(sceneId)
	return _in(0x25D39B935A038A26, sceneId, _r)
end

function IsSystemUiBeingDisplayed()
	return _in(0x5D511E3867C87139, _r)
end

function IsTaskMoveNetworkActive(ped)
	return _in(0x921CE12C489C4C41, ped, _r)
end
N_0x921ce12c489c4c41 = IsTaskMoveNetworkActive

function IsTaskMoveNetworkReadyForTransition(ped)
	return _in(0x30ED88D5E0C56A37, ped, _r)
end
N_0x30ed88d5e0c56a37 = IsTaskMoveNetworkReadyForTransition

function IsTaxiLightOn(vehicle)
	return _in(0x7504C0F113AB50FC, vehicle, _r)
end

function IsTennisMode(ped)
	return _in(0x5D5479D115290C3F, ped, _r)
end

function IsThisAMinigameScript()
	return _in(0x7B30F65D7B710098, _r)
end

function IsThisModelABicycle(model)
	return _in(0xBF94DD42F63BDED2, _ch(model), _r)
end

function IsThisModelABike(model)
	return _in(0xB50C0B0CEDC6CE84, _ch(model), _r)
end

function IsThisModelABoat(model)
	return _in(0x45A9187928F4B9E3, _ch(model), _r)
end

--- To check if the model is an amphibious car, see gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-33#entry1069317363 (for build 944 and above only!)
function IsThisModelACar(model)
	return _in(0x7F6DB52EEFC96DF8, _ch(model), _r)
end

function IsThisModelAHeli(model)
	return _in(0xDCE4334788AF94EA, _ch(model), _r)
end

--- Checks if model is a boat, then checks for FLAG_IS_JETSKI.
function IsThisModelAJetski(model)
	return _in(0x9537097412CF75FE, _ch(model), _r)
end
IsThisModelASubmersible = IsThisModelAJetski
IsThisModelAnEmergencyBoat = IsThisModelAJetski

function IsThisModelAPlane(model)
	return _in(0xA0948AB42D7BA0DE, _ch(model), _r)
end

function IsThisModelAQuadbike(model)
	return _in(0x39DAC362EE65FA28, _ch(model), _r)
end

function IsThisModelATrain(model)
	return _in(0xAB935175B22E822B, _ch(model), _r)
end

function IsThisModelAnAmphibiousCar(model)
	return _in(0x633F6F44A537EBB6, _ch(model), _r)
end

function IsThisModelAnAmphibiousQuadbike(model)
	return _in(0xA1A9FC1C76A6730D, _ch(model), _r)
end
N_0xa1a9fc1c76a6730d = IsThisModelAnAmphibiousQuadbike

function IsThreadActive(threadId)
	return _in(0x46E9AE36D8FA6417, threadId, _r)
end

--- Returns true if the two times are equal; otherwise returns false.
function IsTimeEqualTo(timeA, timeB)
	return _in(0xF5BC95857BD6D512, timeA, timeB, _r)
end
AreIntegersEqual = IsTimeEqualTo

--- Subtracts the second argument from the first, then returns whether the result is negative.
function IsTimeLessThan(timeA, timeB)
	return _in(0xCB2CF5148012C8D0, timeA, timeB, _r)
end
SubtractBFromAAndCheckIfNegative = IsTimeLessThan

--- Subtracts the first argument from the second, then returns whether the result is negative.
function IsTimeMoreThan(timeA, timeB)
	return _in(0xDE350F8651E4346C, timeA, timeB, _r)
end
SubtractAFromBAndCheckIfNegative = IsTimeMoreThan

function IsToggleModOn(vehicle, modType)
	return _in(0x84B233A8C8FC8AE7, vehicle, modType, _r)
end

--- returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.
-- Target needs to be tracked.. won't work otherwise.
function IsTrackedPedVisible(ped)
	return _in(0x91C8E617F64188AC, ped, _r)
end

function IsTrackedPointVisible(point)
	return _in(0xC45CCDAAC9221CA8, point, _r)
end

function IsTurretSeat(vehicle, seatIndex)
	return _in(0xE33FFA906CE74880, vehicle, seatIndex, _r)
end
N_0xe33ffa906ce74880 = IsTurretSeat

--- IS_*
function IsTvPlaylistItemPlaying(videoCliphash)
	return _in(0x0AD973CA1E077B60, _ch(videoCliphash), _r)
end
N_0x0ad973ca1e077b60 = IsTvPlaylistItemPlaying
LoadTvChannel = IsTvPlaylistItemPlaying

function IsUsingKeyboard(padIndex)
	return _in(0xA571D46727E2B718, padIndex, _r)
end
GetLastInputMethod = IsUsingKeyboard
IsInputDisabled = IsUsingKeyboard

function IsUsingKeyboard_2(padIndex)
	return _in(0x13337B38DB572509, padIndex, _r)
end
N_0x13337b38db572509 = IsUsingKeyboard_2
IsInputJustDisabled = IsUsingKeyboard_2

function IsValidInterior(interior)
	return _in(0x26B0E73D7EAAF4D3, interior, _r)
end

--- IS_*
function IsValidMpGamerTagMovie(gamerTagId)
	return _in(0xEB709A36958ABE0D, gamerTagId, _r)
end
N_0xeb709a36958abe0d = IsValidMpGamerTagMovie
HasMpGamerTag_2 = IsValidMpGamerTagMovie
HasMpGamerTagCrewFlagsSet = IsValidMpGamerTagMovie

--- p1 is false almost always.
-- However, in launcher_carwash/carwash1/carwash2 scripts, p1 is true and is accompanied by DOES_VEHICLE_HAVE_ROOF
function IsVehicleAConvertible(vehicle, p1)
	return _in(0x52F357A30698BCCE, vehicle, p1, _r)
end

function IsVehicleAlarmActivated(vehicle)
	return _in(0x4319E335B71FFF34, vehicle, _r)
end

function IsVehicleAlarmSet(vehicle)
	return _in(0xdc921211, vehicle, _r)
end

function IsVehicleAttachedToCargobob(cargobob, vehicleAttached)
	return _in(0xD40148F22E81A1D9, cargobob, vehicleAttached, _r)
end

--- Scripts verify that towTruck is the first parameter, not the second.
function IsVehicleAttachedToTowTruck(towTruck, vehicle)
	return _in(0x146DF9EC4C4B9FD4, towTruck, vehicle, _r)
end

function IsVehicleAttachedToTrailer(vehicle)
	return _in(0xE7CF3C4F9F489F0C, vehicle, _r)
end

function IsVehicleAudiblyDamaged(vehicle)
	return _in(0x5DB8010EE71FDEF2, vehicle, _r)
end
N_0x5db8010ee71fdef2 = IsVehicleAudiblyDamaged

--- Returns true if vehicle is halted by BRING_VEHICLE_TO_HALT
-- _IS_VEHICLE_*
-- ```
-- ```
-- NativeDB Introduced: v1493
function IsVehicleBeingHalted(vehicle)
	return _in(0xC69BB1D832A710EF, vehicle, _r)
end
N_0xc69bb1d832a710ef = IsVehicleBeingHalted

function IsVehicleBumperBouncing(vehicle, frontBumper)
	return _in(0x27B926779DEB502D, vehicle, frontBumper, _r)
end
N_0x27b926779deb502d = IsVehicleBumperBouncing

function IsVehicleBumperBrokenOff(vehicle, front)
	return _in(0x468056A6BB6F3846, vehicle, front, _r)
end

--- Appears to return true if the vehicle has any damage, including cosmetically.
-- GET_*
function IsVehicleDamaged(vehicle)
	return _in(0xBCDC5017D3CE1E9E, vehicle, _r)
end

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
function IsVehicleDoorDamaged(veh, doorID)
	return _in(0xB8E181E559464527, veh, doorID, _r)
end

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param vehicle The vehicle to check.
-- @param doorIndex The index of the door to check.
-- @return A bool indiciating if the specified door is fully open on the specified vehicle.
function IsVehicleDoorFullyOpen(vehicle, doorIndex)
	return _in(0x3E933CFF7B111C22, vehicle, doorIndex, _r)
end

--- p1 is always 0 in the scripts.
-- p1 = check if vehicle is on fire
function IsVehicleDriveable(vehicle, isOnFireCheck)
	return _in(0x4C241E39B23DF959, vehicle, isOnFireCheck, _r)
end

--- Only ever used once in decompiled scripts: **am_pi_menu**:
-- Returns true if the engine is on fire, or if the vehicle engine health is < 0 and it **has been** on fire.
-- It sometimes doesn't return true when the vehicle engine has been on fire, and has since been fixed. I'm not really sure what the exact conditions are.
-- This usually returns true even if there are no visible flames yet (engine health > 0). However if you monitor engine health you'll see that it starts decreasing as soon as this returns true.
-- @param vehicle The vehicle to check.
-- @return Returns true when the engine of your vehicle is on fire. Returns false if it's not on fire.
function IsVehicleEngineOnFire(vehicle)
	return _in(0xEC69ADF931AAE0C3, vehicle, _r)
end
N_0xec69adf931aae0c3 = IsVehicleEngineOnFire

function IsVehicleEngineStarting(vehicle)
	return _in(0xbb340d04, vehicle, _r)
end

function IsVehicleExtraTurnedOn(vehicle, extraId)
	return _in(0xD2E6822DBFD6C8BD, vehicle, extraId, _r)
end

function IsVehicleHighDetail(vehicle)
	return _in(0x1F25887F3C104278, vehicle, _r)
end

--- Returns whether the specified vehicle is currently in a burnout.
-- vb.net
-- Public Function isVehicleInBurnout(vh As Vehicle) As Boolean
-- Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_IN_BURNOUT, vh)
-- End Function
function IsVehicleInBurnout(vehicle)
	return _in(0x1297A88E081430EB, vehicle, _r)
end

--- garageName example "Michael - Beverly Hills"
function IsVehicleInGarageArea(garageName, vehicle)
	return _in(0xCEE4490CD57BB3C2, _ts(garageName), vehicle, _r)
end

function IsVehicleInteriorLightOn(vehicle)
	return _in(0xa411f72c, vehicle, _r)
end

function IsVehicleModel(vehicle, model)
	return _in(0x423E8DE37D934D89, vehicle, _ch(model), _r)
end

function IsVehicleNeedsToBeHotwired(vehicle)
	return _in(0xf9933bf4, vehicle, _r)
end

--- indices:
-- 0 = Left
-- 1 = Right
-- 2 = Front
-- 3 = Back
function IsVehicleNeonLightEnabled(vehicle, index)
	return _in(0x8C4B92553E4766A5, vehicle, index, _r)
end

--- Returns true if the id is non zero.
function IsVehicleNodeIdValid(vehicleNodeId)
	return _in(0x1EAF30FCFBF5AF74, vehicleNodeId, _r)
end

--- Public Function isVehicleOnAllWheels(vh As Vehicle) As Boolean
-- Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_ON_ALL_WHEELS, vh)
-- End Function
function IsVehicleOnAllWheels(vehicle)
	return _in(0xB104CD1BABF302E2, vehicle, _r)
end

--- Does not work for vehicle of type: CBike, CBmx, CBoat, CTrain, CSubmarine.
function IsVehicleParachuteActive(vehicle)
	return _in(0x3DE51E9C80B116CF, vehicle, _r)
end
N_0x3de51e9c80b116cf = IsVehicleParachuteActive

function IsVehiclePreviouslyOwnedByPlayer(vehicle)
	return _in(0xf849ed67, vehicle, _r)
end

--- IS_VEHICLE_*
-- @param vehicle The vehicle to check
-- @return Is the given vehicle's radio enabled
function IsVehicleRadioEnabled(vehicle)
	return _in(0x0BE4BE946463F917, vehicle, _r)
end
N_0x0be4be946463f917 = IsVehicleRadioEnabled

function IsVehicleRadioLoud(vehicle)
	return _in(0x032A116663A4D5AC, vehicle, _r)
end

function IsVehicleRocketBoostActive(vehicle)
	return _in(0x3D34E80EED4AE3BE, vehicle, _r)
end

--- Possibly: Returns whether the searchlight (found on police vehicles) is toggled on.
function IsVehicleSearchlightOn(vehicle)
	return _in(0xC0F97FCE55094987, vehicle, _r)
end

--- Check if a vehicle seat is accessible. If you park your vehicle near a wall and the ped cannot enter/exit this side, the return value toggles from true (not blocked) to false (blocked).
-- side = only relevant for bikes/motorcycles to check if the left (false)/right (true) side is blocked.
-- onEnter = check if you can enter (true) or exit (false) a vehicle.
-- @param vehicle The vehicle to check.
-- @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
function IsVehicleSeatAccessible(ped, vehicle, seatIndex, side, onEnter)
	return _in(0x639431E895B9AA57, ped, vehicle, seatIndex, side, onEnter, _r)
end
N_0x639431e895b9aa57 = IsVehicleSeatAccessible

--- Seat indices range from -1 to [`GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS`](#\_0xA7C4F2C6E744A550) minus one.
-- ```cpp
-- // CTaskExitVehicleSeat::eSeatPosition - 1
-- enum eSeatPosition
-- {
-- SF_FrontDriverSide = -1,
-- SF_FrontPassengerSide = 0,
-- SF_BackDriverSide = 1,
-- SF_BackPassengerSide = 2,
-- SF_AltFrontDriverSide = 3,
-- SF_AltFrontPassengerSide = 4,
-- SF_AltBackDriverSide = 5,
-- SF_AltBackPassengerSide = 6,
-- };
-- ```
-- ```
-- NativeDB Added Parameter 3: BOOL isTaskRunning
-- isTaskRunning = on true the function returns already false while a task on the target seat is running (TASK_ENTER_VEHICLE/TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT) - on false only when a ped is finally sitting in the seat.
-- ```
-- @param vehicle The vehicle to check.
-- @param seatIndex The eSeatPosition or -2 for **any** vehicle seat.
function IsVehicleSeatFree(vehicle, seatIndex)
	return _in(0x22AC59A870E6A669, vehicle, seatIndex, _r)
end

function IsVehicleSirenAudioOn(vehicle)
	return _in(0xB5CC40FBCB586380, vehicle, _r)
end
N_0xb5cc40fbcb586380 = IsVehicleSirenAudioOn
IsVehicleSirenSoundOn = IsVehicleSirenAudioOn

function IsVehicleSirenOn(vehicle)
	return _in(0x4C9BF537BE2634B2, vehicle, _r)
end

function IsVehicleSlipstreamLeader(vehicle)
	return _in(0x48C633E94A8142A7, vehicle, _r)
end
N_0x48c633e94a8142a7 = IsVehicleSlipstreamLeader

--- Returns false if the vehicle has the FLAG_NO_RESPRAY flag set.
function IsVehicleSprayable(vehicle)
	return _in(0x8D474C8FAEFF6CDE, vehicle, _r)
end
N_0x8d474c8faeff6cde = IsVehicleSprayable
IsVehicleShopResprayAllowed = IsVehicleSprayable

function IsVehicleStolen(vehicle)
	return _in(0x4AF9BD80EEBEB453, vehicle, _r)
end

--- Returns true if the vehicle's current speed is less than, or equal to 0.0025f.
-- For some vehicles it returns true if the current speed is <= 0.00039999999.
-- @return True if the vehicle's speed is equal to, or less than 0.02 meters per second, or 0.05 meters per second, if the vehicle's handbrake is engaged.
function IsVehicleStopped(vehicle)
	return _in(0x5721B434AD84D57A, vehicle, _r)
end

--- Is this for red lights only?  more testing required.
function IsVehicleStoppedAtTrafficLights(vehicle)
	return _in(0x2959F696AE390A99, vehicle, _r)
end

function IsVehicleStuckOnRoof(vehicle)
	return _in(0xB497F06B288DCFDF, vehicle, _r)
end

--- p1 can be anywhere from 0 to 3 in the scripts. p2 is generally somewhere in the 1000 to 10000 range.
function IsVehicleStuckTimerUp(vehicle, p1, p2)
	return _in(0x679BE1DAF71DA874, vehicle, p1, p2, _r)
end

--- wheelID used for 4 wheelers seem to be (0, 1, 4, 5)
-- completely - is to check if tire completely gone from rim.
-- '0 = wheel_lf / bike, plane or jet front
-- '1 = wheel_rf
-- '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
-- '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
-- '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
-- '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
-- '45 = 6 wheels trailer mid wheel left
-- '47 = 6 wheels trailer mid wheel right
function IsVehicleTyreBurst(vehicle, wheelID, completely)
	return _in(0xBA291848A0815CA9, vehicle, wheelID, completely, _r)
end

function IsVehicleVisible(vehicle)
	return _in(0xAA0A52D24FB98293, vehicle, _r)
end

function IsVehicleWanted(vehicle)
	return _in(0xa7daf7c, vehicle, _r)
end

function IsVehicleWeaponDisabled(weaponHash, vehicle, owner)
	return _in(0x563B65A643ED072E, _ch(weaponHash), vehicle, owner, _r)
end
N_0x563b65a643ed072e = IsVehicleWeaponDisabled

--- cpp
-- enum eWindowId {
-- VEH_EXT_WINDSCREEN = 0,
-- VEH_EXT_WINDSCREEN_R = 1,
-- VEH_EXT_WINDOW_LF = 2,
-- VEH_EXT_WINDOW_RF = 3,
-- VEH_EXT_WINDOW_LR = 4,
-- VEH_EXT_WINDOW_RR = 5,
-- VEH_EXT_WINDOW_LM = 6,
-- VEH_EXT_WINDOW_RM = 7,
-- }
function IsVehicleWindowIntact(vehicle, windowIndex)
	return _in(0x46E571A0E20D01F1, vehicle, windowIndex, _r)
end

--- Returns true if a Warning Message or ReportUGC menu is active.
function IsWarningMessageActive()
	return _in(0xE18B138FABC53103, _r)
end
IsMedicalDisabled = IsWarningMessageActive

--- IS_WARNING_MESSAGE_*
function IsWarningMessageActive_2()
	return _in(0xAF42195A42C63BBA, _r)
end
N_0xaf42195a42c63bba = IsWarningMessageActive_2

function IsWaypointActive()
	return _in(0x1DD1F58F493F1DA5, _r)
end

function IsWaypointPlaybackGoingOnForPed(p0)
	return _in(0xE03B3F2D3DC59B64, p0, _r)
end

function IsWaypointPlaybackGoingOnForVehicle(vehicle)
	return _in(0xF5134943EA29868C, vehicle, _r)
end

function IsWeaponValid(weaponHash)
	return _in(0x937C71165CF334B3, _ch(weaponHash), _r)
end

--- Gets whether the world point the calling script is registered to is within desired range of the player.
function IsWorldPointWithinBrainActivationRange()
	return _in(0xC5042CC6F5E3D450, _r)
end

function IsXbox360Version()
	return _in(0xF6201B4DAF662A9D, _r)
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function KnockOffPedProp(ped, p1, p2, p3, p4)
	return _in(0x6FD7816A36615F48, ped, p1, p2, p3, p4)
end

function KnockPedOffVehicle(ped)
	return _in(0x45BBCBA77C29A841, ped)
end

--- Returns true if the current frontend menu is FE_MENU_VERSION_LANDING_MENU
function LandingMenuIsActive()
	return _in(0x3BBBD13E5041A79E, _r)
end
N_0x3bbbd13e5041a79e = LandingMenuIsActive

function Leaderboards2ReadByHandle()
	return _in(0xC30713A383BFBF0E, _i, _i, _r)
end

function Leaderboards2ReadByPlatform(gamerHandleCsv, platformName)
	return _in(0xF1AE5DCDBFCA2721, _i, _ts(gamerHandleCsv), _ts(platformName), _r)
end
N_0xf1ae5dcdbfca2721 = Leaderboards2ReadByPlatform

function Leaderboards2ReadByRadius(p1)
	return _in(0x5CE587FB5A42C8C4, _i, p1, _i, _r)
end

function Leaderboards2ReadByRank(p1, p2)
	return _in(0xBA2C7DB0C129449A, _i, p1, p2, _r)
end

function Leaderboards2ReadByRow(p2, p4, p6)
	return _in(0xA9CDB1E3F0A49883, _i, _i, p2, _i, p4, _i, p6, _r)
end

function Leaderboards2ReadByScoreFloat(p1, p2)
	return _in(0xE662C8B759D08F3C, _i, p1, p2, _r)
end

function Leaderboards2ReadByScoreInt(p1, p2)
	return _in(0x7EEC7E4F6984A16A, _i, p1, p2, _r)
end

function Leaderboards2ReadFriendsByRow(p2, p3, p4, p5)
	return _in(0x918B101666F9CB83, _i, _i, p2, p3, p4, p5, _r)
end

function Leaderboards2ReadRankPrediction()
	return _in(0xC38DC1E90D22547C, _i, _i, _i, _r)
end
N_0xc38dc1e90d22547c = Leaderboards2ReadRankPrediction

function Leaderboards2WriteData(p0)
	return _in(0xAE2206545888AE49, _ii(p0) --[[ may be optional ]], _r)
end

function Leaderboards2WriteDataForEventType()
	return _in(0xC980E62E33DF1D5C, _i, _i, _r)
end
N_0xc980e62e33df1d5c = Leaderboards2WriteDataForEventType

function LeaderboardsCacheDataRow(p0)
	return _in(0xB9BB18E2C40142ED, _ii(p0) --[[ may be optional ]], _r)
end

function LeaderboardsClearCacheData()
	return _in(0xD4B02A6B476E1FDC)
end

function LeaderboardsDeaths(statName, value)
	return _in(0x428EAF89E24F6C36, _ch(statName), value)
end
N_0x428eaf89e24f6c36 = LeaderboardsDeaths

function LeaderboardsGetCacheDataRow(p0, p1, p2)
	return _in(0x9120E8DBA3D69273, p0, p1, _ii(p2) --[[ may be optional ]], _r)
end

function LeaderboardsGetCacheExists(p0)
	return _in(0x9C51349BE6CDFE2C, p0, _r)
end

function LeaderboardsGetCacheNumberOfRows(p0)
	return _in(0x58A651CD201D89AD, p0, _ri)
end
N_0x58a651cd201d89ad = LeaderboardsGetCacheNumberOfRows

function LeaderboardsGetCacheTime(p0)
	return _in(0xF04C1C27DA35F6C8, p0, _ri)
end

function LeaderboardsGetColumnId(p0, p1, p2)
	return _in(0xC4B5467A1886EA7E, p0, p1, p2, _ri)
end

function LeaderboardsGetColumnType(p0, p1, p2)
	return _in(0xBF4FEF46DB7894D3, p0, p1, p2, _ri)
end

function LeaderboardsGetNumberOfColumns(p0, p1)
	return _in(0x117B45156D7EFF2E, p0, p1, _ri)
end

function LeaderboardsReadAnyPending()
	return _in(0xA31FD15197B192BD, _r)
end
N_0xa31fd15197b192bd = LeaderboardsReadAnyPending

function LeaderboardsReadClear(p0, p1, p2)
	return _in(0x7CCE5C737A665701, p0, p1, p2, _ri)
end

function LeaderboardsReadClearAll()
	return _in(0xA34CB6E6F0DF4A0B, _ri)
end

function LeaderboardsReadPending(p0, p1, p2)
	return _in(0xAC392C8483342AC2, p0, p1, p2, _r)
end

function LeaderboardsReadSuccessful(p0, p1, p2)
	return _in(0x2FB19228983E832C, p0, p1, p2, _r)
end

function LeaderboardsWriteAddColumn(p0, p1, p2)
	return _in(0x0BCA1D2C47B0D269, p0, p1, p2)
end
N_0x0bca1d2c47b0d269 = LeaderboardsWriteAddColumn

function LeaderboardsWriteAddColumnLong(p0, p1, p2)
	return _in(0x2E65248609523599, p0, p1, p2)
end
N_0x2e65248609523599 = LeaderboardsWriteAddColumnLong

--- Leaves cursor mode. This function supports SDK infrastructure and is not intended to be used directly from your code.
function LeaveCursorMode()
	return _in(0xadecf19e)
end

function LinkNamedRendertarget(modelHash)
	return _in(0xF6C09E276AEB3F2D, _ch(modelHash))
end

--- L* (LINK_*?)
function LinkStaticEmitterToEntity(emitterName, entity)
	return _in(0x651D3228960D08AF, _ts(emitterName), entity)
end
N_0x651d3228960d08af = LinkStaticEmitterToEntity

function LoadAllObjectsNow()
	return _in(0xBD6E84632DD4CB3F)
end

--- This native has been removed in v1180.
-- @param keepInMemory if true, all path nodes will be loaded and be kept in memory; otherwise, all path nodes will be loaded, but unloaded as the game sees fit.
function LoadAllPathNodes(keepInMemory)
	return _in(0x80E4A6EDDB0BE8D9, keepInMemory, _r)
end

--- The following cloudhats are useable:
-- altostratus
-- Cirrus
-- cirrocumulus
-- Clear 01
-- Cloudy 01
-- Contrails
-- Horizon
-- horizonband1
-- horizonband2
-- horizonband3
-- horsey
-- Nimbus
-- Puffs
-- RAIN
-- Snowy 01
-- Stormy 01
-- stratoscumulus
-- Stripey
-- shower
-- Wispy
function LoadCloudHat(name, transitionTime)
	return _in(0xFC4842A34657BFCB, _ts(name), transitionTime)
end
SetCloudHatTransition = LoadCloudHat

--- From fm_deathmatch_creator and fm_race_creator:
-- FILES::_UNLOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP_SP"));
-- FILES::_LOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP"));
-- NativeDB Introduced: v1604
function LoadContentChangeSetGroup(hash)
	return _in(0x6BEDF5769AC2DC07, _ch(hash))
end

--- 0 - default
-- 1 - HeistIsland
-- ```
-- NativeDB Introduced: v2189
-- ```
function LoadGlobalWaterType(waterType)
	return _in(0x7E3F55ED251B76D3, waterType)
end

function LoadMissionCreatorPhoto(p0, p3)
	return _in(0x4862437A486F91B0, _ts(p0), _i, _i, p3, _r)
end
N_0x4862437a486f91b0 = LoadMissionCreatorPhoto

function LoadMovieMeshSet(movieMeshSetName)
	return _in(0xB66064452270E8F1, _ts(movieMeshSetName), _ri)
end

--- Reads the contents of a text file in a specified resource.
-- If executed on the client, this file has to be included in `files` in the resource manifest.
-- Example: `local data = LoadResourceFile("devtools", "data.json")`
-- @param resourceName The resource name.
-- @param fileName The file in the resource.
-- @return The file contents
function LoadResourceFile(resourceName, fileName)
	return _in(0x76a9ee1f, _ts(resourceName), _ts(fileName), _s)
end

--- Rope presets can be found in the gamefiles. One example is "ropeFamily3", it is NOT a hash but rather a string.
function LoadRopeData(ropeId, rope_preset)
	return _in(0xCBB203C04D1ABD27, ropeId, _ts(rope_preset))
end

function LoadScene(x, y, z)
	return _in(0x4448EB75B4904BDB, x, y, z)
end

--- Example:
-- AUDIO::LOAD_STREAM("CAR_STEAL_1_PASSBY", "CAR_STEAL_1_SOUNDSET");
-- All found occurrences in the b678d decompiled scripts: pastebin.com/3rma6w5w
-- Stream names often ends with "_MASTER", "_SMALL" or "_STREAM". Also "_IN", "_OUT" and numbers.
-- soundSet is often set to 0 in the scripts. These are common to end the soundSets: "_SOUNDS", "_SOUNDSET" and numbers.
function LoadStream(streamName, soundSet)
	return _in(0x1F1F957154EC51DF, _ts(streamName), _ts(soundSet), _r)
end

--- Example:
-- AUDIO::LOAD_STREAM_WITH_START_OFFSET("STASH_TOXIN_STREAM", 2400, "FBI_05_SOUNDS");
-- Only called a few times in the scripts.
function LoadStreamWithStartOffset(streamName, startOffset, soundSet)
	return _in(0x59C16B79F53B3712, _ts(streamName), startOffset, _ts(soundSet), _r)
end

function LoadingscreenGetLoadFreemode()
	return _in(0xEF7D17BC6C85264C, _r)
end
N_0xef7d17bc6c85264c = LoadingscreenGetLoadFreemode

function LoadingscreenGetLoadFreemodeWithEventName()
	return _in(0x8AA464D4E0F6ACCD, _r)
end
N_0x8aa464d4e0f6accd = LoadingscreenGetLoadFreemodeWithEventName

function LoadingscreenIsLoadingFreemode()
	return _in(0xC6DC823253FBB366, _r)
end
N_0xc6dc823253fbb366 = LoadingscreenIsLoadingFreemode
IsUiLoadingMultiplayer = LoadingscreenIsLoadingFreemode

function LoadingscreenSetIsLoadingFreemode(toggle)
	return _in(0xC7E7181C09F33B69, toggle)
end
N_0xc7e7181c09f33b69 = LoadingscreenSetIsLoadingFreemode

function LoadingscreenSetLoadFreemode(toggle)
	return _in(0xB0C56BD3D808D863, toggle)
end
GetBroadcastFinshedLosSound = LoadingscreenSetLoadFreemode
N_0xb0c56bd3d808d863 = LoadingscreenSetLoadFreemode

--- Only occurrence was false, in maintransition.
function LoadingscreenSetLoadFreemodeWithEventName(toggle)
	return _in(0xFC309E94546FCDB5, toggle)
end
N_0xfc309e94546fcdb5 = LoadingscreenSetLoadFreemodeWithEventName
IsInLoadingScreen = LoadingscreenSetLoadFreemodeWithEventName

--- Possible return values: 0, 1, 2
function LocalizationGetSystemDateFormat()
	return _in(0xA8AE43AEC1A61314, _ri)
end
GetUserLanguageId = LocalizationGetSystemDateFormat

--- Same return values as GET_CURRENT_LANGUAGE
function LocalizationGetSystemLanguage()
	return _in(0x497420E022796B3F, _ri)
end
N_0x497420e022796b3f = LocalizationGetSystemLanguage

--- Updates the display of the MP/SP loading buttons, and locks the state so that other options are not displayed or changed. This can only be done once.
function LockLoadingScreenButtons()
	return _in(0xB1577667C3708F9B)
end
N_0xb1577667c3708f9b = LockLoadingScreenButtons

--- Locks the minimap to the specified angle in integer degrees.
-- angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.
function LockMinimapAngle(angle)
	return _in(0x299FAEBB108AE05B, angle)
end

--- Locks the minimap to the specified world position.
function LockMinimapPosition(x, y)
	return _in(0x1279E861A329E73F, x, y)
end

--- Disables the radio station (hides it from the radio wheel).
-- NativeDB Introduced: v1493
function LockRadioStation(radioStationName, toggle)
	return _in(0x477D9DB48F889591, _ts(radioStationName), toggle)
end
N_0x94f2e83ead7e6b82 = LockRadioStation
SetRadioStationDisabled = LockRadioStation

--- NativeDB Introduced: v2372
function LockRadioStationTrackList(radioStation, trackListName)
	return _in(0xFF5E5EA2DCEEACF3, _ts(radioStation), _ts(trackListName))
end

--- NativeDB Introduced: v1604
function Log10(value)
	return _in(0xE816E655DE37FE20, value, _rf)
end

--- Not present in retail version of the game, actual definiton seems to be
-- _LOG_DEBUG_INFO(const char* category, const char* debugText);
function LogDebugInfo(p0)
	return _in(0x2162C446DFDF38FD, _ts(p0))
end
N_0x2162c446dfdf38fd = LogDebugInfo

function LowerConvertibleRoof(vehicle, instantlyLower)
	return _in(0xDED51F703D0FA83D, vehicle, instantlyLower)
end

function LowerRetractableWheels(vehicle)
	return _in(0x5335BE58C083E74E, vehicle)
end
N_0x5335be58c083e74e = LowerRetractableWheels

--- Forces a ped to reload only if they are able to; if they have a full magazine, they will not reload.
function MakePedReload(ped)
	return _in(0x20AE33F3AC9C0033, ped, _r)
end

--- is this like setting is as no longer needed?
function MarkObjectForDeletion(object)
	return _in(0xADBE4809F19F927A, object)
end

function ModifyVehicleTopSpeed(vehicle, value)
	return _in(0x93A3996368C94158, vehicle, value)
end
SetVehicleEnginePowerMultiplier = ModifyVehicleTopSpeed

--- Sets the water height for a given position and radius.
function ModifyWater(x, y, height, radius)
	return _in(0xC443FD757C3BA637, x, y, height, radius)
end

function MoveVehicleDecals(p0, p1)
	return _in(0x84C8D7C2D30D3280, p0, p1)
end

--- Starts listening to the specified channel, when available.
-- @param channel A game voice channel ID.
function MumbleAddVoiceChannelListen(channel)
	return _in(0xc79f44bf, channel)
end

--- Adds the specified channel to the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
-- @param channel A game voice channel ID.
function MumbleAddVoiceTargetChannel(targetId, channel)
	return _in(0x4d386c9e, targetId, channel)
end

--- Adds the specified player to the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
-- @param player A game player index.
function MumbleAddVoiceTargetPlayer(targetId, player)
	return _in(0x32c5355a, targetId, player)
end

--- Adds the specified player to the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
-- @param serverId The player's server id.
function MumbleAddVoiceTargetPlayerByServerId(targetId, serverId)
	return _in(0x25f2b65f, targetId, serverId)
end

function MumbleClearVoiceChannel()
	return _in(0xbf847807)
end

--- Clears the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
function MumbleClearVoiceTarget(targetId)
	return _in(0x8555dcba, targetId)
end

--- Clears channels from the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
function MumbleClearVoiceTargetChannels(targetId)
	return _in(0x5ea72e76, targetId)
end

--- Clears players from the target list for the specified Mumble voice target ID.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
function MumbleClearVoiceTargetPlayers(targetId)
	return _in(0x912e21da, targetId)
end

function MumbleGetTalkerProximity()
	return _in(0x84e02a32, _rf)
end

--- Returns the mumble voice channel from a player's server id.
-- @param serverId The player's server id.
-- @return Int representing the identifier of the voice channel.
function MumbleGetVoiceChannelFromServerId(serverId)
	return _in(0x221c09f1, serverId, _ri)
end

function MumbleIsActive()
	return _in(0xe820bc10, _r)
end

--- This native will return true if the user succesfully connected to the voice server.
-- If the user disabled the voice-chat setting it will return false.
-- @return True if the player is connected to a mumble server.
function MumbleIsConnected()
	return _in(0xb816370a, _r)
end

function MumbleIsPlayerTalking(player)
	return _in(0x33eef97f, player, _r)
end

--- Stops listening to the specified channel.
-- @param channel A game voice channel ID.
function MumbleRemoveVoiceChannelListen(channel)
	return _in(0x231523b7, channel)
end

--- Removes the specified voice channel from the user's voice targets.
-- Performs the opposite operation of [MUMBLE_ADD_VOICE_TARGET_CHANNEL](#\_0x4D386C9E)
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
-- @param channel The game voice channel ID to remove from the target.
function MumbleRemoveVoiceTargetChannel(targetId, channel)
	return _in(0x268db867, targetId, channel)
end

--- Removes the specified player from the user's voice targets.
-- Performs the opposite operation of [MUMBLE_ADD_VOICE_TARGET_PLAYER](#\_0x32C5355A)
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
-- @param player The player index to remove from the target.
function MumbleRemoveVoiceTargetPlayer(targetId, player)
	return _in(0x88cd646f, targetId, player)
end

--- Removes the specified player from the user's voice targets.
-- Performs the opposite operation of [MUMBLE_ADD_VOICE_TARGET_PLAYER_BY_SERVER_ID](#\_0x25F2B65F)
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive).
-- @param serverId The player's server id to remove from the target.
function MumbleRemoveVoiceTargetPlayerByServerId(targetId, serverId)
	return _in(0x930bd34b, targetId, serverId)
end

function MumbleSetActive(state)
	return _in(0xd932a3f3, state)
end

--- Sets the current input distance. The player will be able to talk to other players within this distance.
-- @param distance The input distance.
function MumbleSetAudioInputDistance(distance)
	return _in(0x1b1052e2, distance)
end

--- Use this native to disable noise suppression and high pass filters.
-- The possible intents for this are as follows (backticks are used to represent hashes):
-- | Index | Description |
-- |-|-|
-- | \`speech\` | Default intent |
-- | \`music\` | Disable noise suppression and high pass filter |
-- @param intentHash The intent hash.
function MumbleSetAudioInputIntent(intentHash)
	return _in(0x6383526b, _ch(intentHash))
end

--- Sets the current output distance. The player will be able to hear other players talking within this distance.
-- @param distance The output distance.
function MumbleSetAudioOutputDistance(distance)
	return _in(0x74c597d9, distance)
end

--- Changes the Mumble server address to connect to, and reconnects to the new address.
-- @param address The address of the mumble server.
-- @param port The port of the mumble server.
function MumbleSetServerAddress(address, port)
	return _in(0xe6eb2cd8, _ts(address), port)
end

--- Sets the audio submix ID for a specified player using Mumble 'Native Audio' functionality.
-- @param serverId The player's server ID.
-- @param submixId The submix ID.
function MumbleSetSubmixForServerId(serverId, submixId)
	return _in(0xfe3a3054, serverId, submixId)
end

function MumbleSetTalkerProximity(value)
	return _in(0x74e927b0, value)
end

function MumbleSetVoiceChannel(channel)
	return _in(0x8737eee8, channel)
end

--- Sets the current Mumble voice target ID to broadcast voice to.
-- @param targetId A Mumble voice target ID, ranging from 1..30 (inclusive). 0 disables voice targets, and 31 is server loopback.
function MumbleSetVoiceTarget(targetId)
	return _in(0x960a4a95, targetId)
end

--- Overrides the output volume for a particular player on Mumble. This will also bypass 3D audio and distance calculations. -1.0 to reset the override.
-- Set to -1.0 to reset the Volume override.
-- @param player A game player index.
-- @param volume The volume, ranging from 0.0 to 1.0 (or above).
function MumbleSetVolumeOverride(player, volume)
	return _in(0x61c309e3, player, volume)
end

--- Overrides the output volume for a particular player with the specified server id and player name on Mumble. This will also bypass 3D audio and distance calculations. -1.0 to reset the override.
-- @param serverId The player's server id.
-- @param volume The volume, ranging from 0.0 to 1.0 (or above).
function MumbleSetVolumeOverrideByServerId(serverId, volume)
	return _in(0xce8e25b4, serverId, volume)
end

--- 2 matches in 1 script - am_hold_up
-- Used in multiplayer scripts?
function N_0x0032a6dba562c518()
	return _in(0x0032A6DBA562C518)
end

--- NativeDB Introduced: v1868
function N_0x006e4b040ed37ec3(p0)
	return _in(0x006E4B040ED37EC3, p0)
end

--- NativeDB Introduced: v1868
function N_0x0077f15613d36993(p0, p1, p2, p3)
	return _in(0x0077F15613D36993, p0, p1, p2, p3)
end

function N_0x011883f41211432a(x1, y1, z1, x2, y2, z2, p6)
	return _in(0x011883F41211432A, x1, y1, z1, x2, y2, z2, p6)
end

function N_0x0150b6ff25a9e2e5()
	return _in(0x0150B6FF25A9E2E5)
end

function N_0x015b03ee1c43e6ec(p0)
	return _in(0x015B03EE1C43E6EC, p0)
end

function N_0x01708e8dd3ff8c65(p0, p1, p2, p3, p4, p5)
	return _in(0x01708E8DD3FF8C65, p0, p1, p2, p3, p4, p5, _ri)
end

--- NativeDB Introduced: v1290
function N_0x0205f5365292d2eb(vehicle, p1)
	return _in(0x0205F5365292D2EB, vehicle, p1)
end

function N_0x0218ba067d249dea()
	return _in(0x0218BA067D249DEA)
end

--- some camera effect that is (also) used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled. Possibly a cinematic or script-cam version of _0x487A82C650EB7799
function N_0x0225778816fdc28c(p0)
	return _in(0x0225778816FDC28C, p0)
end

--- DISABLE_S*
function N_0x02369d5c8a51fdcf(toggle)
	return _in(0x02369D5C8A51FDCF, toggle)
end

--- NativeDB Introduced: v1493
function N_0x023acab2dc9dc4a4()
	return _in(0x023ACAB2DC9DC4A4, _ri)
end

--- Found in the scripts:
-- MISC::_02DEAAC8F8EA7FE7("");
function N_0x02deaac8f8ea7fe7(p0)
	return _in(0x02DEAAC8F8EA7FE7, _ts(p0))
end

--- **This native does absolutely nothing, just a nullsub**
function N_0x02e93c796abd3a97(p0)
	return _in(0x02E93C796ABD3A97, p0)
end

function N_0x03300b57fcac6ddb(p0)
	return _in(0x03300B57FCAC6DDB, p0)
end

function N_0x0395cb47b022e62c(p0)
	return _in(0x0395CB47B022E62C, _ii(p0) --[[ may be optional ]], _r)
end

function N_0x03c2eebb04b3fb72(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x03C2EEBB04B3FB72, p0, p1, p2, p3, p4, p5, p6)
end

function N_0x03ea03af85a85cb7(ped, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x03EA03AF85A85CB7, ped, p1, p2, p3, p4, p5, p6, p7, p8, _r)
end

function N_0x03f1a106bda7dd3e()
	return _in(0x03F1A106BDA7DD3E)
end

function N_0x0419b167ee128f33(p0, p1)
	return _in(0x0419B167EE128F33, p0, p1, _ri)
end

function N_0x041c7f2a6c9894e6(p0, p1, p2)
	return _in(0x041C7F2A6C9894E6, p0, p1, p2, _ri)
end

--- SET_*
function N_0x04655f9d075d0ae5(toggle)
	return _in(0x04655F9D075D0AE5, toggle)
end

function N_0x04918a41bc9b8157(p0, p1, p2)
	return _in(0x04918A41BC9B8157, p0, p1, p2, _ri)
end

function N_0x0581730ab9380412(p0, p1, p2, p3, p4, p5)
	return _in(0x0581730AB9380412, p0, p1, p2, p3, p4, p5)
end

function N_0x0596843b34b95ce5(p0, p1)
	return _in(0x0596843B34B95CE5, p0, p1)
end

function N_0x06087579e7aa85a9(p0, p1, p2, p3, p4, p5)
	return _in(0x06087579E7AA85A9, p0, p1, p2, p3, p4, p5, _r)
end

function N_0x061cb768363d6424(ped, toggle)
	return _in(0x061CB768363D6424, ped, toggle)
end

--- FORCE_*
function N_0x062d5ead4da2fa6a()
	return _in(0x062D5EAD4DA2FA6A)
end

--- A vehicle recording playback flag only used in jewelry_heist
function N_0x063ae2b2cc273588(vehicle, p1)
	return _in(0x063AE2B2CC273588, vehicle, p1)
end

--- CLEAR_*
function N_0x06462a961e94b67c()
	return _in(0x06462A961E94B67C)
end

function N_0x065d03a9d6b2c6b5(p0, p1)
	return _in(0x065D03A9D6B2C6B5, p0, p1)
end

function N_0x06eaf70ae066441e(p0)
	return _in(0x06EAF70AE066441E, p0)
end

function N_0x06ee9048fd080382(p0)
	return _in(0x06EE9048FD080382, p0)
end

function N_0x07c61676e5bb52cd(p0)
	return _in(0x07C61676E5BB52CD, p0, _ri)
end

function N_0x07dbd622d9533857(p0)
	return _in(0x07DBD622D9533857, p0, _ri)
end

function N_0x07eab372c8841d99(p0, p1, p2)
	return _in(0x07EAB372C8841D99, p0, p1, p2, _ri)
end

function N_0x0811381ef5062fec(p0)
	return _in(0x0811381EF5062FEC, p0)
end

--- Returns false if amount > wallet balance or daily transfer limit has been hit.
-- NativeDB Introduced: v323
function N_0x08e8eeadfd0dc4a0(amount)
	return _in(0x08E8EEADFD0DC4A0, amount, _r)
end

--- NativeDB Introduced: v1180
function N_0x0a3f820a9a9a9ac5(vehicle, x, y, z)
	return _in(0x0A3F820A9A9A9AC5, vehicle, x, y, z)
end

--- CLEAR_VEHICLE_*
function N_0x0a436b8643716d14()
	return _in(0x0A436B8643716D14)
end

function N_0x0a9c7f36e5d7b683(p0)
	return _in(0x0A9C7F36E5D7B683, p0)
end

function N_0x0aa27680a0bd43fa()
	return _in(0x0AA27680A0BD43FA)
end

function N_0x0ad9e8f87ff7c16f(p0, p1)
	return _in(0x0AD9E8F87FF7C16F, p0, p1)
end

function N_0x0ae73d8df3a762b2(p0)
	return _in(0x0AE73D8DF3A762B2, p0)
end

function N_0x0b3e35ac043707d9(p0, p1)
	return _in(0x0B3E35AC043707D9, p0, p1)
end

function N_0x0b40ed49d7d6ff84()
	return _in(0x0B40ED49D7D6FF84)
end

function N_0x0b565b0aae56a0e8(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x0B565B0AAE56A0E8, p0, p1, p2, p3, p4, p5, p6)
end

function N_0x0b568201dd99f0eb(p0)
	return _in(0x0B568201DD99F0EB, p0)
end

function N_0x0b8b7f74bf061c6d()
	return _in(0x0B8B7F74BF061C6D, _ri)
end

--- NativeDB Introduced: v1290
function N_0x0bbb9a7a8ffe931b(p0, p1, p2)
	return _in(0x0BBB9A7A8FFE931B, p0, p1, p2)
end

--- NativeDB Introduced: v1180
function N_0x0c698d8f099174c7(p0)
	return _in(0x0C698D8F099174C7, p0)
end

function N_0x0cf54f20de43879c(p0)
	return _in(0x0CF54F20DE43879C, p0)
end

--- NativeDB Introduced: v1180
function N_0x0cf6cc51aa18f0f8(p0, p1, p2)
	return _in(0x0CF6CC51AA18F0F8, p0, p1, p2, _ri)
end

--- 0 as param = weird black and green screen
-- 0.1 - 0.99 = Prevent rain effect from falling (still sound and effects on puddles) and prevent puddles from increase/decrease, seems than it prevent any weather change too
-- 1 and more = "Unfreeze" rain puddles but clear weather too
-- When 'freezing' is enabled, it seem to also freeze value getted with GetRainLevel
function N_0x0cf97f497fe7d048(p0)
	return _in(0x0CF97F497FE7D048, p0)
end

function N_0x0d01d20616fc73fb(p0, p1)
	return _in(0x0D01D20616FC73FB, p0, p1)
end

function N_0x0d30eb83668e63c5(p0, p1, p2, p3)
	return _in(0x0D30EB83668E63C5, p0, p1, p2, p3)
end

--- NETWORK_SET_*
function N_0x0d77a82dc2d0da59()
	return _in(0x0D77A82DC2D0DA59, _i, _i)
end

--- NativeDB Introduced: v1868
function N_0x0dd362f14f18942a(amount, p1, p2)
	return _in(0x0DD362F14F18942A, amount, p1, p2)
end

function N_0x0e4299c549f0d1f1(toggle)
	return _in(0x0E4299C549F0D1F1, toggle)
end

function N_0x0e4f77f7b9d74d84(p0)
	return _in(0x0E4F77F7B9D74D84, p0)
end

function N_0x0ede326d47cd0f3e(ped, player)
	return _in(0x0EDE326D47CD0F3E, ped, player, _r)
end

--- NativeDB Introduced: v2189
function N_0x0f1a4b45b7693b95(p0, p1)
	return _in(0x0F1A4B45B7693B95, p0, p1)
end

function N_0x0f62619393661d6e(p0, p1, p2)
	return _in(0x0F62619393661D6E, p0, p1, p2)
end

--- BG_*
-- NativeDB Introduced: v323
function N_0x0f6f1ebbc4e1d5e6(scriptIndex, p1)
	return _in(0x0F6F1EBBC4E1D5E6, scriptIndex, _ts(p1), _r)
end

function N_0x0f73393bac7e6730()
	return _in(0x0F73393BAC7E6730, _i, _i, _r)
end

--- Doesn't actually return anything.
-- ```
-- NativeDB Introduced: v2060
-- ```
function N_0x0ffb3c758e8c07b9(ped, p1)
	return _in(0x0FFB3C758E8C07B9, ped, p1, _ri)
end

--- Returns some sort of index/offset for overlays/decorations.
-- ```
-- Character types:
-- 0 = Michael,
-- 1 = Franklin,
-- 2 = Trevor,
-- 3 = MPMale,
-- 4 = MPFemale
-- ```
-- ```
-- NativeDB Introduced: v2189
-- ```
function N_0x10144267dd22866c(overlayHash, p1, character)
	return _in(0x10144267DD22866C, _ch(overlayHash), p1, character, _ri)
end

--- NativeDB Introduced: v1290
function N_0x107a473d7a6647a9(vehicle)
	return _in(0x107A473D7A6647A9, vehicle)
end

--- UI3DSCENE_*
function N_0x108be26959a9d9bb(toggle)
	return _in(0x108BE26959A9D9BB, toggle)
end

--- In agency_heist3b.c4, its like this 90% of the time:
-- PED::_110F526AB784111F(ped, 0.099);
-- PED::SET_PED_ENVEFF_SCALE(ped, 1.0);
-- PED::_D69411AA0CEBF9E9(ped, 87, 81, 68);
-- PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);
-- and its like this 10% of the time:
-- PED::_110F526AB784111F(ped, 0.2);
-- PED::SET_PED_ENVEFF_SCALE(ped, 0.65);
-- PED::_D69411AA0CEBF9E9(ped, 74, 69, 60);
-- PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);
function N_0x110f526ab784111f(ped, p1)
	return _in(0x110F526AB784111F, ped, p1)
end

function N_0x112209ce0290c03a(p0, p1, p2, p3)
	return _in(0x112209CE0290C03A, p0, p1, p2, p3)
end

function N_0x1153fa02a659051c()
	return _in(0x1153FA02A659051C)
end

function N_0x11579d940949c49e(p0)
	return _in(0x11579D940949C49E, p0)
end

function N_0x116fb94dc4b79f17(p0)
	return _in(0x116FB94DC4B79F17, _ts(p0))
end

function N_0x1171a97a3d3981b6(p2, p3)
	return _in(0x1171A97A3D3981B6, _i, _i, p2, p3, _r)
end

--- NativeDB Introduced: v2189
function N_0x1178e104409fe58c(p0, p1)
	return _in(0x1178E104409FE58C, p0, p1)
end

--- SET_TEXT_??? - Used in golf and golf_mp
function N_0x1185a8087587322c(p0)
	return _in(0x1185A8087587322C, p0)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0x1216e0bfa72cc703(p0, p1)
	return _in(0x1216E0BFA72CC703, p0, p1)
end

--- Hardcoded to only work in multiplayer.
function N_0x12ded8ca53d47ea5(p0)
	return _in(0x12DED8CA53D47EA5, p0)
end

function N_0x1312ddd8385aee4e(p0, p1)
	return _in(0x1312DDD8385AEE4E, p0, p1)
end

function N_0x1398582b7f72b3ed(p0)
	return _in(0x1398582B7F72B3ED, p0)
end

function N_0x13b350b8ad0eee10()
	return _in(0x13B350B8AD0EEE10)
end

--- SET_NETWORK_*
function N_0x13f1fcb111b820b0(p0)
	return _in(0x13F1FCB111B820B0, p0)
end

function N_0x140e6a44870a11ce()
	return _in(0x140E6A44870A11CE)
end

function N_0x144da052257ae7d8(p0)
	return _in(0x144DA052257AE7D8, p0)
end

--- NETWORK_IS_*
function N_0x14922ed3e38761f0()
	return _in(0x14922ED3E38761F0, _r)
end

function N_0x149aee66f0cb3a99(p0, p1)
	return _in(0x149AEE66F0CB3A99, p0, p1)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0x14d29bb12d47f68c(p0, p1, p2, p3, p4)
	return _in(0x14D29BB12D47F68C, p0, p1, p2, p3, p4)
end

function N_0x14e0b2d1ad1044e0()
	return _in(0x14E0B2D1AD1044E0, _i, _i, _i, _i)
end

function N_0x14eda9ee27bd1626(p0)
	return _in(0x14EDA9EE27BD1626, p0)
end

function N_0x14fc5833464340a8()
	return _in(0x14FC5833464340A8)
end

--- Checks some commerce stuff
-- NativeDB Introduced: v1290
function N_0x155467aca0f55705()
	return _in(0x155467ACA0F55705, _ri)
end

function N_0x159b7318403a1cd8(p0)
	return _in(0x159B7318403A1CD8, p0)
end

function N_0x1612c45f9e3e0d44()
	return _in(0x1612C45F9E3E0D44)
end

function N_0x162c23ca83ed0a62(p0)
	return _in(0x162C23CA83ED0A62, p0, _r)
end

function N_0x164c5ff663790845(p0)
	return _in(0x164C5FF663790845, p0)
end

function N_0x16da8172459434aa()
	return _in(0x16DA8172459434AA, _ri)
end

function N_0x170910093218c8b9(p0)
	return _in(0x170910093218C8B9, _ii(p0) --[[ may be optional ]], _r)
end

--- Related to displaying cash on the HUD
-- Always called before HUD::_SET_SINGLEPLAYER_HUD_CASH in decompiled scripts
function N_0x170f541e1cadd1de(p0)
	return _in(0x170F541E1CADD1DE, p0)
end

--- NativeDB Introduced: v2060
function N_0x17c9e241111a674d(p0, p1)
	return _in(0x17C9E241111A674D, p0, p1)
end

function N_0x17fca7199a530203()
	return _in(0x17FCA7199A530203, _ri)
end

function N_0x182f266c2d9e2beb(vehicle, p1)
	return _in(0x182F266C2D9E2BEB, vehicle, p1)
end

function N_0x1888694923ef4591()
	return _in(0x1888694923EF4591)
end

function N_0x19853b5b17d77bca(p0, p1)
	return _in(0x19853B5B17D77BCA, p0, _ii(p1) --[[ may be optional ]], _r)
end

function N_0x1989c6e6f67e76a8()
	return _in(0x1989C6E6F67E76A8, _i, _i, _i, _r)
end

function N_0x19af7ed9b9d23058()
	return _in(0x19AF7ED9B9D23058)
end

--- GET_TENNIS_*; references 0xFBFEC0E9 = interruptswing
function N_0x19bfed045c647c49(ped)
	return _in(0x19BFED045C647C49, ped, _r)
end

--- SET_ENTITY_*
function N_0x1a092bb0c3808b96(entity, p1)
	return _in(0x1A092BB0C3808B96, entity, p1)
end

--- Only appears in lamar1 script.
function N_0x1a330d297aac6bc1(ped, p1)
	return _in(0x1A330D297AAC6BC1, ped, p1)
end

--- NativeDB Introduced: v1604
function N_0x1a6cbb06e2d0d79d(p0, p1)
	return _in(0x1A6CBB06E2D0D79D, p0, p1)
end

function N_0x1a7ce7cd3e653485(p0)
	return _in(0x1A7CE7CD3E653485, p0)
end

function N_0x1a8ea222f9c67dbb(p0)
	return _in(0x1A8EA222F9C67DBB, p0, _ri)
end

--- Sets a value that appears to affect door opening behavior when damaged.
-- SET_*
function N_0x1b212b26dd3c04df(vehicle, toggle)
	return _in(0x1B212B26DD3C04DF, vehicle, toggle)
end

function N_0x1b7abe26cbcbf8c7(ped, p1, p2)
	return _in(0x1B7ABE26CBCBF8C7, ped, p1, p2)
end

--- SCRIPT_RACE_*
function N_0x1bb299305c3e8c13(p0, p1, p2, p3)
	return _in(0x1BB299305C3E8C13, p0, p1, p2, p3)
end

function N_0x1bbc135a4d25edde(p0)
	return _in(0x1BBC135A4D25EDDE, p0)
end

--- ENABLE_VEHICLE_*
function N_0x1c073274e065c6d2(vehicle, toggle)
	return _in(0x1C073274E065C6D2, vehicle, toggle)
end

--- NativeDB Introduced: v1604
function N_0x1c57c94a6446492a(p0, p1)
	return _in(0x1C57C94A6446492A, p0, p1)
end

--- SET_TRA*
function N_0x1cba05ae7bd7ee05(p0)
	return _in(0x1CBA05AE7BD7EE05, p0)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Added Parameter 2: char* p1
-- NativeDB Added Parameter 3: char* p2
-- NativeDB Introduced: v323
function N_0x1d12a56fc95be92e()
	return _in(0x1D12A56FC95BE92E, _r)
end

function N_0x1d4446a62d35b0d0(p0, p1)
	return _in(0x1D4446A62D35B0D0, p0, p1, _ri)
end

--- IS_COMMERCE_*
function N_0x1d4dc17c38feaff0()
	return _in(0x1D4DC17C38FEAFF0, _r)
end

function N_0x1d610eb0fea716d9(p0)
	return _in(0x1D610EB0FEA716D9, p0, _r)
end

--- NativeDB Introduced: v1493
function N_0x1dc9b749e7ae282b(p0, p1, p2, p3)
	return _in(0x1DC9B749E7AE282B, p0, p1, p2, p3)
end

function N_0x1e3f1b1b891a2aaa(p0, p1)
	return _in(0x1E3F1B1B891A2AAA, p0, p1)
end

--- GET_*
function N_0x1e77fa7a62ee6c4c(p0)
	return _in(0x1E77FA7A62EE6C4C, p0, _ri)
end

function N_0x1e9057a74fd73e23()
	return _in(0x1E9057A74FD73E23)
end

--- Unsure about the use of this native but here's an example:
-- void sub_8709() {
-- MISC::_1EAE0A6E978894A2(0, 1);
-- MISC::_1EAE0A6E978894A2(1, 1);
-- MISC::_1EAE0A6E978894A2(2, 1);
-- MISC::_1EAE0A6E978894A2(3, 1);
-- MISC::_1EAE0A6E978894A2(4, 1);
-- MISC::_1EAE0A6E978894A2(5, 1);
-- MISC::_1EAE0A6E978894A2(6, 1);
-- MISC::_1EAE0A6E978894A2(7, 1);
-- MISC::_1EAE0A6E978894A2(8, 1);
-- }
-- So it appears that p0 ranges from 0 to 8.
-- ENABLE_DISPATCH_SERVICE, seems to have a similar layout.
function N_0x1eae0a6e978894a2(p0, p1)
	return _in(0x1EAE0A6E978894A2, p0, p1)
end

function N_0x1f2300cb7fa7b7f6()
	return _in(0x1F2300CB7FA7B7F6, _ri)
end

function N_0x1f34b0626c594380(p0, p1)
	return _in(0x1F34B0626C594380, p0, p1)
end

function N_0x1f351cf1c6475734(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x1F351CF1C6475734, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end

--- NativeDB Introduced: v1180
function N_0x1f7bc3539f9e0224()
	return _in(0x1F7BC3539F9E0224)
end

function N_0x1f8e00fb18239600(p0)
	return _in(0x1F8E00FB18239600, p0)
end

function N_0x1f9fb66f3a3842d2(vehicle, p1)
	return _in(0x1F9FB66F3A3842D2, vehicle, p1)
end

--- SET_PED_STE*
function N_0x2016c603d6b8987c(ped, toggle)
	return _in(0x2016C603D6B8987C, ped, toggle)
end

--- NativeDB Introduced: v2189
function N_0x202a5ed9ce01d6e7(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x202A5ED9CE01D6E7, p0, p1, p2, p3, p4, p5, p6, p7, p8)
end

function N_0x20746f7b1032a3c7(p0, p1, p2, p3)
	return _in(0x20746F7B1032A3C7, p0, p1, p2, p3)
end

--- -This function appears to be deprecated/ unused. Tracing the call internally leads to a _nullsub -
-- first one seems to be a string of a mission name, second one seems to be a bool/toggle
-- p1 was always 0.
function N_0x208784099002bc30(missionNameLabel, p1)
	return _in(0x208784099002BC30, _ts(missionNameLabel), p1)
end

function N_0x20c6c7e4eb082a7f(p0)
	return _in(0x20C6C7E4EB082A7F, p0)
end

--- HAS_*
function N_0x2107a3773771186d()
	return _in(0x2107A3773771186D, _r)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0x211c4ef450086857()
	return _in(0x211C4EF450086857)
end

--- HAS_S*
function N_0x214cd562a939246a()
	return _in(0x214CD562A939246A, _r)
end

--- GET_C*
function N_0x21c235bc64831e5a(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x21C235BC64831E5A, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, _rv)
end

function N_0x225798743970412b(p0)
	return _in(0x225798743970412B, _ii(p0) --[[ may be optional ]], _r)
end

--- NativeDB Introduced: v1493
function N_0x226c284c830d0ca8(p0, p1, p2, p3)
	return _in(0x226C284C830D0CA8, p0, p1, p2, p3)
end

--- BG_*
-- NativeDB Introduced: v323
function N_0x22e21fbcfc88c149(scriptIndex, p1)
	return _in(0x22E21FBCFC88C149, scriptIndex, _ts(p1), _ri)
end

function N_0x2302c0264ea58d31()
	return _in(0x2302C0264EA58D31)
end

--- NativeDB Introduced: v2372
function N_0x2310a8f9421ebf43(p0)
	return _in(0x2310A8F9421EBF43, p0)
end

function N_0x2311dd7159f00582(vehicle, p1)
	return _in(0x2311DD7159F00582, vehicle, p1)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0x23227df0b2115469()
	return _in(0x23227DF0B2115469)
end

--- NativeDB Introduced: v1290
function N_0x237440e46d918649(p0)
	return _in(0x237440E46D918649, p0)
end

function N_0x2382ab11450ae7ba(p0, p1)
	return _in(0x2382AB11450AE7BA, p0, p1)
end

--- Hardcoded to return false.
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
function N_0x23f09eadc01449d6(padIndex)
	return _in(0x23F09EADC01449D6, padIndex, _r)
end

--- Only used once in scripts, in maintransition.
-- maintransition.c4, line ~82432:
-- if (PED::_7350823473013C02(PLAYER::PLAYER_PED_ID()) && (DECORATOR::_241FCA5B1AA14F75() == 0)) {
-- g_2542A5 = a_1; // 'g_2542A5' used in 'building_controller.ysc' for IPL stuff?
-- return 1;
-- }
-- Likely used solely for the players ped. The function it's in seems to only be used for initialization/quitting. Called among natives to discard scaleforms, disable frontend, fading in/out, etc. Neighboring strings to some calls include "HUD_JOINING", "HUD_QUITTING".
-- Most likely ARE_*
function N_0x241fca5b1aa14f75()
	return _in(0x241FCA5B1AA14F75, _r)
end

--- NativeDB Introduced: v2060
function N_0x243296a510b562b6()
	return _in(0x243296A510B562B6)
end

function N_0x247acbc4abbc9d1c(p0)
	return _in(0x247ACBC4ABBC9D1C, p0)
end

function N_0x24a49beaf468dc90(p0, p2, p3, p4)
	return _in(0x24A49BEAF468DC90, p0, _i, p2, p3, p4, _r)
end

--- NativeDB Introduced: v1868
function N_0x24c024ba8379a70a(p0, p1)
	return _in(0x24C024BA8379A70A, p0, p1)
end

function N_0x24e4e51fc16305f9()
	return _in(0x24E4E51FC16305F9, _ri)
end

function N_0x25361a96e0f7e419(p0, p1, p2, p3)
	return _in(0x25361A96E0F7E419, p0, p1, p2, p3, _ri)
end

--- NativeDB Introduced: v1180
function N_0x2542269291c6ac84(p0)
	return _in(0x2542269291C6AC84, p0, _ri)
end

--- Does nothing (it's a nullsub).
-- NativeDB Introduced: v323
function N_0x2555cf7da5473794()
	return _in(0x2555CF7DA5473794, _ri)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Added Parameter 2: float* p1
-- NativeDB Added Parameter 3: char* p2
-- NativeDB Introduced: v323
function N_0x2570e26be63964e3()
	return _in(0x2570E26BE63964E3, _r)
end

function N_0x259ba6d4e6f808f1(p0)
	return _in(0x259BA6D4E6F808F1, p0)
end

--- NativeDB Introduced: v1365
function N_0x25aaa32bdc98f2a3()
	return _in(0x25AAA32BDC98F2A3, _ri)
end

function N_0x25d990f8e0e3f13c()
	return _in(0x25D990F8E0E3F13C)
end

function N_0x25fc3e33a31ad0c9(p0)
	return _in(0x25FC3E33A31AD0C9, p0)
end

function N_0x261e97ad7bcf3d40(p0)
	return _in(0x261E97AD7BCF3D40, p0)
end

function N_0x265559da40b3f327(p0)
	return _in(0x265559DA40B3F327, p0)
end

function N_0x265635150fb0d82e()
	return _in(0x265635150FB0D82E)
end

--- STATS::0x343B27E2(0);
-- STATS::0x343B27E2(1);
-- STATS::0x343B27E2(2);
-- STATS::0x343B27E2(3);
-- STATS::0x343B27E2(4);
-- STATS::0x343B27E2(5);
-- STATS::0x343B27E2(6);
-- STATS::0x343B27E2(7);
-- Identical in ingamehud & maintransition.
function N_0x26d7399b9587fe89(p0)
	return _in(0x26D7399B9587FE89, p0)
end

function N_0x26d99d5a82fd18e8(p0)
	return _in(0x26D99D5A82FD18E8, p0)
end

--- NativeDB Introduced: v1290
function N_0x26e13d440e7f6064(vehicle, value)
	return _in(0x26E13D440E7F6064, vehicle, value)
end

function N_0x26f07dd83a5f7f98()
	return _in(0x26F07DD83A5F7F98, _ri)
end

function N_0x271017b9ba825366(p0, p1)
	return _in(0x271017B9BA825366, p0, p1)
end

function N_0x271401846bd26e92(p0, p1)
	return _in(0x271401846BD26E92, p0, p1)
end

function N_0x2735233a786b1bef(ped, p1)
	return _in(0x2735233A786B1BEF, ped, p1)
end

--- SET_F*
function N_0x2790f4b17d098e26(toggle)
	return _in(0x2790F4B17D098E26, toggle)
end

function N_0x27aa1c973cacfe63(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x27AA1C973CACFE63, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end

function N_0x27cfb1b1e078cb2d()
	return _in(0x27CFB1B1E078CB2D)
end

--- NativeDB Introduced: v2372
function N_0x27f248c3febfaad3(p0, p1)
	return _in(0x27F248C3FEBFAAD3, p0, p1)
end

function N_0x27feb5254759cde3(textureDict, p1)
	return _in(0x27FEB5254759CDE3, _ts(textureDict), p1, _r)
end

--- NativeDB Introduced: v2189
function N_0x2818ff6638cb09de(p0)
	return _in(0x2818FF6638CB09DE, p0)
end

function N_0x282b6739644f4347(p0)
	return _in(0x282B6739644F4347, p0)
end

function N_0x283b6062a2c01e9b()
	return _in(0x283B6062A2C01E9B)
end

--- [`SET_VEHICLE_STEER_BIAS`](#\_0x42A8EC77D5150CBE) for peds, e.g., `_SET_PED_STEER_BIAS`.
function N_0x288df530c92dad6f(ped, value)
	return _in(0x288DF530C92DAD6F, ped, value)
end

--- F\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0x28b022a17b068a3a(p0, p1)
	return _in(0x28B022A17B068A3A, p0, p1)
end

function N_0x28ecb8ac2f607db2(p0, p1, p2, p3, p4)
	return _in(0x28ECB8AC2F607DB2, p0, p1, p2, p3, p4)
end

function N_0x2916a928514c9827()
	return _in(0x2916A928514C9827)
end

function N_0x293220da1b46cebc(p0, p1, p2)
	return _in(0x293220DA1B46CEBC, p0, p1, p2)
end

--- NativeDB Introduced: v1868
function N_0x29682e2ccf21e9b5(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
	return _in(0x29682E2CCF21E9B5, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
end

--- NativeDB Introduced: v323
function N_0x2a251aa48b2b46db()
	return _in(0x2A251AA48B2B46DB)
end

function N_0x2a5e0621dd815a9a(p0, p1, p2, p3)
	return _in(0x2A5E0621DD815A9A, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1290
function N_0x2a7cec72c3443bcc(p0, p1, p2)
	return _in(0x2A7CEC72C3443BCC, p0, p1, p2)
end

function N_0x2a893980e96b659a(p0)
	return _in(0x2A893980E96B659A, p0, _r)
end

--- NativeDB Introduced: v1493
function N_0x2a93c46aab1eacc9(p0, p1, p2, p3)
	return _in(0x2A93C46AAB1EACC9, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1493
function N_0x2acabed337622df2(p0)
	return _in(0x2ACABED337622DF2, _ts(p0))
end

function N_0x2afc2d19b50797f2(p0, p1, p2, p3)
	return _in(0x2AFC2D19B50797F2, p0, p1, p2, p3)
end

function N_0x2b1c623823db0d9d(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x2B1C623823DB0D9D, p0, p1, p2, p3, p4, p5, p6, _ri)
end

function N_0x2b40a97646381508(p0)
	return _in(0x2B40A97646381508, p0)
end

function N_0x2b51edbefc301339(p0, p1)
	return _in(0x2B51EDBEFC301339, p0, _ts(p1), _r)
end

function N_0x2b694afcf64e6994(ped, p1)
	return _in(0x2B694AFCF64E6994, ped, p1)
end

function N_0x2bf66d2e7414f686()
	return _in(0x2BF66D2E7414F686, _ri)
end

--- GET_BLIP_\*
-- Seems to always return 0 from what I can tell. I've tried a lot of different blip related natives and it always seems to return 0. Decompiled scripts always pass a blip handle as p0.
-- @param blip The blip to check.
-- @return Seems to always return 0 from what I can tell. I've tried a lot of different blip related natives and it always seems to return 0.
function N_0x2c173ae2bdb9385e(blip)
	return _in(0x2C173AE2BDB9385E, blip, _ri)
end

function N_0x2c1d8b3b19e517cc(p0, p1)
	return _in(0x2C1D8B3B19E517CC, p0, p1, _ri)
end

function N_0x2c42340f916c5930(p0)
	return _in(0x2C42340F916C5930, p0, _ri)
end

--- SET_VEHICLE_W* (next character is either H or I)
function N_0x2c4a1590abf43e8b(vehicle, p1)
	return _in(0x2C4A1590ABF43E8B, vehicle, p1)
end

function N_0x2c9f302398e13141(p0, p1)
	return _in(0x2C9F302398E13141, p0, p1)
end

function N_0x2cd90358f67d0aa8(p0)
	return _in(0x2CD90358F67D0AA8, p0)
end

function N_0x2ce9d95e4051aecd(p0)
	return _in(0x2CE9D95E4051AECD, p0)
end

--- Used in arcade games and Beam hack minigame in Doomsday Heist. For example, [Penetrator Arcade Game](https://streamable.com/8igrzw)
-- NativeDB Introduced: v1290
-- @param textureDict inside script_txds.rpf, browse it with OpenIV
-- @param textureName textureName
-- @param x x position must be between 0.0 and 1.0 (1.0 being the most right side of the screen)
-- @param y y position must be between 0.0 and 1.0 (1.0 being the most bottom side of the screen)
-- @param width width 0.0 - 1.0 is the reasonable amount generally
-- @param height height 0.0 - 1.0 is the reasonable amount generally
-- @param p6 almost always 0.0
-- @param red red color
-- @param green green color
-- @param blue blue color
-- @param alpha alpha
function N_0x2d3b147afad49de0(textureDict, textureName, x, y, width, height, p6, red, green, blue, alpha, p11)
	return _in(0x2D3B147AFAD49DE0, _ts(textureDict), _ts(textureName), x, y, width, height, p6, red, green, blue, alpha, p11)
end

function N_0x2d5dc831176d0114(p0)
	return _in(0x2D5DC831176D0114, p0, _r)
end

--- NativeDB Introduced: v1493
function N_0x2d7a9b577e72385e(p0)
	return _in(0x2D7A9B577E72385E, p0)
end

--- NativeDB Introduced: v323
function N_0x2d874d4ae612a65f()
	return _in(0x2D874D4AE612A65F, _ri)
end

function N_0x2da41ed6e1fcd7a5(p0, p1)
	return _in(0x2DA41ED6E1FCD7A5, p0, p1, _ri)
end

--- NativeDB Introduced: v463
function N_0x2dd39bf3e2f9c47f()
	return _in(0x2DD39BF3E2F9C47F, _ri)
end

function N_0x2de6c5e2e996f178(p0)
	return _in(0x2DE6C5E2E996F178, p0)
end

function N_0x2dfc81c9b9608549(ped, p1)
	return _in(0x2DFC81C9B9608549, ped, _ii(p1) --[[ may be optional ]], _r)
end

--- NativeDB Introduced: v1868
function N_0x2e0259babc27a327(p0)
	return _in(0x2E0259BABC27A327, p0)
end

function N_0x2e0bf682cc778d49(p0)
	return _in(0x2E0BF682CC778D49, p0, _r)
end

function N_0x2e22fefa0100275e()
	return _in(0x2E22FEFA0100275E, _r)
end

function N_0x2e4c123d1c8a710e(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x2E4C123D1C8A710E, p0, p1, p2, p3, p4, p5, p6, _ri)
end

function N_0x2e89990ddff670c3(p0, p1)
	return _in(0x2E89990DDFF670C3, p0, p1, _ri)
end

--- Appears to return whether the player is using the pause menu store. Can't be sure though.
function N_0x2f057596f2bd0061()
	return _in(0x2F057596F2BD0061, _r)
end

function N_0x2f074c904d85129e(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x2F074C904D85129E, p0, p1, p2, p3, p4, p5, p6)
end

function N_0x2f137b508de238f2(p0)
	return _in(0x2F137B508DE238F2, p0)
end

function N_0x2f3c3d9f50681de4(p0, p1)
	return _in(0x2F3C3D9F50681DE4, p0, p1)
end

function N_0x2f41a3bae005e5fa(p0, p1)
	return _in(0x2F41A3BAE005E5FA, p0, p1)
end

--- Used with radios:
-- void sub_cf383(auto _a0) {
-- if ((a_0)==1) {
-- if (MISC::IS_BIT_SET((g_240005._f1), 3)) {
-- PLAYER::_2F7CEB6520288061(0);
-- AUDIO::SET_AUDIO_FLAG("AllowRadioDuringSwitch", 0);
-- AUDIO::SET_MOBILE_PHONE_RADIO_STATE(0);
-- AUDIO::SET_AUDIO_FLAG("MobileRadioInGame", 0);
-- }
-- sub_cf3f6(1);
-- } else {
-- if (MISC::IS_BIT_SET((g_240005._f1), 3)) {
-- PLAYER::_2F7CEB6520288061(1);
-- AUDIO::SET_AUDIO_FLAG("AllowRadioDuringSwitch", 1);
-- AUDIO::SET_MOBILE_PHONE_RADIO_STATE(1);
-- AUDIO::SET_AUDIO_FLAG("MobileRadioInGame", 1);
-- }
-- sub_cf3f6(0);
-- }
-- }
-- SET_PLAYER_S*
function N_0x2f7ceb6520288061(p0)
	return _in(0x2F7CEB6520288061, p0)
end

function N_0x2f7f2b26dd3f18ee(p0, p1)
	return _in(0x2F7F2B26DD3F18EE, p0, p1)
end

function N_0x2fa2494b47fdd009(p0, p1)
	return _in(0x2FA2494B47FDD009, p0, p1)
end

--- NativeDB Introduced: v2189
function N_0x2fa3173480008493(p0, p1, p2, p3, p4)
	return _in(0x2FA3173480008493, p0, p1, p2, p3, p4)
end

function N_0x2fab6614ce22e196(p0, p1, p2, p3)
	return _in(0x2FAB6614CE22E196, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1290
function N_0x2fcb133ca50a49eb(p0)
	return _in(0x2FCB133CA50A49EB, p0, _ri)
end

function N_0x3001bef2feca3680()
	return _in(0x3001BEF2FECA3680, _r)
end

--- GET_CURRENT_*
-- NativeDB Introduced: v1493
function N_0x30432a0118736e00()
	return _in(0x30432A0118736E00, _ri)
end

function N_0x3044240d2e0fa842()
	return _in(0x3044240D2E0FA842, _r)
end

--- NativeDB Introduced: v2189
function N_0x30ca2ef91d15adf8()
	return _in(0x30CA2EF91D15ADF8, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0x31125fd509d9043f(p0)
	return _in(0x31125FD509D9043F, _ii(p0) --[[ may be optional ]])
end

--- NativeDB Introduced: v2189
function N_0x31574b1b41268673(p0, p1)
	return _in(0x31574B1B41268673, p0, p1)
end

--- NativeDB Introduced: v1493
function N_0x316db59cd14c1774(p0)
	return _in(0x316DB59CD14C1774, p0)
end

--- NativeDB Introduced: v1180
function N_0x31ba138f6304fb9f(p0, p1)
	return _in(0x31BA138F6304FB9F, p0, p1)
end

function N_0x31e90b8873a4cd3b(player, p1)
	return _in(0x31E90B8873A4CD3B, player, p1)
end

function N_0x31f924b53eaddf65(p0)
	return _in(0x31F924B53EADDF65, p0)
end

--- NativeDB Introduced: v323
function N_0x324c5aa411da7737(p0)
	return _in(0x324C5AA411DA7737, p0)
end

function N_0x32cac93c9de73d32()
	return _in(0x32CAC93C9DE73D32, _ri)
end

function N_0x32ebd154cb6b8b99(p0, p1, p2)
	return _in(0x32EBD154CB6B8B99, p0, p1, p2)
end

function N_0x32f34ff7f617643b(p0, p1)
	return _in(0x32F34FF7F617643B, p0, p1)
end

function N_0x336b3d200ab007cb(p0, p1, p2, p3, p4)
	return _in(0x336B3D200AB007CB, p0, p1, p2, p3, p4, _ri)
end

function N_0x33d47e85b476abcd(p0)
	return _in(0x33D47E85B476ABCD, p0, _r)
end

function N_0x33d72899e24c3365(p0, p1)
	return _in(0x33D72899E24C3365, p0, p1, _ri)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Added Parameter 2: char* p1
-- NativeDB Introduced: v323
function N_0x33df47cc0642061b()
	return _in(0x33DF47CC0642061B, _r)
end

function N_0x33e3c6c6f2f0b506(p0, p1, p2, p3)
	return _in(0x33E3C6C6F2F0B506, p0, p1, p2, p3)
end

function N_0x3441cad2f2231923(vehicle, p1)
	return _in(0x3441CAD2F2231923, vehicle, p1)
end

function N_0x346ef3ecaaab149e()
	return _in(0x346EF3ECAAAB149E)
end

function N_0x34770b9ce0e03b91(p0, p1)
	return _in(0x34770B9CE0E03B91, p0, _ii(p1) --[[ may be optional ]], _r)
end

function N_0x352e2b5cf420bf3b(p0, p1)
	return _in(0x352E2B5CF420BF3B, p0, p1)
end

function N_0x357b152ef96c30b6()
	return _in(0x357B152EF96C30B6, _ri)
end

--- NativeDB Introduced: v1290
function N_0x35a3cd97b2c0a6d2(blip)
	return _in(0x35A3CD97B2C0A6D2, blip)
end

function N_0x35bb21de06784373(p0, p1)
	return _in(0x35BB21DE06784373, p0, p1)
end

function N_0x35e0654f4bad7971(p0)
	return _in(0x35E0654F4BAD7971, p0)
end

function N_0x36391f397731595d(p0)
	return _in(0x36391F397731595D, p0, _ri)
end

function N_0x367ef5e2f439b4c6(p0)
	return _in(0x367EF5E2F439B4C6, p0)
end

--- ROPE_*
function N_0x36ccb9be67b970fd(ropeId, p1)
	return _in(0x36CCB9BE67B970FD, ropeId, p1)
end

--- Does nothing. It's a nullsub.
-- NativeDB Introduced: v1604
function N_0x36de109527a2c0c4(toggle)
	return _in(0x36DE109527A2C0C4, toggle)
end

function N_0x36f1b38855f2a8df(player)
	return _in(0x36F1B38855F2A8DF, player)
end

function N_0x36f32de87082343e(p0, p1)
	return _in(0x36F32DE87082343E, p0, p1)
end

function N_0x36f6626459d91457(p0)
	return _in(0x36F6626459D91457, p0)
end

--- I've had this return the player's ped handle sometimes, but also other random entities.
-- Whatever p0 is, it's at least not synced to other players.
-- At least not all the time, some p0 values actually output the same entity, (different handle of course, but same entity).
-- But another p0 value may return an entity for player x, but not for player y (it'll just return -1 even if the entity exists on both clients).
-- @param p0 unknown.
-- @return Returns an entity handle or -1, value changes based on p0's value.
function N_0x37d5f739fd494675(p0)
	return _in(0x37D5F739FD494675, p0, _ri)
end

--- NativeDB Introduced: v1290
function N_0x380b4968d1e09e55()
	return _in(0x380B4968D1E09E55)
end

function N_0x38491439b6ba7f7d(p0, p1)
	return _in(0x38491439B6BA7F7D, p0, p1, _rf)
end

function N_0x3855fb5eb2c5e8b2(p0)
	return _in(0x3855FB5EB2C5E8B2, p0, _ri)
end

--- NativeDB Introduced: v1734
function N_0x38b7c51ab1edc7d8(entity, toggle)
	return _in(0x38B7C51AB1EDC7D8, entity, toggle)
end

--- Sets profile setting 934
function N_0x38baaa5dd4c9d19f(value)
	return _in(0x38BAAA5DD4C9D19F, value)
end

--- NativeDB Introduced: v1493
function N_0x38c1cb1cb119a016(p0, p1)
	return _in(0x38C1CB1CB119A016, p0, p1)
end

function N_0x393bd2275ceb7793()
	return _in(0x393BD2275CEB7793, _ri)
end

--- NativeDB Introduced: v1868
function N_0x39455bf4f4f55186(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)
	return _in(0x39455BF4F4F55186, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, _ri)
end

function N_0x394cd08e31313c28()
	return _in(0x394CD08E31313C28)
end

function N_0x397baa01068baa96()
	return _in(0x397BAA01068BAA96, _ri)
end

function N_0x39917e1b4cb0f911(p0)
	return _in(0x39917E1B4CB0F911, p0)
end

function N_0x39a5fb7eaf150840(p0, p1)
	return _in(0x39A5FB7EAF150840, p0, p1)
end

function N_0x3a48ab4445d499be()
	return _in(0x3A48AB4445D499BE, _ri)
end

--- NativeDB Removed Parameter 3: int R
-- NativeDB Removed Parameter 4: int G
-- NativeDB Removed Parameter 5: int B
-- NativeDB Introduced: v757
function N_0x3b2fd68db5f8331c(object, toggle, R, G, B)
	return _in(0x3B2FD68DB5F8331C, object, toggle, R, G, B)
end
SetObjectColour = N_0x3b2fd68db5f8331c

--- Usually used alongside other vehicle door natives.
function N_0x3b458ddb57038f08(vehicle, doorIndex, toggle)
	return _in(0x3B458DDB57038F08, vehicle, doorIndex, toggle)
end

--- NativeDB Introduced: v1604
function N_0x3bd770d281982db5(p0, p1)
	return _in(0x3BD770D281982DB5, p0, p1, _ri)
end

--- Sets some voice chat related value.
-- NETWORK_SET_*
function N_0x3c5c1e2c2ff814b1(toggle)
	return _in(0x3C5C1E2C2FF814B1, toggle)
end

--- ```
-- NativeDB Introduced: v1180
-- ```
-- Sets the given checkpoint target to the new coords
-- @param checkpointHandle the handle of a created checkpoint
function N_0x3c788e7f6438754d(checkpointHandle, x, y, z)
	return _in(0x3C788E7F6438754D, checkpointHandle, x, y, z)
end

function N_0x3de3aa516fb126a4(p0)
	return _in(0x3DE3AA516FB126A4, p0)
end

--- IS_*
function N_0x3e38e28a1d80ddf6(ped)
	return _in(0x3E38E28A1D80DDF6, ped, _r)
end

function N_0x3e9679c1dfcf422c(p0, p1)
	return _in(0x3E9679C1DFCF422C, p0, p1)
end

function N_0x3ebeac6c3f81f6bd(p0)
	return _in(0x3EBEAC6C3F81F6BD, p0)
end

--- NETWORK_HAS_*
function N_0x3f9990bf5f22759c(p0)
	return _in(0x3F9990BF5F22759C, _ii(p0) --[[ may be optional ]], _r)
end

function N_0x3fa36981311fa4ff(netId, state)
	return _in(0x3FA36981311FA4FF, netId, state)
end

--- nullsub, doesn't do anything
-- ```
-- NativeDB Introduced: v1868
-- ```
function N_0x3fc795691834481d(p0, p1)
	return _in(0x3FC795691834481D, p0, p1)
end

function N_0x4008edf7d6e48175(p0)
	return _in(0x4008EDF7D6E48175, p0)
end

--- Usage: INTERIOR::_0x405DC2AEF6AF95B9(INTERIOR::GET_KEY_FOR_ENTITY_IN_ROOM(PLAYER::PLAYER_PED_ID()));
function N_0x405dc2aef6af95b9(roomHashKey)
	return _in(0x405DC2AEF6AF95B9, _ch(roomHashKey))
end

function N_0x40763ea7b9b783e7(p0, p1, p2)
	return _in(0x40763EA7B9B783E7, _ts(p0), p1, p2, _ri)
end

--- NativeDB Introduced: v1493
function N_0x407dc5e97db1a4d3(p0, p1)
	return _in(0x407DC5E97DB1A4D3, p0, p1)
end

function N_0x4128464231e3ca0b(p0, p1, p2, p3)
	return _in(0x4128464231E3CA0B, p0, p1, p2, p3)
end

function N_0x41290b40fa63e6da(p0)
	return _in(0x41290B40FA63E6DA, p0)
end

function N_0x412f1364fa066cfb(p0)
	return _in(0x412F1364FA066CFB, p0, _ri)
end

function N_0x41350b4fc28e3941(p0)
	return _in(0x41350B4FC28E3941, p0)
end

function N_0x419615486bbf1956(p0)
	return _in(0x419615486BBF1956, p0)
end

function N_0x4237e822315d8ba9()
	return _in(0x4237E822315D8BA9, _r)
end

function N_0x425aecf167663f48(ped, p1)
	return _in(0x425AECF167663F48, ped, p1)
end

function N_0x4282e08174868be3()
	return _in(0x4282E08174868BE3, _ri)
end

--- SET_*
function N_0x428ad3e26c8d9eb0(vehicle, x, y, z, p4)
	return _in(0x428AD3E26C8D9EB0, vehicle, x, y, z, p4)
end

--- NativeDB Introduced: v1180
function N_0x430a7631a84c9be7(p0)
	return _in(0x430A7631A84C9BE7, p0)
end

function N_0x4348bfda56023a2f(p0, p1)
	return _in(0x4348BFDA56023A2F, p0, p1, _ri)
end

function N_0x43fa0dfc5df87815(vehicle, p1)
	return _in(0x43FA0DFC5DF87815, vehicle, p1)
end

--- NativeDB Introduced: v1290
function N_0x43fa7cbe20dab219(p0)
	return _in(0x43FA7CBE20DAB219, p0)
end

--- CLEAR_VEHICLE_*
function N_0x4419966c9936071a(vehicle)
	return _in(0x4419966C9936071A, vehicle)
end

--- related to:
-- NETWORK_BAIL
-- NETWORK_BAIL_TRANSITION
-- NETWORK_JOIN_GROUP_ACTIVITY
-- NETWORK_JOIN_TRANSITION
-- NETWORK_LAUNCH_TRANSITION
-- NETWORK_SESSION_HOST
-- NETWORK_SESSION_HOST_CLOSED
-- NETWORK_SESSION_HOST_FRIENDS_ONLY
-- NETWORK_SESSION_HOST_SINGLE_PLAYER
-- NETWORK_SESSION_VOICE_LEAVE
function N_0x444c4525ece0a4b9()
	return _in(0x444C4525ECE0A4B9)
end

function N_0x44919cc079bb60bf(p0)
	return _in(0x44919CC079BB60BF, p0)
end

function N_0x44aca259d67651db(p1)
	return _in(0x44ACA259D67651DB, _i, p1)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Introduced: v323
function N_0x450819d8cf90c416()
	return _in(0x450819D8CF90C416, _r)
end

function N_0x45a83257ed02d9bc()
	return _in(0x45A83257ED02D9BC)
end

function N_0x45e816772e93a9db()
	return _in(0x45E816772E93A9DB, _ri)
end

--- NETWORK_A\*
-- Similar structure as NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE but it includes this time a hash.
-- In casino_slots it is used one time in a synced scene involving a ped and the slot machine?
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0x45f35c0edc33b03b(netScene, modelHash, x, y, z, p5, p6, p7, p8, flags)
	return _in(0x45F35C0EDC33B03B, netScene, _ch(modelHash), x, y, z, p5, _ts(p6), p7, p8, flags)
end

--- This has been found in use in the decompiled files.
function N_0x4669b3ed80f24b4e(player)
	return _in(0x4669B3ED80F24B4E, player)
end

function N_0x469f2ecdec046337(p0)
	return _in(0x469F2ECDEC046337, p0)
end

--- Checks if the specified unknown flag is set in the ped's model.
-- The engine itself seems to exclusively check for flags 1 and 4 (Might be inlined code of the check that checks for other flags).
-- Game scripts exclusively check for flags 1 and 4.
function N_0x46b05bcae43856b0(ped, flag)
	return _in(0x46B05BCAE43856B0, ped, flag, _r)
end

function N_0x46d1a61a21f566fc(p0)
	return _in(0x46D1A61A21F566FC, p0)
end

function N_0x46f3add1e2d5baf2(p0, p1)
	return _in(0x46F3ADD1E2D5BAF2, p0, p1)
end

function N_0x472397322e92a856()
	return _in(0x472397322E92A856)
end

function N_0x4737980e8a283806(p0, p1)
	return _in(0x4737980E8A283806, p0, _ii(p1) --[[ may be optional ]], _r)
end

function N_0x4811bbac21c5fcd5(p0)
	return _in(0x4811BBAC21C5FCD5, p0)
end

function N_0x483aca1176ca93f1()
	return _in(0x483ACA1176CA93F1)
end

function N_0x48621c9fca3ebd28(p0)
	return _in(0x48621C9FCA3EBD28, p0)
end

function N_0x487912fd248efddf(p0, p1)
	return _in(0x487912FD248EFDDF, p0, p1, _r)
end

--- A*
function N_0x4879e4fe39074cdf()
	return _in(0x4879E4FE39074CDF, _r)
end

--- Only found 3 times in decompiled scripts. Not a whole lot to go off of.
-- MISC::_48F069265A0E4BEC(a_0, "Movie_Name_For_This_Player");
-- MISC::_48F069265A0E4BEC(&a_0._fB, "Ringtone_For_This_Player");
-- MISC::_48F069265A0E4BEC(&a_0._f1EC4._f12[v_A/*6*/], &v_13); // where v_13 is "MPATMLOGSCRS0" thru "MPATMLOGSCRS15"
function N_0x48f069265a0e4bec(name)
	return _in(0x48F069265A0E4BEC, _i, _ts(name))
end

--- Does nothing (essentially a nullsub).
function N_0x490861b88f4fd846(p0)
	return _in(0x490861B88F4FD846, p0)
end

--- SET_PED_ALLOW*
function N_0x49e50bdb8ba4dab2(ped, toggle)
	return _in(0x49E50BDB8BA4DAB2, ped, toggle)
end

function N_0x4a7d6e727f941747(p0)
	return _in(0x4A7D6E727F941747, _ii(p0) --[[ may be optional ]], _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0x4a9fde3a5a6d0437(toggle)
	return _in(0x4A9FDE3A5A6D0437, toggle)
end

--- NativeDB Introduced: v1868
function N_0x4ad280eb48b2d8e6(vehicle, togle)
	return _in(0x4AD280EB48B2D8E6, vehicle, togle)
end

function N_0x4ad490ae1536933b(p0, p1)
	return _in(0x4AD490AE1536933B, p0, p1, _ri)
end

function N_0x4af92acd3141d96c()
	return _in(0x4AF92ACD3141D96C)
end

--- NativeDB Introduced: v1868
function N_0x4aff7e02e485e92b()
	return _in(0x4AFF7E02E485E92B)
end

function N_0x4b5b620c9b59ed34(p0, p1)
	return _in(0x4B5B620C9B59ED34, p0, p1)
end

--- NativeDB Introduced: v1180
function N_0x4c134b4df76025d0(p0, p1)
	return _in(0x4C134B4DF76025D0, p0, p1)
end

--- Only used once in the entire game scripts.
-- Does not actually return anything.
function N_0x4c2330e61d3deb56(interior)
	return _in(0x4C2330E61D3DEB56, interior, _ri)
end

function N_0x4c2a9fdc22377075()
	return _in(0x4C2A9FDC22377075)
end

--- NativeDB Introduced: v1868
function N_0x4c3b75694f7e0d9c(p0, p1, p2)
	return _in(0x4C3B75694F7E0D9C, p0, p1, p2)
end

function N_0x4c89fe2bdeb3f169()
	return _in(0x4C89FE2BDEB3F169, _ri)
end

--- NativeDB Introduced: v2060
function N_0x4c9034162368e206()
	return _in(0x4C9034162368E206, _ri)
end

--- This function is hard-coded to always return 1.
function N_0x4cebc1ed31e8925e(cutsceneName)
	return _in(0x4CEBC1ED31E8925E, _ts(cutsceneName), _r)
end

function N_0x4d02279c83be69fe()
	return _in(0x4D02279C83BE69FE, _ri)
end

--- Something like flush_all_scripts
-- Most of time comes after NETWORK_END_TUTORIAL_SESSION() or before TERMINATE_THIS_THREAD()
function N_0x4d953df78ebf8158()
	return _in(0x4D953DF78EBF8158)
end

function N_0x4d9d109f63fee1d4(p0, p1)
	return _in(0x4D9D109F63FEE1D4, p0, p1)
end

--- NativeDB Introduced: v2189
function N_0x4dc416f246a41fc8(p0, p1, p2, p3, p4)
	return _in(0x4DC416F246A41FC8, p0, p1, p2, p3, p4)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0x4dcdf92bf64236cd(p0, p1)
	return _in(0x4DCDF92BF64236CD, _ts(p0), _ts(p1))
end

function N_0x4df7cfff471a7fb1(p0)
	return _in(0x4DF7CFFF471A7FB1, p0, _r)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0x4e52e752c76e7e7a(p0)
	return _in(0x4E52E752C76E7E7A, p0)
end

function N_0x4e74e62e0a97e901(vehicle, p1)
	return _in(0x4E74E62E0A97E901, vehicle, p1)
end

--- NativeDB Introduced: v323
function N_0x4ed9c8d6da297639()
	return _in(0x4ED9C8D6DA297639, _ri)
end

--- NativeDB Introduced: v1290
function N_0x4fcd976da686580c(p0)
	return _in(0x4FCD976DA686580C, p0, _ri)
end

--- NativeDB Introduced: v1868
function N_0x4fcdbd3f0a813c25(p0, p1)
	return _in(0x4FCDBD3F0A813C25, p0, p1)
end

--- SET_PED_\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0x50276ef8172f5f12(ped)
	return _in(0x50276EF8172F5F12, ped)
end

function N_0x5068f488ddb54dd8()
	return _in(0x5068F488DDB54DD8, _ri)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Added Parameter 2: float* p1
-- NativeDB Introduced: v323
function N_0x50a8a36201dbf83e()
	return _in(0x50A8A36201DBF83E, _r)
end

--- GET_*
function N_0x511f1a683387c7e2(ped)
	return _in(0x511F1A683387C7E2, ped, _ri)
end

function N_0x51db102f4a3ba5e0(toggle)
	return _in(0x51DB102F4A3BA5E0, toggle)
end

--- Usex in decompiled scripts in combination with [`_GET_VEHICLE_SUSPENSION_BOUNDS`](#\_0xDF7E3EEB29642C38).
-- NativeDB Introduced: v1180
-- ```
-- // Example from fm_bj_race_controller.c
-- if (!VEHICLE::_0x51F30DB60626A20E(uParam0->f_26, uParam0->f_12.f_3, uParam0->f_12, 2, 1) && !func_282(uParam0->f_6))
-- {
-- VEHICLE::_GET_VEHICLE_SUSPENSION_BOUNDS(*uParam0, &vVar15, &uVar16);
-- VEHICLE::_GET_VEHICLE_SUSPENSION_BOUNDS(uParam0->f_26, &vVar17, &uVar18);
-- fVar19 = SYSTEM::VDIST2(0f, 0f, vVar15.z, 0f, 0f, vVar17.z);
-- uParam0->f_12.f_3.f_2 = (uParam0->f_12.f_3.f_2 + fVar19);
-- if (!VEHICLE::_0x51F30DB60626A20E(uParam0->f_26, uParam0->f_12.f_3, uParam0->f_12, 2, 1))
-- {
-- uParam0->f_12.f_3 = { uParam0->f_6 };
-- uParam0->f_12 = { uParam0->f_9 };
-- }
-- }
-- ```
-- @param vehicle the target vehicle
-- @param x vehicle location
-- @param y vehicle location
-- @param z vehicle location
-- @param rotX some kind of vehicle rotation value
-- @param rotY some kind of vehicle rotation value
-- @param rotZ some kind of vehicle rotation value
-- @param p7 usually 2
-- @param p8 usually 1
-- @return A BOOL value, purpose unknown.
function N_0x51f30db60626a20e(vehicle, x, y, z, rotX, rotY, rotZ, p7, p8)
	return _in(0x51F30DB60626A20E, vehicle, x, y, z, rotX, rotY, rotZ, p7, p8, _r)
end

function N_0x5324a0e3e4ce3570(p0, p1)
	return _in(0x5324A0E3E4CE3570, p0, p1, _i, _i, _r)
end

function N_0x53c10c8bd774f2c9()
	return _in(0x53C10C8BD774F2C9, _ri)
end

--- NativeDB Introduced: v1868
function N_0x53c31853ec9531ff(p0)
	return _in(0x53C31853EC9531FF, p0)
end

function N_0x53cae13e9b426993(p0)
	return _in(0x53CAE13E9B426993, p0)
end

--- Related to [`_CLEAR_VEHICLE_TASKS`](#\_0xDBBC7A2432524127) and requires more research (e.g., \_CLEAR_VEHICLE_SECONDARY_TASKS).
-- ```
-- CLEAR_*
-- NativeDB Introduced: v1290
-- ```
-- @param vehicle The vehicle to have tasks cleared
function N_0x53ddc75bc3ac0a90(vehicle)
	return _in(0x53DDC75BC3AC0A90, vehicle)
end

function N_0x5407b7288d0478b7(p0)
	return _in(0x5407B7288D0478B7, p0, _ri)
end

function N_0x547237aa71ab44de(p0)
	return _in(0x547237AA71AB44DE, p0)
end

function N_0x54e22ea2c1956a8d(p0)
	return _in(0x54E22EA2C1956A8D, p0)
end

--- From the scripts:
-- MISC::_54F157E0336A3822(sub_aa49(a_0), "ForcedStopDirection", v_E);
-- Related to tennis mode.
-- SET_*
function N_0x54f157e0336a3822(ped, p1, p2)
	return _in(0x54F157E0336A3822, ped, _ts(p1), p2)
end

--- Name between DISABLE_ALL_CONTROL_ACTIONS and DISABLE_CONTROL_ACTION
function N_0x5501b7a5cdb79d37(player)
	return _in(0x5501B7A5CDB79D37, player)
end

--- Sets profile setting 935
function N_0x55384438fc55ad8e(value)
	return _in(0x55384438FC55AD8E, value)
end

function N_0x5539c3ebf104a53a(p0)
	return _in(0x5539C3EBF104A53A, p0)
end

--- NativeDB Introduced: v1868
function N_0x5574637681911fda(p0, p1, p2, p3)
	return _in(0x5574637681911FDA, p0, p1, p2, p3)
end

function N_0x55a1e095db052fa5(p0, p1)
	return _in(0x55A1E095DB052FA5, p0, p1)
end

function N_0x55a8becaf28a4eb7()
	return _in(0x55A8BECAF28A4EB7, _ri)
end

--- NativeDB Introduced: v1868
function N_0x55ecf4d13d9903b0(p0, p1, p2, p3)
	return _in(0x55ECF4D13D9903B0, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1180
function N_0x55f5a5f07134de60()
	return _in(0x55F5A5F07134DE60)
end

function N_0x55fcc0c390620314(player1, player2, toggle)
	return _in(0x55FCC0C390620314, player1, player2, toggle)
end

--- NativeDB Introduced: v1604
function N_0x560b423d73015e77(p0)
	return _in(0x560B423D73015E77, p0, _ri)
end

--- STAT_SET_*
function N_0x5688585e6d563cd8(p0)
	return _in(0x5688585E6D563CD8, p0)
end

function N_0x56eb5e94318d3fb6(vehicle, p1)
	return _in(0x56EB5E94318D3FB6, vehicle, p1)
end

function N_0x577599cced639ca2(p0)
	return _in(0x577599CCED639CA2, p0)
end

--- FORCE_*
function N_0x57d760d55f54e071(p0)
	return _in(0x57D760D55F54E071, p0)
end

function N_0x583df8e3d4afbd98()
	return _in(0x583DF8E3D4AFBD98, _ri)
end

function N_0x5845066d8a1ea7f7(vehicle, x, y, z, p4)
	return _in(0x5845066D8A1EA7F7, vehicle, x, y, z, p4)
end

function N_0x584770794d758c18(p0, p1)
	return _in(0x584770794D758C18, p0, _ii(p1) --[[ may be optional ]], _r)
end

function N_0x58bb377bec7cd5f4(p0, p1)
	return _in(0x58BB377BEC7CD5F4, p0, p1)
end

--- IS_*
function N_0x59328eb08c5ceb2b()
	return _in(0x59328EB08C5CEB2B, _r)
end

function N_0x593feae1f73392d4()
	return _in(0x593FEAE1F73392D4, _ri)
end

function N_0x59424bd75174c9b1()
	return _in(0x59424BD75174C9B1)
end

--- NativeDB Introduced: v1493
function N_0x59c3757b3b7408e8(vehicle, toggle, p2)
	return _in(0x59C3757B3B7408E8, vehicle, toggle, p2)
end

function N_0x59d421683d31835a(p0)
	return _in(0x59D421683D31835A, p0)
end

function N_0x5a34cd9c3c5bec44(p0)
	return _in(0x5A34CD9C3C5BEC44, p0, _r)
end

function N_0x5a43c76f7fc7ba5f()
	return _in(0x5A43C76F7FC7BA5F)
end

function N_0x5a556b229a169402()
	return _in(0x5A556B229A169402, _r)
end

function N_0x5a7f62fda59759bd()
	return _in(0x5A7F62FDA59759BD)
end

--- Disables some other rendering (internal)
function N_0x5ad3932daeb1e5d3()
	return _in(0x5AD3932DAEB1E5D3)
end

function N_0x5b0316762afd4a64()
	return _in(0x5B0316762AFD4A64, _ri)
end

function N_0x5b1f2e327b6b6fe1()
	return _in(0x5B1F2E327B6B6FE1, _ri)
end

function N_0x5b6010b3cbc29095(p0, p1)
	return _in(0x5B6010B3CBC29095, p0, p1)
end

function N_0x5b73c77d9eb66e24(p0)
	return _in(0x5B73C77D9EB66E24, p0)
end

function N_0x5b9853296731e88d(p0, p1, p2, p3, p4, p5)
	return _in(0x5B9853296731E88D, p0, p1, p2, p3, p4, p5)
end

function N_0x5ba68a0840d546ac(p0, p1)
	return _in(0x5BA68A0840D546AC, p0, p1, _ri)
end

--- NativeDB Introduced: v1604
function N_0x5bbcf35bf6e456f7(toggle)
	return _in(0x5BBCF35BF6E456F7, toggle)
end

function N_0x5bd5f255321c4aaf(p0)
	return _in(0x5BD5F255321C4AAF, p0, _ri)
end

--- NativeDB Introduced: v1868
function N_0x5bf29846c6527c54(p0, p1, p2, p3, p4)
	return _in(0x5BF29846C6527C54, p0, p1, p2, p3, p4)
end

--- Only called once in the scripts.
-- Related to weapon objects.
function N_0x5c3b791d580e0bc2(entity, p1)
	return _in(0x5C3B791D580E0BC2, entity, p1)
end

function N_0x5c41e6babc9e2112(p0)
	return _in(0x5C41E6BABC9E2112, p0)
end

--- W*
function N_0x5c48a1d6e3b33179(cam)
	return _in(0x5C48A1D6E3B33179, cam, _r)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0x5c497525f803486b()
	return _in(0x5C497525F803486B)
end

function N_0x5c4ebffa98bdb41c(p0)
	return _in(0x5C4EBFFA98BDB41C, p0, _ri)
end

--- NativeDB Introduced: v1868
function N_0x5cdaed54b34b0ed0(p0)
	return _in(0x5CDAED54B34B0ED0, p0)
end

function N_0x5d2bfaab8d956e0e()
	return _in(0x5D2BFAAB8D956E0E)
end

--- p1: 0..16
-- ```
-- NativeDB Introduced: v2060
-- ```
function N_0x5d96cfb59da076a0(vehicle, p1, p2)
	return _in(0x5D96CFB59DA076A0, vehicle, p1, p2)
end

function N_0x5dbf05db5926d089(p0)
	return _in(0x5DBF05DB5926D089, p0)
end

function N_0x5debd9c4dc995692()
	return _in(0x5DEBD9C4DC995692)
end

function N_0x5e3aa4ca2b6fb0ee(p0)
	return _in(0x5E3AA4CA2B6FB0EE, p0)
end

function N_0x5e569ec46ec21cae(vehicle, toggle)
	return _in(0x5E569EC46EC21CAE, vehicle, toggle)
end

--- example from completionpercentage_controller.ysc.c4
-- if (STATS::_5EAD2BF6484852E4()) {
-- MISC::SET_BIT(g_17b95._f20df._ff10, 15);
-- STATS::_11FF1C80276097ED(0xe9ec4dd1, 200, 0);
-- }
function N_0x5ead2bf6484852e4()
	return _in(0x5EAD2BF6484852E4, _r)
end

function N_0x5ecd378ee64450ab(p0)
	return _in(0x5ECD378EE64450AB, p0)
end

function N_0x5edef0cf8c1dab3c()
	return _in(0x5EDEF0CF8C1DAB3C, _r)
end

--- Sets some health value. Looks like it's used for helis.
function N_0x5ee5632f47ae9695(vehicle, health)
	return _in(0x5EE5632F47AE9695, vehicle, health)
end

function N_0x5f456788b05faeac(p0, p1, p2)
	return _in(0x5F456788B05FAEAC, p0, p1, p2)
end

--- DISABLE_*
function N_0x5f6df3d92271e8a1(toggle)
	return _in(0x5F6DF3D92271E8A1, toggle)
end
SetParticleFxBloodScale = N_0x5f6df3d92271e8a1

--- Appears once in "re_dealgonewrong"
function N_0x5fc472c501ccadb3(player)
	return _in(0x5FC472C501CCADB3, player, _r)
end

function N_0x5ff2c33b13a02a11(p0)
	return _in(0x5FF2C33B13A02A11, p0)
end

function N_0x600f8cb31c7aab6e(p0)
	return _in(0x600F8CB31C7AAB6E, p0)
end

--- Returns true if profile setting 901 is set to true and sets it to false.
-- NETWORK_C*
function N_0x60edd13eb3ac1ff3()
	return _in(0x60EDD13EB3AC1FF3, _r)
end

function N_0x60eedc12af66e846(p0)
	return _in(0x60EEDC12AF66E846, p0)
end

--- NativeDB Introduced: v2189
function N_0x6100b3cefd43452e(p0)
	return _in(0x6100B3CEFD43452E, p0)
end

function N_0x613f125ba3bd2eb9()
	return _in(0x613F125BA3BD2EB9, _r)
end

--- Unknown. Called after creating a checkpoint (type: 51) in the creators.
function N_0x615d3925e87a3b26(checkpoint)
	return _in(0x615D3925E87A3B26, checkpoint)
end

function N_0x61631f5df50d1c34(p0)
	return _in(0x61631F5DF50D1C34, p0)
end

--- NETWORK_GET_NUM_*
function N_0x617f49c2668e6155()
	return _in(0x617F49C2668E6155, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0x61f95e5bb3e0a8c6(p0)
	return _in(0x61F95E5BB3E0A8C6, p0)
end

function N_0x62374889a4d59f72()
	return _in(0x62374889A4D59F72)
end

function N_0x62454a641b41f3c5(p0)
	return _in(0x62454A641B41F3C5, p0)
end

function N_0x629526aba383bcaa()
	return _in(0x629526ABA383BCAA)
end

function N_0x62e849b7eb28e770(p0)
	return _in(0x62E849B7EB28E770, p0)
end

function N_0x62ecfcfdee7885d6()
	return _in(0x62ECFCFDEE7885D6)
end

function N_0x63b406d7884bfa95()
	return _in(0x63B406D7884BFA95, _ri)
end

function N_0x63eb2b972a218cac()
	return _in(0x63EB2B972A218CAC)
end

--- NativeDB Introduced: v1365
function N_0x63ecf581bc70e363(p0, p1)
	return _in(0x63ECF581BC70E363, p0, p1)
end

function N_0x641f272b52e2f0f8(p0, p1)
	return _in(0x641F272B52E2F0F8, p0, p1)
end

function N_0x6483c25849031c4f(p0, p1, p2, p3)
	return _in(0x6483C25849031C4F, p0, p1, p2, _ii(p3) --[[ may be optional ]])
end

function N_0x649c97d52332341a(p0)
	return _in(0x649C97D52332341A, p0)
end

--- NETWORK_GET_*
function N_0x64d779659bc37b19(entity)
	return _in(0x64D779659BC37B19, entity, _rv)
end

--- Hardcoded to return false.
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0x64e5c4cc82847b73()
	return _in(0x64E5C4CC82847B73, _r)
end

function N_0x6501129c9e0ffa05(p0, p1)
	return _in(0x6501129C9E0FFA05, p0, p1)
end

--- NativeDB Introduced: v1493
function N_0x65482bfd0923c8a1(p0, p1, p2, p3, p4, p5)
	return _in(0x65482BFD0923C8A1, p0, p1, p2, p3, p4, p5)
end

function N_0x6551b1f7f6cd46ea(p0)
	return _in(0x6551B1F7F6CD46EA, p0)
end

--- NativeDB Introduced: v1290
function N_0x659f9d71f52843f8(p0, p1)
	return _in(0x659F9D71F52843F8, p0, p1)
end

function N_0x65b080555ea48149(p0)
	return _in(0x65B080555EA48149, p0)
end

--- Sets GtaThread+0x14A
-- SET_S*
function N_0x65d2ebb47e1cec21(toggle)
	return _in(0x65D2EBB47E1CEC21, toggle)
end

--- SET_CAM_*
function N_0x661b5c8654add825(cam, p1)
	return _in(0x661B5C8654ADD825, cam, p1)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0x66972397e0757e7a(p0, p1, p2)
	return _in(0x66972397E0757E7A, p0, p1, p2)
end

function N_0x66a49d021870fe88()
	return _in(0x66A49D021870FE88)
end

function N_0x66e3aaface2d1eb8(p0, p1, p2)
	return _in(0x66E3AAFACE2D1EB8, p0, p1, p2)
end

function N_0x66e7cb63c97b7d20()
	return _in(0x66E7CB63C97B7D20, _ri)
end

function N_0x675721c9f644d161()
	return _in(0x675721C9F644D161)
end

function N_0x675d19c6067cae08(p0, p1, p2, p3)
	return _in(0x675D19C6067CAE08, p0, p1, p2, p3)
end

function N_0x678f86d8fc040bdb(p0)
	return _in(0x678F86D8FC040BDB, p0)
end

function N_0x67fc09bc554a75e5()
	return _in(0x67FC09BC554A75E5, _ri)
end

function N_0x68103e2247887242()
	return _in(0x68103E2247887242)
end

--- NativeDB Introduced: v1180
function N_0x68b562e124cc0aef(p0, p1)
	return _in(0x68B562E124CC0AEF, p0, p1)
end

--- IS_*
function N_0x690a61a6d13583f6(player)
	return _in(0x690A61A6D13583F6, player, _r)
end

--- NativeDB Introduced: v2372
function N_0x690b76bd2763e068()
	return _in(0x690B76BD2763E068, _ri)
end

function N_0x692d58df40657e8c(p0, p1, p2, p4, p5)
	return _in(0x692D58DF40657E8C, p0, p1, p2, _i, p4, p5, _r)
end

function N_0x693478acbd7f18e7()
	return _in(0x693478ACBD7F18E7)
end

--- SET_ENTITY_R*
function N_0x694e00132f2823ed(entity, toggle)
	return _in(0x694E00132F2823ED, entity, toggle)
end

function N_0x699e4a5c8c893a18(p0, p1, p2)
	return _in(0x699E4A5C8C893A18, p0, _ts(p1), _ii(p2) --[[ may be optional ]], _r)
end

function N_0x69ef772b192614c1(p0, p1, p2, p3)
	return _in(0x69EF772B192614C1, p0, p1, p2, p3)
end

--- SET_F*
function N_0x6a51f78772175a51(toggle)
	return _in(0x6A51F78772175A51, toggle)
end

--- Sets some voice chat related value.
-- NETWORK_SET_*
function N_0x6a5d89d7769a40d8(toggle)
	return _in(0x6A5D89D7769A40D8, toggle)
end

function N_0x6a60e43998228229(p0)
	return _in(0x6A60E43998228229, p0)
end

--- NativeDB Introduced: v2060
function N_0x6a7f19756f1a9016()
	return _in(0x6A7F19756F1A9016, _r)
end

--- NativeDB Introduced: v1604
function N_0x6a973569ba094650(vehicle, p1)
	return _in(0x6A973569BA094650, vehicle, p1)
end

--- NativeDB Introduced: v2189
function N_0x6ad0bd5e087866cb(p0)
	return _in(0x6AD0BD5E087866CB, p0)
end

--- NativeDB Introduced: v1180
function N_0x6b7e4fb50d5f3d65(p0, p1, p2, p3, p4)
	return _in(0x6B7E4FB50D5F3D65, p0, p1, p2, p3, p4)
end

function N_0x6bc0acd0673acebe(p0, p1, p2)
	return _in(0x6BC0ACD0673ACEBE, p0, p1, p2)
end

function N_0x6bccf9948492fd85(p0, p1, p2, p3, p4)
	return _in(0x6BCCF9948492FD85, p0, p1, p2, p3, p4)
end

function N_0x6bfb12ce158e3dd4(p0)
	return _in(0x6BFB12CE158E3DD4, p0, _r)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0x6bff5f84102df80a(player)
	return _in(0x6BFF5F84102DF80A, player)
end

function N_0x6cd79468a1e595c6(padIndex)
	return _in(0x6CD79468A1E595C6, padIndex, _r)
end

function N_0x6ce50e47f5543d0c()
	return _in(0x6CE50E47F5543D0C)
end

--- Returns some sort of index/offset for props.
-- Needs \_GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = true and componentId = -1 first, returns -1 otherwise.
-- ```
-- NativeDB Introduced: v2189
-- ```
function N_0x6cebe002e58dee97(componentHash)
	return _in(0x6CEBE002E58DEE97, _ch(componentHash), _ri)
end

--- Possible values:
-- act_cinema
-- am_mp_carwash_launch
-- am_mp_carwash_control
-- am_mp_property_ext
-- chop
-- fairgroundHub
-- launcher_BasejumpHeli
-- launcher_BasejumpPack
-- launcher_CarWash
-- launcher_golf
-- launcher_Hunting_Ambient
-- launcher_MrsPhilips
-- launcher_OffroadRacing
-- launcher_pilotschool
-- launcher_Racing
-- launcher_rampage
-- launcher_rampage
-- launcher_range
-- launcher_stunts
-- launcher_stunts
-- launcher_tennis
-- launcher_Tonya
-- launcher_Triathlon
-- launcher_Yoga
-- ob_mp_bed_low
-- ob_mp_bed_med
function N_0x6d6840cee8845831(action)
	return _in(0x6D6840CEE8845831, _ts(action))
end

function N_0x6dee77aff8c21bd1()
	return _in(0x6DEE77AFF8C21BD1, _i, _i, _r)
end

function N_0x6e0a5253375c4584()
	return _in(0x6E0A5253375C4584, _ri)
end

function N_0x6e4361ff3e8cd7ca(p0)
	return _in(0x6E4361FF3E8CD7CA, p0, _ri)
end

--- Looks like a cousin of above function _6D6840CEE8845831 as it was found among them. Must be similar
-- Here are possible values of argument -
-- "ob_tv"
-- "launcher_Darts"
function N_0x6e91b04e08773030(action)
	return _in(0x6E91B04E08773030, _ts(action))
end

function N_0x6eaaefc76acc311f(p0)
	return _in(0x6EAAEFC76ACC311F, p0, _ri)
end

function N_0x6ebfb22d646ffc18(vehicle, p1)
	return _in(0x6EBFB22D646FFC18, vehicle, p1)
end

--- Sets bit 3 in GtaThread+0x150
-- SET_T*
function N_0x6f2135b6129620c1(toggle)
	return _in(0x6F2135B6129620C1, toggle)
end

function N_0x6f361b8889a792a3()
	return _in(0x6F361B8889A792A3)
end

function N_0x6fb7bb3607d27fa2()
	return _in(0x6FB7BB3607D27FA2, _ri)
end

--- This function is hard-coded to always return 1.
function N_0x6fcf8ddea146c45b(p0)
	return _in(0x6FCF8DDEA146C45B, p0, _r)
end

function N_0x6fd97159fe3c971a(p0, p1, p2, p3)
	return _in(0x6FD97159FE3C971A, p0, p1, p2, p3)
end

--- Does nothing (it's a nullsub).
-- NativeDB Introduced: v323
function N_0x6fd992c4a1c1b986()
	return _in(0x6FD992C4A1C1B986, _ri)
end

--- SET_P*
function N_0x6fddad856e36988a(vehicle, toggle)
	return _in(0x6FDDAD856E36988A, vehicle, toggle)
end

--- HAS_*
-- Probably something like "has game been started for the first time".
function N_0x6fddf453c0c756ec()
	return _in(0x6FDDF453C0C756EC, _r)
end

function N_0x700569dba175a77c(p0)
	return _in(0x700569DBA175A77C, p0, _ri)
end

--- Clears the fields sets by [N\_0xc7f29ca00f46350e](#\_0xC7F29CA00F46350E) (1604 retail: 0x1424A7A10, 0x1424A7A11) and iterates over the global CDoor's bucket-list.
-- Related to its "Pre-networked state"?
function N_0x701fda1e82076ba4()
	return _in(0x701FDA1E82076BA4)
end

function N_0x702bc4d605522539(p0)
	return _in(0x702BC4D605522539, p0)
end

function N_0x7033eefd9b28088e(p0)
	return _in(0x7033EEFD9B28088E, p0)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0x703cc7f60cbb2b57(p0)
	return _in(0x703CC7F60CBB2B57, p0)
end

function N_0x705a276ebff3133d()
	return _in(0x705A276EBFF3133D, _r)
end

--- NativeDB Introduced: v1604
function N_0x70a382adec069dd3(coordX, coordY, coordZ)
	return _in(0x70A382ADEC069DD3, coordX, coordY, coordZ)
end

function N_0x70b8ec8fc108a634(p0, p1)
	return _in(0x70B8EC8FC108A634, p0, p1)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Added Parameter 2: int* p1
-- NativeDB Introduced: v323
function N_0x710bcda8071eded1()
	return _in(0x710BCDA8071EDED1, _r)
end

function N_0x711794453cfd692b(p0, p1)
	return _in(0x711794453CFD692B, p0, p1)
end

--- NativeDB Introduced: v1604
function N_0x7148e0f43d11f0d9()
	return _in(0x7148E0F43D11F0D9)
end

function N_0x71b008056e5692d6()
	return _in(0x71B008056E5692D6)
end

--- NETWORK_HAS_*
function N_0x71dc455f5cd1c2b1(networkHandle)
	return _in(0x71DC455F5CD1C2B1, _ii(networkHandle) --[[ may be optional ]], _r)
end

function N_0x71e7b2e657449aad()
	return _in(0x71E7B2E657449AAD, _ri)
end

function N_0x723c1ce13fbfdb67(p0, p1)
	return _in(0x723C1CE13FBFDB67, p0, p1)
end

--- Jenkins hash _might_ be 0xFC227584.
function N_0x7241ccb7d020db69(entity, toggle)
	return _in(0x7241CCB7D020DB69, entity, toggle)
end

--- Last named native above this one is `TRACK_VEHICLE_VISIBILITY` and first named native below is `UNCUFF_PED`.
-- Unknown what it does, couldn't find good examples in the decompiled scripts.
function N_0x725012a415dba050(p0, p2)
	return _in(0x725012A415DBA050, p0, _i, p2, _ri)
end

function N_0x72beccf4b829522e(p0, p1)
	return _in(0x72BECCF4B829522E, p0, p1)
end

function N_0x72eb7ba9b69bf6ab()
	return _in(0x72EB7BA9B69BF6AB, _r)
end

function N_0x73001e34f85137f8(p0)
	return _in(0x73001E34F85137F8, p0)
end

function N_0x733c87d4ce22bea2(ped)
	return _in(0x733C87D4CE22BEA2, ped)
end

--- NativeDB Introduced: v1604
function N_0x734e1714d077da9a(p0, p1)
	return _in(0x734E1714D077DA9A, p0, p1)
end

function N_0x73561d4425a021a2(p0, p1)
	return _in(0x73561D4425A021A2, p0, p1)
end

function N_0x737e398138550fff(vehicle, toggle)
	return _in(0x737E398138550FFF, vehicle, toggle)
end

--- Has something to do with a host request.
-- NETWORK_RE*
function N_0x741a3d8380319a81()
	return _in(0x741A3D8380319A81)
end

function N_0x742b58f723233ed9(p0)
	return _in(0x742B58F723233ED9, p0, _ri)
end

--- NET_GAMESERVER_*
function N_0x74a0fd0688f1ee45(p0)
	return _in(0x74A0FD0688F1EE45, p0, _ri)
end

--- Hardcoded to return zero.
-- ==== PS4 specific info ====
-- Returns some sort of unavailable reason:
-- -1 = REASON_INVALID
-- 0 = REASON_OTHER
-- 1 = REASON_SYSTEM_UPDATE
-- 2 = REASON_GAME_UPDATE
-- 3 = REASON_SIGNED_OUT
-- 4 = REASON_AGE
-- 5 = REASON_CONNECTION
-- =================================
-- @return Hard-coded to always return 0.
function N_0x74fb3e29e6d10fa9()
	return _in(0x74FB3E29E6D10FA9, _ri)
end

--- Checks some commerce stuff
-- NativeDB Introduced: v1290
function N_0x754615490a029508()
	return _in(0x754615490A029508, _ri)
end

function N_0x759650634f07b6b4(p0)
	return _in(0x759650634F07B6B4, p0, _r)
end

--- REQUEST_*
function N_0x75ba1cb3b7d40caf(ped, p1)
	return _in(0x75BA1CB3B7D40CAF, ped, p1)
end

--- Sets bit 1 in GtaThread+0x154
-- BG_*
-- NativeDB Introduced: v323
function N_0x760910b49d2b98ea()
	return _in(0x760910B49D2B98EA)
end

function N_0x762db2d380b48d04(p0)
	return _in(0x762DB2D380B48D04, p0)
end

--- NativeDB Introduced: v2189
function N_0x76b3f29d3f967692(p0, p1)
	return _in(0x76B3F29D3F967692, p0, p1)
end

--- SET_VEHICLE_*
function N_0x76d26a22750e849e(vehicle)
	return _in(0x76D26A22750E849E, vehicle)
end

function N_0x77faddcbe3499df7(p0)
	return _in(0x77FADDCBE3499DF7, p0)
end

function N_0x7808619f31ff22db()
	return _in(0x7808619F31FF22DB, _ri)
end

--- SET_PICKUP_\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0x7813e8b8c4ae4799(pickup)
	return _in(0x7813E8B8C4AE4799, pickup)
end

function N_0x78321bea235fd8cd(p0, p1)
	return _in(0x78321BEA235FD8CD, p0, p1, _r)
end

function N_0x78ceee41f49f421f(p0, p1)
	return _in(0x78CEEE41F49F421F, p0, p1)
end

--- Related to cutscene entities. Unsure about the use.
-- SET_ENTITY_*
function N_0x78e8e3a640178255(entity)
	return _in(0x78E8E3A640178255, entity)
end

function N_0x793ff272d5b365f4()
	return _in(0x793FF272D5B365F4, _ri)
end

function N_0x796a877e459b99ea(p0, p1, p2, p3)
	return _in(0x796A877E459B99EA, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1734
function N_0x79c0e43eb9b944e2(hash)
	return _in(0x79C0E43EB9B944E2, _ch(hash), _r)
end

--- NET_GAMESERVER_*
-- Checks if the transaction status is equal to 3.
-- NativeDB Introduced: v1365
function N_0x79edac677ca62f81(transactionId)
	return _in(0x79EDAC677CA62F81, transactionId, _r)
end

--- UI3DSCENE_*
function N_0x7a42b2e236e71415()
	return _in(0x7A42B2E236E71415)
end

function N_0x7ac24eab6d74118d(p0)
	return _in(0x7AC24EAB6D74118D, p0, _r)
end

function N_0x7b18da61f6bae9d5(p0)
	return _in(0x7B18DA61F6BAE9D5, p0)
end

function N_0x7b8a361c1813fbef()
	return _in(0x7B8A361C1813FBEF)
end

--- NativeDB Introduced: v1290
function N_0x7bae68775557ae0b(p0, p1, p2, p3, p4, p5)
	return _in(0x7BAE68775557AE0B, p0, p1, p2, p3, p4, p5)
end

function N_0x7bbe7ff626a591fe(p0)
	return _in(0x7BBE7FF626A591FE, p0)
end

function N_0x7c226d5346d4d10a(p0)
	return _in(0x7C226D5346D4D10A, p0)
end

function N_0x7c4fccd2e4deb394()
	return _in(0x7C4FCCD2E4DEB394, _r)
end

function N_0x7d36291161859389(p0)
	return _in(0x7D36291161859389, p0)
end

function N_0x7d395ea61622e116(p0)
	return _in(0x7D395EA61622E116, p0)
end

--- SET_VEHICLE_AL*
function N_0x7d6f9a3ef26136a0(vehicle, toggle, p2)
	return _in(0x7D6F9A3EF26136A0, vehicle, toggle, p2)
end

function N_0x7d8ba05688ad64c7(p0)
	return _in(0x7D8BA05688AD64C7, p0)
end

function N_0x7db18ca8cad5b098()
	return _in(0x7DB18CA8CAD5B098, _ri)
end

function N_0x7db53b37a2f211a0()
	return _in(0x7DB53B37A2F211A0, _ri)
end

function N_0x7e07c78925d5fd96(p0)
	return _in(0x7E07C78925D5FD96, p0, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
-- ```
-- Something to do with phone cameras.
-- startup.c4:
-- void sub_2a3d() {
-- UNK2::_7E2BD3EF6C205F09("No_Filter", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam1", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam2", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam3", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam4", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam5", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam6", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam7", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam9", 1);
-- UNK2::_7E2BD3EF6C205F09("phone_cam12", 0);
-- }
-- ```
function N_0x7e2bd3ef6c205f09(p0, p1)
	return _in(0x7E2BD3EF6C205F09, _ts(p0), p1)
end

function N_0x7e6946f68a38b74f(p0)
	return _in(0x7E6946F68A38B74F, p0, _r)
end

function N_0x7ec3c679d0e7e46b(p0, p1, p2, p3)
	return _in(0x7EC3C679D0E7E46B, p0, p1, p2, p3)
end

--- Possibly used to clear scenario points.
-- CLEAR_*
function N_0x7ec6f9a478a6a512()
	return _in(0x7EC6F9A478A6A512)
end

--- NativeDB Introduced: v1604
function N_0x7ecdf98587e92dec(p0)
	return _in(0x7ECDF98587E92DEC, p0)
end

--- _PLAYSTATS_ROB_ARMOURD_TRUCK
function N_0x7eec2a316c250073(p0, p1, p2)
	return _in(0x7EEC2A316C250073, p0, p1, p2)
end

--- IS_*
function N_0x7ef7649b64d7ff10(entity)
	return _in(0x7EF7649B64D7FF10, entity, _r)
end

function N_0x7f2c4cdf2e82df4c(p0)
	return _in(0x7F2C4CDF2E82DF4C, p0, _r)
end

function N_0x7f8f6405f4777af6(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x7F8F6405F4777AF6, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, _rf)
end

--- SET_VEHICLE_*
function N_0x7f96f23fa9b73327(modelHash)
	return _in(0x7F96F23FA9B73327, _ch(modelHash))
end

function N_0x7fa5d82b8f58ec06()
	return _in(0x7FA5D82B8F58EC06, _r)
end

function N_0x7fcc39c46c3c03bd(p0)
	return _in(0x7FCC39C46C3C03BD, p0, _r)
end

--- NativeDB Introduced: v323
function N_0x7ffcbfee44ecfabf()
	return _in(0x7FFCBFEE44ECFABF, _ri)
end

--- CLEAR_PED_*
function N_0x80054d7fcc70eec6(ped)
	return _in(0x80054D7FCC70EEC6, ped)
end

--- IS_*
function N_0x801879a9b4f4b2fb()
	return _in(0x801879A9B4F4B2FB, _r)
end

function N_0x80e3357fdef45c21(vehicle, toggle)
	return _in(0x80E3357FDEF45C21, vehicle, toggle)
end

--- NativeDB Introduced: v1868
function N_0x810b5fcc52ec7ff0(p0, p1, p2, p3)
	return _in(0x810B5FCC52EC7FF0, p0, p1, p2, p3)
end

function N_0x8147fff6a718e1ad(p0)
	return _in(0x8147FFF6A718E1AD, p0, _ri)
end

function N_0x814af7dcaacc597b(p0)
	return _in(0x814AF7DCAACC597B, p0)
end

--- UI::_817B86108EB94E51(1, &g_189F36._f10CD1[0/*16*/], &g_189F36._f10CD1[1/*16*/], &g_189F36._f10CD1[2/*16*/], &g_189F36._f10CD1[3/*16*/], &g_189F36._f10CD1[4/*16*/], &g_189F36._f10CD1[5/*16*/], &g_189F36._f10CD1[6/*16*/], &g_189F36._f10CD1[7/*16*/]);
function N_0x817b86108eb94e51(p0)
	return _in(0x817B86108EB94E51, p0, _i, _i, _i, _i, _i, _i, _i, _i)
end

function N_0x81cbae94390f9f89()
	return _in(0x81CBAE94390F9F89)
end

function N_0x820e9892a77e97cd(p0, p1)
	return _in(0x820E9892A77E97CD, p0, p1)
end

--- NativeDB Introduced: v1180
function N_0x8235f1bead557629(vehicle, toggle)
	return _in(0x8235F1BEAD557629, vehicle, toggle)
end

--- NativeDB Introduced: v2060
function N_0x823ec8e82ba45986(p0)
	return _in(0x823EC8E82BA45986, p0)
end

--- Only found 2 times in decompiled scripts. Not a whole lot to go off of.
-- MISC::_8269816F6CFD40F8(&a_0._f1F5A._f6[0/*8*/], "TEMPSTAT_LABEL"); // gets saved in a struct called "g_SaveData_STRING_ScriptSaves"
-- MISC::_8269816F6CFD40F8(&a_0._f4B4[v_1A/*8*/], &v_5); // where v_5 is "Name0" thru "Name9", gets saved in a struct called "OUTFIT_Name"
function N_0x8269816f6cfd40f8(name)
	return _in(0x8269816F6CFD40F8, _i, _ts(name))
end

function N_0x826d1ee4d1cafc78(p0, p1)
	return _in(0x826D1EE4D1CAFC78, p0, p1)
end

--- BG_*
-- NativeDB Introduced: v323
function N_0x829cd22e043a2577(p0)
	return _in(0x829CD22E043A2577, _ch(p0), _ri)
end

function N_0x82acc484ffa3b05f(p0)
	return _in(0x82ACC484FFA3B05F, p0, _ri)
end

--- Does nothing. It's a nullsub.
-- NativeDB Introduced: v1604
function N_0x82e0ac411e41a5b4(toggle)
	return _in(0x82E0AC411E41A5B4, toggle)
end

function N_0x82ebb79e258fa2b7(entity, interiorID)
	return _in(0x82EBB79E258FA2B7, entity, interiorID)
end

--- NativeDB Introduced: v1493
function N_0x830c3a44eb3f2cf9(p0)
	return _in(0x830C3A44EB3F2CF9, p0)
end

--- NativeDB Introduced: v2372
function N_0x834344a414c7c85d(p0, p1)
	return _in(0x834344A414C7C85D, p0, p1)
end

function N_0x83660b734994124d(p0, p1, p2)
	return _in(0x83660B734994124D, p0, p1, p2, _ri)
end

--- Returns true if bit 0 in GtaThread+0x154 is set.
-- BG_*
-- NativeDB Introduced: v323
function N_0x836b62713e0534ca()
	return _in(0x836B62713E0534CA, _r)
end

function N_0x83a169eabcdb10a2(p0, p1)
	return _in(0x83A169EABCDB10A2, p0, p1)
end

function N_0x83fe8d7229593017()
	return _in(0x83FE8D7229593017)
end

--- NativeDB Introduced: v1290
function N_0x8410c5e0cd847b9d()
	return _in(0x8410C5E0CD847B9D)
end

--- NativeDB Introduced: v1493
function N_0x8423541e8b3a1589(p0, p1, p2)
	return _in(0x8423541E8B3A1589, p0, p1, p2)
end

function N_0x84a810b375e69c0e()
	return _in(0x84A810B375E69C0E, _ri)
end

--- NativeDB Introduced: v2372
function N_0x84b418e93894ac1c()
	return _in(0x84B418E93894AC1C, _ri)
end

function N_0x84de3b5fb3e666f0(ropeId)
	return _in(0x84DE3B5FB3E666F0, _ii(ropeId) --[[ may be optional ]], _r)
end

function N_0x84dfc579c2fc214c(p0)
	return _in(0x84DFC579C2FC214C, p0)
end

function N_0x851cd923176eba7c()
	return _in(0x851CD923176EBA7C)
end

function N_0x8533cafde1f0f336(p0)
	return _in(0x8533CAFDE1F0F336, p0, _ri)
end

function N_0x858ec9fd25de04aa(p0, p1)
	return _in(0x858EC9FD25DE04AA, p0, p1)
end

function N_0x85f6c9aba1de2bcf()
	return _in(0x85F6C9ABA1DE2BCF, _ri)
end

--- NativeDB Introduced: v1290
function N_0x86255b1fc929e33e(p0)
	return _in(0x86255B1FC929E33E, p0, _ri)
end

--- NativeDB Introduced: v1493
function N_0x8634cef2522d987b(ped, p1, value)
	return _in(0x8634CEF2522D987B, ped, _ts(p1), value)
end

--- NativeDB Introduced: v2189
function N_0x8664170ef165c4a6(p0, p1)
	return _in(0x8664170EF165C4A6, p0, p1)
end

--- NativeDB Introduced: v1868
function N_0x870289a558348378(p0, p1, p2, p3)
	return _in(0x870289A558348378, p0, p1, p2, p3)
end

function N_0x870b8b7a766615c8(p0, p1, p2)
	return _in(0x870B8B7A766615C8, p0, p1, p2)
end

--- SET_A*
function N_0x87ddeb611b329a9c(multiplier)
	return _in(0x87DDEB611B329A9C, multiplier)
end

function N_0x88087ee1f28024ae(p0)
	return _in(0x88087EE1F28024AE, p0)
end

--- NativeDB Introduced: v1290
function N_0x8821196d91fa2de5(vehicle, toggle)
	return _in(0x8821196D91FA2DE5, vehicle, toggle)
end

function N_0x88578f6ec36b4a3a(p0, p1)
	return _in(0x88578F6EC36B4A3A, p0, p1, _ri)
end

--- NativeDB Introduced: v1365
function N_0x887fa38787de8c72(vehicle)
	return _in(0x887FA38787DE8C72, vehicle)
end

--- NativeDB Added Parameter 2: Any p1
function N_0x8881c98a31117998(p0)
	return _in(0x8881C98A31117998, p0)
end
N_0xa90e7227a9303fa9 = N_0x8881c98a31117998

function N_0x88b588b41ff7868e()
	return _in(0x88B588B41FF7868E, _ri)
end

function N_0x88bc673ca9e0ae99(vehicle, p1)
	return _in(0x88BC673CA9E0AE99, vehicle, p1)
end

function N_0x892b6ab8f33606f5(p0, entity)
	return _in(0x892B6AB8F33606F5, p0, entity)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0x8951eb9c6906d3c8()
	return _in(0x8951EB9C6906D3C8)
end

function N_0x8989cbd7b4e82534(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x8989CBD7B4E82534, p0, p1, p2, p3, p4, p5, p6)
end

--- NativeDB Introduced: v1290
function N_0x8a4416c0db05fa66(p0)
	return _in(0x8A4416C0DB05FA66, p0, _r)
end

function N_0x8aa9180de2fedd45(vehicle, p1)
	return _in(0x8AA9180DE2FEDD45, vehicle, p1)
end

function N_0x8b0c2964ba471961()
	return _in(0x8B0C2964BA471961, _ri)
end

function N_0x8b4ffc790ca131ef(p0, p1, p2, p3)
	return _in(0x8B4FFC790CA131EF, p0, p1, p2, p3, _ri)
end

function N_0x8b9cdbd6c566c38c()
	return _in(0x8B9CDBD6C566C38C, _ri)
end

function N_0x8bf907833be275de(p0, p1)
	return _in(0x8BF907833BE275DE, p0, p1)
end

function N_0x8c8d2739ba44af0f(p0)
	return _in(0x8C8D2739BA44AF0F, p0, _r)
end

function N_0x8c9d11605e59d955(p0)
	return _in(0x8C9D11605E59D955, p0)
end

function N_0x8caab2bd3ea58bd4(p0)
	return _in(0x8CAAB2BD3EA58BD4, p0)
end

function N_0x8cc469ab4d349b7c(p0, p1, p2)
	return _in(0x8CC469AB4D349B7C, p0, _ts(p1), _ii(p2) --[[ may be optional ]], _r)
end

--- Used only once in the scripts (taxi_clowncar)
-- SET_PARTICLE_FX_*
function N_0x8cde909a0370bb3a(toggle)
	return _in(0x8CDE909A0370BB3A, toggle)
end

--- NativeDB Introduced: v757
function N_0x8cff648fbd7330f1(p0)
	return _in(0x8CFF648FBD7330F1, p0)
end

--- I*
function N_0x8d74e26f54b4e5c3(p0)
	return _in(0x8D74E26F54B4E5C3, _ts(p0))
end

--- SET_PLAYER_MAX_*
function N_0x8d768602adef2245(player, p1)
	return _in(0x8D768602ADEF2245, player, p1)
end

function N_0x8d8adb562f09a245(p0)
	return _in(0x8D8ADB562F09A245, p0)
end

--- SET_SCRIPT_*
-- Sets the cutscene's owning thread ID.
function N_0x8d9df6eca8768583(threadId)
	return _in(0x8D9DF6ECA8768583, threadId)
end

--- NativeDB Introduced: v1180
function N_0x8dca505a5c196f05(p0, p1)
	return _in(0x8DCA505A5C196F05, p0, p1)
end

function N_0x8e243837643d9583(p0, p1, p2, p3)
	return _in(0x8E243837643D9583, p0, p1, p2, p3)
end

function N_0x8ec74ceb042e7cff(p0)
	return _in(0x8EC74CEB042E7CFF, p0)
end

--- NETWORK_SET_\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0x8ef52acaecc51d9c(toggle)
	return _in(0x8EF52ACAECC51D9C, toggle)
end

function N_0x8f08017f9d7c47bd(p0, p2)
	return _in(0x8F08017F9D7C47BD, p0, _i, p2, _r)
end

--- NativeDB Introduced: v1604
function N_0x8f0d5ba1c2cc91d7(toggle)
	return _in(0x8F0D5BA1C2CC91D7, toggle)
end

--- NativeDB Introduced: v1493
function N_0x906ca41a4b74eca4()
	return _in(0x906CA41A4B74ECA4, _ri)
end

--- NativeDB Introduced: v323
function N_0x908311265d42a820(p0)
	return _in(0x908311265D42A820, p0)
end

--- ADD_\*
-- ```
-- NativeDB Introduced: v1868
-- ```
function N_0x9097eb6d4bb9a12a(player, entity)
	return _in(0x9097EB6D4BB9A12A, player, entity)
end

--- NativeDB Introduced: v2189
function N_0x90cd7c6871fbf1b4(p0, p1, p2, p3)
	return _in(0x90CD7C6871FBF1B4, p0, p1, p2, p3)
end

--- Does nothing (it's a nullsub). Seems to be PS4 specific.
-- ```
-- NativeDB Introduced: v2060
-- ```
function N_0x916ca67d26fd1e37(p0)
	return _in(0x916CA67D26FD1E37, _ts(p0))
end

function N_0x91ef6ee6419e5b97(p0)
	return _in(0x91EF6EE6419E5B97, p0)
end

function N_0x9237e334f6e43156(p0)
	return _in(0x9237E334F6E43156, p0, _ri)
end

function N_0x92da6e70ef249bd1(p0, p1)
	return _in(0x92DA6E70EF249BD1, _ts(p0), _ii(p1) --[[ may be optional ]], _r)
end

--- NativeDB Introduced: v1868
function N_0x92fc0eedfac04a14(p0, p1, p2, p3, p4, p5)
	return _in(0x92FC0EEDFAC04A14, p0, p1, p2, p3, p4, p5)
end

function N_0x930f504203f561c9(p0)
	return _in(0x930F504203F561C9, p0)
end

--- Probably IS_SWITCH_*
function N_0x933bbeeb8c61b5f4()
	return _in(0x933BBEEB8C61B5F4, _r)
end

function N_0x94538037ee44f5cf(p0)
	return _in(0x94538037EE44F5CF, p0)
end

function N_0x9465e683b12d3f6b()
	return _in(0x9465E683B12D3F6B)
end

function N_0x9489659372a81585()
	return _in(0x9489659372A81585, _r)
end

function N_0x949f397a288b28b3(p0)
	return _in(0x949F397A288B28B3, p0)
end

function N_0x95a7dabddbb78ae7(iplName1, iplName2)
	return _in(0x95A7DABDDBB78AE7, _ts(iplName1), _ts(iplName2))
end

--- NativeDB Introduced: v1604
function N_0x95baf97c82464629(p0, p1)
	return _in(0x95BAF97C82464629, p0, p1)
end

--- NativeDB Introduced: v1290
function N_0x9640e30a7f395e4b(vehicle, p1, p2, p3, p4)
	return _in(0x9640E30A7F395E4B, vehicle, p1, p2, p3, p4)
end

function N_0x9641588dab93b4b5(p0)
	return _in(0x9641588DAB93B4B5, p0)
end

--- Returns some sort of index/offset for components.
-- Needs \_GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = false and componentId with the drawable's component slot first, returns -1 otherwise.
-- ```
-- NativeDB Introduced: v2189
-- ```
function N_0x96e2929292a4db77(componentHash)
	return _in(0x96E2929292A4DB77, _ch(componentHash), _ri)
end

function N_0x96e6d5150dbf1c09(p0, p1, p2)
	return _in(0x96E6D5150DBF1C09, p0, p1, p2)
end

--- GET_CUTSCENE_\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0x971d7b15bcdbef99()
	return _in(0x971D7B15BCDBEF99, _ri)
end

function N_0x973d76aa760a6cb6(p0)
	return _in(0x973D76AA760A6CB6, p0)
end

--- SET_WEAPON_OBJECT_*
function N_0x977ca98939e82e4b(weaponObject, p1)
	return _in(0x977CA98939E82E4B, weaponObject, p1)
end

--- NativeDB Introduced: v1180
function N_0x97841634ef7df1d6(vehicle, toggle)
	return _in(0x97841634EF7DF1D6, vehicle, toggle)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0x97e7e2c04245115b(p0)
	return _in(0x97E7E2C04245115B, p0)
end

--- NativeDB Introduced: v2372
function N_0x97ffb4adeed08066(p0, p1)
	return _in(0x97FFB4ADEED08066, p0, p1)
end

--- NativeDB Introduced: v1604
function N_0x9849de24fcf23ccc(vehicle, toggle)
	return _in(0x9849DE24FCF23CCC, vehicle, toggle)
end

--- GET_F*
function N_0x98c3cf913d895111(string, length)
	return _in(0x98C3CF913D895111, _ts(string), length, _s)
end

--- NativeDB Introduced: v1493
function N_0x98d18905bf723b99()
	return _in(0x98D18905BF723B99, _ri)
end

function N_0x98e2bc1ca26287c3()
	return _in(0x98E2BC1CA26287C3)
end

--- REQUEST_*
function N_0x98edf76a7271e4f2()
	return _in(0x98EDF76A7271E4F2)
end

function N_0x9911f4a24485f653(p0)
	return _in(0x9911F4A24485F653, p0)
end

function N_0x998e18ceb44487fc(p0, p1, p2, p3)
	return _in(0x998E18CEB44487FC, p0, p1, p2, p3)
end

--- Does nothing. It's a nullsub.
-- NativeDB Introduced: v1604
function N_0x99a05839c46ce316(toggle)
	return _in(0x99A05839C46CE316, toggle)
end

function N_0x99cad8e7afdb60fa(vehicle, p1, p2)
	return _in(0x99CAD8E7AFDB60FA, vehicle, p1, p2)
end

function N_0x9a62ec95ae10e011()
	return _in(0x9A62EC95AE10E011, _ri)
end

--- Related to car generators & CPlayerSwitchMgrLong
-- SET_VEHICLE_*
-- SET_VEHICLE_GENERATORS_EXPECTED_GAMEPLAY_PT ?
function N_0x9a75585fb2e54fad(x, y, z, radius)
	return _in(0x9A75585FB2E54FAD, x, y, z, radius)
end

function N_0x9a77dfd295e29b09(ped, toggle)
	return _in(0x9A77DFD295E29B09, ped, toggle)
end

function N_0x9ac92eed5e4793ab()
	return _in(0x9AC92EED5E4793AB)
end

--- FORCE_*
function N_0x9b079e5221d984d3(p0)
	return _in(0x9B079E5221D984D3, p0)
end

function N_0x9b4bd21d69b1e609()
	return _in(0x9B4BD21D69B1E609)
end

--- Hardcoded to return 0.
-- NativeDB Introduced: v323
function N_0x9b5016a6433a68c5()
	return _in(0x9B5016A6433A68C5, _ri)
end

--- NativeDB Introduced: v1290
function N_0x9bd7bd55e4533183(p0, p1, p2)
	return _in(0x9BD7BD55E4533183, p0, p1, p2)
end

function N_0x9bddc73cc6a115d4(vehicle, p1, p2)
	return _in(0x9BDDC73CC6A115D4, vehicle, p1, p2)
end

function N_0x9becd4b9fef3f8a6(vehicle, p1)
	return _in(0x9BECD4B9FEF3F8A6, vehicle, p1)
end

function N_0x9c6a6c19b6c0c496(ped, p1)
	return _in(0x9C6A6C19B6C0C496, ped, _ii(p1) --[[ may be optional ]], _r)
end

--- NativeDB Introduced: v1868
function N_0x9d252648778160df(p0)
	return _in(0x9D252648778160DF, p0, _ri)
end

function N_0x9d30687c57baa0bb(p0)
	return _in(0x9D30687C57BAA0BB, p0)
end

--- SET_H*
function N_0x9d3af56e94c9ae98(vehicle, p1)
	return _in(0x9D3AF56E94C9AE98, vehicle, p1)
end

--- NativeDB Introduced: v2189
function N_0x9d724b400a7e8ffc(p0, p1)
	return _in(0x9D724B400A7E8FFC, p0, p1)
end

--- Sets some voice chat related value.
-- NETWORK_SET_*
function N_0x9d7afcbf21c51712(toggle)
	return _in(0x9D7AFCBF21C51712, toggle)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Added Parameter 2: char* p1
-- NativeDB Introduced: v323
function N_0x9de5d2f723575ed0()
	return _in(0x9DE5D2F723575ED0, _r)
end

--- SET_FOLLOW_*
function N_0x9dfe13ecdc1ec196(p0, p1)
	return _in(0x9DFE13ECDC1EC196, p0, p1)
end
SetTimeIdleDrop = N_0x9dfe13ecdc1ec196

function N_0x9e30e91fb03a2caf()
	return _in(0x9E30E91FB03A2CAF, _i, _i, _r)
end

--- DISABLE_*
function N_0x9e6542f0ce8e70a3(toggle)
	return _in(0x9E6542F0CE8E70A3, toggle)
end

--- SET_*
function N_0x9ebd751e5787baf2(p0)
	return _in(0x9EBD751E5787BAF2, p0)
end

function N_0x9ec8858184cd253a()
	return _in(0x9EC8858184CD253A, _ri)
end

function N_0x9edd76e87d5d51ba(player)
	return _in(0x9EDD76E87D5D51BA, player)
end

--- REMOVE_\*
-- ```
-- NativeDB Introduced: v1868
-- ```
function N_0x9f260bfb59adbca3(player, entity)
	return _in(0x9F260BFB59ADBCA3, player, entity)
end

function N_0x9f3f689b814f2599(vehicle, p1)
	return _in(0x9F3F689B814F2599, vehicle, p1)
end

--- B\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0x9f97da93681f87ea()
	return _in(0x9F97DA93681F87EA)
end

--- SET_C\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0x9fcb3cbfb3ead69a(p0, p1)
	return _in(0x9FCB3CBFB3EAD69A, p0, p1)
end

function N_0x9fedf86898f100e9()
	return _in(0x9FEDF86898F100E9, _ri)
end

function N_0xa01bc64dd4bfbbac(vehicle, p1)
	return _in(0xA01BC64DD4BFBBAC, vehicle, p1, _ri)
end

function N_0xa08fe5e49bdc39dd(p0, p1, p2)
	return _in(0xA08FE5E49BDC39DD, p0, p1, p2)
end

--- NativeDB Introduced: v2189
function N_0xa0ad167e4b39d9a2(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
	return _in(0xA0AD167E4B39D9A2, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, _ri)
end

function N_0xa0cefcea390aab9b(p0)
	return _in(0xA0CEFCEA390AAB9B, p0)
end

function N_0xa0f93d5465b3094d(p0)
	return _in(0xA0F93D5465B3094D, _ii(p0) --[[ may be optional ]], _r)
end

function N_0xa0fa4ec6a05da44e()
	return _in(0xA0FA4EC6A05DA44E, _ri)
end

function N_0xa0fe76168a189ddb()
	return _in(0xA0FE76168A189DDB, _ri)
end

function N_0xa12d3a5a3753cc23()
	return _in(0xA12D3A5A3753CC23, _ri)
end

function N_0xa17784fca9548d15(p0, p1, p2)
	return _in(0xA17784FCA9548D15, p0, p1, p2)
end

--- ROPE_\*
-- ```
-- NativeDB Introduced: v1868
-- ```
function N_0xa1ae736541b0fca3(p1)
	return _in(0xA1AE736541B0FCA3, _i, p1)
end

function N_0xa213b11dff526300()
	return _in(0xA213B11DFF526300, _r)
end

function N_0xa238192f33110615()
	return _in(0xA238192F33110615, _i, _i, _i, _r)
end

function N_0xa247f9ef01d8082e(p0)
	return _in(0xA247F9EF01D8082E, p0)
end

function N_0xa2767257a320fc82(p0, p1)
	return _in(0xA2767257A320FC82, p0, p1)
end

--- CLEAR_*
function N_0xa2c1f5e92afe49ed()
	return _in(0xA2C1F5E92AFE49ED)
end

function N_0xa2c9ac24b4061285(ped, weaponHash)
	return _in(0xA2C9AC24B4061285, ped, _ch(weaponHash), _ri)
end

--- Needs more research. If the "phone_cam12" filter is applied, this function is called with "TRUE"; otherwise, "FALSE".
-- Example (XBOX 360):
-- // check current filter selection
-- if (MISC::ARE_STRINGS_EQUAL(getElem(g_2471024, &l_17, 4), "phone_cam12") != 0)
-- {
-- MOBILE::_0xC273BB4D(0); // FALSE
-- }
-- else
-- {
-- MOBILE::_0xC273BB4D(1); // TRUE
-- }
function N_0xa2ccbe62cd4c91a4(toggle)
	return _in(0xA2CCBE62CD4C91A4, _ii(toggle) --[[ may be optional ]])
end

--- Appears to set whether a transition should be started when the session is migrating.
-- NETWORK_SET_*
function N_0xa2e9c1ab8a92e8cd(toggle)
	return _in(0xA2E9C1AB8A92E8CD, toggle)
end

function N_0xa306f470d1660581()
	return _in(0xA306F470D1660581, _ri)
end

function N_0xa3c53804bdb68ed2(p0, p1)
	return _in(0xA3C53804BDB68ED2, p0, p1)
end

--- Only called once in the scripts:
-- if (sub_1abd() && (!PED::_A3F3564A5B3646C0(l_8C))) {
-- if (sub_52e3("RESNA_CELLR", 0)) {
-- PED::SET_PED_CAN_PLAY_GESTURE_ANIMS(l_8C, 1);
-- PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(l_8C, 1);
-- PED::SET_PED_CAN_PLAY_VISEME_ANIMS(l_8C, 1, 0);
-- l_184 += 1;
-- }
-- }
-- Checks something related to the mobile phone task.
-- IS_*
function N_0xa3f3564a5b3646c0(ped)
	return _in(0xA3F3564A5B3646C0, ped, _r)
end

--- NativeDB Added Parameter 1: int p0
-- NativeDB Introduced: v323
function N_0xa468e0be12b12c70()
	return _in(0xA468E0BE12B12C70, _r)
end

function N_0xa46b73faa3460ae1(p0)
	return _in(0xA46B73FAA3460AE1, p0)
end

function N_0xa4822f1cf23f4810(p1, p3, p4, p5, p6, p7, p8)
	return _in(0xA4822F1CF23F4810, _v, p1, _v, p3, p4, p5, p6, p7, p8, _r)
end

--- GET_SAVE_*
-- GET_SAVE_UNLESS_CUSTOM_DOT ?
function N_0xa4a0065e39c9f25c()
	return _in(0xA4A0065E39C9F25C, _v, _f, _i --[[ actually bool ]], _i --[[ actually bool ]], _r)
end

--- NativeDB Introduced: v1604
function N_0xa4a9a4c40e615885(p0)
	return _in(0xA4A9A4C40E615885, p0)
end

--- NativeDB Introduced: v2189
function N_0xa51338e0dccd4065(p0, p1, p2)
	return _in(0xA51338E0DCCD4065, p0, p1, p2)
end

function N_0xa51b086b0b2c0f7a(p0, p1, p2, p3)
	return _in(0xA51B086B0B2C0F7A, p0, p1, p2, p3)
end

function N_0xa52d5247a4227e14(p0)
	return _in(0xA52D5247A4227E14, p0)
end

--- NativeDB Introduced: v1290
function N_0xa5eafe473e45c442(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xA5EAFE473E45C442, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end

function N_0xa660faf550eb37e5(p0, p1)
	return _in(0xA660FAF550EB37E5, p0, p1)
end

--- NativeDB Introduced: v2189
function N_0xa6eef01087181edd(p0, p1)
	return _in(0xA6EEF01087181EDD, p0, p1, _ri)
end

function N_0xa6f54bb2ffca35ea(p0)
	return _in(0xA6F54BB2FFCA35EA, p0)
end

--- NativeDB Introduced: v1604
function N_0xa6fceccf4721d679(p0)
	return _in(0xA6FCECCF4721D679, p0)
end

--- NativeDB Introduced: v2189
function N_0xa7092afe81944852()
	return _in(0xA7092AFE81944852)
end

function N_0xa736cf7fb7c5bff4()
	return _in(0xA736CF7FB7C5BFF4, _i, _i, _i, _i)
end

function N_0xa761d4ac6115623d()
	return _in(0xA761D4AC6115623D, _ri)
end

--- NativeDB Introduced: v323
function N_0xa770c8eec6fb2ac5()
	return _in(0xA770C8EEC6FB2AC5, _ri)
end

function N_0xa7862bc5ed1dfd7e(p0, p1)
	return _in(0xA7862BC5ED1DFD7E, p0, p1, _i, _i, _r)
end

--- STATS::0xE3247582(0);
-- STATS::0xE3247582(1);
-- STATS::0xE3247582(2);
-- STATS::0xE3247582(3);
-- STATS::0xE3247582(4);
-- STATS::0xE3247582(5);
-- STATS::0xE3247582(6);
function N_0xa78b8fa58200da56(p0)
	return _in(0xA78B8FA58200DA56, p0)
end

function N_0xa7dcdf4ded40a8f4(vehicle, p1)
	return _in(0xA7DCDF4DED40A8F4, vehicle, p1)
end

--- Some property related to gates. Native name between `DOOR_SYSTEM_SET_AUTOMATIC_RATE` and `DOOR_SYSTEM_SET_DOOR_STATE`.
function N_0xa85a21582451e951(doorHash, p1)
	return _in(0xA85A21582451E951, _ch(doorHash), p1)
end

function N_0xa8733668d1047b51(p0)
	return _in(0xA8733668D1047B51, p0)
end

--- NativeDB Introduced: v1493
function N_0xa8a7d434afb4b97b(p0, p1)
	return _in(0xA8A7D434AFB4B97B, _ts(p0), p1)
end

function N_0xa8acb6459542a8c8()
	return _in(0xA8ACB6459542A8C8, _ri)
end

function N_0xa943fd1722e11efd()
	return _in(0xA943FD1722E11EFD, _ri)
end

--- NativeDB Introduced: v1868
function N_0xa95cfb4e02390842(p0, p1, p2)
	return _in(0xA95CFB4E02390842, p0, p1, p2)
end

function N_0xa95f667a755725da(p0, p1, p2, p3)
	return _in(0xA95F667A755725DA, p0, p1, p2, p3)
end

function N_0xa9b61a329bfdcbea(p0, p1)
	return _in(0xA9B61A329BFDCBEA, p0, p1)
end

--- NativeDB Introduced: v1180
function N_0xaa059c615de9dd03(p0, p1)
	return _in(0xAA059C615DE9DD03, p0, p1)
end

function N_0xaa19f5572c38b564(p0)
	return _in(0xAA19F5572C38B564, _ii(p0) --[[ may be optional ]], _ri)
end

function N_0xaa525dff66bb82f5(p0, p1, p2)
	return _in(0xAA525DFF66BB82F5, p0, p1, p2)
end

--- NativeDB Added Parameter 1: Entity entity
function N_0xaa5fafcd2c5f5e47()
	return _in(0xAA5FAFCD2C5F5E47, _rv)
end

--- NativeDB Introduced: v1290
function N_0xaa653ae61924b0a0(vehicle, toggle)
	return _in(0xAA653AE61924B0A0, vehicle, toggle)
end

function N_0xaa76052dda9bfc3e(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xAA76052DDA9BFC3E, p0, p1, p2, p3, p4, p5, p6)
end

function N_0xaaa6a3698a69e048(p0)
	return _in(0xAAA6A3698A69E048, p0, _ri)
end

--- NativeDB Introduced: v2189
function N_0xaabd62873ffb1a33(p0, p1)
	return _in(0xAABD62873FFB1A33, p0, p1)
end

--- NativeDB Introduced: v1290
function N_0xaae9be70ec7c69ab(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xAAE9BE70EC7C69AB, p0, p1, p2, p3, p4, p5, p6, p7)
end

function N_0xab04325045427aae(vehicle, p1)
	return _in(0xAB04325045427AAE, vehicle, p1)
end

--- Used only once in the scripts (fm_mission_controller) like so:
-- TASK::_0xAB13A5565480B6D9(iLocal_3160, "Cutting");
-- SET_*
function N_0xab13a5565480b6d9(ped, p1)
	return _in(0xAB13A5565480B6D9, ped, _ts(p1), _ri)
end

function N_0xab31ef4de6800ce9(p0, p1)
	return _in(0xAB31EF4DE6800CE9, p0, p1)
end

--- NativeDB Introduced: v1868
function N_0xab6781a5f3101470(p0, p1)
	return _in(0xAB6781A5F3101470, p0, p1)
end

function N_0xac2890471901861c(p0)
	return _in(0xAC2890471901861C, p0)
end

--- NativeDB Introduced: v1290
function N_0xad27d957598e49e9(ped, p1, p2, hash, p4, p5)
	return _in(0xAD27D957598E49E9, ped, p1, p2, _ch(hash), p4, p5)
end

--- This has been found in use in the decompiled files.
function N_0xad73ce5a09e42d12(player)
	return _in(0xAD73CE5A09E42D12, player)
end

--- gets 2 floats from the CNetGamePlayer of p0 and stores them in p1 and p2.
-- Possibly waypoint?
function N_0xadb57e5b663cca8b(p0)
	return _in(0xADB57E5B663CCA8B, p0, _f, _f)
end

--- NativeDB Introduced: v2189
function N_0xadd6627c4d325458(p0)
	return _in(0xADD6627C4D325458, p0)
end

--- NativeDB Introduced: v1604
function N_0xadf084fb8f075d06(p0)
	return _in(0xADF084FB8F075D06, p0, _r)
end

function N_0xae3fee8709b39dcb(vehicle)
	return _in(0xAE3FEE8709B39DCB, vehicle, _r)
end

function N_0xae51bc858f32ba66(p0, p1, p2, p3, p4)
	return _in(0xAE51BC858F32BA66, p0, p1, p2, p3, p4)
end

function N_0xaeab987727c5a8a4(p0)
	return _in(0xAEAB987727C5A8A4, p0, _r)
end

--- Does nothing (it's a nullsub).
-- NativeDB Introduced: v323
function N_0xaedf1bc1c133d6e3()
	return _in(0xAEDF1BC1C133D6E3, _ri)
end

--- Exemple of use(carmod_shop.c4)
-- INTERIOR::_AF348AFCB575A441("V_CarModRoom");
function N_0xaf348afcb575a441(roomName)
	return _in(0xAF348AFCB575A441, _ts(roomName))
end

function N_0xaf60e6a2936f982a(p0, p1)
	return _in(0xAF60E6A2936F982A, p0, p1)
end

--- SET_PED_*
function N_0xafc976fd0580c7b3(ped, toggle)
	return _in(0xAFC976FD0580C7B3, ped, toggle)
end

--- NativeDB Introduced: v1734
function N_0xafe24e4d29249e4a(object, p1, p2, p3)
	return _in(0xAFE24E4D29249E4A, object, p1, p2, p3, _r)
end

function N_0xaff47709f1d5dcce()
	return _in(0xAFF47709F1D5DCCE, _ri)
end

--- NativeDB Introduced: v1180
function N_0xb1381b97f70c7b30()
	return _in(0xB1381B97F70C7B30)
end

function N_0xb13e88e655e5a3bc()
	return _in(0xB13E88E655E5A3BC)
end

function N_0xb17bc6453f6cf5ac(p0, p1)
	return _in(0xB17BC6453F6CF5AC, p0, p1)
end

function N_0xb1b6216ca2e7b55e(p0, p1, p2)
	return _in(0xB1B6216CA2E7B55E, p0, p1, p2)
end

function N_0xb1d2bb1e1631f5b1()
	return _in(0xB1D2BB1E1631F5B1, _r)
end

--- This native doesn't seem to do anything, might be a debug-only native.
-- Confirmed, it is a debug native.
function N_0xb264c4d2f2b0a78b(vehicle)
	return _in(0xB264C4D2F2B0A78B, vehicle)
end

--- NativeDB Added Parameter 2: Any p1
-- NativeDB Introduced: v1493
function N_0xb26f670685631727(p0)
	return _in(0xB26F670685631727, p0)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0xb282749d5e028163(p0, p1)
	return _in(0xB282749D5E028163, p0, p1)
end

function N_0xb2d0bde54f0e8e5a(object, toggle)
	return _in(0xB2D0BDE54F0E8E5A, object, toggle)
end

--- SET_C*
function N_0xb2e0c0d6922d31f2(vehicle, toggle)
	return _in(0xB2E0C0D6922D31F2, vehicle, toggle)
end

function N_0xb2ebe8cbc58b90e9()
	return _in(0xB2EBE8CBC58B90E9, _ri)
end

function N_0xb309ebea797e001f(p0)
	return _in(0xB309EBEA797E001F, p0, _ri)
end

function N_0xb37e4e6a2388ca7b()
	return _in(0xB37E4E6A2388CA7B, _r)
end

--- Setter for 0xE59343E9E96529E7
-- SET_M*
function N_0xb3c641f3630bf6da(p0)
	return _in(0xB3C641F3630BF6DA, p0)
end

--- This function is hard-coded to always return 1.
-- NETWORK_IS_*
function N_0xb3da2606774a8e2d()
	return _in(0xB3DA2606774A8E2D, _r)
end

--- PLAYER::0xBF6993C7(rPtr((&l_122) + 71)); // Found in decompilation
-- ***
-- In "am_hold_up.ysc" used once:
-- l_8d._f47 = MISC::GET_RANDOM_FLOAT_IN_RANGE(18.0, 28.0);
-- PLAYER::_B45EFF719D8427A6((l_8d._f47));
function N_0xb45eff719d8427a6(p0)
	return _in(0xB45EFF719D8427A6, p0)
end

function N_0xb4c2ec463672474e(p0, p1, p2, p3)
	return _in(0xB4C2EC463672474E, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1493
function N_0xb4deae67f35e2acd(p0)
	return _in(0xB4DEAE67F35E2ACD, p0)
end

function N_0xb51b9ab9ef81868c(toggle)
	return _in(0xB51B9AB9EF81868C, toggle)
end

function N_0xb542de8c3d1cb210(p0)
	return _in(0xB542DE8C3D1CB210, p0)
end

function N_0xb552929b85fc27ec(p0, p1)
	return _in(0xB552929B85FC27EC, p0, p1)
end

function N_0xb569f41f3e7e83a4(p0)
	return _in(0xB569F41F3E7E83A4, p0)
end

--- NativeDB Introduced: v1868
function N_0xb5b58e24868cb09e(p0, p1, p2, p3, p4)
	return _in(0xB5B58E24868CB09E, p0, p1, p2, p3, p4)
end

--- NativeDB Introduced: v1604
function N_0xb5b7742424bd4445(p0, p1)
	return _in(0xB5B7742424BD4445, p0, p1)
end

function N_0xb5d3453c98456528()
	return _in(0xB5D3453C98456528, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0xb606e6cc59664972(p0)
	return _in(0xB606E6CC59664972, p0)
end

--- NativeDB Introduced: v1290
function N_0xb68cfaf83a02768d(vehicle, toggle)
	return _in(0xB68CFAF83A02768D, vehicle, toggle)
end

--- ROPE_*
function N_0xb743f735c03d7810(ropeId, p1)
	return _in(0xB743F735C03D7810, ropeId, p1)
end

function N_0xb746d20b17f2a229()
	return _in(0xB746D20B17F2A229, _i, _i, _r)
end

--- SET_C\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0xb7b873520c84c118()
	return _in(0xB7B873520C84C118)
end

--- Clears all areas created by 0xD4A7A435B3710D05
-- CLEAR_*
-- NativeDB Introduced: v1290
function N_0xb7c6d80fb371659a()
	return _in(0xB7C6D80FB371659A)
end

function N_0xb81cf134aeb56ffb()
	return _in(0xB81CF134AEB56FFB)
end

--- Disables something. Used only once in R* scripts (freemode.ysc).
-- DISABLE_PLAYER_*
function N_0xb885852c39cc265d()
	return _in(0xB885852C39CC265D)
end

function N_0xb8b52e498014f5b0(ped)
	return _in(0xB8B52E498014F5B0, ped, _r)
end

--- NativeDB Introduced: v2060
function N_0xb9351a07a0d458b1(p0)
	return _in(0xB9351A07A0D458B1, p0, _ri)
end

function N_0xb9562064627ff9db(p0, p1)
	return _in(0xB9562064627FF9DB, p0, p1)
end

--- Returns profile setting 237.
-- GET_*
function N_0xb9cf1f793a9f1bf1()
	return _in(0xB9CF1F793A9F1BF1, _r)
end

function N_0xba0127da25fd54c9(p0, p1)
	return _in(0xBA0127DA25FD54C9, p0, p1)
end

--- SET_PARTICLE_FX_*
function N_0xba3d194057c79a7b(p0)
	return _in(0xBA3D194057C79A7B, _ts(p0))
end

--- **This native does absolutely nothing, just a nullsub**
function N_0xba4b8d83bdc75551(p0)
	return _in(0xBA4B8D83BDC75551, p0)
end

function N_0xba7f0b77d80a4eb7(p0, p1)
	return _in(0xBA7F0B77D80A4EB7, p0, p1)
end

--- FORCE_*
function N_0xba8d65c1c65702e5(toggle)
	return _in(0xBA8D65C1C65702E5, toggle)
end

function N_0xba91d045575699ad(vehicle)
	return _in(0xBA91D045575699AD, vehicle, _r)
end

function N_0xba9749cc94c1fd85()
	return _in(0xBA9749CC94C1FD85, _ri)
end

function N_0xbaa2f0490e146be8(p0)
	return _in(0xBAA2F0490E146BE8, p0)
end

function N_0xbb2333bb87ddd87f(p0, p1)
	return _in(0xBB2333BB87DDD87F, p0, p1)
end

function N_0xbb90e12cac1dab25(p0)
	return _in(0xBB90E12CAC1DAB25, p0)
end

--- var num3 = PLAYER::GET_PLAYER_PED(l_2171); // proof l_2171 is a player
-- var num17 = PLAYER::0x9DF75B2A(l_2171, 100, 0); // l_2171
-- .ysc:
-- if (PLAYER::GET_PLAYER_WANTED_LEVEL(l_6EF) < v_4) { // l_6EF is a player
-- PLAYER::SET_PLAYER_WANTED_LEVEL(l_6EF, v_4, 0); // l_6EF
-- PLAYER::SET_PLAYER_WANTED_LEVEL_NOW(l_6EF, 0); // l_6EF
-- } else {
-- PLAYER::_4669B3ED80F24B4E(l_6EF); // l_6EF
-- HUD::_BA8D65C1C65702E5(1);
-- a_0 = 1;
-- }
-- if (l_4B24[l_6F2/*156*/]._f8C != PLAYER::_BC0753C9CA14B506(l_6EF, 100, 0)) { // l_6EF
-- l_4B24[l_6F2/*156*/]._f8C = PLAYER::_BC0753C9CA14B506(l_6EF, 100, 0); // l_6EF
-- }
-- Both was taken from fm_mission_controller
-- GET_PLAYER_*
function N_0xbc0753c9ca14b506(player, p1, p2)
	return _in(0xBC0753C9CA14B506, player, p1, p2, _r)
end

--- Most likely ROPE_ATTACH_*
function N_0xbc0ce682d4d05650(ropeId, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
	return _in(0xBC0CE682D4D05650, ropeId, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
end

--- Seems to only appear in scripts used in Singleplayer.
-- Always used like this in scripts
-- PLAYER::_BC9490CA15AEA8FB(PLAYER::PLAYER_ID());
function N_0xbc9490ca15aea8fb(player)
	return _in(0xBC9490CA15AEA8FB, player)
end

function N_0xbcedb009461da156()
	return _in(0xBCEDB009461DA156, _ri)
end

function N_0xbd0efb25cca8f97a(p0, p1, p2, p3)
	return _in(0xBD0EFB25CCA8F97A, p0, p1, p2, p3)
end

function N_0xbd545d44cce70597()
	return _in(0xBD545D44CCE70597, _r)
end

--- NETWORK_SESSION_IS_*
function N_0xbdb6f89c729cf388()
	return _in(0xBDB6F89C729CF388, _r)
end

--- This function is hard-coded to always return 0.
function N_0xbe197eaa669238f4(p0, p1, p2, p3)
	return _in(0xBE197EAA669238F4, p0, p1, p2, p3, _ri)
end

function N_0xbe3db208333d9844()
	return _in(0xBE3DB208333D9844, _ri)
end

function N_0xbe5c1255a1830ff5(vehicle, toggle)
	return _in(0xBE5C1255A1830FF5, vehicle, toggle)
end

function N_0xbeb2d9a1d9a8f55a(p0, p1, p2, p3)
	return _in(0xBEB2D9A1D9A8F55A, p0, p1, p2, p3)
end

function N_0xbed8ca5ff5e04113(p0, p1, p2, p3)
	return _in(0xBED8CA5FF5E04113, p0, p1, p2, p3)
end

function N_0xbed9f5693f34ed17(statName, p1, outValue)
	return _in(0xBED9F5693F34ED17, _ch(statName), p1, _fi(outValue) --[[ may be optional ]], _r)
end

function N_0xbef34b1d9624d5dd(p0)
	return _in(0xBEF34B1D9624D5DD, p0)
end

function N_0xbf22e0f32968e967(player, p1)
	return _in(0xBF22E0F32968E967, player, p1)
end

function N_0xbf371cd2b64212fd(p0)
	return _in(0xBF371CD2B64212FD, p0)
end

function N_0xbf4dc1784be94dfa(ped, p1, hash)
	return _in(0xBF4DC1784BE94DFA, ped, p1, _ch(hash))
end

function N_0xbf4f34a85ca2970c()
	return _in(0xBF4F34A85CA2970C)
end

function N_0xbf72910d0f26f025()
	return _in(0xBF72910D0F26F025, _ri)
end

function N_0xbfafdb5faaa5c5ab(p0)
	return _in(0xBFAFDB5FAAA5C5AB, p0)
end

--- NativeDB Introduced: v1290
function N_0xbffe53ae7e67fcdc(p0, p1)
	return _in(0xBFFE53AE7E67FCDC, p0, p1)
end

--- **This native does absolutely nothing, just a nullsub**
-- ```
-- NativeDB Introduced: v2372
-- ```
function N_0xc01d2470f22cde5a()
	return _in(0xC01D2470F22CDE5A)
end

--- NativeDB Introduced: v1868
function N_0xc03fab2c2f92289b(p0)
	return _in(0xC03FAB2C2F92289B, p0)
end

--- GOLF_TRAIL_SET_*
function N_0xc0416b061f2b7e5e(p0)
	return _in(0xC0416B061F2B7E5E, p0)
end

function N_0xc0e0d686ddfc6eae()
	return _in(0xC0E0D686DDFC6EAE, _ri)
end

function N_0xc0ed6438e6d39ba8(p0, p1, p2)
	return _in(0xC0ED6438E6D39BA8, p0, p1, p2)
end

function N_0xc13c38e47ea5df31(p0)
	return _in(0xC13C38E47EA5DF31, _ii(p0) --[[ may be optional ]], _r)
end

function N_0xc141b8917e0017ec()
	return _in(0xC141B8917E0017EC)
end

--- NativeDB Added Parameter 2: Any p1
-- NativeDB Introduced: v1493
function N_0xc14bd9f5337219b2(p0)
	return _in(0xC14BD9F5337219B2, p0)
end

--- SET_VEH*
function N_0xc1805d05e6d4fe10(vehicle)
	return _in(0xC1805D05E6D4FE10, vehicle)
end

--- NativeDB Introduced: v2189
function N_0xc1e963c58664b556(p0)
	return _in(0xC1E963C58664B556, p0)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Introduced: v323
function N_0xc2c97ea97711d1ae()
	return _in(0xC2C97EA97711D1AE, _r)
end

--- Getter for 0xCD74233600C4EA6B
-- GET_*
function N_0xc2d2ad9eaae265b8()
	return _in(0xC2D2AD9EAAE265B8, _r)
end

function N_0xc2ee020f5fb4db53(ped)
	return _in(0xC2EE020F5FB4DB53, ped)
end

--- NativeDB Introduced: v1868
function N_0xc30bdaee47256c13(p0)
	return _in(0xC30BDAEE47256C13, p0, _ri)
end

function N_0xc32ea7a2f6ca7557()
	return _in(0xC32EA7A2F6CA7557, _ri)
end

--- - This is called after SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME
function N_0xc3376f42b1faccc6(player)
	return _in(0xC3376F42B1FACCC6, player)
end
SetAreasGeneratorOrientation = N_0xc3376f42b1faccc6

--- SET_ENTITY_*
function N_0xc34bc448da29f5e9(entity, toggle)
	return _in(0xC34BC448DA29F5E9, entity, toggle)
end

function N_0xc35a6d07c93802b2()
	return _in(0xC35A6D07C93802B2)
end

function N_0xc361aa040d6637a8(vehicle, p1)
	return _in(0xC361AA040D6637A8, vehicle, p1)
end

function N_0xc42dd763159f3461()
	return _in(0xC42DD763159F3461, _r)
end

function N_0xc434133d9ba52777(p0, p1)
	return _in(0xC434133D9BA52777, p0, p1, _ri)
end

--- GET_IS_LOADING_\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0xc4637a6d03c24cc3()
	return _in(0xC4637A6D03C24CC3, _r)
end

function N_0xc4b3347bd68bd609(p0)
	return _in(0xC4B3347BD68BD609, p0)
end

--- SET_VEHICLE_LI*
function N_0xc50ce861b55eab8b(vehicle, p1)
	return _in(0xC50CE861B55EAB8B, vehicle, p1)
end

function N_0xc56fbf2f228e1dac(modelHash, p1, p2)
	return _in(0xC56FBF2F228E1DAC, _ch(modelHash), p1, p2, _ri)
end

--- NETWORK_IS_TRANSITION_*
function N_0xc571d0e77d8bbc29()
	return _in(0xC571D0E77D8BBC29, _r)
end

function N_0xc594b315edf2d4af(ped)
	return _in(0xC594B315EDF2D4AF, ped)
end

--- NativeDB Added Parameter 1: int p0
-- NativeDB Added Parameter 2: char* p1
-- NativeDB Added Parameter 3: float* p2
-- NativeDB Introduced: v323
function N_0xc5a35c73b68f3c49()
	return _in(0xC5A35C73B68F3C49, _r)
end

function N_0xc5c8f970d4edff71(p0)
	return _in(0xC5C8F970D4EDFF71, p0)
end

function N_0xc6033d32241f6fb5(object, toggle)
	return _in(0xC6033D32241F6FB5, object, toggle)
end

--- Toggles a value (bool) for cutscenes.
-- SET_*
function N_0xc61b86c9f61eb404(toggle)
	return _in(0xC61B86C9F61EB404, toggle)
end

--- GET_NE*
-- NativeDB Introduced: v1493
function N_0xc64a06d939f826f5()
	return _in(0xC64A06D939F826F5, _f, _i, _i, _r)
end

--- NativeDB Introduced: v2189
function N_0xc67db108a9ade3be(p0, p1)
	return _in(0xC67DB108A9ADE3BE, p0, p1)
end

--- Sets profile setting 939
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0xc67e2da1cbe759e2()
	return _in(0xC67E2DA1CBE759E2)
end

function N_0xc6e0e2616a7576bb()
	return _in(0xC6E0E2616A7576BB, _ri)
end

--- NativeDB Introduced: v1493
function N_0xc6e74cf8c884c880(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xC6E74CF8C884C880, p0, p1, p2, p3, p4, p5, p6)
end

--- See [`N_0x701fda1e82076ba4`](#\_0x701FDA1E82076BA4).
function N_0xc7f29ca00f46350e(p0)
	return _in(0xC7F29CA00F46350E, p0)
end

--- NET_GAMESERVER_*
-- Checks if the transaction status is equal to 1.
-- NativeDB Introduced: v1365
function N_0xc830417d630a50f9(transactionId)
	return _in(0xC830417D630A50F9, transactionId, _r)
end

function N_0xc8391c309684595a()
	return _in(0xC8391C309684595A)
end

function N_0xc847b43f369ac0b5()
	return _in(0xC847B43F369AC0B5)
end

--- NativeDB Introduced: v323
function N_0xc85a7127e7ad02aa()
	return _in(0xC85A7127E7AD02AA, _ri)
end

function N_0xc87e740d9f3872cc()
	return _in(0xC87E740D9F3872CC, _ri)
end

--- IS_MOBILE_PHONE_*
function N_0xc8b1b2425604cdd0()
	return _in(0xC8B1B2425604CDD0, _r)
end

function N_0xc8b5c4a79cc18b94(cam)
	return _in(0xC8B5C4A79CC18B94, cam)
end

function N_0xc8e1071177a23be5()
	return _in(0xC8E1071177A23BE5, _i, _i, _i, _r)
end

function N_0xc8ede9bdbccba6d4(p1, p2, p3)
	return _in(0xC8EDE9BDBCCBA6D4, _i, p1, p2, p3)
end

function N_0xc9b43a33d09cada7(p0)
	return _in(0xC9B43A33D09CADA7, p0)
end

function N_0xca465d9cc0d231ba(p0)
	return _in(0xCA465D9CC0D231BA, p0)
end

function N_0xca4ae345a153d573(p0)
	return _in(0xCA4AE345A153D573, p0)
end

function N_0xca575c391fea25cc(p0)
	return _in(0xCA575C391FEA25CC, p0)
end

--- NETWORK_S\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0xca59ccae5d01e4ce()
	return _in(0xCA59CCAE5D01E4CE)
end

function N_0xca6b2f7ce32ab653(p0, p2)
	return _in(0xCA6B2F7CE32AB653, p0, _i, p2, _r)
end

--- Found in "director_mode", "fm_bj_race_controler", "fm_deathmatch_controler", "fm_impromptu_dm_controler", "fm_race_controler", "gb_deathmatch".
function N_0xcac57395b151135f(player, p1)
	return _in(0xCAC57395B151135F, player, p1)
end

function N_0xcb0360efefb2580d(padIndex)
	return _in(0xCB0360EFEFB2580D, padIndex)
end

--- Returns profile setting 243.
-- GET_*
function N_0xcb645e85e97ea48b()
	return _in(0xCB645E85E97EA48B, _r)
end

function N_0xcb82a0bf0e3e3265(p0)
	return _in(0xCB82A0BF0E3E3265, p0, _ri)
end

function N_0xcc25a4553dfbf9ea(p0, p1, p2, p3, p4)
	return _in(0xCC25A4553DFBF9EA, p0, p1, p2, p3, p4)
end

--- RESET_*
function N_0xcc6e963682533882(object)
	return _in(0xCC6E963682533882, object)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0xccd078c2665d2973(p0)
	return _in(0xCCD078C2665D2973, p0)
end

--- REQUEST_*
function N_0xcd018c591f94cb43(ped, p1)
	return _in(0xCD018C591F94CB43, ped, p1)
end

--- Does nothing (it's a nullsub).
-- NativeDB Introduced: v323
function N_0xcd0f5b5d932ae473()
	return _in(0xCD0F5B5D932AE473)
end

--- NativeDB Introduced: v2189
function N_0xcd4d66b43b1dd28d(p0, p1, p2)
	return _in(0xCD4D66B43B1DD28D, p0, p1, p2)
end

--- Setter for 0xC2D2AD9EAAE265B8
-- SET_*
function N_0xcd74233600c4ea6b(toggle)
	return _in(0xCD74233600C4EA6B, toggle)
end

function N_0xcea7c8e1b48ff68c(p0, p1)
	return _in(0xCEA7C8E1B48FF68C, p0, p1)
end

function N_0xced08cbe8ebb97c7(p0, p1)
	return _in(0xCED08CBE8EBB97C7, p0, p1)
end

function N_0xceda60a74219d064(p0, p1)
	return _in(0xCEDA60A74219D064, p0, p1)
end

function N_0xcf9159024555488c(p0)
	return _in(0xCF9159024555488C, p0)
end

--- NativeDB Introduced: v2060
function N_0xcfd16f0db5a3535c(toggle)
	return _in(0xCFD16F0DB5A3535C, toggle)
end

--- what does this do?
function N_0xcfd778e7904c255e(vehicle)
	return _in(0xCFD778E7904C255E, vehicle)
end

function N_0xcfeb46dcd7d8d5eb(p0)
	return _in(0xCFEB46DCD7D8D5EB, p0)
end

--- NativeDB Introduced: v1180
function N_0xd05a3241b9a86f19(p0, p1)
	return _in(0xD05A3241B9A86F19, p0, p1)
end

function N_0xd0ee05fe193646ea()
	return _in(0xD0EE05FE193646EA, _i, _i, _i, _r)
end

function N_0xd10282b6e3751ba0()
	return _in(0xD10282B6E3751BA0, _ri)
end

--- PLAYSTATS_S*
function N_0xd1032e482629049e(p0)
	return _in(0xD1032E482629049E, p0)
end

function N_0xd1942374085c8469(p0)
	return _in(0xD1942374085C8469, p0)
end

function N_0xd1a1ee3b4fa8e760(p0)
	return _in(0xD1A1EE3B4FA8E760, p0)
end

--- SET_TV_???
function N_0xd1c55b110e4df534(p0)
	return _in(0xD1C55B110E4DF534, p0)
end

function N_0xd1c7cb175e012964(scaleformHandle)
	return _in(0xD1C7CB175E012964, scaleformHandle, _r)
end

function N_0xd1c9b92bdd3f151d(p0, p1, p2)
	return _in(0xD1C9B92BDD3F151D, p0, p1, p2)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0xd2049635deb9c375()
	return _in(0xD2049635DEB9C375)
end

--- NativeDB Introduced: v1868
function N_0xd29334ed1a256dbf(p0, p1, p2, p3, p4)
	return _in(0xD29334ED1A256DBF, p0, p1, p2, p3, p4)
end

function N_0xd2dccd8e16e20997(p0)
	return _in(0xD2DCCD8E16E20997, p0)
end

function N_0xd302e99edf0449cf(p0)
	return _in(0xD302E99EDF0449CF, p0, _ri)
end

--- NETWORK_SESSION_IS_*
function N_0xd313de83394af134()
	return _in(0xD313DE83394AF134, _r)
end

function N_0xd3301660a57c9272(p0)
	return _in(0xD3301660A57C9272, p0)
end

function N_0xd33daa36272177c4(ped)
	return _in(0xD33DAA36272177C4, ped)
end

function N_0xd3e51c0ab8c26eee(p0, p1)
	return _in(0xD3E51C0AB8C26EEE, p0, p1, _ri)
end

function N_0xd4196117af7bb974(p0, p1)
	return _in(0xD4196117AF7BB974, p0, p1, _ri)
end

--- NativeDB Introduced: v2189
function N_0xd4367d310f079db0(p0, p1, p2, p3)
	return _in(0xD4367D310F079DB0, p0, p1, p2, p3)
end

--- Adds an area that seems to be related to pickup physics behavior.
-- Max amount of areas is 10. Only works in multiplayer.
-- ADD_*
-- NativeDB Introduced: v1290
function N_0xd4a7a435b3710d05(x, y, z, radius)
	return _in(0xD4A7A435B3710D05, x, y, z, radius)
end

--- Only used like this:
-- if (VEHICLE::_D4C4642CB7F50B5D(ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(v_3))) {                                                        sub_157e9c(g_40001._f1868, 0);
-- }
function N_0xd4c4642cb7f50b5d(vehicle)
	return _in(0xD4C4642CB7F50B5D, vehicle, _r)
end

function N_0xd558bec0bba7e8d2(p0, p1, p2, p3, p4)
	return _in(0xD558BEC0BBA7E8D2, p0, p1, p2, p3, p4)
end

function N_0xd565f438137f0e10(p0, p1)
	return _in(0xD565F438137F0E10, p0, p1)
end

function N_0xd642319c54aadeb6()
	return _in(0xD642319C54AADEB6, _ri)
end

--- NativeDB Introduced: v2189
function N_0xd6ca58b3b53a0f22(p0)
	return _in(0xD6CA58B3B53A0F22, p0)
end

--- NativeDB Introduced: v1868
function N_0xd6d7478ca62b8d41(p0, p1)
	return _in(0xD6D7478CA62B8D41, p0, p1)
end

function N_0xd7360051c885628b()
	return _in(0xD7360051C885628B, _ri)
end

function N_0xd7b6c73cad419bcf(p0)
	return _in(0xD7B6C73CAD419BCF, p0)
end

--- NativeDB Introduced: v1180
function N_0xd7b80e7c3befc396(p0, p1)
	return _in(0xD7B80E7C3BEFC396, p0, p1)
end

function N_0xd8122c407663b995()
	return _in(0xD8122C407663B995, _ri)
end

function N_0xd821056b9acf8052(player, p1)
	return _in(0xD821056B9ACF8052, player, p1)
end

function N_0xd9454b5752c857dc()
	return _in(0xD9454B5752C857DC)
end

--- RESET_*
function N_0xd9f692d349249528()
	return _in(0xD9F692D349249528)
end

function N_0xda07819e452ffe8f(p0)
	return _in(0xDA07819E452FFE8F, p0)
end

function N_0xdaf80797fc534bec(p0)
	return _in(0xDAF80797FC534BEC, p0)
end

function N_0xdaf87174be7454ff(p0)
	return _in(0xDAF87174BE7454FF, p0, _r)
end

--- ```
-- NativeDB Introduced: v1180
-- ```
-- This native is used for the "larger" circular checkpoints, and sets the circle/ring around the checkpoint to point in the same direction as the inner arrow
-- @param checkpointHandle the handle of a created checkpoint
function N_0xdb1ea9411c8911ec(checkpointHandle)
	return _in(0xDB1EA9411C8911EC, checkpointHandle)
end

function N_0xdb41d07a45a6d4b7(p0)
	return _in(0xDB41D07A45A6D4B7, p0, _ri)
end

--- NativeDB Introduced: v1734
function N_0xdb663cc9ff3407a9(player)
	return _in(0xDB663CC9FF3407A9, player, _ri)
end

function N_0xdb90c6cca48940f1(p0)
	return _in(0xDB90C6CCA48940F1, p0)
end

--- Related to locking the vehicle or something similar.
-- In the decompiled scripts, its always called after
-- VEHICLE::_SET_EXCLUSIVE_DRIVER(a_0, 0, 0);
-- VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(a_0, 1);
-- VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(a_0, PLAYER::PLAYER_ID(), 0);
function N_0xdbc631f109350b8c(vehicle, p1)
	return _in(0xDBC631F109350B8C, vehicle, p1)
end

--- NativeDB Introduced: v2189
function N_0xdbf860cf1db8e599(p0)
	return _in(0xDBF860CF1DB8E599, p0, _ri)
end

--- SET_*
-- Only called within 1 script for x360. 'fm_mission_controller' and it used on an object.
-- Ran after these 2 natives,
-- set_object_targettable(uParam0, 0);
-- set_entity_invincible(uParam0, 1);
function N_0xdc6f8601faf2e893(entity, toggle)
	return _in(0xDC6F8601FAF2E893, entity, toggle)
end

--- Always returns false.
-- ```
-- NativeDB Introduced: v1868
-- ```
function N_0xdcc07526b8ec45af(player)
	return _in(0xDCC07526B8EC45AF, player, _r)
end

--- NativeDB Added Parameter 1: Vehicle vehicle
-- NativeDB Added Parameter 2: Any p1
function N_0xdce97bdf8a0eabc8()
	return _in(0xDCE97BDF8A0EABC8)
end

--- 2 occurrences in agency_heist3a. p1 was 0.7f then 0.4f.
function N_0xdd2620b7b9d16ff1(player, p1)
	return _in(0xDD2620B7B9D16FF1, player, p1, _r)
end

--- Tune Backwards... ?
-- SET_RADIO_*
function N_0xdd6bcf9e94425df9()
	return _in(0xDD6BCF9E94425DF9)
end

function N_0xdd79df9f4d26e1c9()
	return _in(0xDD79DF9F4D26E1C9)
end

function N_0xde03620f8703a9df()
	return _in(0xDE03620F8703A9DF, _ri)
end

function N_0xde45d1a1ef45ee61(player, toggle)
	return _in(0xDE45D1A1EF45EE61, player, toggle)
end
SetHudAnimStopLevel = N_0xde45d1a1ef45ee61

--- NativeDB Introduced: v2060
function N_0xde68e30d89f97132(amount, p1)
	return _in(0xDE68E30D89F97132, amount, p1)
end

function N_0xdeaaf77eb3687e97(p0, p1)
	return _in(0xDEAAF77EB3687E97, p0, _ii(p1) --[[ may be optional ]], _ri)
end

function N_0xdf4b952f7d381b95()
	return _in(0xDF4B952F7D381B95, _ri)
end

--- NativeDB Introduced: v1868
function N_0xdfbd93bf2943e29b(p0)
	return _in(0xDFBD93BF2943E29B, p0)
end

--- NativeDB Introduced: v2189
function N_0xdfcdb14317a9b361(p0)
	return _in(0xDFCDB14317A9B361, p0)
end

--- NativeDB Introduced: v1180
function N_0xdfe68c4b787e1bfb(ped)
	return _in(0xDFE68C4B787E1BFB, ped)
end

function N_0xe058175f8eafe79a(p0)
	return _in(0xE058175F8EAFE79A, p0)
end

function N_0xe05dd0e9707003a3(p0, p1)
	return _in(0xE05DD0E9707003A3, p0, p1)
end

--- NativeDB Introduced: v1180
function N_0xe05f6aeefeb0bb02(p0, p1, p2)
	return _in(0xE05F6AEEFEB0BB02, p0, p1, p2)
end

--- NativeDB Introduced: v1493
function N_0xe0f82d68c7039158(p0)
	return _in(0xE0F82D68C7039158, p0)
end

function N_0xe111a7c0d200cbc5(p0, p1)
	return _in(0xE111A7C0D200CBC5, p0, p1)
end

--- This function is hard-coded to always return 1.
function N_0xe154b48b68ef72bc(p0)
	return _in(0xE154B48B68EF72BC, p0, _r)
end

function N_0xe16142b94664defd(vehicle, p1)
	return _in(0xE16142B94664DEFD, vehicle, p1)
end

--- Used with IS_LOOK_INVERTED() and negates its affect.
-- --
-- Not sure how the person above got that description, but here's an actual example:
-- if (PAD::_GET_LAST_INPUT_METHOD(2)) {
-- if (a_5) {
-- if (PAD::IS_LOOK_INVERTED()) {
-- a_3 *= -1;
-- }
-- if (PAD::_E1615EC03B3BB4FD()) {
-- a_3 *= -1;
-- }
-- }
-- }
function N_0xe1615ec03b3bb4fd()
	return _in(0xE1615EC03B3BB4FD, _r)
end

function N_0xe16aa70ce9beedc3(p0)
	return _in(0xE16AA70CE9BEEDC3, p0, _ri)
end

function N_0xe23adc6fcb1f29ae(p0, p1, p2)
	return _in(0xE23ADC6FCB1F29AE, p0, p1, p2)
end

function N_0xe2892e7e55d7073a(p0)
	return _in(0xE2892E7E55D7073A, p0)
end

--- NativeDB Introduced: v2189
function N_0xe2bb399d90942091(p0, p1)
	return _in(0xE2BB399D90942091, p0, p1)
end

--- NativeDB Introduced: v2060
function N_0xe2e244ab823b4483(amount, p1)
	return _in(0xE2E244AB823B4483, amount, p1)
end

--- RESET_*
-- Resets the effect of 0x428AD3E26C8D9EB0
function N_0xe2f53f172b45ede1()
	return _in(0xE2F53F172B45EDE1)
end

function N_0xe3261d791eb44acb(p0)
	return _in(0xE3261D791EB44ACB, p0)
end

function N_0xe36a98d8ab3d3c66(p0)
	return _in(0xE36A98D8AB3D3C66, p0)
end

--- sets something to 1
function N_0xe3d969d2785ffb5e()
	return _in(0xE3D969D2785FFB5E)
end

--- Sets an unknown value related to timecycles.
function N_0xe3e2c1b4c59dbc77(unk)
	return _in(0xE3E2C1B4C59DBC77, unk)
end

function N_0xe3e5a7c64ca2c6ed()
	return _in(0xE3E5A7C64CA2C6ED, _ri)
end

--- NativeDB Introduced: v1290
function N_0xe42d626eec94e5d9(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xE42D626EEC94E5D9, p0, p1, p2, p3, p4, p5, p6)
end

function N_0xe496a53ba5f50a56(p0)
	return _in(0xE496A53BA5F50A56, p0, _ri)
end

--- NativeDB Introduced: v1290
function N_0xe4c3b169876d33d7(p0)
	return _in(0xE4C3B169876D33D7, p0)
end

function N_0xe4dcec7fd5b739a5(ped)
	return _in(0xE4DCEC7FD5B739A5, ped)
end

--- STOP_S*
function N_0xe4e6dd5566d28c82()
	return _in(0xE4E6DD5566D28C82)
end

--- NativeDB Introduced: v1290
function N_0xe4f6e8d07a2f0f51(p0)
	return _in(0xE4F6E8D07A2F0F51, p0, _ri)
end

--- SET_*
function N_0xe532ec1a63231b4f(p0, p1)
	return _in(0xE532EC1A63231B4F, p0, p1)
end

function N_0xe5810ac70602f2f5(vehicle, p1)
	return _in(0xE5810AC70602F2F5, vehicle, p1)
end

--- Getter for 0xB3C641F3630BF6DA
-- GET_M*
function N_0xe59343e9e96529e7()
	return _in(0xE59343E9E96529E7, _rf)
end

--- NativeDB Introduced: v2372
function N_0xe5e9746a66359f9d()
	return _in(0xE5E9746A66359F9D, _ri)
end

--- TOGGLE_*
function N_0xe63d7c6eececb66b(toggle)
	return _in(0xE63D7C6EECECB66B, toggle)
end

--- SET_ENTITY_M\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0xe66377cddada4810(entity, p1)
	return _in(0xE66377CDDADA4810, entity, p1)
end

function N_0xe6717e652b8c8d8a(p0, p1)
	return _in(0xE6717E652B8C8D8A, p0, p1)
end

function N_0xe67c6dfd386ea5e7(p0)
	return _in(0xE67C6DFD386EA5E7, p0)
end

--- NativeDB Introduced: v2372
function N_0xe6d2cedd370ff98e(p0, p1)
	return _in(0xE6D2CEDD370FF98E, p0, p1)
end

--- NativeDB Added Parameter 1: char* p0
-- NativeDB Added Parameter 2: int* p1
-- NativeDB Added Parameter 3: char* p2
-- NativeDB Introduced: v323
function N_0xe75a4a2e5e316d86()
	return _in(0xE75A4A2E5E316D86, _r)
end

--- This function is hard-coded to always return 0.
function N_0xe791df1f73ed2c8b(p0)
	return _in(0xE791DF1F73ED2C8B, p0, _ri)
end

function N_0xe851e480b814d4ba(vehicle, p1)
	return _in(0xE851E480B814D4BA, vehicle, p1)
end

--- GET_H*
-- NativeDB Introduced: v1604
function N_0xe8718faf591fd224(vehicle)
	return _in(0xE8718FAF591FD224, vehicle, _r)
end

function N_0xe8853fbce7d8d0d6()
	return _in(0xE8853FBCE7D8D0D6, _ri)
end

function N_0xe906ec930f5fe7c8(p0, p1)
	return _in(0xE906EC930F5FE7C8, p0, p1)
end

--- Related to tennis mode. Checks for `0x0FCED5ADF = swung`
function N_0xe95b0c7d5ba3b96b(ped)
	return _in(0xE95B0C7D5BA3B96B, ped, _r)
end

--- NativeDB Introduced: v1868
function N_0xea8c0ddb10e2822a(p0, p1)
	return _in(0xEA8C0DDB10E2822A, p0, p1)
end

--- NativeDB Introduced: v1290
function N_0xea95c0853a27888e()
	return _in(0xEA95C0853A27888E)
end

function N_0xea9960d07dadcf10(p0)
	return _in(0xEA9960D07DADCF10, p0, _ri)
end

function N_0xeaf0fa793d05c592()
	return _in(0xEAF0FA793D05C592, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0xeb078ca2b5e82add(p0, p1)
	return _in(0xEB078CA2B5E82ADD, p0, p1)
end

function N_0xeb2104e905c6f2e9()
	return _in(0xEB2104E905C6F2E9, _ri)
end

function N_0xeb6f1a9b5510a5d2(p0, p1)
	return _in(0xEB6F1A9B5510A5D2, p0, p1)
end

--- NativeDB Introduced: v1290
function N_0xeb81a3dadd503187()
	return _in(0xEB81A3DADD503187)
end

function N_0xebcab9e5048434f4()
	return _in(0xEBCAB9E5048434F4, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function N_0xebd3205a207939ed(p0)
	return _in(0xEBD3205A207939ED, _ii(p0) --[[ may be optional ]])
end

function N_0xebf8284d8cadeb53()
	return _in(0xEBF8284D8CADEB53)
end

function N_0xebfa8d50addc54c4(p0)
	return _in(0xEBFA8D50ADDC54C4, p0, _r)
end

--- SET_PED_*
-- Has most likely to do with some shooting attributes as it sets the float which is in the same range as shootRate.
function N_0xec4b4b3b9908052a(ped, unk)
	return _in(0xEC4B4B3B9908052A, ped, unk)
end

--- This function is hard-coded to always return 0.
function N_0xec72c258667be5ea(p0)
	return _in(0xEC72C258667BE5EA, p0, _ri)
end

--- STAT_LOAD_*
function N_0xecb41ac6ab754401()
	return _in(0xECB41AC6AB754401, _r)
end

--- FORCE_*
function N_0xed3c76adfa6d07c4(ped)
	return _in(0xED3C76ADFA6D07C4, ped)
end

function N_0xed5ede9e676643c9(p0, p1)
	return _in(0xED5EDE9E676643C9, p0, p1)
end

function N_0xed5fd7af10f5e262(p0, p1, p2, p3)
	return _in(0xED5FD7AF10F5E262, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1493
function N_0xed76d195e6e3bf7f(p0, p1, p2, p3)
	return _in(0xED76D195E6E3BF7F, p0, p1, p2, p3)
end

function N_0xedbc8405b3895cc9(p0, p1)
	return _in(0xEDBC8405B3895CC9, p0, p1)
end

function N_0xedbf6c9b0d2c65c8(p0)
	return _in(0xEDBF6C9B0D2C65C8, p0)
end

--- Some kind of flags.
function N_0xeebfc7a7efdc35b4(vehicle)
	return _in(0xEEBFC7A7EFDC35B4, vehicle, _ri)
end

function N_0xef398beee4ef45f9(p0)
	return _in(0xEF398BEEE4EF45F9, p0)
end

function N_0xef39ee20c537e98c(p0, p1, p2, p3, p4, p5)
	return _in(0xEF39EE20C537E98C, p0, p1, p2, p3, p4, p5)
end

--- AD*
function N_0xefabc7722293da7c()
	return _in(0xEFABC7722293DA7C)
end

--- GET_*
function N_0xf033419d1b81fae8(p0)
	return _in(0xF033419D1B81FAE8, p0, _ri)
end

function N_0xf051d9bfb6ba39c0(p0)
	return _in(0xF051D9BFB6BA39C0, p0)
end

function N_0xf06a6f41cb445443(p0)
	return _in(0xF06A6F41CB445443, p0)
end

--- NETWORK_RE*
function N_0xf083835b70ba9bfe()
	return _in(0xF083835B70BA9BFE)
end

--- Only 1 occurrence. p1 was 2.
function N_0xf10b44fd479d69f3(player, p1)
	return _in(0xF10B44FD479D69F3, player, p1, _r)
end

function N_0xf11f01d98113536a(p0)
	return _in(0xF11F01D98113536A, p0, _ri)
end

function N_0xf13fe2a80c05c561()
	return _in(0xF13FE2A80C05C561, _r)
end

--- Sets profile setting 933
function N_0xf1a1803d3476f215(value)
	return _in(0xF1A1803D3476F215, value)
end

function N_0xf22ca0fd74b80e7a(p0)
	return _in(0xF22CA0FD74B80E7A, p0, _r)
end

--- Initial guess of native: `_IS_PED_WEARING_MOTORCYCLE_HELMET`.
function N_0xf2385935bffd4d92(ped)
	return _in(0xF2385935BFFD4D92, ped, _r)
end

function N_0xf239400e16c23e08(padIndex, p1)
	return _in(0xF239400E16C23E08, padIndex, p1)
end

function N_0xf25e02cb9c5818f8()
	return _in(0xF25E02CB9C5818F8)
end

function N_0xf284ac67940c6812()
	return _in(0xF284AC67940C6812, _ri)
end

function N_0xf287f506767cc8a9()
	return _in(0xF287F506767CC8A9, _ri)
end

--- SET_PED_ALLOW*
-- toggle was always false except in one instance (b678).
-- The one time this is set to true seems to do with when you fail the mission.
function N_0xf2bebcdfafdaa19e(toggle)
	return _in(0xF2BEBCDFAFDAA19E, toggle)
end

function N_0xf2ca003f167e21d2()
	return _in(0xF2CA003F167E21D2, _ri)
end
ReturnZero = N_0xf2ca003f167e21d2

function N_0xf2e07819ef1a5289()
	return _in(0xF2E07819EF1A5289, _r)
end

function N_0xf3162836c28f9da5(p0, p1, p2, p3)
	return _in(0xF3162836C28F9DA5, p0, p1, p2, p3, _ri)
end

--- SET_VEHICLE_*
function N_0xf3365489e0dd50f9(vehicle, toggle)
	return _in(0xF3365489E0DD50F9, vehicle, toggle)
end

function N_0xf3b0e0aed097a3f5(p0, p1)
	return _in(0xF3B0E0AED097A3F5, p0, p1, _ri)
end

--- NativeDB Introduced: v1604
function N_0xf3f776ada161e47d(p0, p1)
	return _in(0xF3F776ADA161E47D, p0, p1)
end

function N_0xf49abc20d8552257(p0)
	return _in(0xF49ABC20D8552257, p0)
end

function N_0xf4a0dadb70f57fa6()
	return _in(0xF4A0DADB70F57FA6)
end

function N_0xf51d36185993515d(checkpoint, posX, posY, posZ, unkX, unkY, unkZ)
	return _in(0xF51D36185993515D, checkpoint, posX, posY, posZ, unkX, unkY, unkZ)
end

function N_0xf534d94dfa2ead26(p0, p1, p2, p3, p4)
	return _in(0xF534D94DFA2EAD26, p0, p1, p2, p3, p4)
end

function N_0xf55e4046f6f831dc(p0, p1)
	return _in(0xF55E4046F6F831DC, p0, p1)
end

function N_0xf56dfb7b61be7276(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)
	return _in(0xF56DFB7B61BE7276, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, _fi(p12) --[[ may be optional ]], _r)
end

function N_0xf5bb8dac426a52c0()
	return _in(0xF5BB8DAC426A52C0, _i, _i, _i, _i)
end

function N_0xf6baaaf762e1bf40(p0, p1)
	return _in(0xF6BAAAF762E1BF40, _ts(p0), _ii(p1) --[[ may be optional ]], _r)
end

function N_0xf6f4383b7c92f11a(p0)
	return _in(0xF6F4383B7C92F11A, p0)
end

function N_0xf78b803082d4386f(p0)
	return _in(0xF78B803082D4386F, p0)
end

function N_0xf78f94d60248c737(vehicle, p1)
	return _in(0xF78F94D60248C737, vehicle, p1, _r)
end

function N_0xf814fec6a19fd6e0()
	return _in(0xF814FEC6A19FD6E0)
end

function N_0xf8155a7f03ddfc8e(p0)
	return _in(0xF8155A7F03DDFC8E, p0)
end

--- NativeDB Added Parameter 9: Any p8
-- NativeDB Introduced: v1290
function N_0xf83d0febe75e62c9(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xF83D0FEBE75E62C9, p0, p1, p2, p3, p4, p5, p6, p7)
end

function N_0xf854439efbb3b583()
	return _in(0xF854439EFBB3B583)
end

--- BL\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0xf8ad2eed7c47e8fe(ped, p1, p2)
	return _in(0xF8AD2EED7C47E8FE, ped, p1, p2)
end

--- NativeDB Introduced: v2060
function N_0xf8b49f5ba7f850e7(vehicle, p1)
	return _in(0xF8B49F5BA7F850E7, vehicle, p1)
end

function N_0xf8c54a461c3e11dc()
	return _in(0xF8C54A461C3E11DC, _i, _i, _i, _i)
end

--- NativeDB Introduced: v1868
function N_0xf9096193df1f99d4(p0)
	return _in(0xF9096193DF1F99D4, p0)
end

function N_0xf92099527db8e2a7(p0, p1)
	return _in(0xF92099527DB8E2A7, p0, p1)
end

--- p1 was always 1 (true).
-- Kicks the ped from the current vehicle and keeps the rendering-focus on this ped (also disables its collision). If doing this for your player ped, you'll still be able to drive the vehicle.
-- Actual name begins with 'S'
function N_0xf9acf4a08098ea25(ped, p1)
	return _in(0xF9ACF4A08098EA25, ped, p1)
end

function N_0xf9c1681347c8bd15(object)
	return _in(0xF9C1681347C8BD15, object)
end

function N_0xf9f2922717b819ec()
	return _in(0xF9F2922717B819EC, _ri)
end

function N_0xfa07759e6fddd7cf(p0, p1, p2, p3)
	return _in(0xFA07759E6FDDD7CF, p0, p1, p2, p3)
end

function N_0xfa1e0e893d915215(toggle)
	return _in(0xFA1E0E893D915215, toggle)
end

function N_0xfa2888e3833c8e96()
	return _in(0xFA2888E3833C8E96)
end

--- NativeDB Introduced: v2060
function N_0xfa3ffb0eebc288a3(p0)
	return _in(0xFA3FFB0EEBC288A3, p0)
end

--- REMOVE_*
-- NativeDB Introduced: v1493
function N_0xfa83ca6776038f64(x, y, z)
	return _in(0xFA83CA6776038F64, x, y, z)
end

--- Another unknown label type...
-- MISC::_FAA457EF263E8763(a_0, "Thumb_label");
-- MISC::_FAA457EF263E8763(&a_0._f10, "Photo_label");
-- MISC::_FAA457EF263E8763(a_0, "GXTlabel");
-- MISC::_FAA457EF263E8763(&a_0._f21, "StringComp");
-- MISC::_FAA457EF263E8763(&a_0._f43, "SecondStringComp");
-- MISC::_FAA457EF263E8763(&a_0._f53, "ThirdStringComp");
-- MISC::_FAA457EF263E8763(&a_0._f32, "SenderStringComp");
-- MISC::_FAA457EF263E8763(&a_0._f726[v_1A/*16*/], &v_20); // where v_20 is "LastJobTL_0_1" thru "LastJobTL_2_1", gets saved in a struct called "LAST_JobGamer_TL"
-- MISC::_FAA457EF263E8763(&a_0._f4B, "PAID_PLAYER");
-- MISC::_FAA457EF263E8763(&a_0._f5B, "RADIO_STATION");
function N_0xfaa457ef263e8763(name)
	return _in(0xFAA457EF263E8763, _i, _ts(name))
end

--- SET_A\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0xfab944d4d481accb(ped, toggle)
	return _in(0xFAB944D4D481ACCB, ped, toggle)
end

--- NativeDB Introduced: v1180
function N_0xfac18e7356bd3210()
	return _in(0xFAC18E7356BD3210)
end

function N_0xfac75988a7d078d3(player)
	return _in(0xFAC75988A7D078D3, player)
end

function N_0xfae628f1e9adb239(p0, p1, p2)
	return _in(0xFAE628F1E9ADB239, _ch(p0), p1, _ch(p2))
end

function N_0xfaf2a78061fd9ef4(p0, p1, p2, p3)
	return _in(0xFAF2A78061FD9EF4, p0, p1, p2, p3)
end

function N_0xfb00ca71da386228()
	return _in(0xFB00CA71DA386228)
end

function N_0xfb199266061f820a()
	return _in(0xFB199266061F820A, _r)
end

--- p0 is always 0. p1 is pointing to a 
function N_0xfb1f9381e80fa13f(p0, p1)
	return _in(0xFB1F9381E80FA13F, p0, _ii(p1) --[[ may be optional ]], _ri)
end

function N_0xfb680d403909dc70(p0, p1)
	return _in(0xFB680D403909DC70, p0, p1)
end

--- Toggles some stunt jump stuff.
function N_0xfb80ab299d2ee1bd(toggle)
	return _in(0xFB80AB299D2EE1BD, toggle)
end

function N_0xfcc228e07217fcac(p0)
	return _in(0xFCC228E07217FCAC, p0)
end

--- SET_CHECKPOINT_\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0xfcf6788fc4860cd4(checkpoint)
	return _in(0xFCF6788FC4860CD4, checkpoint)
end

function N_0xfd3151cd37ea2245(entity)
	return _in(0xFD3151CD37EA2245, entity)
end

function N_0xfd325494792302d7(ped, toggle)
	return _in(0xFD325494792302D7, ped, toggle)
end
SetTimeExclusiveDisplayTexture = N_0xfd325494792302d7

function N_0xfd75dabc0957bf33(p0)
	return _in(0xFD75DABC0957BF33, p0)
end

--- A\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function N_0xfdc07c58e8aab715(pickupHash)
	return _in(0xFDC07C58E8AAB715, _ch(pickupHash))
end

function N_0xfe4c1d0d3b9cc17e(p0, p1)
	return _in(0xFE4C1D0D3B9CC17E, p0, p1, _r)
end

--- Native to check whether [`_SET_PED_SCUBA_GEAR_VARIATION`](#\_0x36c6984c3ed0c911) is enabled/actived.
function N_0xfec9a3b1820f3331(ped)
	return _in(0xFEC9A3B1820F3331, ped, _r)
end

--- Tune Forward... ?
-- SET_RADIO_*
function N_0xff266d1d0eb1195d()
	return _in(0xFF266D1D0EB1195D)
end

--- Related to Peds dropping pickup_health_snack; p0 is a value between [0.0, 1.0] that corresponds to drop rate
function N_0xff4803bc019852d9(p0, p1)
	return _in(0xFF4803BC019852D9, p0, p1)
end

function N_0xff8f3a92b75ed67a()
	return _in(0xFF8F3A92B75ED67A, _ri)
end

--- NativeDB Added Parameter 2: Any p1
function N_0xffee8fa29ab9a18e(player)
	return _in(0xFFEE8FA29AB9A18E, player)
end

function NetGameserverBasketAddItem(quantity)
	return _in(0xF30980718C8ED876, _i, quantity, _r)
end
N_0xf30980718c8ed876 = NetGameserverBasketAddItem
NetworkShopBasketAddItem = NetGameserverBasketAddItem

function NetGameserverBasketApplyServerData(p0, p1)
	return _in(0xE1A0450ED46A7812, p0, _ii(p1) --[[ may be optional ]], _r)
end
N_0xe1a0450ed46a7812 = NetGameserverBasketApplyServerData
NetworkShopBasketApplyServerData = NetGameserverBasketApplyServerData

--- NativeDB Introduced: v372
function NetGameserverBasketDelete()
	return _in(0xFA336E7F40C0A0D0, _r)
end

function NetGameserverBasketEnd()
	return _in(0xA65568121DF2EA26, _r)
end
N_0xa65568121df2ea26 = NetGameserverBasketEnd
N_0xe547e9114277098f = NetGameserverBasketEnd
NetworkShopBasketEnd = NetGameserverBasketEnd

function NetGameserverBasketIsFull()
	return _in(0x27F76CC6C55AD30E, _r)
end
N_0x27f76cc6c55ad30e = NetGameserverBasketIsFull
NetworkShopBasketIsFull = NetGameserverBasketIsFull

function NetGameserverBasketStart(categoryHash, actionHash, flags)
	return _in(0x279F08B1A4B29B7E, _i, _ch(categoryHash), _ch(actionHash), flags, _r)
end
NetworkShopBasketStart = NetGameserverBasketStart

function NetGameserverBeginService(categoryHash, itemHash, actionTypeHash, value, flags)
	return _in(0x3C5FD37B5499582E, _i, _ch(categoryHash), _ch(itemHash), _ch(actionTypeHash), value, flags, _r)
end
N_0x3c5fd37b5499582e = NetGameserverBeginService
NetworkShopBeginService = NetGameserverBeginService

function NetGameserverCatalogIsReady()
	return _in(0x3C4487461E9B0DCB, _r)
end
N_0x3c4487461e9b0dcb = NetGameserverCatalogIsReady

function NetGameserverCatalogItemExists(name)
	return _in(0xBD4D7EAF8A30F637, _ts(name), _r)
end
N_0xbd4d7eaf8a30f637 = NetGameserverCatalogItemExists
NetworkShopIsItemUnlocked = NetGameserverCatalogItemExists
NetworkShopDoesItemExist = NetGameserverCatalogItemExists

function NetGameserverCatalogItemExistsHash(hash)
	return _in(0x247F0F73A182EA0B, _ch(hash), _r)
end
N_0x247f0f73a182ea0b = NetGameserverCatalogItemExistsHash
NetworkShopIsItemUnlockedHash = NetGameserverCatalogItemExistsHash
NetworkShopDoesItemExistHash = NetGameserverCatalogItemExistsHash

function NetGameserverCheckoutStart(transactionId)
	return _in(0x39BE7CEA8D9CC8E6, transactionId, _r)
end
N_0x39be7cea8d9cc8e6 = NetGameserverCheckoutStart
NetworkShopCheckoutStart = NetGameserverCheckoutStart

function NetGameserverDeleteCharacterSlot(slot, transfer, reason)
	return _in(0x51F1A8E48C3D2F6D, slot, transfer, _ch(reason), _r)
end
N_0x51f1a8e48c3d2f6d = NetGameserverDeleteCharacterSlot

function NetGameserverDeleteCharacterSlotGetStatus()
	return _in(0x0A6D923DFFC9BD89, _ri)
end
N_0x0a6d923dffc9bd89 = NetGameserverDeleteCharacterSlotGetStatus

function NetGameserverDeleteSetTelemetryNonceSeed()
	return _in(0x112CEF1615A1139F, _r)
end
N_0x112cef1615a1139f = NetGameserverDeleteSetTelemetryNonceSeed
NetworkShopDeleteSetTelemetryNonceSeed = NetGameserverDeleteSetTelemetryNonceSeed

function NetGameserverEndService(transactionId)
	return _in(0xE2A99A9B524BEFFF, transactionId, _r)
end
N_0xe2a99a9b524befff = NetGameserverEndService
NetworkShopEndService = NetGameserverEndService
NetworkShopTerminateService = NetGameserverEndService

--- Note: only one of the arguments can be set to true at a time
function NetGameserverGetBalance(inventory, playerbalance)
	return _in(0x35A1B3E1D1315CFA, inventory, playerbalance, _r)
end
N_0x35a1b3e1d1315cfa = NetGameserverGetBalance

function NetGameserverGetCatalogState(state)
	return _in(0xCF38DAFBB49EDE5E, _ii(state) --[[ may be optional ]], _r)
end
N_0xcf38dafbb49ede5e = NetGameserverGetCatalogState

--- bool is always true in game scripts
function NetGameserverGetPrice(itemHash, categoryHash, p2)
	return _in(0xC27009422FCCA88D, _ch(itemHash), _ch(categoryHash), p2, _ri)
end
NetworkShopGetPrice = NetGameserverGetPrice

function NetGameserverGetTransactionManagerData()
	return _in(0x897433D292B44130, _i, _i --[[ actually bool ]], _r)
end
N_0x897433d292b44130 = NetGameserverGetTransactionManagerData

function NetGameserverIsCatalogValid()
	return _in(0x2B949A1E6AEC8F6A, _r)
end
N_0x2b949a1e6aec8f6a = NetGameserverIsCatalogValid

function NetGameserverIsSessionRefreshPending()
	return _in(0x810E8431C0614BF9, _r)
end
N_0x810e8431c0614bf9 = NetGameserverIsSessionRefreshPending
NetworkShopGetTransactionsDisabled = NetGameserverIsSessionRefreshPending

function NetGameserverIsSessionValid(charSlot)
	return _in(0xB24F0944DA203D9E, charSlot, _r)
end
N_0xb24f0944da203d9e = NetGameserverIsSessionValid
NetworkShopGetTransactionsEnabledForCharacter = NetGameserverIsSessionValid

function NetGameserverSessionApplyReceivedData(charSlot)
	return _in(0x2F41D51BA3BCD1F1, charSlot, _r)
end
N_0x2f41d51ba3bcd1f1 = NetGameserverSessionApplyReceivedData
NetworkShopSessionApplyReceivedData = NetGameserverSessionApplyReceivedData

function NetGameserverSetTelemetryNonceSeed(p0)
	return _in(0x9507D4271988E1AE, p0, _r)
end
N_0x9507d4271988e1ae = NetGameserverSetTelemetryNonceSeed
NetworkShopSetTelemetryNonceSeed = NetGameserverSetTelemetryNonceSeed

function NetGameserverStartSession(charSlot)
	return _in(0xA135AC892A58FC07, charSlot, _r)
end
N_0xa135ac892a58fc07 = NetGameserverStartSession
NetworkShopStartSession = NetGameserverStartSession

function NetGameserverTransferBankToWallet(charSlot, amount)
	return _in(0xD47A2C1BA117471D, charSlot, amount, _r)
end
N_0xd47a2c1ba117471d = NetGameserverTransferBankToWallet
NetworkTransferBankToWallet = NetGameserverTransferBankToWallet

--- Same as 0x350AA5EBC03D3BD2
function NetGameserverTransferCashGetStatus()
	return _in(0x23789E777D14CE44, _ri)
end
N_0x23789e777d14ce44 = NetGameserverTransferCashGetStatus

--- Same as 0x23789E777D14CE44
function NetGameserverTransferCashGetStatus_2()
	return _in(0x350AA5EBC03D3BD2, _ri)
end
N_0x350aa5ebc03d3bd2 = NetGameserverTransferCashGetStatus_2

--- Used to be NETWORK_SHOP_CASH_TRANSFER_SET_TELEMETRY_NONCE_SEED
function NetGameserverTransferCashSetTelemetryNonceSeed()
	return _in(0x498C1E05CE5F7877, _r)
end
N_0x498c1e05ce5f7877 = NetGameserverTransferCashSetTelemetryNonceSeed
NetworkShopCashTransferSetTelemetryNonceSeed = NetGameserverTransferCashSetTelemetryNonceSeed

function NetGameserverTransferWalletToBank(charSlot, amount)
	return _in(0xC2F7FE5309181C7D, charSlot, amount, _r)
end
N_0xc2f7fe5309181c7d = NetGameserverTransferWalletToBank
NetworkTransferWalletToBank = NetGameserverTransferWalletToBank

--- NativeDB Introduced: v1290
function NetGameserverUseServerTransactions()
	return _in(0x7D2708796355B20B, _r)
end

--- gets the entity id of a network id
function NetToEnt(netHandle)
	return _in(0xBFFEAB45A9A9094A, netHandle, _ri)
end

--- gets the object id of a network id
function NetToObj(netHandle)
	return _in(0xD8515F5FEA14CB3F, netHandle, _ri)
end

--- gets the ped id of a network id
function NetToPed(netHandle)
	return _in(0xBDCD95FC216A8B3E, netHandle, _ri)
end

function NetToVeh(netHandle)
	return _in(0x367B936610BA360C, netHandle, _ri)
end

--- NETWORK_RE*
-- Triggers a CEventNetworkInviteConfirmed event
function NetworkAcceptInvite()
	return _in(0x62A0296C1BB1CEB3, _r)
end
N_0x62a0296c1bb1ceb3 = NetworkAcceptInvite

function NetworkAcceptPresenceInvite(p0)
	return _in(0xFA91550DF9318B22, p0, _r)
end

function NetworkAccessTunableBool(tunableContext, tunableName)
	return _in(0xAA6A47A573ABB75A, _ts(tunableContext), _ts(tunableName), _r)
end
N_0xaa6a47a573abb75a = NetworkAccessTunableBool

function NetworkAccessTunableBoolHash(tunableContext, tunableName)
	return _in(0xEA16B69D93D71A45, _ch(tunableContext), _ch(tunableName), _r)
end
N_0xea16b69d93d71a45 = NetworkAccessTunableBoolHash
NetworkAccessTunableBoolHash = NetworkAccessTunableBoolHash

function NetworkAccessTunableFloat(tunableContext, tunableName, value)
	return _in(0xE5608CA7BC163A5F, _ts(tunableContext), _ts(tunableName), _fi(value) --[[ may be optional ]], _r)
end
N_0xe5608ca7bc163a5f = NetworkAccessTunableFloat

function NetworkAccessTunableFloatHash(tunableContext, tunableName, value)
	return _in(0x972BC203BBC4C4D5, _ch(tunableContext), _ch(tunableName), _fi(value) --[[ may be optional ]], _r)
end
N_0x972bc203bbc4c4d5 = NetworkAccessTunableFloatHash
NetworkAccessTunableFloatHash = NetworkAccessTunableFloatHash

function NetworkAccessTunableInt(tunableContext, tunableName, value)
	return _in(0x8BE1146DFD5D4468, _ts(tunableContext), _ts(tunableName), _ii(value) --[[ may be optional ]], _r)
end
N_0x8be1146dfd5d4468 = NetworkAccessTunableInt

function NetworkAccessTunableIntHash(tunableContext, tunableName, value)
	return _in(0x40FCE03E50E8DBE8, _ch(tunableContext), _ch(tunableName), _ii(value) --[[ may be optional ]], _r)
end
N_0x40fce03e50e8dbe8 = NetworkAccessTunableIntHash
NetworkAccessTunableIntHash = NetworkAccessTunableIntHash

function NetworkActionFollowInvite()
	return _in(0xC88156EBB786F8D5, _ri)
end
N_0xc88156ebb786f8d5 = NetworkActionFollowInvite

--- To remove, see: [`NETWORK_REMOVE_ENTITY_AREA`](#\_0x93CF869BAA0C4874).
-- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
function NetworkAddEntityAngledArea(x1, y1, z1, x2, y2, z2, width)
	return _in(0x376C6375BA60293A, x1, y1, z1, x2, y2, z2, width, _ri)
end
N_0x376c6375ba60293a = NetworkAddEntityAngledArea
NetworkAddEntityAngledArea = NetworkAddEntityAngledArea

function NetworkAddEntityArea(p0, p1, p2, p3, p4, p5)
	return _in(0x494C8FB299290269, p0, p1, p2, p3, p4, p5, _ri)
end

function NetworkAddEntityDisplayedBoundaries(p0, p1, p2, p3, p4, p5)
	return _in(0x25B99872D588A101, p0, p1, p2, p3, p4, p5, _ri)
end
N_0x25b99872d588a101 = NetworkAddEntityDisplayedBoundaries

function NetworkAddEntityToSynchronisedScene(entity, netScene, animDict, animName, speed, speedMulitiplier, flag)
	return _in(0xF2404D68CBC855FA, entity, netScene, _ts(animDict), _ts(animName), speed, speedMulitiplier, flag)
end

--- ..
function NetworkAddFollowers(p1)
	return _in(0x236406F60CF216D6, _i, p1)
end
N_0x236406f60cf216d6 = NetworkAddFollowers

function NetworkAddFriend(message)
	return _in(0x8E02D73914064223, _i, _ts(message), _r)
end

function NetworkAddPedToSynchronisedScene(ped, netScene, animDict, animnName, blendInSpeed, blendOutSpeed, duration, flag, playbackRate, p9)
	return _in(0x742A637471BCECD9, ped, netScene, _ts(animDict), _ts(animnName), blendInSpeed, blendOutSpeed, duration, flag, playbackRate, p9)
end

function NetworkAddSynchronisedSceneCamera(netScene, animDict, animName)
	return _in(0xCF8BD3B0BD6D42D7, netScene, _ts(animDict), _ts(animName))
end
N_0xcf8bd3b0bd6d42d7 = NetworkAddSynchronisedSceneCamera
NetworkForceLocalUseOfSyncedSceneCamera = NetworkAddSynchronisedSceneCamera

function NetworkAllocateTunablesRegistrationDataMap()
	return _in(0xFAFC23AEE23868DB, _r)
end
N_0xfafc23aee23868db = NetworkAllocateTunablesRegistrationDataMap

function NetworkAllowLocalEntityAttachment(entity, toggle)
	return _in(0x267C78C60E806B9A, entity, toggle)
end
N_0x267c78c60e806b9a = NetworkAllowLocalEntityAttachment

function NetworkAmIBlockedByGamer(networkHandle)
	return _in(0x15337C7C268A27B2, _ii(networkHandle) --[[ may be optional ]], _r)
end

function NetworkAmIBlockedByPlayer(player)
	return _in(0x87F395D957D4353D, player, _r)
end

function NetworkAmIMutedByGamer(networkHandle)
	return _in(0xDF02A2C93F1F26DA, _ii(networkHandle) --[[ may be optional ]], _r)
end

function NetworkAmIMutedByPlayer(player)
	return _in(0x9D6981DFC91A8604, player, _r)
end

function NetworkApplyCachedPlayerHeadBlendData(ped, player)
	return _in(0x99B72C7ABDE5C910, ped, player, _r)
end
N_0x99b72c7abde5c910 = NetworkApplyCachedPlayerHeadBlendData
NetworkCopyPedBlendData = NetworkApplyCachedPlayerHeadBlendData

function NetworkApplyPedScarData(ped, p1)
	return _in(0xE66C690248F11150, ped, p1)
end
N_0xe66c690248f11150 = NetworkApplyPedScarData

function NetworkApplyTransitionParameter(p0, p1)
	return _in(0x521638ADA1BA0D18, p0, p1)
end
N_0x521638ada1ba0d18 = NetworkApplyTransitionParameter

function NetworkApplyTransitionParameterString(p0, string, p2)
	return _in(0xEBEFC2E77084F599, p0, _ts(string), p2)
end
N_0xebefc2e77084f599 = NetworkApplyTransitionParameterString

function NetworkApplyVoiceProximityOverride(x, y, z)
	return _in(0xDBD2056652689917, x, y, z)
end
IsNetworkVehicleBeenDamagedByAnyObject = NetworkApplyVoiceProximityOverride

function NetworkAreHandlesTheSame()
	return _in(0x57DBA049E110F217, _i, _i, _r)
end

function NetworkAreSocialClubPoliciesCurrent()
	return _in(0xBA9775570DB788CF, _r)
end
N_0xba9775570db788cf = NetworkAreSocialClubPoliciesCurrent

function NetworkAreTransitionDetailsValid(p0)
	return _in(0x2615AA2A695930C1, p0, _r)
end
N_0x2615aa2a695930c1 = NetworkAreTransitionDetailsValid

function NetworkAttachSynchronisedSceneToEntity(netScene, entity, bone)
	return _in(0x478DCBD2A98B705A, netScene, entity, bone)
end

--- NativeDB Added Parameter 1: int p0
-- NativeDB Added Parameter 2: int p1
-- NativeDB Added Parameter 3: int p2
function NetworkBail()
	return _in(0x95914459A87EBA28)
end

--- NativeDB Added Parameter 1: int p0
-- NativeDB Added Parameter 2: int p1
-- NativeDB Added Parameter 3: int p2
function NetworkBailTransition()
	return _in(0xEAA572036990CD1B)
end

function NetworkBlockInvites(toggle)
	return _in(0x34F9E9049454A7A0, toggle)
end

function NetworkBlockJoinQueueInvites(toggle)
	return _in(0xCFEB8AF24FC1D0BB, toggle)
end
N_0xcfeb8af24fc1d0bb = NetworkBlockJoinQueueInvites
NetworkBlockInvites_2 = NetworkBlockJoinQueueInvites

function NetworkBlockKickedPlayers(p0)
	return _in(0x6B07B9CE4D390375, p0)
end
N_0x6b07b9ce4d390375 = NetworkBlockKickedPlayers

--- p1 = 0 (always)
-- p2 = 1 (always)
function NetworkBuyAirstrike(cost, p1, p2)
	return _in(0x763B4BD305338F19, cost, p1, p2)
end

--- NativeDB Introduced: v323
function NetworkBuyBackupGang(p0, p1, p2, p3)
	return _in(0xA3EDDAA42411D3B9, p0, p1, p2, p3)
end

--- p1 is just an assumption. p2 was false and p3 was true.
function NetworkBuyBounty(amount, victim, p2, p3)
	return _in(0x7B718E197453F2D9, amount, victim, p2, p3)
end

function NetworkBuyContraband(p0, p1, p2, p3, p4)
	return _in(0x30FD873ECE50E9F6, p0, p1, _ch(p2), p3, p4)
end
N_0x30fd873ece50e9f6 = NetworkBuyContraband

--- The first parameter is the amount spent which is store in a global when this native is called. The global returns 10. Which is the price for both rides.
-- The last 3 parameters are,
-- 2,0,1 in the am_ferriswheel.c
-- 1,0,1 in the am_rollercoaster.c
function NetworkBuyFairgroundRide(amountSpent, p1, p2, p3)
	return _in(0x8A7B3952DD64D2B5, amountSpent, p1, p2, p3)
end
N_0x8a7b3952dd64d2b5 = NetworkBuyFairgroundRide

function NetworkBuyHealthcare(cost, p1, p2)
	return _in(0xD9B067E55253E3DD, cost, p1, p2)
end

--- p1 = 0 (always)
-- p2 = 1 (always)
function NetworkBuyHeliStrike(cost, p1, p2)
	return _in(0x81AA4610E3FD3A69, cost, p1, p2)
end

function NetworkBuyItem(amount, item, p2, p3, p4, item_name, p6, p7, p8, p9)
	return _in(0xF0077C797F66A355, amount, _ch(item), p2, p3, p4, _ts(item_name), p6, p7, p8, p9)
end

--- NativeDB Introduced: v323
function NetworkBuyLotteryTicket(p0, p1, p2, p3)
	return _in(0xD987F2489969668C, p0, p1, p2, p3)
end

function NetworkBuyProperty(propertyCost, propertyName, p2, p3)
	return _in(0x650A08A280870AF6, propertyCost, _ch(propertyName), p2, p3)
end

--- NativeDB Introduced: v323
function NetworkBuySmokes(p0, p1, p2)
	return _in(0x75AF80E61248EEBD, p0, p1, p2)
end

function NetworkCacheLocalPlayerHeadBlendData()
	return _in(0xBD0BE0BFC927EAC1)
end
N_0xbd0be0bfc927eac1 = NetworkCacheLocalPlayerHeadBlendData

--- 11 - Need to download tunables.
-- 12 - Need to download background script.
-- Returns 1 if the multiplayer is loaded, otherwhise 0.
function NetworkCanAccessMultiplayer(loadingState)
	return _in(0xAF50DA1A3F8B1BA4, _ii(loadingState) --[[ may be optional ]], _r)
end
N_0xaf50da1a3f8b1ba4 = NetworkCanAccessMultiplayer

function NetworkCanBail()
	return _in(0x580CE4438479CC61, _r)
end

function NetworkCanBet(amount)
	return _in(0x3A54E33660DED67F, amount, _r)
end
N_0x3a54e33660ded67f = NetworkCanBet

--- NativeDB Introduced: v323
function NetworkCanBuyLotteryTicket(cost)
	return _in(0xC62DD18375C99130, cost, _r)
end

function NetworkCanCommunicateWithGamer(networkHandle)
	return _in(0xA150A4F065806B1F, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- Same as NETWORK_CAN_COMMUNICATE_WITH_GAMER
-- NETWORK_CAN_*
function NetworkCanCommunicateWithGamer_2(networkHandle)
	return _in(0x8F5D1AD832AEB06C, _ii(networkHandle) --[[ may be optional ]], _r)
end
N_0x8f5d1ad832aeb06c = NetworkCanCommunicateWithGamer_2

function NetworkCanEnterMultiplayer()
	return _in(0x7E782A910C362C25, _r)
end

function NetworkCanGamerPlayMultiplayerWithMe(networkHandle)
	return _in(0x135F9B7B7ADD2185, _ii(networkHandle) --[[ may be optional ]], _r)
end
N_0x135f9b7b7add2185 = NetworkCanGamerPlayMultiplayerWithMe

function NetworkCanPlayMultiplayerWithGamer(networkHandle)
	return _in(0x07DD29D5E22763F1, _ii(networkHandle) --[[ may be optional ]], _r)
end
N_0x07dd29d5e22763f1 = NetworkCanPlayMultiplayerWithGamer

function NetworkCanReceivePlayerCash(p0, p1, p2, p3)
	return _in(0x5D17BE59D2123284, p0, p1, p2, p3, _r)
end

function NetworkCanSessionEnd()
	return _in(0x4EEBC3694E49C572, _r)
end

function NetworkCanSetWaypoint()
	return _in(0xC927EC229934AF60, _r)
end

function NetworkCanShareJobCash()
	return _in(0x1C2473301B1C66BA, _r)
end
N_0x1c2473301b1c66ba = NetworkCanShareJobCash

--- NativeDB Added Parameter 6: Any p5
function NetworkCanSpendMoney(p0, p1, p2, p3, p4)
	return _in(0xAB3CAA6B422164DA, p0, p1, p2, p3, p4, _r)
end
N_0xab3caa6b422164da = NetworkCanSpendMoney

--- NETWORK_CAN_R??? or NETWORK_CAN_S???
-- ```
-- ```
-- NativeDB Added Parameter 7: Any p6
function NetworkCanSpendMoney_2(p0, p1, p2, p3, p5)
	return _in(0x7303E27CC6532080, p0, p1, p2, p3, _i, p5, _r)
end
N_0x7303e27cc6532080 = NetworkCanSpendMoney_2

function NetworkCanViewGamerUserContent(networkHandle)
	return _in(0xB57A49545BA53CE7, _ii(networkHandle) --[[ may be optional ]], _r)
end
N_0xb57a49545ba53ce7 = NetworkCanViewGamerUserContent

function NetworkCancelRespawnSearch()
	return _in(0xFB8F2A6F3DF08CBE)
end
N_0xfb8f2a6f3df08cbe = NetworkCancelRespawnSearch

--- NETWORK_C\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function NetworkCasinoCanGamble(p0)
	return _in(0xF62F6D9528358FE4, p0, _r)
end

--- Same as 0x8968D4D8C6C40C11.
-- NETWORK_C\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function NetworkCasinoCanPurchaseChipsWithPvc()
	return _in(0x394DCDB9E836B7A9, _r)
end

--- Same as 0x394DCDB9E836B7A9.
-- NETWORK_C\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function NetworkCasinoCanPurchaseChipsWithPvc_2()
	return _in(0x8968D4D8C6C40C11, _r)
end

--- GTAO_CASINO_HOUSE
-- GTAO_CASINO_INSIDETRACK
-- GTAO_CASINO_LUCKYWHEEL
-- GTAO_CASINO_BLACKJACK
-- GTAO_CASINO_ROULETTE
-- GTAO_CASINO_SLOTS
-- GTAO_CASINO_PURCHASE_CHIPS
-- NETWORK_C\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function NetworkCasinoCanUseGamblingType(hash)
	return _in(0x158C16F5E4CF41F8, _ch(hash), _r)
end

--- NETWORK_C\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function NetworkCasinoPurchaseChips(p0, p1)
	return _in(0x3BD101471C7F9EEC, p0, p1, _r)
end

--- NETWORK_C\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function NetworkCasinoSellChips(p0, p1)
	return _in(0xED44897CB336F480, p0, p1, _r)
end

function NetworkChangeTransitionSlots(p0, p1)
	return _in(0xEEEDA5E6D7080987, p0, p1)
end
N_0xeeeda5e6d7080987 = NetworkChangeTransitionSlots

function NetworkCheckCommunicationPrivileges(p0, p1, p2)
	return _in(0x83F28CE49FBBFFBA, p0, p1, p2, _r)
end
N_0x83f28ce49fbbffba = NetworkCheckCommunicationPrivileges

function NetworkCheckDataManagerSucceededForHandle(p0, p1)
	return _in(0x44B37CDCAE765AAE, p0, _ii(p1) --[[ may be optional ]], _r)
end
N_0x44b37cdcae765aae = NetworkCheckDataManagerSucceededForHandle

function NetworkCheckUserContentPrivileges(p0, p1, p2)
	return _in(0x595F028698072DD9, p0, p1, p2, _r)
end
N_0x595f028698072dd9 = NetworkCheckUserContentPrivileges

--- Only documented...
function NetworkClanAnimation(animDict, animName)
	return _in(0x729E3401F0430686, _ts(animDict), _ts(animName), _r)
end
N_0x729e3401f0430686 = NetworkClanAnimation

function NetworkClanAnyDownloadMembershipPending()
	return _in(0xB3F64A6A91432477, _r)
end
N_0xb3f64a6a91432477 = NetworkClanAnyDownloadMembershipPending
NetworkIsClanMembershipFinishedDownloading = NetworkClanAnyDownloadMembershipPending

function NetworkClanDownloadMembership(networkHandle)
	return _in(0xA989044E70010ABE, _ii(networkHandle) --[[ may be optional ]], _r)
end

function NetworkClanDownloadMembershipPending(p0)
	return _in(0x5B9E023DC6EBEDC0, _ii(p0) --[[ may be optional ]], _r)
end

function NetworkClanGetEmblemTxdName(txdName)
	return _in(0x5835D9CD92E83184, _i, _ts(txdName), _r)
end
N_0x5835d9cd92e83184 = NetworkClanGetEmblemTxdName
NetworkGetPlayerCrewEmblemTxdName = NetworkClanGetEmblemTxdName

function NetworkClanGetLocalMembershipsCount()
	return _in(0x1F471B79ACC90BEF, _ri)
end
N_0x1f471b79acc90bef = NetworkClanGetLocalMembershipsCount
GetNumMembershipDesc = NetworkClanGetLocalMembershipsCount
NetworkClanGetNumMembershipDesc = NetworkClanGetLocalMembershipsCount

--- Retrieves a membership for a player, from the cache (i.e. downloaded via NETWORK_CLAN_DOWNLOAD_MEMBERSHIP).
-- Test C++ code:
-- https://pastebin.com/CD8wni4C
-- @param networkHandle A player network handle.
-- @param clanMembership Output buffer for the membership data. Also known as "desc".
-- @param membershipIndex If the player has multiple crews/memberships, use \[0-9], or -1 to get the active crew/membership.
-- @return Returns true on success, false otherwise.
function NetworkClanGetMembership(membershipIndex)
	return _in(0xC8BC2011F67B3411, _i, _i, membershipIndex, _r)
end

function NetworkClanGetMembershipCount(p0)
	return _in(0xAAB11F6C4ADBC2C1, _ii(p0) --[[ may be optional ]], _ri)
end

function NetworkClanGetMembershipDesc(p1)
	return _in(0x48DE78AF2C8885B8, _i, p1, _r)
end

--- Checks if a crew/membership for a player, from the cache (i.e. downloaded via NETWORK_CLAN_DOWNLOAD_MEMBERSHIP) is valid.
-- @param networkHandle A player network handle.
-- @param membershipIndex If the player has multiple crews/memberships, use \[0-9], or -1 to get the active crew/membership.
-- @return Returns true if valid, false otherwise.
function NetworkClanGetMembershipValid(membershipIndex)
	return _in(0x48A59CF88D43DF0E, _i, membershipIndex, _r)
end

--- bufferSize is 35 in the scripts.
function NetworkClanGetUiFormattedTag(bufferSize, formattedTag)
	return _in(0xF45352426FF3A4F0, _i, bufferSize, _ts(formattedTag))
end
N_0xf45352426ff3a4f0 = NetworkClanGetUiFormattedTag

function NetworkClanIsEmblemReady(p0, p1)
	return _in(0xA134777FF7F33331, p0, _ii(p1) --[[ may be optional ]], _r)
end
N_0xa134777ff7f33331 = NetworkClanIsEmblemReady

--- bufferSize is 35 in the scripts.
function NetworkClanIsRockstarClan(bufferSize)
	return _in(0x7543BB439F63792B, _i, bufferSize, _r)
end
N_0x7543bb439f63792b = NetworkClanIsRockstarClan

function NetworkClanJoin(clanDesc)
	return _in(0x9FAAA4F4FC71F87F, clanDesc, _r)
end

--- bufferSize is 35 in the scripts.
-- bufferSize is the elementCount of p0(desc), sizeof(p0) == 280 == p1*8 == 35 * 8, p2(netHandle) is obtained from NETWORK::NETWORK_HANDLE_FROM_PLAYER.  And no, I can't explain why 35 * sizeof(int) == 280 and not 140, but I'll get back to you on that.
-- the answer is: because p0 an int64_t* / int64_t[35].  and FYI p2 is an int64_t[13]
-- pastebin.com/cSZniHak
function NetworkClanPlayerGetDesc(bufferSize)
	return _in(0xEEE6EACBE8874FBA, _i, bufferSize, _i, _r)
end

function NetworkClanPlayerIsActive(networkHandle)
	return _in(0xB124B57F571D8F18, _ii(networkHandle) --[[ may be optional ]], _r)
end

function NetworkClanReleaseEmblem(p0)
	return _in(0x113E6E3E50E286B0, p0)
end
N_0x113e6e3e50e286b0 = NetworkClanReleaseEmblem

function NetworkClanRemoteMembershipsAreInCache(p0)
	return _in(0xBB6E6FEE99D866B2, _ii(p0) --[[ may be optional ]], _r)
end

function NetworkClanRequestEmblem(p0)
	return _in(0x13518FF1C6B28938, p0, _r)
end
N_0x13518ff1c6b28938 = NetworkClanRequestEmblem

function NetworkClanServiceIsValid()
	return _in(0x579CCED0265D4896, _r)
end
NetworkPlayerIsInClan = NetworkClanServiceIsValid

function NetworkClearCharacterWallet(characterSlot)
	return _in(0xA921DED15FDF28F5, characterSlot)
end
N_0xa921ded15fdf28f5 = NetworkClearCharacterWallet

function NetworkClearClockTimeOverride()
	return _in(0xD972DF67326F966E)
end
N_0xd972df67326f966e = NetworkClearClockTimeOverride

function NetworkClearFollowInvite()
	return _in(0x439BFDE3CD0610F6, _ri)
end
N_0x439bfde3cd0610f6 = NetworkClearFollowInvite

function NetworkClearFollowers()
	return _in(0x058F43EC59A8631A)
end
N_0x058f43ec59a8631a = NetworkClearFollowers

function NetworkClearFoundGamers()
	return _in(0x6D14CCEE1B40381A)
end

function NetworkClearGetGamerStatus()
	return _in(0x86E0660E4F5C956D)
end
N_0x86e0660e4f5c956d = NetworkClearGetGamerStatus

function NetworkClearPropertyId()
	return _in(0xC2B82527CA77053E)
end
N_0xc2b82527ca77053e = NetworkClearPropertyId

function NetworkClearTransitionCreatorHandle()
	return _in(0xFB3272229A82C759)
end

function NetworkClearVoiceChannel()
	return _in(0xE036A705F989E049)
end
N_0xe036a705f989e049 = NetworkClearVoiceChannel

function NetworkClearVoiceProximityOverride()
	return _in(0xF03755696450470C)
end
N_0xf03755696450470c = NetworkClearVoiceProximityOverride

function NetworkCloseTransitionMatchmaking()
	return _in(0x43F4DBA69710E01E)
end
N_0x43f4dba69710e01e = NetworkCloseTransitionMatchmaking

function NetworkConcealEntity(entity, toggle)
	return _in(0x1632BE0AC1E62876, entity, toggle)
end

--- This is what R\* uses to hide players in MP interiors.
function NetworkConcealPlayer(player, toggle, p2)
	return _in(0xBBDF066252829606, player, toggle, p2)
end

function NetworkCreateSynchronisedScene(x, y, z, xRot, yRot, zRot, rotationOrder, holdLastFrame, looped, p9, animTime, animSpeed)
	return _in(0x7CD6BC4C2BBDD526, x, y, z, xRot, yRot, zRot, rotationOrder, holdLastFrame, looped, p9, animTime, animSpeed, _ri)
end

--- NativeDB Introduced: v323
function NetworkDeductCash(amount, p1, p2, p3, p4, p5)
	return _in(0x18B7AE224B087E26, amount, _ts(p1), _ts(p2), p3, p4, p5)
end

--- Note the 2nd parameters are always 1, 0. I have a feeling it deals with your money, wallet, bank. So when you delete the character it of course wipes the wallet cash at that time. So if that was the case, it would be eg, NETWORK_DELETE_CHARACTER(characterIndex, deleteWalletCash, deleteBankCash);
function NetworkDeleteCharacter(characterSlot, p1, p2)
	return _in(0x05A50AF38947EB8D, characterSlot, p1, p2)
end

function NetworkDidFindGamersSucceed()
	return _in(0xF9B83B77929D8863, _r)
end
N_0xf9b83b77929d8863 = NetworkDidFindGamersSucceed

function NetworkDidGetGamerStatusSucceed()
	return _in(0x5AE17C6B0134B7F1, _r)
end
N_0x5ae17c6b0134b7f1 = NetworkDidGetGamerStatusSucceed

function NetworkDisableInvincibleFlashing(player, toggle)
	return _in(0x9DD368BF06983221, player, toggle)
end
N_0x9dd368bf06983221 = NetworkDisableInvincibleFlashing

function NetworkDisableLeaveRemotePedBehind(toggle)
	return _in(0xC505036A35AFD01B, toggle)
end
N_0xc505036a35afd01b = NetworkDisableLeaveRemotePedBehind

function NetworkDisableProximityMigration(netID)
	return _in(0x407091CF6037118E, netID)
end
N_0x407091cf6037118e = NetworkDisableProximityMigration

--- Hardcoded to return -1.
function NetworkDisplaynamesFromHandlesStart(p1)
	return _in(0xD66C9E72B3CC4982, _i, p1, _ri)
end
N_0xd66c9e72b3cc4982 = NetworkDisplaynamesFromHandlesStart

--- NativeDB Added Parameter 5: Any p4
-- NativeDB Added Parameter 6: Any p5
function NetworkDoTransitionQuickmatch(p0, p1, p2, p3)
	return _in(0x71FB0EBCD4915D56, p0, p1, p2, p3, _r)
end
N_0x71fb0ebcd4915d56 = NetworkDoTransitionQuickmatch

--- NativeDB Added Parameter 5: Any p4
-- NativeDB Added Parameter 6: Any p5
function NetworkDoTransitionQuickmatchAsync(p0, p1, p2, p3)
	return _in(0xA091A5E44F0072E5, p0, p1, p2, p3, _r)
end
N_0xa091a5e44f0072e5 = NetworkDoTransitionQuickmatchAsync

--- NativeDB Added Parameter 7: Any p6
-- NativeDB Added Parameter 8: Any p7
function NetworkDoTransitionQuickmatchWithGroup(p0, p1, p2, p3, p5)
	return _in(0x9C4AB58491FDC98A, p0, p1, p2, p3, _i, p5, _r)
end

--- p2 is true 3/4 of the occurrences I found.
-- 'players' is the number of players for a session. On PS3/360 it's always 18. On PC it's 32.
function NetworkDoTransitionToFreemode(p1, p2, players, p4)
	return _in(0x3AAD8B2FCA1E289F, _i, p1, p2, players, p4, _r)
end

function NetworkDoTransitionToGame(p0, maxPlayers)
	return _in(0x3E9BB38102A589B0, p0, maxPlayers, _r)
end

function NetworkDoTransitionToNewFreemode(players, p3, p4, p5)
	return _in(0x9E80A5BA8109F974, _i, _i, players, p3, p4, p5, _r)
end

function NetworkDoTransitionToNewGame(p0, maxPlayers, p2)
	return _in(0x4665F51EFED00034, p0, maxPlayers, p2, _r)
end

function NetworkDoesEntityExistWithNetworkId(netId)
	return _in(0x18A47D074708FD68, netId, _r)
end

function NetworkDoesNetworkIdExist(netId)
	return _in(0x38CE16C96BD11344, netId, _r)
end

function NetworkDoesTunableExist(tunableContext, tunableName)
	return _in(0x85E5F8B9B898B20A, _ts(tunableContext), _ts(tunableName), _r)
end

function NetworkDoesTunableExistHash(tunableContext, tunableName)
	return _in(0xE4E53E1419D81127, _ch(tunableContext), _ch(tunableName), _r)
end
N_0xe4e53e1419d81127 = NetworkDoesTunableExistHash
NetworkDoesTunableExistHash = NetworkDoesTunableExistHash

function NetworkEarnBoss(p0, p1, p2)
	return _in(0x08B0CA7A6AB3AC32, p0, p1, p2)
end
N_0x08b0ca7a6ab3ac32 = NetworkEarnBoss

function NetworkEarnBossAgency(p0, p1, p2, p3)
	return _in(0x0CB1BE0633C024A8, p0, p1, p2, p3)
end
N_0x0cb1be0633c024a8 = NetworkEarnBossAgency

--- NativeDB Introduced: v1493
function NetworkEarnBountyHunterReward(p0)
	return _in(0xF6B170F9A02E9E87, p0)
end
N_0xf6b170f9a02e9e87 = NetworkEarnBountyHunterReward

--- NativeDB Introduced: v1868
function NetworkEarnCasinoHeist(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x72E7C7B9615FA3C3, p0, p1, p2, p3, p4, p5, p6)
end

--- NativeDB Introduced: v1868
function NetworkEarnCasinoHeistBonus(p0, p1, p2, p3, p4)
	return _in(0x3EC7471E6909798A, p0, p1, p2, p3, p4)
end

--- NativeDB Introduced: v2060
function NetworkEarnCollectableCompletedCollection(amount, p1)
	return _in(0x5C9B198AF5A54FA6, amount, p1)
end

--- NativeDB Introduced: v1493
function NetworkEarnFmbbWageBonus(p0)
	return _in(0xFFFBA1B1F7C0B6F4, p0)
end
N_0xfffba1b1f7c0b6f4 = NetworkEarnFmbbWageBonus

--- DSPORT
function NetworkEarnFromAiTargetKill(p0, p1)
	return _in(0x515B4A22E4D3C6D7, p0, p1)
end
N_0x515b4a22e4d3c6d7 = NetworkEarnFromAiTargetKill

--- Example for p1: "AM_DISTRACT_COPS"
function NetworkEarnFromAmbientJob(p0, p1, p2)
	return _in(0xFB6DB092FBAE29E6, p0, _ts(p1), _ii(p2) --[[ may be optional ]])
end
N_0xfb6db092fbae29e6 = NetworkEarnFromAmbientJob
NetworkEarnFromAmbientJob = NetworkEarnFromAmbientJob

--- NativeDB Introduced: v1604
function NetworkEarnFromArenaCareerProgression(amount, p1)
	return _in(0x0F99F70C61F14619, amount, p1)
end

--- NativeDB Introduced: v1604
function NetworkEarnFromArenaSkillLevelProgression(amount, p1)
	return _in(0xE08256F972C7BB2C, amount, p1)
end

--- NativeDB Introduced: v1604
function NetworkEarnFromArenaWar(amount, p1, p2, p3)
	return _in(0x631F1CB8FB4130AA, amount, p1, p2, p3)
end

--- For the money bags that drop a max of $40,000. Often called 40k bags.
-- Most likely NETWORK_EARN_FROM_ROB***
function NetworkEarnFromArmourTruck(amount)
	return _in(0xF514621E8EA463D0, amount)
end
N_0xf514621e8ea463d0 = NetworkEarnFromArmourTruck

--- NativeDB Introduced: v1604
function NetworkEarnFromAssassinateTargetKilled(amount)
	return _in(0xFA700D8A9905F78A, amount)
end

--- NativeDB Introduced: v1604
function NetworkEarnFromAssassinateTargetKilled_2(amount)
	return _in(0x5E7AE8AABE8B7C0D, amount)
end

--- NativeDB Introduced: v2372
function NetworkEarnFromAutoshopBusiness(p0, p1)
	return _in(0x36A7FD5A7194B03E, p0, p1)
end
N_0x36a7fd5a7194b03e = NetworkEarnFromAutoshopBusiness

--- NativeDB Introduced: v2372
function NetworkEarnFromAutoshopIncome(p0)
	return _in(0xC66D1CF99ED7FE25, p0)
end
N_0xc66d1cf99ed7fe25 = NetworkEarnFromAutoshopIncome

--- NativeDB Introduced: v1604
function NetworkEarnFromBbEventBonus(amount)
	return _in(0xFDD8D2440DAF1590, amount)
end

--- NativeDB Introduced: v1604
function NetworkEarnFromBbEventCargo(amount)
	return _in(0xA82959062361B259, amount)
end

function NetworkEarnFromBendJob(amount, heistHash)
	return _in(0x61326EE6DF15B0CA, amount, _ts(heistHash))
end
N_0x61326ee6df15b0ca = NetworkEarnFromBendJob
NetworkEarnFromMissionH = NetworkEarnFromBendJob

function NetworkEarnFromBetting(amount, p1)
	return _in(0x827A5BA1A44ACA6D, amount, _ts(p1))
end

function NetworkEarnFromBounty(amount, p3)
	return _in(0x131BB5DA15453ACF, amount, _i, _i, p3)
end

--- NativeDB Introduced: v1493
function NetworkEarnFromBusinessBattle(p0)
	return _in(0x42FCE14F50F27291, p0)
end
N_0x42fce14f50f27291 = NetworkEarnFromBusinessBattle

--- NativeDB Introduced: v1493
function NetworkEarnFromBusinessHubSell(p0, p1, p2)
	return _in(0x0B39CF0D53F1C883, p0, p1, p2)
end
N_0x0b39cf0d53f1c883 = NetworkEarnFromBusinessHubSell

function NetworkEarnFromBusinessProduct(amount, p1, p2, p3)
	return _in(0x8586789730B10CAF, amount, p1, p2, p3)
end
N_0x8586789730b10caf = NetworkEarnFromBusinessProduct

--- NativeDB Introduced: v2372
function NetworkEarnFromCarclubMembership(p0)
	return _in(0xBC6227792A188E2E, p0)
end
N_0xbc6227792a188e2e = NetworkEarnFromCarclubMembership

--- NativeDB Introduced: v1290
function NetworkEarnFromCashingOut(amount)
	return _in(0xEFE9C9A1651B81E6, amount)
end

--- NativeDB Introduced: v1734
function NetworkEarnFromCasinoAward(amount, hash)
	return _in(0x973A9781A34F8DEB, amount, _ch(hash))
end

--- NativeDB Introduced: v1734
function NetworkEarnFromCasinoMissionParticipation(amount)
	return _in(0x09E8F18641BE2575, amount)
end

--- NativeDB Introduced: v1734
function NetworkEarnFromCasinoMissionReward(amount)
	return _in(0x566FD402B25787DE, amount)
end

--- NativeDB Introduced: v1734
function NetworkEarnFromCasinoStoryMissionReward(amount)
	return _in(0xAC95ED552157E092, amount)
end

function NetworkEarnFromChallengeWin(p0, p2)
	return _in(0x2B171E6B2F64D8DF, p0, _i, p2)
end
N_0x2b171e6b2f64d8df = NetworkEarnFromChallengeWin

--- NativeDB Introduced: v1493
function NetworkEarnFromClubManagementParticipation(p0)
	return _in(0xA75EAC69F59E96E7, p0)
end
N_0xa75eac69f59e96e7 = NetworkEarnFromClubManagementParticipation

--- NativeDB Introduced: v1734
function NetworkEarnFromCollectablesActionFigures(amount)
	return _in(0x5517F90043466049, amount)
end

--- NativeDB Introduced: v1734
function NetworkEarnFromCollectionItem(amount, p1)
	return _in(0x84FF63BD4966F33D, amount, p1)
end

--- NativeDB Introduced: v1734
function NetworkEarnFromCompleteCollection(amount)
	return _in(0x83AD64F53F4E9483, amount)
end

function NetworkEarnFromContraband(amount, p1)
	return _in(0xECA658CE2A4E5A72, amount, p1)
end
N_0xeca658ce2a4e5a72 = NetworkEarnFromContraband

function NetworkEarnFromCrateDrop(amount)
	return _in(0xB1CC1B9EC3007A2A, amount)
end
N_0xb1cc1b9ec3007a2a = NetworkEarnFromCrateDrop

--- NativeDB Introduced: v1290
function NetworkEarnFromCriminalMastermindBonus(p0, p1, p2)
	return _in(0xFA009A62990671D4, p0, p1, p2)
end
N_0xd20d79671a598594 = NetworkEarnFromCriminalMastermindBonus

--- NativeDB Introduced: v1734
function NetworkEarnFromDailyObjectiveEvent(amount)
	return _in(0x5128DF14A5BB86FC, amount)
end

function NetworkEarnFromDailyObjectives(p0, p1, p2)
	return _in(0x6EA318C91C1A8786, p0, _ts(p1), p2)
end
N_0x6ea318c91c1a8786 = NetworkEarnFromDailyObjectives
NetworkEarnFromDailyObjective = NetworkEarnFromDailyObjectives

--- NativeDB Introduced: v1290
function NetworkEarnFromDarChallenge(amount, p1)
	return _in(0xCAC672087B4A24AB, amount, p1)
end

function NetworkEarnFromDestroyingContraband(p0)
	return _in(0x84C0116D012E8FC2, p0)
end
N_0x84c0116d012e8fc2 = NetworkEarnFromDestroyingContraband

--- NativeDB Introduced: v1290
function NetworkEarnFromDoomsdayFinaleBonus(amount, vehicleHash)
	return _in(0x128A747F4A230952, amount, _ch(vehicleHash))
end

--- NativeDB Introduced: v1493
function NetworkEarnFromFmbbBossWork(p0)
	return _in(0x1FDA0AA679C9919B, p0)
end
N_0x1fda0aa679c9919b = NetworkEarnFromFmbbBossWork

--- NativeDB Introduced: v1493
function NetworkEarnFromFmbbPhonecallMission(p0)
	return _in(0xC5156361F26E2212, p0)
end
N_0xc5156361f26e2212 = NetworkEarnFromFmbbPhonecallMission

function NetworkEarnFromGangPickup(amount)
	return _in(0xA03D4ACE0A3284CE, amount)
end
N_0xa03d4ace0a3284ce = NetworkEarnFromGangPickup

--- NativeDB Introduced: v1290
function NetworkEarnFromGangopsAwards(amount, unk, p2)
	return _in(0xA9A31475F530DFDA, amount, _ts(unk), p2)
end

--- NativeDB Introduced: v1290
function NetworkEarnFromGangopsElite(amount, unk, actIndex)
	return _in(0x2597A0D4A4FC2C77, amount, _ts(unk), actIndex)
end

--- NativeDB Introduced: v1290
function NetworkEarnFromGangopsJobsFinale(amount, unk)
	return _in(0x1C121FC9545E0D52, amount, _ts(unk))
end

--- NativeDB Introduced: v1290
function NetworkEarnFromGangopsJobsPrepParticipation(amount)
	return _in(0xED26584F6BDCBBFD, amount)
end

--- NativeDB Introduced: v1290
function NetworkEarnFromGangopsJobsSetup(amount, unk)
	return _in(0xA9160796D47A2CF8, amount, _ts(unk))
end

--- NativeDB Introduced: v1290
function NetworkEarnFromGangopsWages(amount, p1)
	return _in(0x2DCB19ABAB0380A8, amount, p1)
end

--- NativeDB Introduced: v1290
function NetworkEarnFromGangopsWagesBonus(amount, p1)
	return _in(0x15BB2A5C757EB91F, amount, p1)
end

--- NativeDB Introduced: v1493
function NetworkEarnFromHackerTruckMission(p0, amount, p2, p3)
	return _in(0xE8815FE993896AD3, p0, amount, p2, p3)
end

function NetworkEarnFromHoldups(amount)
	return _in(0x45B8154E077D9E4D, amount)
end

function NetworkEarnFromImportExport(amount, modelHash)
	return _in(0xF92A014A634442D6, amount, _ch(modelHash))
end

function NetworkEarnFromJob(amount, p1)
	return _in(0xB2CC4836834E8A98, amount, _ts(p1))
end

--- NativeDB Introduced: v323
function NetworkEarnFromJobBonus(p0)
	return _in(0x6816FB4416760775, p0, _i, _i)
end
N_0x6816fb4416760775 = NetworkEarnFromJobBonus
NetworkEarnFromJobBonus = NetworkEarnFromJobBonus

--- NativeDB Introduced: v1734
function NetworkEarnFromJobX2(amount, p1)
	return _in(0xDEBBF584665411D0, amount, _ts(p1))
end

function NetworkEarnFromNotBadsport(amount)
	return _in(0x4337511FA8221D36, amount)
end
N_0x4337511fa8221d36 = NetworkEarnFromNotBadsport

function NetworkEarnFromPersonalVehicle(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x3F4D00167E41E0AD, p0, p1, p2, p3, p4, p5, p6, p7, p8)
end
N_0x3f4d00167e41e0ad = NetworkEarnFromPersonalVehicle

function NetworkEarnFromPickup(amount)
	return _in(0xED1517D3AF17C698, amount)
end

function NetworkEarnFromPremiumJob(amount, p1)
	return _in(0xC8407624CEF2354B, amount, _ts(p1))
end
N_0xc8407624cef2354b = NetworkEarnFromPremiumJob

function NetworkEarnFromProperty(amount, propertyName)
	return _in(0x849648349D77F5C5, amount, _ch(propertyName))
end

--- NativeDB Introduced: v1734
function NetworkEarnFromRcTimeTrial(amount)
	return _in(0xDFF49EE984E7AAE8, amount)
end

--- NativeDB Introduced: v1290
function NetworkEarnFromRdrBonus(amount, p1)
	return _in(0x7A5349B773584675, amount, p1)
end

function NetworkEarnFromRockstar(amount)
	return _in(0x02CE1D6AC0FC73EA, amount)
end

--- NativeDB Introduced: v1290
function NetworkEarnFromSellBase(amount, baseNameHash)
	return _in(0x0E1E2FF3F4EC11AA, amount, _ch(baseNameHash))
end

function NetworkEarnFromSellBunker(amount, bunkerHash)
	return _in(0x9251B6ABF2D0A5B4, amount, _ch(bunkerHash))
end
N_0x9251b6abf2d0a5b4 = NetworkEarnFromSellBunker

--- NativeDB Added Parameter 2: Any p1
-- NativeDB Added Parameter 3: Any p2
-- NativeDB Introduced: v1734
function NetworkEarnFromSellingVehicle(amount)
	return _in(0x8BCB27A057DF7B7F, amount)
end

--- NativeDB Introduced: v1180
function NetworkEarnFromSmuggling(amount, p1, p2, p3)
	return _in(0xDEE612F2D71B0308, amount, p1, p2, p3)
end

--- NativeDB Introduced: v1604
function NetworkEarnFromSpinTheWheelCash(amount)
	return _in(0x676C48776CACBB5A, amount)
end

--- NativeDB Introduced: v1290
function NetworkEarnFromTargetRefund(amount, p1)
	return _in(0x5B669CF2299A271F, amount, p1)
end

--- NativeDB Introduced: v1734
function NetworkEarnFromTimeTrialWin(amount)
	return _in(0x0819DB99FD2FBBD8, amount)
end

--- NativeDB Introduced: v2372
function NetworkEarnFromTunerAward(p0, p1, p2)
	return _in(0xB846F547D3792DF6, p0, p1, p2)
end
N_0xb846f547d3792df6 = NetworkEarnFromTunerAward

--- NativeDB Introduced: v2372
function NetworkEarnFromTunerFinale(p0, p1, p2, p3, p4)
	return _in(0xBCB266247193AC61, p0, p1, p2, p3, p4)
end
N_0xbcb266247193ac61 = NetworkEarnFromTunerFinale

--- NativeDB Introduced: v2372
function NetworkEarnFromUpgradeAutoshopLocation(p0, p1)
	return _in(0xC10322A8D3E061EE, p0, p1)
end
N_0xc10322a8d3e061ee = NetworkEarnFromUpgradeAutoshopLocation

function NetworkEarnFromVehicle(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xB539BD8A4C1EECF8, p0, p1, p2, p3, p4, p5, p6, p7)
end

--- NativeDB Introduced: v2372
function NetworkEarnFromVehicleAutoshop(p0, p1)
	return _in(0x533073E8A596008C, p0, p1)
end
N_0x533073e8a596008c = NetworkEarnFromVehicleAutoshop

--- NativeDB Introduced: v2372
function NetworkEarnFromVehicleAutoshopBonus(p0)
	return _in(0xFE65AFE7308E32B2, p0)
end
N_0xfe65afe7308e32b2 = NetworkEarnFromVehicleAutoshopBonus

function NetworkEarnFromVehicleExport(amount, p1, p2)
	return _in(0xEDEAD9A91EC768B3, amount, p1, p2)
end
N_0xedead9a91ec768b3 = NetworkEarnFromVehicleExport

--- NativeDB Introduced: v1180
function NetworkEarnFromWagePayment(amount)
	return _in(0x35F8DA0E8A31EF1B, amount)
end

--- NativeDB Introduced: v1180
function NetworkEarnFromWagePaymentBonus(amount)
	return _in(0x005ACA7100BD101D, amount)
end

--- NativeDB Added Parameter 1: int amount
-- NativeDB Added Parameter 2: int id
function NetworkEarnFromWarehouse()
	return _in(0x3E4ADAFF1830F146)
end
N_0x3e4adaff1830f146 = NetworkEarnFromWarehouse

function NetworkEarnGoon(p0, p1, p2)
	return _in(0xCDA1C62BE2777802, p0, p1, p2)
end
N_0xcda1c62be2777802 = NetworkEarnGoon

--- NativeDB Introduced: v2189
function NetworkEarnIslandHeist(p0, p1, p2, p3, p4, p5)
	return _in(0xD21D111C46BA9F15, p0, p1, p2, p3, p4, p5)
end

--- NativeDB Introduced: v1290
function NetworkEarnJobBonusFirstTimeBonus(p0, p1, p2)
	return _in(0x11B0A20C493F7E36, p0, p1, p2)
end
N_0x11b0a20c493f7e36 = NetworkEarnJobBonusFirstTimeBonus

--- NativeDB Introduced: v1290
function NetworkEarnJobBonusHeistAward(p0, p1, p2)
	return _in(0x9D4FDBB035229669, p0, p1, p2)
end
N_0x9d4fdbb035229669 = NetworkEarnJobBonusHeistAward

function NetworkEndTutorialSession()
	return _in(0xD0AFAFF5A51D72F7)
end

function NetworkEntityAreaDoesExist(areaHandle)
	return _in(0xE64A3CA08DFA37A9, areaHandle, _r)
end
N_0xe64a3ca08dfa37a9 = NetworkEntityAreaDoesExist

function NetworkEntityAreaIsOccupied(areaHandle)
	return _in(0x4A2D4E8BF4265B0F, areaHandle, _r)
end
N_0x4a2d4e8bf4265b0f = NetworkEntityAreaIsOccupied

--- In the console script dumps, this is only referenced once.
-- NETWORK::NETWORK_EXPLODE_VEHICLE(vehicle, 1, 0, 0);
-- ^^^^^ That must be PC script dumps? In X360 Script Dumps it is reference a few times with 2 differences in the parameters.
-- Which as you see below is 1, 0, 0 + 1, 1, 0 + 1, 0, and a *param?
-- am_plane_takedown.c
-- network_explode_vehicle(net_to_veh(Local_40.imm_2), 1, 1, 0);
-- armenian2.c
-- network_explode_vehicle(Local_80[6 <2>], 1, 0, 0);
-- fm_horde_controler.c
-- network_explode_vehicle(net_to_veh(*uParam0), 1, 0, *uParam0);
-- fm_mission_controller.c, has 6 hits so not going to list them.
-- Side note, setting the first parameter to 0 seems to mute sound or so?
-- Seems it's like ADD_EXPLOSION, etc. the first 2 params. The 3rd atm no need to worry since it always seems to be 0.
function NetworkExplodeVehicle(vehicle, isAudible, isInvisible, p3)
	return _in(0x301A42153C9AD707, vehicle, isAudible, isInvisible, p3)
end

--- state - 0 does 5 fades
-- state - 1 does 6 fades
-- native is missing third argument, also boolean, setting to 1 made vehicle fade in slower, probably "slow" as per NETWORK_FADE_OUT_ENTITY
-- ```
-- ```
-- NativeDB Added Parameter 3: BOOL slow
function NetworkFadeInEntity(entity, state)
	return _in(0x1F4ED342ACEFE62D, entity, state)
end

--- normal - transition like when your coming out of LSC
-- slow - transition like when you walk into a mission
function NetworkFadeOutEntity(entity, normal, slow)
	return _in(0xDE564951F95E09ED, entity, normal, slow)
end

function NetworkFindGamersInCrew(p0)
	return _in(0xE532D6811B3A4D2A, p0, _r)
end
N_0xe532d6811b3a4d2a = NetworkFindGamersInCrew
NetworkXAffectsGamers = NetworkFindGamersInCrew

function NetworkFindMatchedGamers(p0, p1, p2, p3)
	return _in(0xF7B2CFDE5C9F700D, p0, p1, p2, p3, _r)
end
N_0xf7b2cfde5c9f700d = NetworkFindMatchedGamers

function NetworkFinishBroadcastingData()
	return _in(0x64F62AFB081E260D)
end
N_0x64f62afb081e260d = NetworkFinishBroadcastingData

function NetworkGamerHasHeadset(networkHandle)
	return _in(0xF2FD55CB574BCC55, _ii(networkHandle) --[[ may be optional ]], _r)
end

function NetworkGamertagFromHandlePending()
	return _in(0xB071E27958EF4CF0, _r)
end

function NetworkGamertagFromHandleStart(networkHandle)
	return _in(0x9F0C0A981D73FA56, _ii(networkHandle) --[[ may be optional ]], _r)
end

function NetworkGamertagFromHandleSucceeded()
	return _in(0xFD00798DBA7523DD, _r)
end

function NetworkGetActivityPlayerNum(p0)
	return _in(0x73E2B500410DA5A2, p0, _ri)
end

function NetworkGetAgeGroup()
	return _in(0x9614B71F8ADB982B, _ri)
end
N_0x9614b71f8adb982b = NetworkGetAgeGroup

--- NativeDB Introduced: v323
function NetworkGetAverageLatencyForPlayer(player)
	return _in(0xD414BE129BB81B32, player, _rf)
end
N_0xd414be129bb81b32 = NetworkGetAverageLatencyForPlayer

--- Same as _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER (0xD414BE129BB81B32)
-- ```
-- ```
-- NativeDB Introduced: v323
function NetworkGetAverageLatencyForPlayer_2(player)
	return _in(0x0E3A041ED6AC2B45, player, _rf)
end
N_0x0e3a041ed6ac2b45 = NetworkGetAverageLatencyForPlayer_2

--- NETWORK_GET_*
-- NativeDB Introduced: v323
function NetworkGetAveragePacketLossForPlayer(player)
	return _in(0x350C23949E43686C, player, _rf)
end
N_0x350c23949e43686c = NetworkGetAveragePacketLossForPlayer

function NetworkGetBackgroundLoadingRecipients(p0, p1)
	return _in(0x97A770BEEF227E2B, p0, p1, _i, _i, _r)
end
N_0x97a770beef227e2b = NetworkGetBackgroundLoadingRecipients

--- Return the content modifier id (the tunables context if you want) of a specific content.
-- It takes the content hash (which is the mission id hash), and return the content modifier id, used as the tunables context.
-- The mission id can be found on the Social club, for example, 'socialclub.rockstargames.com/games/gtav/jobs/job/A8M6Bz8MLEC5xngvDCzGwA'
-- 'A8M6Bz8MLEC5xngvDCzGwA' is the mission id, so the game hash this and use it as the parameter for this native.
function NetworkGetContentModifierListId(contentHash)
	return _in(0x187382F8A3E0A6C3, _ch(contentHash), _ri)
end
N_0x187382f8a3e0a6c3 = NetworkGetContentModifierListId
GetTunablesContentModifierId = NetworkGetContentModifierListId

function NetworkGetCurrentlySelectedGamerHandleFromInviteMenu(p0)
	return _in(0x74881E6BCAE2327C, _ii(p0) --[[ may be optional ]], _r)
end

function NetworkGetDestroyerOfEntity(p0, p1, weaponHash)
	return _in(0x4CACA84440FA26F6, p0, p1, _ii(weaponHash) --[[ may be optional ]], _r)
end
N_0x4caca84440fa26f6 = NetworkGetDestroyerOfEntity
NetworkGetDesroyerOfEntity = NetworkGetDestroyerOfEntity

function NetworkGetDestroyerOfNetworkId(netId, weaponHash)
	return _in(0x7A1ADEEF01740A24, netId, _ii(weaponHash) --[[ may be optional ]], _ri)
end

function NetworkGetDisplaynamesFromHandles(p0, p1, p2)
	return _in(0x58CC181719256197, p0, p1, p2, _ri)
end
N_0x58cc181719256197 = NetworkGetDisplaynamesFromHandles

--- Get the local entity handle of the given network id
-- Through this native you can get back the entity that you previously converted to netid with [NetworkGetNetworkIdFromEntity](#\_0x9E35DAB6) or with the `ToNet` natives
-- @param netId the network id of the entity
-- @return The local entity handle of the network id
function NetworkGetEntityFromNetworkId(netId)
	return _in(0xCE4E5D9B0A4FF560, netId, _ri)
end

function NetworkGetEntityIsLocal(entity)
	return _in(0x0991549DE4D64762, entity, _r)
end

function NetworkGetEntityIsNetworked(entity)
	return _in(0xC7827959479DCC78, entity, _r)
end
N_0xc7827959479dcc78 = NetworkGetEntityIsNetworked

function NetworkGetEntityKillerOfPlayer(player, weaponHash)
	return _in(0x42B2DAA6B596F5F8, player, _ii(weaponHash) --[[ may be optional ]], _ri)
end

function NetworkGetEntityNetScriptId(entity)
	return _in(0x815F18AD865F057F, entity, _ri)
end
N_0x815f18ad865f057f = NetworkGetEntityNetScriptId

--- Returns the owner ID of the specified entity.
-- @param entity The entity to get the owner for.
-- @return On the server, the server ID of the entity owner. On the client, returns the player/slot ID of the entity owner.
function NetworkGetEntityOwner(entity)
	return _in(0x526fee31, entity, _ri)
end

--- NativeDB Introduced: v323
function NetworkGetEvcBalance()
	return _in(0x5D1E75F91C07DEE5, _ri)
end

function NetworkGetFoundGamer(p1)
	return _in(0x9DCFF2AFB68B3476, _i, p1, _r)
end

function NetworkGetFriendCount()
	return _in(0x203F1CFD823B27A4, _ri)
end

function NetworkGetFriendName(friendIndex)
	return _in(0xE11EBBB2A783FE8B, friendIndex, _s)
end

function NetworkGetFriendNameFromIndex(friendIndex)
	return _in(0x4164F227D052E293, friendIndex, _s)
end
NetworkGetFriendName = NetworkGetFriendNameFromIndex

function NetworkGetGamerStatusFromQueue()
	return _in(0x2CC848A861D01493, _r)
end
N_0x2cc848a861d01493 = NetworkGetGamerStatusFromQueue

function NetworkGetGamerStatusResult(p1)
	return _in(0x02A8BEC6FD9AF660, _i, p1, _r)
end
N_0x02a8bec6fd9af660 = NetworkGetGamerStatusResult

function NetworkGetGamertagFromHandle(networkHandle)
	return _in(0x426141162EBE5CDB, _ii(networkHandle) --[[ may be optional ]], _s)
end

function NetworkGetGlobalMultiplayerClock()
	return _in(0x6D03BFBD643B2A02, _i, _i, _i)
end
N_0x6d03bfbd643b2a02 = NetworkGetGlobalMultiplayerClock
NetworkGetServerTime = NetworkGetGlobalMultiplayerClock

--- scriptName examples:
-- "freemode", "AM_CR_SecurityVan", ...
-- Most of the time, these values are used:
-- p1 = -1
-- p2 = 0
function NetworkGetHostOfScript(scriptName, p1, p2)
	return _in(0x1D6A14F1F9A736FC, _ts(scriptName), p1, p2, _ri)
end

function NetworkGetHostOfThisScript()
	return _in(0xC7B4D79B01FA7A5C, _ri)
end

function NetworkGetInstanceIdOfThisScript()
	return _in(0x638A3A81733086DB, _ri)
end
N_0x638a3a81733086db = NetworkGetInstanceIdOfThisScript

--- NativeDB Introduced: v323
function NetworkGetIsHighEarner()
	return _in(0xFB2456B2040A6A67, _r)
end

--- Used by NetBlender
function NetworkGetLastVelocityReceived(entity)
	return _in(0x33DE49EDF4DDE77A, entity, _rv)
end
N_0x33de49edf4dde77a = NetworkGetLastVelocityReceived

--- Retrieves the local player's NetworkHandle* and stores it in the given buffer.
-- * Currently unknown struct
function NetworkGetLocalHandle(bufferSize)
	return _in(0xE86051786B66CD8E, _i, bufferSize)
end

function NetworkGetLocalSceneFromNetworkId(netId)
	return _in(0x02C40BF885C567B6, netId, _ri)
end
N_0x02c40bf885c567b6 = NetworkGetLocalSceneFromNetworkId
NetworkUnlinkNetworkedSynchronisedScene = NetworkGetLocalSceneFromNetworkId
NetworkConvertSynchronisedSceneToSynchronizedScene = NetworkGetLocalSceneFromNetworkId

function NetworkGetMaxFriends()
	return _in(0xAFEBB0D5D8F687D2, _ri)
end

--- Seems to always return 0, but it's used in quite a few loops.
-- for (num3 = 0; num3 < NETWORK::0xCCD8C02D(); num3++)
-- {
-- if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::0x98F3B274(num3)) != 0)
-- {
-- var num5 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::0x98F3B274(num3));
function NetworkGetMaxNumParticipants()
	return _in(0xA6C90FBC38E395EE, _ri)
end
NetworkGetNumParticipantsHost = NetworkGetMaxNumParticipants

--- Get the network id of the given entity
-- An entity network id is representing a given entity for other clients, is like a handle that every client recognize, can be reconverted to a client entity handle.
-- These can and will be reused, the network id will not change.
-- If you need to refer to an entity across machines (clients, or the server), you should use its network id.
-- Read more at [Network and local IDs](https://docs.fivem.net/docs/scripting-manual/networking/ids/)
-- @param entity the handle of the entity from which the network id should be taken
-- @return The network id of the given entity
function NetworkGetNetworkIdFromEntity(entity)
	return _in(0xA11700682F3AD45C, entity, _ri)
end

function NetworkGetNumBodyTrackers()
	return _in(0xD38C4A6D047C019D, _ri)
end
N_0xd38c4a6d047c019d = NetworkGetNumBodyTrackers

--- Returns the amount of players connected in the current session. Only works when connected to a session/server.
function NetworkGetNumConnectedPlayers()
	return _in(0xA4A79DD2D9600654, _ri)
end

function NetworkGetNumFoundGamers()
	return _in(0xA1B043EE79A916FB, _ri)
end

function NetworkGetNumParticipants()
	return _in(0x18D0456E86604654, _ri)
end

function NetworkGetNumPresenceInvites()
	return _in(0xCEFA968912D0F78D, _ri)
end
N_0xcefa968912d0f78d = NetworkGetNumPresenceInvites

function NetworkGetNumScriptParticipants(p1, p2)
	return _in(0x3658E8CD94FC121A, _i, p1, p2, _ri)
end
N_0x3658e8cd94fc121a = NetworkGetNumScriptParticipants

--- NativeDB Introduced: v323
function NetworkGetNumUnackedForPlayer(player)
	return _in(0xFF8FCF9FFC458A1C, player, _ri)
end

--- NETWORK_GET_*
-- NativeDB Introduced: v323
function NetworkGetOldestResendCountForPlayer(player)
	return _in(0x52C1EADAF7B10302, player, _ri)
end

function NetworkGetParticipantIndex(index)
	return _in(0x1B84DF6AF2A46938, index, _ri)
end

function NetworkGetPlatformPartyMembers(dataSize)
	return _in(0x120364DE2845DAF8, _i, dataSize, _ri)
end
N_0x120364de2845daf8 = NetworkGetPlatformPartyMembers

function NetworkGetPlatformPartyUnk()
	return _in(0x01ABCE5E7CBDA196, _ri)
end
N_0x01abce5e7cbda196 = NetworkGetPlatformPartyUnk

--- Returns the coordinates of another player.
-- Does not work if you enter your own player id as p0 (will return `(0.0, 0.0, 0.0)` in that case).
-- @param player The player id, MUST be another player.
-- @return A Vector3 containing the coordinates of another player.
function NetworkGetPlayerCoords(player)
	return _in(0x125E6D638B8605D4, player, _rv)
end
N_0x125e6d638b8605d4 = NetworkGetPlayerCoords

function NetworkGetPlayerFromGamerHandle(networkHandle)
	return _in(0xCE5F689CF5A0A49D, _ii(networkHandle) --[[ may be optional ]], _ri)
end

function NetworkGetPlayerIndex(player)
	return _in(0x24FB80D107371267, player, _ri)
end

--- Returns the Player associated to a given Ped when in an online session.
function NetworkGetPlayerIndexFromPed(ped)
	return _in(0x6C0E2E0125610278, ped, _ri)
end
N_0x6c0e2e0125610278 = NetworkGetPlayerIndexFromPed

function NetworkGetPlayerLoudness(player)
	return _in(0x21A1684A25C2867F, player, _rf)
end

function NetworkGetPlayerOwnsWaypoint(player)
	return _in(0x82377B65E943F72D, player, _r)
end
N_0x82377b65e943f72d = NetworkGetPlayerOwnsWaypoint

function NetworkGetPlayerTutorialSessionInstance(player)
	return _in(0x3B39236746714134, player, _ri)
end
N_0x3b39236746714134 = NetworkGetPlayerTutorialSessionInstance

--- NativeDB Introduced: v2372
function NetworkGetPositionHashOfThisScript()
	return _in(0x257ED0FADF750BCF, _ri)
end
N_0x257ed0fadf750bcf = NetworkGetPositionHashOfThisScript

function NetworkGetPresenceInviteContentId(p0)
	return _in(0x24409FC4C55CB22D, p0, _ri)
end
N_0x24409fc4c55cb22d = NetworkGetPresenceInviteContentId

function NetworkGetPresenceInviteFromAdmin(p0)
	return _in(0x3DBF2DF0AEB7D289, p0, _r)
end
N_0x3dbf2df0aeb7d289 = NetworkGetPresenceInviteFromAdmin

function NetworkGetPresenceInviteHandle(p0, p1)
	return _in(0x38D5B0FEBB086F75, p0, _ii(p1) --[[ may be optional ]], _r)
end

function NetworkGetPresenceInviteId(p0)
	return _in(0xDFF09646E12EC386, p0, _ri)
end
N_0xdff09646e12ec386 = NetworkGetPresenceInviteId

--- Returns the Name of the inviter of the specific selected Invite.
-- @return The Name of the inviter.
function NetworkGetPresenceInviteInviter(inviteIndex)
	return _in(0x4962CC4AA2F345B7, inviteIndex, _s)
end
N_0x4962cc4aa2f345b7 = NetworkGetPresenceInviteInviter

function NetworkGetPresenceInviteIsTournament(p0)
	return _in(0x8806CEBFABD3CE05, p0, _r)
end
N_0x8806cebfabd3ce05 = NetworkGetPresenceInviteIsTournament

function NetworkGetPresenceInvitePlaylistCurrent(p0)
	return _in(0x728C4CC7920CD102, p0, _ri)
end
N_0x728c4cc7920cd102 = NetworkGetPresenceInvitePlaylistCurrent

function NetworkGetPresenceInvitePlaylistLength(p0)
	return _in(0xD39B3FFF8FFDD5BF, p0, _ri)
end
N_0xd39b3fff8ffdd5bf = NetworkGetPresenceInvitePlaylistLength

--- The Native returns a hash of the session id as string from the specific invite index!
-- @return A hash of the session id.
function NetworkGetPresenceInviteSessionId(inviteIndex)
	return _in(0x26E1CD96B0903D60, inviteIndex, _ri)
end
N_0x26e1cd96b0903d60 = NetworkGetPresenceInviteSessionId

function NetworkGetPrimaryClanDataCancel()
	return _in(0x042E4B70B93E6054)
end
N_0x042e4b70b93e6054 = NetworkGetPrimaryClanDataCancel

function NetworkGetPrimaryClanDataClear()
	return _in(0x9AA46BADAD0E27ED, _ri)
end
N_0x9aa46badad0e27ed = NetworkGetPrimaryClanDataClear

function NetworkGetPrimaryClanDataNew()
	return _in(0xC080FF658B2E41DA, _i, _i, _r)
end

function NetworkGetPrimaryClanDataPending()
	return _in(0xB5074DB804E28CE7, _ri)
end
N_0xb5074db804e28ce7 = NetworkGetPrimaryClanDataPending

function NetworkGetPrimaryClanDataStart(p1)
	return _in(0xCE86D8191B762107, _i, p1, _r)
end

function NetworkGetPrimaryClanDataSuccess()
	return _in(0x5B4F04F19376A0BA, _ri)
end
N_0x5b4f04f19376a0ba = NetworkGetPrimaryClanDataSuccess

--- NativeDB Introduced: v323
function NetworkGetPvcBalance()
	return _in(0x4F54F3B6C202FB4E, _ri)
end

--- Same as 0xEA560AC9EEB1E19B.
-- ```
-- ```
-- Same as 0xEA560AC9EEB1E19B.
-- NativeDB Introduced: v323
function NetworkGetPvcTransferBalance()
	return _in(0x13A8DE2FD77D04F3, _ri)
end
NetworkGetRemainingVcDailyTransfers = NetworkGetPvcTransferBalance

function NetworkGetRandomInt()
	return _in(0x599E4FA1F87EB5FF, _ri)
end
N_0x599e4fa1f87eb5ff = NetworkGetRandomInt

--- Same as GET_RANDOM_INT_IN_RANGE
function NetworkGetRandomIntRanged(rangeStart, rangeEnd)
	return _in(0xE30CF56F1EFA5F43, rangeStart, rangeEnd, _ri)
end
N_0xe30cf56f1efa5f43 = NetworkGetRandomIntRanged
NetworkGetRandomIntInRange = NetworkGetRandomIntRanged

--- Same as 0x13A8DE2FD77D04F3.
-- NativeDB Introduced: v323
function NetworkGetRemainingTransferBalance()
	return _in(0xEA560AC9EEB1E19B, _ri)
end
NetworkGetRemainingVcDailyTransfers_2 = NetworkGetRemainingTransferBalance

--- Based on scripts such as in freemode.c how they call their vars vVar and fVar the 2nd and 3rd param it a Vector3 and Float, but the first is based on get_random_int_in_range..
function NetworkGetRespawnResult(randomInt)
	return _in(0x371EA43692861CF1, randomInt, _v, _f)
end

function NetworkGetRespawnResultFlags(p0)
	return _in(0x6C34F1208B8923FD, p0, _ri)
end
N_0x6c34f1208b8923fd = NetworkGetRespawnResultFlags

function NetworkGetRosPrivilege_24()
	return _in(0x593570C289A77688, _r)
end
N_0x593570c289a77688 = NetworkGetRosPrivilege_24

function NetworkGetRosPrivilege_25()
	return _in(0x91B87C55093DE351, _r)
end
N_0x91b87c55093de351 = NetworkGetRosPrivilege_25

function NetworkGetRosPrivilege_9()
	return _in(0x66B59CFFD78467AF, _r)
end
N_0x66b59cffd78467af = NetworkGetRosPrivilege_9

function NetworkGetScriptStatus()
	return _in(0x57D158647A6BFABF, _ri)
end

function NetworkGetStringBankBalance()
	return _in(0xA6FA3979BED01B81, _s)
end
N_0xa6fa3979bed01b81 = NetworkGetStringBankBalance
NetworkGetBankBalanceString = NetworkGetStringBankBalance

--- NativeDB Introduced: v323
function NetworkGetStringBankWalletBalance()
	return _in(0x700AF71AE615E6DD, _s)
end

--- NativeDB Introduced: v323
function NetworkGetStringWalletBalance(characterSlot)
	return _in(0xF9B10B529DCFB33B, characterSlot, _s)
end

function NetworkGetTalkerProximity()
	return _in(0x84F0F13120B4E098, _rf)
end

function NetworkGetTargetingMode()
	return _in(0xDFFA5BE8381C3314, _ri)
end
N_0xdffa5be8381c3314 = NetworkGetTargetingMode

function NetworkGetThisScriptIsNetworkScript()
	return _in(0x2910669969E9535E, _r)
end

function NetworkGetTimeoutTime()
	return _in(0x5ED0356A0CE3A34F, _ri)
end
N_0x5ed0356a0ce3a34f = NetworkGetTimeoutTime

function NetworkGetTotalNumPlayers()
	return _in(0xCF61D4B4702EE9EB, _ri)
end
N_0xcf61d4b4702ee9eb = NetworkGetTotalNumPlayers

function NetworkGetTransitionHost(networkHandle)
	return _in(0x65042B9774C4435E, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- Returns count.
function NetworkGetTransitionMembers(dataCount)
	return _in(0x73B000F7FBC55829, _i, dataCount, _ri)
end

--- Actually returns the version (TUNABLE_VERSION)
function NetworkGetTunableCloudCrc()
	return _in(0x10BD227A753B0D84, _ri)
end
N_0x10bd227a753b0d84 = NetworkGetTunableCloudCrc
NetworkGetTunablesVersion = NetworkGetTunableCloudCrc

--- NETWORK_*
-- NativeDB Introduced: v323
function NetworkGetUnreliableResendCountForPlayer(player)
	return _in(0x3765C3A3E8192E10, player, _ri)
end
N_0x3765c3a3e8192e10 = NetworkGetUnreliableResendCountForPlayer

function NetworkGetVcBalance()
	return _in(0x5CBAD97E059E1B94, _ri)
end
N_0x5cbad97e059e1b94 = NetworkGetVcBalance

function NetworkGetVcBankBalance()
	return _in(0x76EF28DA05EA395A, _ri)
end
N_0x76ef28da05ea395a = NetworkGetVcBankBalance

--- Returns true if bank balance >= amount.
-- NativeDB Introduced: v323
function NetworkGetVcBankBalanceIsNotLessThan(amount)
	return _in(0xA31FD6A0865B6D14, amount, _r)
end

--- Returns true if bank balance + wallet balance >= amount.
function NetworkGetVcBankWalletBalanceIsNotLessThan(amount, characterSlot)
	return _in(0xDC18531D7019A535, amount, characterSlot, _r)
end
N_0xdc18531d7019a535 = NetworkGetVcBankWalletBalanceIsNotLessThan

function NetworkGetVcWalletBalance(characterSlot)
	return _in(0xA40F9C2623F6A8B5, characterSlot, _ri)
end
N_0xa40f9c2623f6a8b5 = NetworkGetVcWalletBalance

--- Returns true if wallet balance >= amount.
-- NativeDB Introduced: v323
function NetworkGetVcWalletBalanceIsNotLessThan(amount, characterSlot)
	return _in(0xED5AB8860415BABA, amount, characterSlot, _r)
end

function NetworkGivePlayerJobshareCash(amount, networkHandle)
	return _in(0xFB18DF9CB95E0105, amount, _ii(networkHandle) --[[ may be optional ]])
end

function NetworkHandleFromFriend(friendIndex, bufferSize)
	return _in(0xD45CB817D7E177D2, friendIndex, _i, bufferSize)
end

--- Returns a NetworkHandle* from the specified member ID and stores it in a given buffer.
-- * Currently unknown struct
function NetworkHandleFromMemberId(memberId, bufferSize)
	return _in(0xA0FD21BED61E5C4C, _ts(memberId), _i, bufferSize)
end

--- Returns a handle to networkHandle* from the specified player handle and stores it in a given buffer.
-- * Currently unknown struct
-- Example:
-- std::vector<UINT64> GetPlayerNetworkHandle(Player player) {
-- const int size = 13;
-- uint64_t *buffer = std::make_unique<uint64_t[]>(size).get();
-- NETWORK::NETWORK_HANDLE_FROM_PLAYER(player, reinterpret_cast<int *>(buffer), 13);
-- for (int i = 0; i < size; i++) {
-- Log::Msg("networkhandle[%i]: %llx", i, buffer[i]);
-- }
-- std::vector<UINT64> result(buffer, buffer + sizeof(buffer));
-- return result;
-- }
function NetworkHandleFromPlayer(player, bufferSize)
	return _in(0x388EB2B86C73B6B3, player, _i, bufferSize)
end

--- Returns a NetworkHandle* from the specified user ID and stores it in a given buffer.
-- * Currently unknown struct
function NetworkHandleFromUserId(userId, bufferSize)
	return _in(0xDCD51DD8F87AEC5C, _ts(userId), _i, bufferSize)
end

function NetworkHasAgeRestrictedProfile()
	return _in(0x1353F87E89946207, _r)
end
N_0x1353f87e89946207 = NetworkHasAgeRestrictedProfile

function NetworkHasCachedPlayerHeadBlendData(player)
	return _in(0x237D5336A9A54108, player, _r)
end
N_0x237d5336a9a54108 = NetworkHasCachedPlayerHeadBlendData

function NetworkHasControlOfDoor(doorHash)
	return _in(0xCB3C68ADB06195DF, _ch(doorHash), _r)
end

function NetworkHasControlOfEntity(entity)
	return _in(0x01BF60A500E28887, entity, _r)
end

function NetworkHasControlOfNetworkId(netId)
	return _in(0x4D36070FE0215186, netId, _r)
end

function NetworkHasControlOfPickup(pickup)
	return _in(0x5BC9495F0B3B6FA6, pickup, _r)
end

function NetworkHasEntityBeenRegisteredWithThisThread(entity)
	return _in(0xB07D3185E11657A5, entity, _r)
end
N_0xb07d3185e11657a5 = NetworkHasEntityBeenRegisteredWithThisThread

function NetworkHasFollowInvite()
	return _in(0x76D9B976C4C09FDE, _r)
end
N_0x76d9b976c4c09fde = NetworkHasFollowInvite

--- Returns true if dinput8.dll is present in the game directory.
-- You will get following error message if that is true: "You are attempting to access GTA Online servers with an altered version of the game."
function NetworkHasGameBeenAltered()
	return _in(0x659CF2EF7F550C4F, _r)
end
N_0x659cf2ef7f550c4f = NetworkHasGameBeenAltered

function NetworkHasHeadset()
	return _in(0xE870F9F1F7B4F1FA, _r)
end

function NetworkHasInvitedGamer(p0)
	return _in(0x4D86CD31E8976ECE, _ii(p0) --[[ may be optional ]], _r)
end

function NetworkHasInvitedGamerToTransition(p0)
	return _in(0x7284A47B3540E6CF, _ii(p0) --[[ may be optional ]], _r)
end

function NetworkHasPendingInvite()
	return _in(0xAC8C7B9B88C4A668, _r)
end

function NetworkHasPlayerStartedTransition(player)
	return _in(0x9AC9CCBFA8C29795, player, _r)
end

function NetworkHasReceivedHostBroadcastData()
	return _in(0x5D10B3795F3FC886, _r)
end
N_0x5d10b3795f3fc886 = NetworkHasReceivedHostBroadcastData

--- index is always 18 in scripts
function NetworkHasRosPrivilege(index)
	return _in(0xA699957E60D80214, index, _r)
end
N_0xa699957e60d80214 = NetworkHasRosPrivilege

function NetworkHasRosPrivilegeEndDate(privilege)
	return _in(0xC22912B1D85F26B1, privilege, _i, _v, _r)
end
N_0xc22912b1d85f26b1 = NetworkHasRosPrivilegeEndDate
NetworkGetBanData = NetworkHasRosPrivilegeEndDate

function NetworkHasSocialClubAccount()
	return _in(0x67A5589628E0CFF6, _r)
end
N_0x67a5589628e0cff6 = NetworkHasSocialClubAccount

function NetworkHasSocialNetworkingSharingPriv()
	return _in(0x76BF03FADBF154F5, _r)
end
N_0x76bf03fadbf154f5 = NetworkHasSocialNetworkingSharingPriv

--- Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
function NetworkHasValidRosCredentials()
	return _in(0x85443FF4C328F53B, _r)
end
N_0x85443ff4c328f53b = NetworkHasValidRosCredentials
NetworkAreRosAvailable = NetworkHasValidRosCredentials
NetworkHaveJustUploadLater = NetworkHasValidRosCredentials

function NetworkHasViewGamerUserContentResult(networkHandle)
	return _in(0xCCA4318E1AB03F1F, _ii(networkHandle) --[[ may be optional ]], _r)
end
N_0xcca4318e1ab03f1f = NetworkHasViewGamerUserContentResult

function NetworkHashFromGamerHandle(networkHandle)
	return _in(0x58575AC3CF2CA8EC, _ii(networkHandle) --[[ may be optional ]], _ri)
end
N_0x58575ac3cf2ca8ec = NetworkHashFromGamerHandle
NetworkHashFromGamerHandle = NetworkHashFromGamerHandle

function NetworkHashFromPlayerHandle(player)
	return _in(0xBC1D768F2F5D6C05, player, _ri)
end
N_0xbc1d768f2f5d6c05 = NetworkHashFromPlayerHandle
NetworkHashFromPlayerHandle = NetworkHashFromPlayerHandle

function NetworkHaveCommunicationPrivileges(p0, player)
	return _in(0xAEEF48CDF5B6CE7C, p0, player, _r)
end
N_0xaeef48cdf5b6ce7c = NetworkHaveCommunicationPrivileges

function NetworkHaveOnlinePrivilege_2()
	return _in(0x5EA784D197556507, _r)
end
N_0x5ea784d197556507 = NetworkHaveOnlinePrivilege_2

function NetworkHaveOnlinePrivileges()
	return _in(0x25CB5A9F37BFD063, _r)
end

function NetworkHaveRosBannedPriv()
	return _in(0x8020A73847E0CA7D, _r)
end
IsRockstarBanned = NetworkHaveRosBannedPriv
NetworkHasPlayerBeenBanned = NetworkHaveRosBannedPriv

function NetworkHaveRosCreateTicketPriv()
	return _in(0xA0AD7E2AF5349F61, _r)
end
IsSocialclubBanned = NetworkHaveRosCreateTicketPriv
NetworkHaveSocialClubPrivilege = NetworkHaveRosCreateTicketPriv

function NetworkHaveRosLeaderboardWritePriv()
	return _in(0x422D396F80A96547, _r)
end
N_0x422d396f80a96547 = NetworkHaveRosLeaderboardWritePriv
NetworkGetRosPrivilege_4 = NetworkHaveRosLeaderboardWritePriv

function NetworkHaveRosMultiplayerPriv()
	return _in(0x5F91D5D0B36AA310, _r)
end
IsPlayerBanned = NetworkHaveRosMultiplayerPriv
CanPlayOnline = NetworkHaveRosMultiplayerPriv
NetworkGetRosPrivilege_3 = NetworkHaveRosMultiplayerPriv

function NetworkHaveRosSocialClubPriv()
	return _in(0x606E4D3E3CCCF3EB, _r)
end
N_0x606e4d3e3cccf3eb = NetworkHaveRosSocialClubPriv
NetworkGetRosPrivilege_10 = NetworkHaveRosSocialClubPriv

function NetworkHaveUserContentPrivileges(p0)
	return _in(0x72D918C99BCACC54, p0, _r)
end
N_0x72d918c99bcacc54 = NetworkHaveUserContentPrivileges

--- From what I can tell it looks like it does the following:
-- Creates/hosts a new transition to another online session, using this in FiveM will result in other players being disconencted from the server/preventing them from joining. This is most likely because I entered the wrong session parameters since they're pretty much all unknown right now.
-- You also need to use `NetworkJoinTransition(Player player)` and `NetworkLaunchTransition()`.
-- @param p0 Unknown int
-- @param p1 Unknown int
-- @param p2 Unknown int
-- @param p3 Unknown int
-- @param p4 Unknown always 0 in decompiled scripts
-- @param p5 BOOL purpose unknown, both 0 and 1 are used in decompiled scripts.
-- @param p6 BOOL purpose unknown, both 0 and 1 are used in decompiled scripts.
-- @param p7 Unknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.
-- @param p8 Unknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.
-- @param p9 Unknown int, sometimes 0, but also 32768 or 16384 appear in decompiled scripst, maybe a flag of some sort?
-- @return Probably a bool indicating if the transition was created.
function NetworkHostTransition(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xA60BB5CE242BB254, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, _r)
end

function NetworkInitializeCash(wallet, bank)
	return _in(0x3DA5ECD1A56CBA6D, wallet, bank)
end
N_0x3da5ecd1a56cba6d = NetworkInitializeCash

function NetworkInviteGamers(p1)
	return _in(0x9D80CD1D0E6327DE, _i, p1, _i, _i, _r)
end

function NetworkInviteGamersToTransition(p1)
	return _in(0x4A595C32F77DFF76, _i, p1, _r)
end

function NetworkIsActivitySession()
	return _in(0x05095437424397FA, _r)
end

function NetworkIsActivitySpectator()
	return _in(0x12103B9E0C9F92FB, _r)
end

function NetworkIsActivitySpectatorFromHandle(networkHandle)
	return _in(0x2763BBAA72A7BCB9, _ii(networkHandle) --[[ may be optional ]], _r)
end

function NetworkIsAddingFriend()
	return _in(0x6EA101606F6E4D81, _ri)
end

function NetworkIsCableConnected()
	return _in(0xEFFB25453D8600F9, _r)
end
N_0xeffb25453d8600f9 = NetworkIsCableConnected

--- This would be nice to see if someone is in party chat, but 2 sad notes.
-- 1) It only becomes true if said person is speaking in that party at the time.
-- 2) It will never, become true unless you are in that party with said person.
function NetworkIsChattingInPlatformParty(networkHandle)
	return _in(0x8DE9945BCC9AEC52, _ii(networkHandle) --[[ may be optional ]], _r)
end

function NetworkIsClockTimeOverridden()
	return _in(0xD7C95D322FF57522, _r)
end
N_0xd7c95d322ff57522 = NetworkIsClockTimeOverridden

function NetworkIsCloudAvailable()
	return _in(0x9A4CF4F48AD77302, _r)
end

function NetworkIsCloudBackgroundScriptRequestPending()
	return _in(0x8132C0EB8B2B3293, _r)
end
N_0x8132c0eb8b2b3293 = NetworkIsCloudBackgroundScriptRequestPending
HasBgScriptBeenDownloaded = NetworkIsCloudBackgroundScriptRequestPending
NetworkIsCloudBackgroundScriptsRequestPending = NetworkIsCloudBackgroundScriptRequestPending

--- NETWORK_IS_*
-- NativeDB Introduced: v323
function NetworkIsConnectionEndpointRelayServer(player)
	return _in(0x16D3D49902F697BB, player, _r)
end
N_0x16d3d49902f697bb = NetworkIsConnectionEndpointRelayServer

function NetworkIsDoorNetworked(doorHash)
	return _in(0xC01E93FAC20C3346, _ch(doorHash), _r)
end
N_0xc01e93fac20c3346 = NetworkIsDoorNetworked
NetworkHasControlOfPavementStats = NetworkIsDoorNetworked

--- Note: This only works for vehicles, which appears to be a bug (since the setter *does* work for every entity type and the name is 99% correct).
function NetworkIsEntityConcealed(entity)
	return _in(0x71302EC70689052A, entity, _r)
end

function NetworkIsEntityFading(entity)
	return _in(0x422F32CC7E56ABAD, entity, _r)
end
N_0x422f32cc7e56abad = NetworkIsEntityFading

function NetworkIsFindingGamers()
	return _in(0xDDDF64C91BFCF0AA, _r)
end

function NetworkIsFriend(networkHandle)
	return _in(0x1A24A179F9B31654, _ii(networkHandle) --[[ may be optional ]], _r)
end

function NetworkIsFriendHandleOnline(networkHandle)
	return _in(0x87EB7A3FFCB314DB, _ii(networkHandle) --[[ may be optional ]], _r)
end
N_0x87eb7a3ffcb314db = NetworkIsFriendHandleOnline
NetworkIsFriendOnline_2 = NetworkIsFriendHandleOnline

function NetworkIsFriendInMultiplayer(friendName)
	return _in(0x57005C18827F3A28, _ts(friendName), _r)
end

--- In scripts R* calls 'NETWORK_GET_FRIEND_NAME' in this param.
function NetworkIsFriendInSameTitle(friendName)
	return _in(0x2EA9A3BEDF3F17B8, _ts(friendName), _r)
end

function NetworkIsFriendIndexOnline(friendIndex)
	return _in(0xBAD8F2A42B844821, friendIndex, _r)
end
N_0xbad8f2a42b844821 = NetworkIsFriendIndexOnline

function NetworkIsFriendOnline(name)
	return _in(0x425A44533437B64D, _ts(name), _r)
end

function NetworkIsGameInProgress()
	return _in(0x10FAB35428CCC9D7, _r)
end

function NetworkIsGamerBlockedByMe(networkHandle)
	return _in(0xE944C4F5AF1B5883, _ii(networkHandle) --[[ may be optional ]], _r)
end

function NetworkIsGamerInMySession(networkHandle)
	return _in(0x0F10B05DDF8D16E9, _ii(networkHandle) --[[ may be optional ]], _r)
end

function NetworkIsGamerMutedByMe(networkHandle)
	return _in(0xCE60DE011B6C7978, _ii(networkHandle) --[[ may be optional ]], _r)
end

function NetworkIsGamerTalking(networkHandle)
	return _in(0x71C33B22606CD88A, _ii(networkHandle) --[[ may be optional ]], _r)
end

function NetworkIsGettingGamerStatus()
	return _in(0x94A8394D150B013A, _r)
end
N_0x94a8394d150b013a = NetworkIsGettingGamerStatus

function NetworkIsHandleValid(bufferSize)
	return _in(0x6F79B93B0A8E4133, _i, bufferSize, _r)
end

--- If you are host, returns true else returns false.
function NetworkIsHost()
	return _in(0x8DB296B814EDDA07, _r)
end

function NetworkIsHostOfThisScript()
	return _in(0x83CD99A1E6061AB5, _r)
end

function NetworkIsInMpCutscene()
	return _in(0x6CC27C9FA2040220, _r)
end

--- Note according to IDA TU27 X360(Console),
-- This native & 'NETWORK_IS_PARTY_MEMBER' both jump to the same location.
-- Side note: This location just stops where it's at once jumped to.
-- Screenshot for side note,
-- h t t p ://i.imgur.com/m2ci1mF.png
-- h t t p://i.imgur.com/Z0Wx2B6.png
function NetworkIsInParty()
	return _in(0x966C2BC2A7FE3F30, _r)
end

--- Hardcoded to return false.
function NetworkIsInPlatformParty()
	return _in(0x2FC5650B0271CB57, _r)
end
N_0x2fc5650b0271cb57 = NetworkIsInPlatformParty

--- Hardcoded to return false.
function NetworkIsInPlatformPartyChat()
	return _in(0xFD8B834A8BA05048, _r)
end
N_0xfd8b834a8ba05048 = NetworkIsInPlatformPartyChat

function NetworkIsInSession()
	return _in(0xCA97246103B63917, _r)
end

function NetworkIsInSpectatorMode()
	return _in(0x048746E388762E11, _r)
end

function NetworkIsInTransition()
	return _in(0x68049AEFF83D8F0A, _r)
end

function NetworkIsInTutorialSession()
	return _in(0xADA24309FE08DACF, _r)
end

--- Checks if the networkHandle is the same as any other user that is signed in on the local machine.
-- For example, if your console has two or more users signed in (on different controllers), the profile that is not controlling the game would be "inactive".
-- @return Returns true if the networkHandle is signed in on the same machine, but is not the main player.
function NetworkIsInactiveProfile(networkHandle)
	return _in(0x7E58745504313A2E, _ii(networkHandle) --[[ may be optional ]], _r)
end

function NetworkIsLocalPlayerInvincible()
	return _in(0x8A8694B48715B000, _r)
end

function NetworkIsLocalTalking()
	return _in(0xC0D2AF00BCC234CA, _r)
end
N_0xc0d2af00bcc234ca = NetworkIsLocalTalking

function NetworkIsMultiplayerDisabled()
	return _in(0x9747292807126EDA, _r)
end
N_0x9747292807126eda = NetworkIsMultiplayerDisabled

--- Returns true if the specified network id is controlled by someone else.
-- @param netId The network id for an object or entity.
-- @return Probably a bool, returns 1 if you don't have control over the netId entity.
function NetworkIsNetworkIdAClone(netId)
	return _in(0x7242F8B741CE1086, netId, _r)
end
N_0x7242f8b741ce1086 = NetworkIsNetworkIdAClone

function NetworkIsOfflineInvitePending()
	return _in(0x74698374C45701D2, _r)
end
N_0x74698374c45701d2 = NetworkIsOfflineInvitePending

function NetworkIsParticipantActive(p0)
	return _in(0x6FF8FF40B6357D45, p0, _r)
end

--- Note according to IDA TU27 X360(Console),
-- This native & 'NETWORK_IS_PARTY_MEMBER' both jump to the same location.
-- Side note: This location just stops where it's at once jumped to.
-- Screenshot for side note,
-- h t t p ://i.imgur.com/m2ci1mF.png
-- h t t p://i.imgur.com/Z0Wx2B6.png
function NetworkIsPartyMember(networkHandle)
	return _in(0x676ED266AADD31E0, _ii(networkHandle) --[[ may be optional ]], _r)
end

--- This function is hard-coded to always return 0.
function NetworkIsPendingFriend(p0)
	return _in(0x0BE73DA6984A6E33, p0, _ri)
end

function NetworkIsPlayerAParticipant(player)
	return _in(0x3CA58F6CB7CBD784, player, _r)
end

function NetworkIsPlayerAParticipantOnScript(player1, script, player2)
	return _in(0x1AD5B71586B94820, player1, _ts(script), player2, _r)
end
N_0x1ad5b71586b94820 = NetworkIsPlayerAParticipantOnScript

function NetworkIsPlayerActive(player)
	return _in(0xB8DFD30D6973E135, player, _r)
end

function NetworkIsPlayerBlockedByMe(player)
	return _in(0x57AF1F8E27483721, player, _r)
end

function NetworkIsPlayerConcealed(player)
	return _in(0x919B3C98ED8292F9, player, _r)
end

function NetworkIsPlayerConnected(player)
	return _in(0x93DC1BE4E1ABE9D1, player, _r)
end

--- NETWORK_ARE_*
function NetworkIsPlayerEqualToIndex(player, index)
	return _in(0x9DE986FC9A87C474, player, index, _r)
end
N_0x9de986fc9a87c474 = NetworkIsPlayerEqualToIndex

function NetworkIsPlayerFading(player)
	return _in(0x631DC5DFF4B110E3, player, _r)
end
N_0x631dc5dff4b110e3 = NetworkIsPlayerFading

function NetworkIsPlayerInMpCutscene(player)
	return _in(0x63F9EE203C3619F2, player, _r)
end

function NetworkIsPlayerMutedByMe(player)
	return _in(0x8C71288AE68EDE39, player, _r)
end

--- returns true if someone is screaming or talking in a microphone
function NetworkIsPlayerTalking(player)
	return _in(0x031E11F3D447647E, player, _r)
end

function NetworkIsPsnAvailable()
	return _in(0x8D11E61A4ABF49CC, _r)
end
N_0x8d11e61a4abf49cc = NetworkIsPsnAvailable

function NetworkIsScriptActive(scriptName, player, p2, p3)
	return _in(0x9D40DF90FAD26098, _ts(scriptName), player, p2, p3, _r)
end

--- NativeDB Introduced: v2245
function NetworkIsScriptActiveByHash(scriptHash, p1, p2, p3)
	return _in(0xDA7DE67F5FE5EE13, _ch(scriptHash), p1, p2, p3, _r)
end

function NetworkIsSessionActive()
	return _in(0xD83C2B94E7508980, _r)
end

function NetworkIsSessionBusy()
	return _in(0xF4435D66A8E2905E, _r)
end

--- This checks if player is playing on gta online or not.
-- Please add an if and block your mod if this is "true".
function NetworkIsSessionStarted()
	return _in(0x9DE624D2FC4B603F, _r)
end

--- Returns whether the player is signed into Social Club.
function NetworkIsSignedIn()
	return _in(0x054354A99211EB96, _r)
end

--- Returns whether the game is not in offline mode.
-- seemed not to work for some ppl
function NetworkIsSignedOnline()
	return _in(0x1077788E268557C2, _r)
end

--- Same as _IS_TEXT_CHAT_ACTIVE, except it does not check if the text chat HUD component is initialized, and therefore may crash.
function NetworkIsTextChatActive()
	return _in(0x5FCF4D7069B09026, _r)
end

function NetworkIsThisScriptMarked(p0, p1, p2)
	return _in(0xD1110739EEADB592, p0, p1, p2, _r)
end
N_0xd1110739eeadb592 = NetworkIsThisScriptMarked
NetworkSetThisScriptMarked = NetworkIsThisScriptMarked

function NetworkIsTransitionBusy()
	return _in(0x520F3282A53D26B7, _r)
end

function NetworkIsTransitionClosedCrew()
	return _in(0x0DBD5D7E3C5BEC3B, _r)
end
N_0x0dbd5d7e3c5bec3b = NetworkIsTransitionClosedCrew

function NetworkIsTransitionClosedFriends()
	return _in(0x6512765E3BE78C50, _r)
end
N_0x6512765e3be78c50 = NetworkIsTransitionClosedFriends

function NetworkIsTransitionHost()
	return _in(0x0B824797C9BF2159, _r)
end

function NetworkIsTransitionHostFromHandle(networkHandle)
	return _in(0x6B5C83BA3EFE6A10, _ii(networkHandle) --[[ may be optional ]], _r)
end

function NetworkIsTransitionMatchmaking()
	return _in(0x292564C735375EDF, _r)
end
N_0x292564c735375edf = NetworkIsTransitionMatchmaking

function NetworkIsTransitionOpenToMatchmaking()
	return _in(0x37A4494483B9F5C9, _r)
end
N_0x37a4494483b9f5c9 = NetworkIsTransitionOpenToMatchmaking

function NetworkIsTransitionPrivate()
	return _in(0x5A6AA44FF8E931E6, _r)
end
N_0x5a6aa44ff8e931e6 = NetworkIsTransitionPrivate

function NetworkIsTransitionSolo()
	return _in(0x5DC577201723960A, _r)
end
N_0x5dc577201723960a = NetworkIsTransitionSolo

function NetworkIsTransitionStarted()
	return _in(0x53FA83401D9C07FE, _r)
end

function NetworkIsTransitionToGame()
	return _in(0x9D7696D8F4FA6CB7, _r)
end

function NetworkIsTransitionVisibilityLocked()
	return _in(0xD0A484CB2F829FBE, _r)
end
N_0xd0a484cb2f829fbe = NetworkIsTransitionVisibilityLocked

function NetworkIsTunableCloudRequestPending()
	return _in(0x0467C11ED88B7D28, _r)
end
N_0x0467c11ed88b7d28 = NetworkIsTunableCloudRequestPending
HasTunablesBeenDownloaded = NetworkIsTunableCloudRequestPending

function NetworkIsTutorialSessionChangePending()
	return _in(0x35F0B98A8387274D, _r)
end
N_0x35f0b98a8387274d = NetworkIsTutorialSessionChangePending

function NetworkJoinGroupActivity()
	return _in(0xA06509A691D12BE4, _ri)
end
N_0xa06509a691d12be4 = NetworkJoinGroupActivity

function NetworkJoinPreviouslyFailedSession()
	return _in(0x59DF79317F85A7E0, _r)
end
N_0x59df79317f85a7e0 = NetworkJoinPreviouslyFailedSession

function NetworkJoinPreviouslyFailedTransition()
	return _in(0xFFE1E5B792D92B34, _r)
end
N_0xffe1e5b792d92b34 = NetworkJoinPreviouslyFailedTransition

--- int handle[76];
-- NETWORK_HANDLE_FROM_FRIEND(iSelectedPlayer, &handle[0], 13);
-- Player uVar2 = NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(&handle[0]);
-- NETWORK_JOIN_TRANSITION(uVar2);
-- nothing doin.
function NetworkJoinTransition(player)
	return _in(0x9D060B08CD63321A, player, _r)
end

function NetworkLaunchTransition()
	return _in(0x2DCF46CB1A4F0884, _r)
end

function NetworkLeaveTransition()
	return _in(0xD23A1A815D21DB19, _r)
end

function NetworkManualDeleteCharacter(characterSlot)
	return _in(0x821418C727FCACD7, characterSlot)
end
N_0x821418c727fcacd7 = NetworkManualDeleteCharacter

function NetworkMarkTransitionGamerAsFullyJoined(p0)
	return _in(0x5728BB6D63E3FF1D, _ii(p0) --[[ may be optional ]], _r)
end

function NetworkMemberIdFromGamerHandle(networkHandle)
	return _in(0xC82630132081BB6F, _ii(networkHandle) --[[ may be optional ]], _s)
end

function NetworkMoneyCanBet(amount, p1, p2)
	return _in(0x81404F3DC124FE5B, amount, p1, p2, _r)
end
N_0x81404f3dc124fe5b = NetworkMoneyCanBet

function NetworkOpenTransitionMatchmaking()
	return _in(0x2B3A8F7CA3A38FDE)
end
N_0x2b3a8f7ca3a38fde = NetworkOpenTransitionMatchmaking

--- Could possibly bypass being muted or automatically muted
function NetworkOverrideChatRestrictions(player, toggle)
	return _in(0x3039AE5AD2C9C0C4, player, toggle)
end
N_0x3039ae5ad2c9c0c4 = NetworkOverrideChatRestrictions

--- NativeDB Introduced: v2189
function NetworkOverrideClockMillisecondsPerGameMinute(ms)
	return _in(0x42BF1D2E723B6D7E, ms)
end

--- Works in Singleplayer too.
-- Passing wrong data (e.g. hours above 23) will cause the game to crash.
function NetworkOverrideClockTime(hours, minutes, seconds)
	return _in(0xE679E3E06E363892, hours, minutes, seconds)
end

function NetworkOverrideCoordsAndHeading(entity, x, y, z, heading)
	return _in(0xA7E30DE9272B6D49, entity, x, y, z, heading)
end
N_0xa7e30de9272b6d49 = NetworkOverrideCoordsAndHeading

--- R* uses this to hear all player when spectating.
-- It allows you to hear other online players when their chat is on none, crew and or friends
function NetworkOverrideReceiveRestrictions(player, toggle)
	return _in(0xDDF73E2B1FEC5AB4, player, toggle)
end
N_0xddf73e2b1fec5ab4 = NetworkOverrideReceiveRestrictions

--- p0 is always false in scripts.
function NetworkOverrideReceiveRestrictionsAll(toggle)
	return _in(0x0FF2862B61A58AF9, toggle)
end
N_0x0ff2862b61a58af9 = NetworkOverrideReceiveRestrictionsAll

--- This is used alongside the native,
-- 'NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS'. Read its description for more info.
function NetworkOverrideSendRestrictions(player, toggle)
	return _in(0x97DD4C5944CC2E6A, player, toggle)
end
N_0x97dd4c5944cc2e6a = NetworkOverrideSendRestrictions
NetworkOverrideSendRestrictions = NetworkOverrideSendRestrictions

function NetworkOverrideSendRestrictionsAll(toggle)
	return _in(0x57B192B4D4AD23D5, toggle)
end
N_0x57b192b4d4ad23d5 = NetworkOverrideSendRestrictionsAll
NetworkChatMute = NetworkOverrideSendRestrictionsAll

function NetworkOverrideTeamRestrictions(team, toggle)
	return _in(0x6F697A66CE78674E, team, toggle)
end
N_0x6f697a66ce78674e = NetworkOverrideTeamRestrictions

function NetworkOverrideTransitionChat(p0)
	return _in(0xAF66059A131AA269, p0)
end
N_0xaf66059a131aa269 = NetworkOverrideTransitionChat

function NetworkPayEmployeeWage(p0, p1, p2)
	return _in(0x5FD5ED82CBBE9989, p0, p1, p2)
end
N_0x5fd5ed82cbbe9989 = NetworkPayEmployeeWage

function NetworkPayMatchEntryFee(amount, matchId, p2, p3)
	return _in(0x9346E14F2AF74D46, amount, _ts(matchId), p2, p3)
end
N_0x9346e14f2af74d46 = NetworkPayMatchEntryFee

function NetworkPayUtilityBill(amount, p1, p2)
	return _in(0xAFE08B35EC0C9EAE, amount, p1, p2)
end
N_0xafe08b35ec0c9eae = NetworkPayUtilityBill

--- NativeDB Introduced: v2372
function NetworkPedForceGameStateUpdate(ped)
	return _in(0xF0BC9BCD24A511D5, ped)
end
N_0xf0bc9bcd24a511d5 = NetworkPedForceGameStateUpdate

function NetworkPlayerGetCheaterReason()
	return _in(0x172F75B6EE2233BA, _ri)
end
N_0x172f75b6ee2233ba = NetworkPlayerGetCheaterReason
NetworkPlayerIsUnk = NetworkPlayerGetCheaterReason

--- Returns the name of a given player. Returns "**Invalid**" if CPlayerInfo of the given player cannot be retrieved or the player doesn't exist.
function NetworkPlayerGetName(player)
	return _in(0x7718D2E2060837D2, player, _s)
end

--- Takes a 24 char buffer. Returns the buffer or "**Invalid**" if CPlayerInfo of the given player cannot be retrieved or the player doesn't exist.
function NetworkPlayerGetUserid(player, userID)
	return _in(0x4927FC39CD0869A0, player, _ii(userID) --[[ may be optional ]], _s)
end
NetworkPlayerGetUserId = NetworkPlayerGetUserid

function NetworkPlayerHasHeadset(player)
	return _in(0x3FB99A8B08D18FD6, player, _r)
end

--- Does exactly the same thing as PLAYER_ID()
function NetworkPlayerIdToInt()
	return _in(0xEE68096F9F37341E, _ri)
end

function NetworkPlayerIndexIsCheater(player)
	return _in(0x565E430DB3B05BEC, player, _r)
end
N_0x565e430db3b05bec = NetworkPlayerIndexIsCheater
NetworkPlayerSomething = NetworkPlayerIndexIsCheater

function NetworkPlayerIsBadsport()
	return _in(0x19D8DA0E5A68045A, _r)
end

function NetworkPlayerIsCheater()
	return _in(0x655B91F1495A9090, _r)
end

--- Checks if a specific value (BYTE) in CPlayerInfo is nonzero.
-- Returns always false in Singleplayer.
-- No longer used for dev checks since first mods were released on PS3 & 360.
-- R* now checks with the is_dlc_present native for the dlc hash 2532323046,
-- if that is present it will unlock dev stuff.
function NetworkPlayerIsRockstarDev(player)
	return _in(0x544ABDDA3B409B6D, player, _r)
end

function NetworkQueryRespawnResults(p0)
	return _in(0x3C891A251567DFCE, _ii(p0) --[[ may be optional ]], _ri)
end
N_0x3c891a251567dfce = NetworkQueryRespawnResults

function NetworkQueueGamerForStatus(p0)
	return _in(0x85A0EF54A500882C, _ii(p0) --[[ may be optional ]], _r)
end
N_0x85a0ef54a500882c = NetworkQueueGamerForStatus
NetworkGetGamerStatus = NetworkQueueGamerForStatus

function NetworkReceivePlayerJobshareCash(value, networkHandle)
	return _in(0x56A3B51944C50598, value, _ii(networkHandle) --[[ may be optional ]])
end

--- index
-- -------
-- See function sub_1005 in am_boat_taxi.ysc
-- context
-- ----------
-- "BACKUP_VAGOS"
-- "BACKUP_LOST"
-- "BACKUP_FAMILIES"
-- "HIRE_MUGGER"
-- "HIRE_MERCENARY"
-- "BUY_CARDROPOFF"
-- "HELI_PICKUP"
-- "BOAT_PICKUP"
-- "CLEAR_WANTED"
-- "HEAD_2_HEAD"
-- "CHALLENGE"
-- "SHARE_LAST_JOB"
-- "DEFAULT"
-- reason
-- ---------
-- "NOTREACHTARGET"
-- "TARGET_ESCAPE"
-- "DELIVERY_FAIL"
-- "NOT_USED"
-- "TEAM_QUIT"
-- "SERVER_ERROR"
-- "RECEIVE_LJ_L"
-- "CHALLENGE_PLAYER_LEFT"
-- "DEFAULT"
-- unk
-- -----
-- Unknown bool value
function NetworkRefundCash(index, context, reason, unk)
	return _in(0xF9C812CD7C46E817, index, _ts(context), _ts(reason), unk)
end
N_0xf9c812cd7c46e817 = NetworkRefundCash

function NetworkRegisterEntityAsNetworked(entity)
	return _in(0x06FAACD625D80CAA, entity)
end
N_0x06faacd625d80caa = NetworkRegisterEntityAsNetworked

function NetworkRegisterHostBroadcastVariables(numVars)
	return _in(0x3E9B2F01C50DF595, _i, numVars)
end

function NetworkRegisterPlayerBroadcastVariables(numVars)
	return _in(0x3364AA97340CA215, _i, numVars)
end

function NetworkRegisterTunableBoolHash(contextHash, nameHash, value)
	return _in(0x697F508861875B42, _ch(contextHash), _ch(nameHash), _i --[[ actually bool ]], _r)
end
N_0x697f508861875b42 = NetworkRegisterTunableBoolHash

function NetworkRegisterTunableFloatHash(contextHash, nameHash, value)
	return _in(0x1950DAE9848A4739, _ch(contextHash), _ch(nameHash), _fi(value) --[[ may be optional ]], _r)
end
N_0x1950dae9848a4739 = NetworkRegisterTunableFloatHash

function NetworkRegisterTunableIntHash(contextHash, nameHash, value)
	return _in(0x3A8B55FDA4C8DDEF, _ch(contextHash), _ch(nameHash), _ii(value) --[[ may be optional ]], _r)
end
N_0x3a8b55fda4c8ddef = NetworkRegisterTunableIntHash

function NetworkRemoveAllTransitionInvite()
	return _in(0x726E0375C7A26368)
end
N_0x726e0375c7a26368 = NetworkRemoveAllTransitionInvite

function NetworkRemoveEntityArea(p0)
	return _in(0x93CF869BAA0C4874, p0, _r)
end

function NetworkRemovePresenceInvite(p0)
	return _in(0xF0210268DB0974B1, p0, _r)
end
N_0xf0210268db0974b1 = NetworkRemovePresenceInvite

function NetworkRemoveTransitionInvite(p0)
	return _in(0x7524B431B2E6F7EE, _ii(p0) --[[ may be optional ]])
end

function NetworkReportMyself()
	return _in(0x5626D9D6810730D5)
end
N_0x5626d9d6810730d5 = NetworkReportMyself

function NetworkRequestCloudBackgroundScripts()
	return _in(0x924426BFFD82E915, _r)
end
N_0x924426bffd82e915 = NetworkRequestCloudBackgroundScripts
NetworkRequestCloudBackgroundScripts = NetworkRequestCloudBackgroundScripts

function NetworkRequestCloudTunables()
	return _in(0x42FB3B532D526E6C)
end
N_0x42fb3b532d526e6c = NetworkRequestCloudTunables

function NetworkRequestControlOfDoor(doorID)
	return _in(0x870DDFD5A4A796E4, doorID, _r)
end

function NetworkRequestControlOfEntity(entity)
	return _in(0xB69317BF5E782347, entity, _r)
end

function NetworkRequestControlOfNetworkId(netId)
	return _in(0xA670B3662FAFFBD0, netId, _r)
end

function NetworkResetBodyTracker()
	return _in(0x72433699B4E6DD64)
end

--- p4 and p5 are always 0 in scripts
function NetworkRespawnCoords(player, x, y, z, p4, p5)
	return _in(0x9769F811D1785B03, player, x, y, z, p4, p5)
end
N_0x9769f811d1785b03 = NetworkRespawnCoords

--- NativeDB Added Parameter 7: Any p6
function NetworkResurrectLocalPlayer(x, y, z, heading, unk, changetime)
	return _in(0xEA23C49EAA83ACFB, x, y, z, heading, unk, changetime)
end

--- NativeDB Introduced: v1290
function NetworkRivalDeliveryCompleted(earnedMoney)
	return _in(0x1B882107C23A9022, earnedMoney)
end

function NetworkSeedRandomNumberGenerator(seed)
	return _in(0xF1B84178F8674195, seed)
end
N_0xf1b84178f8674195 = NetworkSeedRandomNumberGenerator

function NetworkSendInviteViaPresence(p2, p3)
	return _in(0xC3C7A6AFDB244624, _i, _i, p2, p3, _r)
end
N_0xc3c7a6afdb244624 = NetworkSendInviteViaPresence
NetworkSendPresenceInvite = NetworkSendInviteViaPresence

--- String "NETWORK_SEND_PRESENCE_TRANSITION_INVITE" is contained in the function in ida so this one is correct.
function NetworkSendPresenceTransitionInvite(p2, p3)
	return _in(0xC116FF9B4D488291, _i, _i, p2, p3, _r)
end
N_0xc116ff9b4d488291 = NetworkSendPresenceTransitionInvite

--- Message is limited to 64 characters.
function NetworkSendTextMessage(message, networkHandle)
	return _in(0x3A214F2EC889B100, _ts(message), _ii(networkHandle) --[[ may be optional ]], _r)
end

--- the first arg seems to be the network player handle (&handle) and the second var is pretty much always "" and the third seems to be a number between 0 and ~10 and the 4th is is something like 0 to 5 and I guess the 5th is a bool cuz it is always 0 or 1
-- does this send an invite to a player?
function NetworkSendTransitionGamerInstruction(p1, p2, p3, p4)
	return _in(0x31D1D2B858D25E6B, _i, _ts(p1), p2, p3, p4, _r)
end

function NetworkSessionActivityQuickmatch(p0, p1, p2, p3)
	return _in(0xBE3E347A87ACEB82, p0, p1, p2, p3, _r)
end
N_0xbe3e347a87aceb82 = NetworkSessionActivityQuickmatch

function NetworkSessionAddActiveMatchmakingGroup(groupId)
	return _in(0xCAE55F48D3D7875C, groupId)
end
N_0xcae55f48d3d7875c = NetworkSessionAddActiveMatchmakingGroup

function NetworkSessionBlockJoinRequests(toggle)
	return _in(0xA73667484D7037C3, toggle)
end
N_0xa73667484d7037c3 = NetworkSessionBlockJoinRequests

function NetworkSessionCancelInvite()
	return _in(0x2FBF47B1B36D36F9)
end

function NetworkSessionChangeSlots(p0, p1)
	return _in(0xB4AB419E0D86ACAE, p0, p1)
end
N_0xb4ab419e0d86acae = NetworkSessionChangeSlots

function NetworkSessionCrewMatchmaking(p0, p1, p2, maxPlayers, p4)
	return _in(0x94BC51E9449D917F, p0, p1, p2, maxPlayers, p4, _r)
end
N_0x94bc51e9449d917f = NetworkSessionCrewMatchmaking

--- p0 is always false and p1 varies.
-- NETWORK_SESSION_END(0, 1)
-- NETWORK_SESSION_END(0, 0)
-- Results in: "Connection to session lost due to an unknown network error. Please return to Grand Theft Auto V and try again later."
function NetworkSessionEnd(p0, p1)
	return _in(0xA02E59562D711006, p0, p1, _r)
end

--- unknown params
-- p0 = 0, 2, or 999 (The global is 999 by default.)
-- p1 = 0 (Always in every script it's found in atleast.)
-- p2 = 0, 3, or 4 (Based on a var that is determined by a function.)
-- p3 = maxPlayers (It's obvious in x360 scripts it's always 18)
-- p4 = 0 (Always in every script it's found in atleast.)
-- p5 = 0 or 1. (1 if network_can_enter_multiplayer, but set to 0 if other checks after that are passed.)
-- p5 is reset to 0 if,
-- Global_1315318 = 0 or Global_1315323 = 9 or 12 or (Global_1312629 = 0 && Global_1312631 = true/1) those are passed.
function NetworkSessionEnter(p0, p1, p2, maxPlayers, p4, p5)
	return _in(0x330ED4D05491934F, p0, p1, p2, maxPlayers, p4, p5, _ri)
end

function NetworkSessionForceCancelInvite()
	return _in(0xA29177F7703B5644)
end
N_0xa29177f7703b5644 = NetworkSessionForceCancelInvite

function NetworkSessionFriendMatchmaking(p0, p1, maxPlayers, p3)
	return _in(0x2CFC76E0D087C994, p0, p1, maxPlayers, p3, _r)
end
N_0x2cfc76e0d087c994 = NetworkSessionFriendMatchmaking

function NetworkSessionGetInviter(networkHandle)
	return _in(0xE57397B4A3429DD0, _ii(networkHandle) --[[ may be optional ]])
end

function NetworkSessionGetKickVote(player)
	return _in(0xD6D09A6F32F49EF1, player, _r)
end
NetworkSessionArePlayersVotingToKick = NetworkSessionGetKickVote
NetworkSessionIsPlayerVotedToKick = NetworkSessionGetKickVote

function NetworkSessionGetMatchmakingGroupFree(p0)
	return _in(0x56CE820830EF040B, p0, _ri)
end
N_0x56ce820830ef040b = NetworkSessionGetMatchmakingGroupFree
NetworkSessionGetUnk = NetworkSessionGetMatchmakingGroupFree

function NetworkSessionGetPrivateSlots()
	return _in(0x53AFD64C6758F2F9, _ri)
end
N_0x53afd64c6758f2f9 = NetworkSessionGetPrivateSlots

--- Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
function NetworkSessionHost(p0, maxPlayers, p2)
	return _in(0x6F3D4ED9BEE4E61D, p0, maxPlayers, p2, _r)
end

function NetworkSessionHostClosed(p0, maxPlayers)
	return _in(0xED34C0C02C098BB7, p0, maxPlayers, _r)
end
N_0xed34c0c02c098bb7 = NetworkSessionHostClosed

--- Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
function NetworkSessionHostFriendsOnly(p0, maxPlayers)
	return _in(0xB9CFD27A5D578D83, p0, maxPlayers, _r)
end

--- Loads up the map that is loaded when beeing in mission creator
-- Player gets placed in a mix between online/offline mode
-- p0 is always 2 in R* scripts.
-- Appears to be patched in gtav b757 (game gets terminated) alonside with most other network natives to prevent online modding ~ghost30812
function NetworkSessionHostSinglePlayer(p0)
	return _in(0xC74C33FCA52856D5, p0)
end

function NetworkSessionIsClosedCrew()
	return _in(0x74732C6CA90DA2B4, _r)
end
N_0x74732c6ca90da2b4 = NetworkSessionIsClosedCrew

function NetworkSessionIsClosedFriends()
	return _in(0xFBCFA2EA2E206890, _r)
end
N_0xfbcfa2ea2e206890 = NetworkSessionIsClosedFriends

function NetworkSessionIsInVoiceSession()
	return _in(0x855BC38818F6F684, _r)
end
N_0x855bc38818f6f684 = NetworkSessionIsInVoiceSession

function NetworkSessionIsPrivate()
	return _in(0xCEF70AA5B3F89BA1, _r)
end
N_0xcef70aa5b3f89ba1 = NetworkSessionIsPrivate

function NetworkSessionIsSolo()
	return _in(0xF3929C2379B60CCE, _r)
end
N_0xf3929c2379b60cce = NetworkSessionIsSolo

function NetworkSessionIsVisible()
	return _in(0xBA416D68C631496A, _r)
end
N_0xba416d68c631496a = NetworkSessionIsVisible

function NetworkSessionIsVoiceSessionBusy()
	return _in(0xEF0912DDF7C4CB4B, _r)
end
N_0xef0912ddf7c4cb4b = NetworkSessionIsVoiceSessionBusy

function NetworkSessionJoinInvite()
	return _in(0xC6F8AB8A4189CF3A)
end
NetworkIsPlayerAnimationDrawingSynchronized = NetworkSessionJoinInvite

--- Only works as host.
function NetworkSessionKickPlayer(player)
	return _in(0xFA8904DC5F304220, player)
end

function NetworkSessionLeaveSinglePlayer()
	return _in(0x3442775428FD2DAA)
end

function NetworkSessionMarkVisible(toggle)
	return _in(0x271CC6AB59EBF9A5, toggle)
end
N_0x271cc6ab59ebf9a5 = NetworkSessionMarkVisible

function NetworkSessionSetMatchmakingGroup(matchmakingGroup)
	return _in(0x49EC8030F5015F8B, matchmakingGroup)
end
N_0x49ec8030f5015f8b = NetworkSessionSetMatchmakingGroup
NetworkSctvSlots = NetworkSessionSetMatchmakingGroup

--- playerTypes:
-- 0 = regular joiner
-- 4 = spectator
-- 8 = unknown
function NetworkSessionSetMatchmakingGroupMax(playerType, playerCount)
	return _in(0x8B6A4DD0AF9CE215, playerType, playerCount)
end
N_0x8b6a4dd0af9ce215 = NetworkSessionSetMatchmakingGroupMax
NetworkSessionSetMaxPlayers = NetworkSessionSetMatchmakingGroupMax

function NetworkSessionSetMatchmakingMentalState(p0)
	return _in(0xF1EEA2DDA9FFA69D, p0)
end
N_0xf1eea2dda9ffa69d = NetworkSessionSetMatchmakingMentalState

function NetworkSessionSetMatchmakingPropertyId(p0)
	return _in(0x3F52E880AAF6C8CA, p0)
end
N_0x3f52e880aaf6c8ca = NetworkSessionSetMatchmakingPropertyId

function NetworkSessionValidateJoin(p0)
	return _in(0xC19F6C8E7865A6FF, p0)
end
N_0xc19f6c8e7865a6ff = NetworkSessionValidateJoin
NetworkSessionHosted = NetworkSessionValidateJoin

--- Only one occurence in the scripts:
-- auto sub_cb43(auto a_0, auto a_1) {
-- if (g_2594CB._f1) {
-- if (NETWORK::_855BC38818F6F684()) {
-- NETWORK::_ABD5E88B8A2D3DB2(&a_0._fB93);
-- g_2594CB._f14/*{13}*/ = a_0._fB93;
-- g_2594CB._f4/*"64"*/ = a_1;
-- return 1;
-- }
-- }
-- return 0;
-- }
-- other:
-- looks like it passes a player in the paramater
-- Contains string "NETWORK_VOICE_CONNECT_TO_PLAYER" in ida
function NetworkSessionVoiceConnectToPlayer(globalPtr)
	return _in(0xABD5E88B8A2D3DB2, _ii(globalPtr) --[[ may be optional ]])
end
N_0xabd5e88b8a2d3db2 = NetworkSessionVoiceConnectToPlayer
NetworkVoiceConnectToPlayer = NetworkSessionVoiceConnectToPlayer

function NetworkSessionVoiceHost()
	return _in(0x9C1556705F864230)
end

function NetworkSessionVoiceLeave()
	return _in(0x6793E42BE02B575D)
end

function NetworkSessionVoiceRespondToRequest(p0, p1)
	return _in(0x7F8413B7FC2AA6B9, p0, p1)
end
NetworkSetKeepFocuspoint = NetworkSessionVoiceRespondToRequest

function NetworkSessionVoiceSetTimeout(timeout)
	return _in(0x5B8ED3DB018927B1, timeout)
end
N_0x5b8ed3db018927b1 = NetworkSessionVoiceSetTimeout

function NetworkSessionWasInvited()
	return _in(0x23DFB504655D0CE4, _r)
end
N_0x23dfb504655d0ce4 = NetworkSessionWasInvited

function NetworkSetActivitySpectator(toggle)
	return _in(0x75138790B4359A74, toggle)
end

function NetworkSetActivitySpectatorMax(maxSpectators)
	return _in(0x9D277B76D1D12222, maxSpectators)
end

function NetworkSetChoiceMigrateOptions(toggle, player)
	return _in(0x5C707A667DF8B9FA, toggle, player)
end
N_0x5c707a667df8b9fa = NetworkSetChoiceMigrateOptions

function NetworkSetCurrentDataManagerHandle(p0)
	return _in(0x796A87B3B68D1F3D, _ii(p0) --[[ may be optional ]], _r)
end
N_0x796a87b3b68d1f3d = NetworkSetCurrentDataManagerHandle
NetworkCheckDataManagerForHandle = NetworkSetCurrentDataManagerHandle

function NetworkSetCurrentlySelectedGamerHandleFromInviteMenu(p0)
	return _in(0x7206F674F2A3B1BB, _ii(p0) --[[ may be optional ]], _r)
end

function NetworkSetEntityCanBlend(entity, toggle)
	return _in(0xD830567D88A1E873, entity, toggle)
end

function NetworkSetEntityGhostedWithOwner(entity, p1)
	return _in(0x4BA166079D658ED4, entity, p1)
end
N_0x4ba166079d658ed4 = NetworkSetEntityGhostedWithOwner

--- if set to true other network players can't see it
-- if set to false other network player can see it
-- =========================================
-- ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.
-- pc or last gen?
-- ^^ last-gen
function NetworkSetEntityInvisibleToNetwork(entity, toggle)
	return _in(0xF1CA12B18AEF5298, entity, toggle)
end
N_0xf1ca12b18aef5298 = NetworkSetEntityInvisibleToNetwork
NetworkSetEntityVisibleToNetwork = NetworkSetEntityInvisibleToNetwork

function NetworkSetFriendlyFireOption(toggle)
	return _in(0xF808475FA571D823, toggle)
end

function NetworkSetGamerInvitedToTransition(networkHandle)
	return _in(0xCA2C8073411ECDB6, _ii(networkHandle) --[[ may be optional ]])
end

function NetworkSetInFreeCamMode(toggle)
	return _in(0xFC18DB55AE19E046, toggle)
end
N_0xfc18db55ae19e046 = NetworkSetInFreeCamMode

function NetworkSetInMpCutscene(p0, p1)
	return _in(0x9CA5DE655269FEC4, p0, p1)
end

function NetworkSetInSpectatorMode(toggle, playerPed)
	return _in(0x423DE3854BB50894, toggle, playerPed)
end

function NetworkSetInSpectatorModeExtended(toggle, playerPed, p2)
	return _in(0x419594E137637120, toggle, playerPed, p2)
end
N_0x419594e137637120 = NetworkSetInSpectatorModeExtended

function NetworkSetInviteOnCallForInviteMenu(p0)
	return _in(0x66F010A4B031A331, _ii(p0) --[[ may be optional ]])
end
N_0x66f010a4b031a331 = NetworkSetInviteOnCallForInviteMenu

function NetworkSetLocalPlayerInvincibleTime(time)
	return _in(0x2D95C7E2D7E07307, time)
end

function NetworkSetLocalPlayerSyncLookAt(toggle)
	return _in(0x524FF0AEFF9C3973, toggle)
end
N_0x524ff0aeff9c3973 = NetworkSetLocalPlayerSyncLookAt

function NetworkSetMissionFinished()
	return _in(0x3B3D11CD9FFCDFC9)
end

function NetworkSetNoSpectatorChat(toggle)
	return _in(0xF46A1E03E8755980, toggle)
end
N_0xf46a1e03e8755980 = NetworkSetNoSpectatorChat

--- Sets whether or not an object (created using `CREATE_OBJECT`, or similar) should have its position/rotation synchronized,
-- even if it is a 'static' object (for example, having flag 32 - Static - set in its archetype definition).
-- This has to be called during the same frame the object is created/registered for network, as otherwise it may already
-- have a remote clone created.
-- Once a remote clone is created, changing this value will not have any effect on said clone.
-- @param object The object to set forced blending state for.
-- @param enabled `true` to enable forced blending.
function NetworkSetObjectForceStaticBlend(object, enabled)
	return _in(0x0379DAF89BA09AA5, object, enabled)
end
N_0x0379daf89ba09aa5 = NetworkSetObjectForceStaticBlend

function NetworkSetOverrideSpectatorMode(toggle)
	return _in(0x70DA3BF8DACD3210, toggle)
end

function NetworkSetPlayerIsPassive(toggle)
	return _in(0x1B857666604B1A74, toggle)
end
N_0x1b857666604b1a74 = NetworkSetPlayerIsPassive

--- value must be < 255
function NetworkSetPropertyId(id)
	return _in(0x1775961C2FBBCB5C, id)
end

--- On PC it's a nullsub which means it does absolutely nothing.
-- Now that Discord supports Rich Presence, R* might finally implement this for PC. Or maybe in future games like RDR2, GTA VI...
function NetworkSetRichPresence(p0, p1, p2, p3)
	return _in(0x1DCCACDCFC569362, p0, p1, p2, p3)
end

--- This native does absolutely nothing, just a nullsub
function NetworkSetRichPresenceString(p0, textLabel)
	return _in(0x3E200C2BCF4164EB, p0, _ts(textLabel))
end
N_0x3e200c2bcf4164eb = NetworkSetRichPresenceString
NetworkSetRichPresence_2 = NetworkSetRichPresenceString

function NetworkSetScriptIsSafeForNetworkGame()
	return _in(0x9243BAC96D64C050)
end

function NetworkSetScriptReadyForEvents(toggle)
	return _in(0x7AC752103856FB20, toggle)
end
N_0x7ac752103856fb20 = NetworkSetScriptReadyForEvents

function NetworkSetTalkerProximity(value)
	return _in(0xCBF12D65F95AD686, value)
end

function NetworkSetTeamOnlyChat(toggle)
	return _in(0xD5B4883AC32F24C3, toggle)
end

function NetworkSetThisScriptIsNetworkScript(maxNumMissionParticipants, p1, instanceId)
	return _in(0x1CA59E306ECB80A5, maxNumMissionParticipants, p1, instanceId)
end

function NetworkSetTransitionActivityId(p0)
	return _in(0x30DE938B516F0AD2, p0)
end
N_0x30de938b516f0ad2 = NetworkSetTransitionActivityId

function NetworkSetTransitionCreatorHandle(p0)
	return _in(0xEF26739BCD9907D5, _ii(p0) --[[ may be optional ]])
end

function NetworkSetTransitionVisibilityLock(p0, p1)
	return _in(0x0C978FDA19692C2C, p0, p1)
end
N_0x0c978fda19692c2c = NetworkSetTransitionVisibilityLock

--- Allow vehicle wheels to be destructible even when the Vehicle entity is invincible.
-- ```
-- ```
-- NativeDB Introduced: v1365
function NetworkSetVehicleWheelsDestructible(vehicle, toggle)
	return _in(0x890E2C5ABED7236D, vehicle, toggle)
end
N_0x890e2c5abed7236d = NetworkSetVehicleWheelsDestructible

function NetworkSetVoiceActive(toggle)
	return _in(0xBABEC9E69A91C57B, toggle)
end

function NetworkSetVoiceChannel(channel)
	return _in(0xEF6212C2EFEF1A23, channel)
end

--- Returns true if the NAT type is Strict (3) and a certain number of connections have failed.
function NetworkShouldShowConnectivityTroubleshooting()
	return _in(0x82A2B386716608F1, _r)
end
N_0x82a2b386716608f1 = NetworkShouldShowConnectivityTroubleshooting

--- Example:
-- int playerHandle;
-- NETWORK_HANDLE_FROM_PLAYER(selectedPlayer, &playerHandle, 13);
-- NETWORK_SHOW_PROFILE_UI(&playerHandle);
function NetworkShowProfileUi(networkHandle)
	return _in(0x859ED1CEA343FCA8, _ii(networkHandle) --[[ may be optional ]])
end

function NetworkSpentAmmoDrop(p0, p1, p2)
	return _in(0xB162DC95C0A3317B, p0, p1, p2)
end

--- NativeDB Introduced: v1868
function NetworkSpentArcadeGame(p0, p1, p2, p3, p4)
	return _in(0xEAD3D81F2C3A1458, p0, p1, p2, p3, p4)
end

--- NativeDB Introduced: v1868
function NetworkSpentArcadeGeneric(p0, p1, p2, p3, p4)
	return _in(0x43AA7FAC4E6D6687, p0, p1, p2, p3, p4)
end

--- NativeDB Introduced: v1604
function NetworkSpentArenaJoinSpectator(amount, p1, p2, p3)
	return _in(0x14EAEA58F93B55AF, amount, p1, p2, p3)
end

--- NativeDB Introduced: v1604
function NetworkSpentArenaPremium(amount, p1, p2)
	return _in(0x619496D837EFD920, amount, p1, p2)
end

--- NativeDB Introduced: v1604
function NetworkSpentArenaSpectatorBox(amount, p1, p2, p3)
	return _in(0x7049BF858601DC0F, amount, p1, p2, p3)
end

function NetworkSpentArrestBail(p0, p1, p2)
	return _in(0x812F5488B1B2A299, p0, p1, p2)
end

--- NativeDB Introduced: v2372
function NetworkSpentAutoshopModifications(p0, p1, p2, p3, p4)
	return _in(0x9BEA350D7C48061B, p0, p1, p2, p3, p4)
end
N_0x9bea350d7c48061b = NetworkSpentAutoshopModifications

--- NativeDB Introduced: v2372
function NetworkSpentAutoshopPropertyUtilityFee(p0, p1, p2, p3)
	return _in(0xB40F96D6D252839B, p0, p1, p2, p3)
end
N_0xb40f96d6d252839b = NetworkSpentAutoshopPropertyUtilityFee

function NetworkSpentBaService(p0, p1, p2, p3, p4)
	return _in(0xD7CCCBA28C4ECAF0, p0, p1, p2, p3, p4)
end
N_0xd7cccba28c4ecaf0 = NetworkSpentBaService

function NetworkSpentBallisticEquipment(amount, p1, p2)
	return _in(0x5D97630A8A0EF123, amount, p1, p2)
end
N_0x5d97630a8a0ef123 = NetworkSpentBallisticEquipment

--- NativeDB Introduced: v323
function NetworkSpentBankInterest(p0, p1, p2)
	return _in(0xCA230C9682556CF1, p0, p1, p2)
end

--- NativeDB Introduced: v2189
function NetworkSpentBeachPartyGeneric(p0)
	return _in(0x54ABA22FA6371249, p0)
end

function NetworkSpentBetting(amount, p1, matchId, p3, p4)
	return _in(0x1C436FD11FFA692F, amount, p1, _ts(matchId), p3, p4)
end

function NetworkSpentBoatPickup(p0, p1, p2)
	return _in(0x524EE43A37232C00, p0, p1, p2)
end

--- NativeDB Added Parameter 1: int amount
-- NativeDB Added Parameter 2: BOOL p1
-- NativeDB Added Parameter 3: BOOL p2
function NetworkSpentBoss()
	return _in(0xFFBE02CD385356BD, _r)
end
N_0xffbe02cd385356bd = NetworkSpentBoss

function NetworkSpentBounty(p0, p1, p2)
	return _in(0x29B260B84947DFCC, p0, p1, p2)
end

--- NativeDB Introduced: v1493
function NetworkSpentBountyHunterMission(amount, p1, p2)
	return _in(0x1BEA0CD93470BB1F, amount, p1, p2)
end

function NetworkSpentBullShark(p0, p1, p2)
	return _in(0xA6DD8458CE24012C, p0, p1, p2)
end

function NetworkSpentBusiness(p0, p1, p2, p3)
	return _in(0x0035BB914316F1E3, p0, p1, p2, p3)
end
N_0x0035bb914316f1e3 = NetworkSpentBusiness

--- NativeDB Introduced: v1604
function NetworkSpentBuyArena(amount, p1, p2, p3)
	return _in(0x40D5DA9550B7CB46, amount, p1, p2, _ts(p3))
end

--- NativeDB Introduced: v2372
function NetworkSpentBuyAutoshop(p0, p1, p2, p3)
	return _in(0xEEB7E5D1FEB20869, p0, p1, p2, p3)
end
N_0xeeb7e5d1feb20869 = NetworkSpentBuyAutoshop

--- NativeDB Introduced: v1290
function NetworkSpentBuyBase(p0, p1, p2, p3)
	return _in(0x4EA3F425C7744D21, p0, p1, p2, p3)
end

function NetworkSpentBuyBunker(p0, p1, p2, p3)
	return _in(0x12D148D26538D0F9, p0, p1, p2, p3)
end
N_0x12d148d26538d0f9 = NetworkSpentBuyBunker

--- NativeDB Introduced: v1734
function NetworkSpentBuyCasino(amount, p1, p2, data)
	return _in(0x34A6FC4D06C4DA0F, amount, p1, p2, _ii(data) --[[ may be optional ]])
end

function NetworkSpentBuyOfftheradar(p0, p1, p2)
	return _in(0xA628A745E2275C5D, p0, p1, p2)
end

function NetworkSpentBuyPassiveMode(p0, p1, p2)
	return _in(0x6D3A430D1A809179, p0, p1, p2)
end

function NetworkSpentBuyRevealPlayers(p0, p1, p2)
	return _in(0x6E176F1B18BC0637, p0, p1, p2)
end

--- NativeDB Introduced: v1290
function NetworkSpentBuyTiltrotor(p0, p1, p2, p3)
	return _in(0x0CCE73BC7A11E885, p0, p1, p2, p3)
end

function NetworkSpentBuyTruck(p0, p1, p2, p3)
	return _in(0xAC272C0AE01B4BD8, p0, p1, p2, p3)
end
N_0xac272c0ae01b4bd8 = NetworkSpentBuyTruck

function NetworkSpentBuyWantedlevel(p0, p2, p3)
	return _in(0xE1B13771A843C4F6, p0, _i, p2, p3)
end

function NetworkSpentCallPlayer(p0, p2, p3)
	return _in(0xACDE7185B374177C, p0, _i, p2, p3)
end

--- NativeDB Introduced: v2372
function NetworkSpentCarclub(p0, p1, p2, p3)
	return _in(0x925227803A0EAA1B, p0, p1, p2, p3)
end
N_0x925227803a0eaa1b = NetworkSpentCarclub

--- NativeDB Introduced: v2372
function NetworkSpentCarclubMembership(p0, p1, p2, p3, p4)
	return _in(0x1464E17207CD36E2, p0, p1, p2, p3, p4)
end
N_0x1464e17207cd36e2 = NetworkSpentCarclubMembership

--- NativeDB Introduced: v2372
function NetworkSpentCarclubTakeover(p0, p1, p2, p3)
	return _in(0xD1E46824E6FB92B5, p0, p1, p2, p3)
end
N_0xd1e46824e6fb92b5 = NetworkSpentCarclubTakeover

function NetworkSpentCarwash(p0, p1, p2, p3, p4)
	return _in(0xEC03C719DB2F4306, p0, p1, p2, p3, p4)
end

function NetworkSpentCashDrop(amount, p1, p2)
	return _in(0x289016EC778D60E0, amount, p1, p2)
end

--- NativeDB Introduced: v2189
function NetworkSpentCasinoClubGeneric(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0xC991C255AA6D90B2, p0, p1, p2, p3, p4, p5, p6, p7, p8)
end

--- NativeDB Introduced: v1734
function NetworkSpentCasinoGeneric(amount, p1, p2, p3, p4)
	return _in(0x88BF9B612B84D3C3, amount, p1, p2, p3, p4)
end

--- NativeDB Introduced: v1868
function NetworkSpentCasinoHeist(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
	return _in(0xD30E8392F407C328, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
end

--- NativeDB Introduced: v1868
function NetworkSpentCasinoHeistSkipMission(p0, p1, p2, p3)
	return _in(0x487009DD91D93429, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1734
function NetworkSpentCasinoMembership(amount, p1, p2, p3)
	return _in(0xFBBE0570EDF39D46, amount, p1, p2, p3)
end

function NetworkSpentCinema(p0, p1, p2, p3)
	return _in(0x6B38ECB05A63A685, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1290
function NetworkSpentEmployAssassins(p0, p1, p2, p3)
	return _in(0x5BBBD92186E1F1C5, p0, p1, p2, p3)
end

--- NativeDB Introduced: v2372
function NetworkSpentFromBank(p0, p1, p2, p3)
	return _in(0xB9F7A469460E7A4A, p0, p1, p2, p3)
end
N_0xb9f7a469460e7a4a = NetworkSpentFromBank

function NetworkSpentFromRockstar(bank, p1, p2)
	return _in(0x6A445B64ED7ABEB5, bank, p1, p2)
end
N_0x6a445b64ed7abeb5 = NetworkSpentFromRockstar

--- NativeDB Introduced: v1290
function NetworkSpentGangopsCannon(p0, p1, p2, p3)
	return _in(0x771ADB0E7635B7BF, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1290
function NetworkSpentGangopsStartMission(p0, p1, p2, p3)
	return _in(0xDA947AE8880D5C18, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1290
function NetworkSpentGangopsStartStrand(type, amount, p2, p3)
	return _in(0xA19EC0786E326E06, type, amount, p2, p3)
end

--- NativeDB Introduced: v1290
function NetworkSpentGangopsTripSkip(amount, p1, p2)
	return _in(0x5ECE6FD7B4EC8D6A, amount, p1, p2)
end

--- NativeDB Introduced: v1180
function NetworkSpentHangarStaffCharges(amount, p1, p2)
	return _in(0xB1F1346FD57685D7, amount, p1, p2)
end

--- NativeDB Introduced: v1180
function NetworkSpentHangarUtilityCharges(amount, p1, p2)
	return _in(0xB18AC2ECBB15CB6A, amount, p1, p2)
end

function NetworkSpentHeliPickup(p0, p1, p2)
	return _in(0x7BF1D73DB2ECA492, p0, p1, p2)
end

function NetworkSpentHireMercenary(p0, p1, p2)
	return _in(0xE7B80E2BF9D80BD6, p0, p1, p2)
end

--- Only used once in a script (am_contact_requests)
-- p1 = 0
-- p2 = 1
function NetworkSpentHireMugger(p0, p1, p2)
	return _in(0xE404BFB981665BF0, p0, p1, p2)
end

function NetworkSpentHoldups(p0, p1, p2)
	return _in(0xD9B86B9872039763, p0, p1, p2)
end

--- NativeDB Introduced: v2372
function NetworkSpentImAbility(p0, p1, p2, p3)
	return _in(0x93AA4165CB67E925, p0, p1, p2, p3)
end
N_0x93aa4165cb67e925 = NetworkSpentImAbility

function NetworkSpentImportExportRepair(p0, p1, p2)
	return _in(0xC1952F3773BA18FE, p0, p1, p2)
end
N_0xc1952f3773ba18fe = NetworkSpentImportExportRepair

function NetworkSpentInStripclub(p0, p1, p2, p3)
	return _in(0xEE99784E4467689C, p0, p1, p2, p3)
end
N_0xee99784e4467689c = NetworkSpentInStripclub

--- NativeDB Introduced: v2189
function NetworkSpentIslandHeist(p0, p1, p2, p3)
	return _in(0xE86689E5F82DE429, p0, p1, p2, p3)
end

--- NativeDB Introduced: v323
function NetworkSpentJobSkip(amount, matchId, p2, p3)
	return _in(0x28F174A67B8D0C2F, amount, _ts(matchId), p2, p3)
end

function NetworkSpentJukebox(p0, p1, p2, p3)
	return _in(0x5BCDE0F640C773D2, p0, p1, p2, p3)
end
N_0x5bcde0f640c773d2 = NetworkSpentJukebox

--- NativeDB Introduced: v1604
function NetworkSpentMakeItRain(amount, p1, p2)
	return _in(0xE5F5A060439C2F5D, amount, p1, p2)
end

function NetworkSpentMoveYacht(amount, p1, p2)
	return _in(0xE7DF4E0545DFB56E, amount, p1, p2)
end
N_0xe7df4e0545dfb56e = NetworkSpentMoveYacht

--- NativeDB Introduced: v1493
function NetworkSpentNightclubBarDrink(amount, p1, p2, p3)
	return _in(0xDD21B016E4289465, amount, p1, p2, p3)
end

--- NativeDB Introduced: v1493
function NetworkSpentNightclubEntryFee(player, amount, p1, p2, p3)
	return _in(0x876056684281655D, player, amount, p1, p2, p3)
end

function NetworkSpentNoCops(p0, p1, p2)
	return _in(0xD5BB406F4E04019F, p0, p1, p2)
end
N_0xd5bb406f4e04019f = NetworkSpentNoCops

function NetworkSpentOrderBodyguardVehicle(p0, p1, p2, p3)
	return _in(0xE8B0B270B6E7C76E, p0, p1, p2, p3)
end
N_0xe8b0b270b6e7c76e = NetworkSpentOrderBodyguardVehicle

function NetworkSpentOrderWarehouseVehicle(p0, p1, p2, p3)
	return _in(0x05F04155A226FBBF, p0, p1, p2, p3)
end
N_0x05f04155a226fbbf = NetworkSpentOrderWarehouseVehicle

function NetworkSpentPaServiceDancer(p0, p1, p2, p3)
	return _in(0xB49ECA122467D05F, p0, p1, p2, p3)
end
N_0xb49eca122467d05f = NetworkSpentPaServiceDancer

function NetworkSpentPaServiceHeliPickup(p0, p1, p2, p3)
	return _in(0x0FE8E1FCD2B86B33, p0, p1, p2, p3)
end
N_0x0fe8e1fcd2b86b33 = NetworkSpentPaServiceHeliPickup

function NetworkSpentPayBoss(p0, p1, p2)
	return _in(0xDBC966A01C02BCA7, p0, p1, p2)
end
N_0xdbc966a01c02bca7 = NetworkSpentPayBoss

function NetworkSpentPayGoon(p0, p1, amount)
	return _in(0x08A1B82B91900682, p0, p1, amount)
end
N_0x08a1b82b91900682 = NetworkSpentPayGoon

--- According to how I understood this in the freemode script alone,
-- The first parameter is determined by a function named, func_5749 within the freemode script which has a list of all the vehicles and a set price to return which some vehicles deals with globals as well. So the first parameter is basically the set in stone insurance cost it's gonna charge you for that specific vehicle model.
-- The second parameter whoever put it was right, they call GET_ENTITY_MODEL with the vehicle as the paremeter.
-- The third parameter is the network handle as they call their little struct<13> func or atleast how the script decompiled it to look which in lamens terms just returns the network handle of the previous owner based on DECOR_GET_INT(vehicle, "Previous_Owner").
-- The fourth parameter is a bool that returns true/false depending on if your bank balance is greater then 0.
-- The fifth and last parameter is a bool that returns true/false depending on if you have the money for the car based on the cost returned by func_5749. In the freemode script eg,
-- bool hasTheMoney = MONEY::_GET_BANK_BALANCE() < carCost.
function NetworkSpentPayVehicleInsurancePremium(amount, vehicleModel, notBankrupt, hasTheMoney)
	return _in(0x9FF28D88C766E3E8, amount, _ch(vehicleModel), _i, notBankrupt, hasTheMoney)
end

function NetworkSpentPlayerHealthcare(p0, p1, p2, p3)
	return _in(0x7C99101F7FCE2EE5, p0, p1, p2, p3)
end
N_0x7c99101f7fce2ee5 = NetworkSpentPlayerHealthcare

function NetworkSpentProstitutes(p0, p1, p2)
	return _in(0xB21B89501CFAC79E, p0, p1, p2)
end

--- NativeDB Introduced: v1180
function NetworkSpentPurchaseHangar(p0, p1, p2, p3)
	return _in(0xCCB339CC970452DA, p0, p1, p2, p3)
end

function NetworkSpentPurchaseWarehouse(amount, data, p2, p3)
	return _in(0x33981D6804E62F49, amount, data, p2, p3)
end
N_0x33981d6804e62f49 = NetworkSpentPurchaseWarehouse

--- NativeDB Introduced: v1493
function NetworkSpentRdrhatchetBonus(amount, p1, p2)
	return _in(0xE284D46FFDB82E36, amount, p1, p2)
end

--- NativeDB Introduced: v1493
function NetworkSpentRehireDj(amount, p1, p2, p3)
	return _in(0xF6C8A544E4CF14FC, amount, p1, p2, p3)
end

function NetworkSpentRenameOrganization(p0, p1, p2)
	return _in(0xFC4EE00A7B3BFB76, p0, p1, p2)
end
N_0xfc4ee00a7b3bfb76 = NetworkSpentRenameOrganization

function NetworkSpentRequestHeist(p0, p1, p2)
	return _in(0x9D26502BB97BFE62, p0, p1, p2)
end
N_0x9d26502bb97bfe62 = NetworkSpentRequestHeist
NetworkSpentRequestHeist = NetworkSpentRequestHeist

function NetworkSpentRequestJob(p0, p1, p2)
	return _in(0x8204DA7934DF3155, p0, p1, p2)
end
N_0x8204da7934df3155 = NetworkSpentRequestJob

function NetworkSpentRobbedByMugger(amount, p1, p2)
	return _in(0x995A65F15F581359, amount, p1, p2)
end
N_0x995a65f15f581359 = NetworkSpentRobbedByMugger

--- NativeDB Introduced: v1604
-- NativeDB Removed Parameter 4: BOOL p3
function NetworkSpentSpinTheWheelPayment(amount, p1, p2, p3)
	return _in(0x9A5BD1D0000B339C, amount, p1, p2, p3)
end

--- NativeDB Introduced: v2189
function NetworkSpentSubmarine(p0, p1, p2, p3, p4, p5)
	return _in(0x6C8BC1488527AAAB, p0, p1, p2, p3, p4, p5)
end

function NetworkSpentTaxi(amount, p1, p2)
	return _in(0x17C3A7D31EAE39F9, amount, p1, p2)
end

function NetworkSpentTelescope(p0, p1, p2)
	return _in(0x7FE61782AD94CC09, p0, p1, p2)
end

--- NativeDB Introduced: v1604
function NetworkSpentUpgradeArena(amount, p1, p2, p3)
	return _in(0x037ABB06825D7AB1, amount, p1, p2, _ts(p3))
end

--- NativeDB Introduced: v2372
function NetworkSpentUpgradeAutoshop(p0, p1, p2, p3)
	return _in(0xDD829AA198FDC46C, p0, p1, p2, p3)
end
N_0xdd829aa198fdc46c = NetworkSpentUpgradeAutoshop

--- NativeDB Introduced: v1290
function NetworkSpentUpgradeBase(p0, p1, p2, p3)
	return _in(0x3DD3F33A5D55EA6F, p0, p1, p2, p3)
end

function NetworkSpentUpgradeBunker(p0, p1, p2, p3)
	return _in(0x0C82D21A77C22D49, p0, p1, p2, p3)
end
N_0x0c82d21a77c22d49 = NetworkSpentUpgradeBunker

--- NativeDB Introduced: v1734
function NetworkSpentUpgradeCasino(amount, p1, p2, data)
	return _in(0x4740D62BC1B4EBEA, amount, p1, p2, _ii(data) --[[ may be optional ]])
end

--- NativeDB Introduced: v1180
function NetworkSpentUpgradeHangar(p0, p1, p2, p3)
	return _in(0x615EB504B0788DAF, p0, p1, p2, p3)
end

--- NativeDB Introduced: v2189
function NetworkSpentUpgradeSub(p0, p1, p2, p3)
	return _in(0x89049A84065CE68E, p0, p1, p2, p3)
end
N_0x89049a84065ce68e = NetworkSpentUpgradeSub

--- NativeDB Introduced: v1290
function NetworkSpentUpgradeTiltrotor(p0, p1, p2, p3)
	return _in(0x165E135D6DFA2907, p0, p1, p2, p3)
end

function NetworkSpentUpgradeTruck(p0, p1, p2, p3)
	return _in(0x365E877C61D6988B, p0, p1, p2, p3)
end
N_0x365e877c61d6988b = NetworkSpentUpgradeTruck

function NetworkSpentVehicleExportMods(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xA75CCF58A60A5FD1, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end
N_0xa75ccf58a60a5fd1 = NetworkSpentVehicleExportMods

function NetworkSpentVipUtilityCharges(p0, p1, p2)
	return _in(0x5182A339A3474510, p0, p1, p2)
end
N_0x5182a339a3474510 = NetworkSpentVipUtilityCharges

function NetworkSpentWager(p0, p1, amount)
	return _in(0xD99DB210089617FE, p0, p1, amount)
end
N_0xd99db210089617fe = NetworkSpentWager

--- ```
-- One of the first things it does is get the players ped.
-- Then it calls a function that is used in some tasks and ped based functions.
-- ```
-- p5, p6, p7 is another coordinate (or zero), often related to `GET_BLIP_COORDS`, in the decompiled scripts.
function NetworkStartRespawnSearchForPlayer(player, x, y, z, radius, p5, p6, p7, flags)
	return _in(0x5A6FFA2433E2F14C, player, x, y, z, radius, p5, p6, p7, flags, _r)
end
N_0x5a6ffa2433e2f14c = NetworkStartRespawnSearchForPlayer

--- p8, p9, p10 is another coordinate, or zero, often related to `GET_BLIP_COORDS` in the decompiled scripts.
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
function NetworkStartRespawnSearchInAngledAreaForPlayer(player, x1, y1, z1, x2, y2, z2, width, p8, p9, p10, flags)
	return _in(0x4BA92A18502BCA61, player, x1, y1, z1, x2, y2, z2, width, p8, p9, p10, flags, _r)
end
N_0x4ba92a18502bca61 = NetworkStartRespawnSearchInAngledAreaForPlayer

function NetworkStartSoloTutorialSession()
	return _in(0x17E0198B3882C2CB)
end
N_0x17e0198b3882c2cb = NetworkStartSoloTutorialSession

function NetworkStartSynchronisedScene(netScene)
	return _in(0x9A1B3FCDB36C8697, netScene)
end

--- Always returns -1. Seems to be XB1 specific.
function NetworkStartUserContentPermissionsCheck(netHandle)
	return _in(0xDEB2B99A1AF1A2A6, netHandle, _ri)
end
N_0xdeb2b99a1af1a2a6 = NetworkStartUserContentPermissionsCheck

function NetworkStopLoadScene()
	return _in(0x64E630FAF5F60F44)
end

function NetworkStopSynchronisedScene(netScene)
	return _in(0xC254481A4574CB2F, netScene)
end

function NetworkSuppressInvite(toggle)
	return _in(0xA0682D67EF1FBA3D, toggle)
end

function NetworkTransitionTrack(hash, p1, p2, state, p4)
	return _in(0xC3BFED92026A2AAD, _ch(hash), p1, p2, state, p4)
end
N_0xc3bfed92026a2aad = NetworkTransitionTrack

--- Returns defaultValue if the tunable doesn't exist.
function NetworkTryAccessTunableBoolHash(tunableContext, tunableName, defaultValue)
	return _in(0xC7420099936CE286, _ch(tunableContext), _ch(tunableName), defaultValue, _r)
end
N_0xc7420099936ce286 = NetworkTryAccessTunableBoolHash
NetworkAccessTunableBoolHashFailVal = NetworkTryAccessTunableBoolHash

--- NativeDB Introduced: v2372
function NetworkUgcNav(p0, p1)
	return _in(0xC1447451DDB512F0, p0, p1)
end
N_0xc1447451ddb512f0 = NetworkUgcNav

function NetworkUnregisterNetworkedEntity(entity)
	return _in(0x7368E683BB9038D6, entity)
end
N_0x7368e683bb9038d6 = NetworkUnregisterNetworkedEntity

function NetworkUpdateLoadScene()
	return _in(0xC4582015556D1C46, _r)
end

function NetworkUpdatePlayerScars()
	return _in(0xB7C7F6AD6424304B)
end
N_0xb7c7f6ad6424304b = NetworkUpdatePlayerScars

--- Old name: _NETWORK_SET_NETWORK_ID_DYNAMIC
function NetworkUseHighPrecisionBlending(netID, toggle)
	return _in(0x2B1813ABA29016C5, netID, toggle)
end
N_0x2b1813aba29016c5 = NetworkUseHighPrecisionBlending
NetworkSetNetworkIdDynamic = NetworkUseHighPrecisionBlending

--- Implemented only for Trains.
-- ```
-- ```
-- NativeDB Introduced: v2372
function NetworkUseHighPrecisionVehicleBlending(vehicle, toggle)
	return _in(0xEC0C1D4922AF9754, vehicle, toggle)
end
N_0xec0c1d4922af9754 = NetworkUseHighPrecisionVehicleBlending

function NetworkUseLogarithmicBlendingThisFrame(entity)
	return _in(0xCD71A4ECAB22709E, entity)
end
N_0xcd71a4ecab22709e = NetworkUseLogarithmicBlendingThisFrame

--- `radius` value is usually between `3f` and `7000f` in original 1868 scripts.
-- `p7` is 0, 1, 2, 3 or 4 used in decompiled scripts, 0 is by far the most common.
-- Returns True if success, used only 7 times in decompiled scripts of 1868
-- @param posX World `x` coordinate.
-- @param posY World `y` coordinate.
-- @param posZ World `z` coordinate.
-- @param offsetX Offset `x` coordinate.
-- @param offsetY Offset `y` coordinate.
-- @param offsetZ Offset `z` coordinate.
-- @param radius Action radius, value is usually between `3f` and `7000f` in original 1868 scripts.
-- @param p7 0, 1, 2, 3 or 4 used in decompiled scripts, 0 is by far the most common.
-- @return True if success, used only 7 times in decompiled scripts of 1868 (https://github.com/root-cause/v-decompiled-scripts).
function NewLoadSceneStart(posX, posY, posZ, offsetX, offsetY, offsetZ, radius, p7)
	return _in(0x212A8D0D2BABFAC2, posX, posY, posZ, offsetX, offsetY, offsetZ, radius, p7, _r)
end

--- if (!sub_8f12("START LOAD SCENE SAFE")) {
-- if (CUTSCENE::GET_CUTSCENE_TIME() > 4178) {
-- STREAMING::_ACCFB4ACF53551B0(1973.845458984375, 3818.447265625, 32.43629837036133, 15.0, 2);
-- sub_8e9e("START LOAD SCENE SAFE", 1);
-- }
-- }
-- (Previously known as STREAMING::_NEW_LOAD_SCENE_START_SAFE)
function NewLoadSceneStartSphere(x, y, z, radius, p4)
	return _in(0xACCFB4ACF53551B0, x, y, z, radius, p4, _r)
end
N_0xaccfb4acf53551b0 = NewLoadSceneStartSphere

function NewLoadSceneStop()
	return _in(0xC197616D221FF4A4)
end

--- p0 was always 2 in R* scripts.
-- Called before calling DISPLAY_ONSCREEN_KEYBOARD if the input needs to be saved.
function NextOnscreenKeyboardResultWillDisplayUsingTheseFonts(p0)
	return _in(0x3ED1438C1F5C6612, p0)
end
N_0x3ed1438c1f5c6612 = NextOnscreenKeyboardResultWillDisplayUsingTheseFonts

--- Lets objects spawn online simply do it like this:
-- int createdObject = OBJ_TO_NET(CREATE_OBJECT_NO_OFFSET(oball, pCoords.x, pCoords.y, pCoords.z, 1, 0, 0));
function ObjToNet(object)
	return _in(0x99BFDC94A603E541, object, _ri)
end

--- This loads the GTA:O dlc map parts (high end garages, apartments).
-- Works in singleplayer.
-- In order to use GTA:O heist IPL's you have to call this native with the following params: SET_INSTANCE_PRIORITY_MODE(1);
function OnEnterMp()
	return _in(0x0888C3502DBBEEF5)
end
LoadMpDlcMaps = OnEnterMp

--- Unloads GROUP_MAP (GTAO/MP) DLC data and loads GROUP_MAP_SP DLC. Neither are loaded by default, 0888C3502DBBEEF5 is a cognate to this function and loads MP DLC (and unloads SP DLC by extension).
-- The original (and wrong) definition is below:
-- This unload the GTA:O DLC map parts (like high end garages/apartments).
-- Works in singleplayer.
function OnEnterSp()
	return _in(0xD7C10C4A637992C9)
end
N_0xd7c10c4a637992c9 = OnEnterSp
LoadSpDlcMaps = OnEnterSp

function OpenBombBayDoors(vehicle)
	return _in(0x87E7F24270732CB1, vehicle)
end
OpenVehicleBombBay = OpenBombBayDoors

--- Has a 3rd param (int) since patch [???].
-- ```
-- ```
-- NativeDB Added Parameter 3: int p2
function OpenCommerceStore(p0, p1)
	return _in(0x58C21165F6545892, _ts(p0), _ts(p1))
end
N_0x58c21165f6545892 = OpenCommerceStore

function OpenOnlinePoliciesMenu()
	return _in(0x805D7CBB36FD6C4C)
end
ShowSocialClubLegalScreen = OpenOnlinePoliciesMenu

--- patrolRoutes found in the b617d scripts:
-- "miss_Ass0",
-- "miss_Ass1",
-- "miss_Ass2",
-- "miss_Ass3",
-- "miss_Ass4",
-- "miss_Ass5",
-- "miss_Ass6",
-- "MISS_PATROL_6",
-- "MISS_PATROL_7",
-- "MISS_PATROL_8",
-- "MISS_PATROL_9",
-- "miss_Tower_01",
-- "miss_Tower_02",
-- "miss_Tower_03",
-- "miss_Tower_04",
-- "miss_Tower_05",
-- "miss_Tower_06",
-- "miss_Tower_07",
-- "miss_Tower_08",
-- "miss_Tower_10"
function OpenPatrolRoute(patrolRoute)
	return _in(0xA36BFB5EE89F3D82, _ts(patrolRoute))
end

--- Shows a menu for reporting UGC content.
function OpenReportugcMenu()
	return _in(0x523A590C1A3CC0D3)
end
N_0x523a590c1a3cc0d3 = OpenReportugcMenu
DisplayJobReport = OpenReportugcMenu

function OpenSequenceTask(taskSequenceId)
	return _in(0xE8854A4326B9E12B, _ii(taskSequenceId) --[[ may be optional ]])
end

--- Uses the `SOCIAL_CLUB2` scaleform.
function OpenSocialClubMenu()
	return _in(0x75D3691713C3B05A)
end
N_0x75d3691713c3b05a = OpenSocialClubMenu

function OrderedBossVehicle(p0, p1, vehicleHash)
	return _in(0xCEA553E35C2246E1, p0, p1, _ch(vehicleHash))
end
N_0xcea553e35c2246e1 = OrderedBossVehicle

--- Max value for p1 is 15.
function OverrideCamSplineMotionBlur(cam, p1, p2, p3)
	return _in(0x7DCF7C708D292D55, cam, p1, p2, p3)
end

function OverrideCamSplineVelocity(cam, p1, p2, p3)
	return _in(0x40B62FA033EB0346, cam, p1, p2, p3)
end

function OverrideInteriorSmokeEnd()
	return _in(0xEFB55E7C25D3B3BE)
end
N_0xefb55e7c25d3b3be = OverrideInteriorSmokeEnd

function OverrideInteriorSmokeLevel(level)
	return _in(0x1600FD8CF72EBC12, level)
end
N_0x1600fd8cf72ebc12 = OverrideInteriorSmokeLevel

function OverrideInteriorSmokeName(name)
	return _in(0x2A2A52824DB96700, _ts(name))
end
N_0x2a2a52824db96700 = OverrideInteriorSmokeName

--- This allows you to override "extended distance scaling" setting. Needs to be called each frame.
-- Max scaling seems to be 200.0, normal is 1.0
-- See https://gfycat.com/DetailedHauntingIncatern
function OverrideLodscaleThisFrame(scaling)
	return _in(0xA76359FC80B2438E, scaling)
end
N_0xa76359fc80b2438e = OverrideLodscaleThisFrame

--- Sets audio flag "OverrideMicrophoneSettings"
function OverrideMicrophoneSettings(hash, toggle)
	return _in(0x75773E11BA459E90, _ch(hash), toggle)
end
N_0x75773e11ba459e90 = OverrideMicrophoneSettings

function OverrideMultiplayerChatColour(p0, hudColor)
	return _in(0xF47E567B3630DD12, p0, hudColor)
end
N_0xf47e567b3630dd12 = OverrideMultiplayerChatColour

function OverrideMultiplayerChatPrefix(gxtEntryHash)
	return _in(0x6A1738B4323FE2D9, _ch(gxtEntryHash))
end
N_0x6a1738b4323fe2d9 = OverrideMultiplayerChatPrefix

--- Overriding ped badge texture to a passed texture. It's synced between players (even custom textures!), don't forget to request used dict on *all* clients to make it sync properly. Can be removed by passing empty strings.
function OverridePedBadgeTexture(ped, txd, txn)
	return _in(0x95EB5E34F821BABE, ped, _ts(txd), _ts(txn), _r)
end
N_0x95eb5e34f821babe = OverridePedBadgeTexture

--- Sets whether peds can stand on top of *all* vehicles without falling off.
-- Note this flag is not replicated automatically, you will have to manually do so.
-- @param flag true to override, false to use default game behavior.
function OverridePedsCanStandOnTopFlag(flag)
	return _in(0x90a9e0b2, flag)
end

function OverridePlayerGroundMaterial(hash, toggle)
	return _in(0xD2CC78CD3D0B50F9, _ch(hash), toggle)
end
N_0xd2cc78cd3d0b50f9 = OverridePlayerGroundMaterial

--- Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.
-- Modified example from "am_imp_exp.c4", line 6406:
-- /* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));
-- etc.
-- */
-- ZONE::OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(popSchedules[index], vehicleHash);
-- STREAMING::REQUEST_MODEL(vehicleHash);
function OverridePopscheduleVehicleModel(scheduleId, vehicleHash)
	return _in(0x5F7D596BAC2E7777, scheduleId, _ch(vehicleHash))
end

function OverrideSaveHouse(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0x1162EA8AE9D24EEA, p0, p1, p2, p3, p4, p5, p6, p7, _r)
end

--- This native enables the audio flag "TrevorRageIsOverridden" and sets the voice effect to `voiceEffect`
function OverrideTrevorRage(voiceEffect)
	return _in(0x13AD665062541A7E, _ts(voiceEffect))
end

function OverrideUnderwaterStream(p1)
	return _in(0xF2A9CDABCEA04BD6, _i, p1)
end

--- Overrides the vehicle's horn hash.
-- When changing this hash on a vehicle, [`_GET_VEHICLE_HORN_HASH`](#\_0xACB5DCCA1EC76840) will **not** return the 'overwritten' hash. It will still always return the default horn hash (same as [`GET_VEHICLE_DEFAULT_HORN`](#\_0x02165D55000219AC)).
-- List of possible hashes (found in decompiled scripts):
-- |        signed |     unsigned |      hex     |
-- |--------------:|-------------:|:------------:|
-- |  `1604822495` | `1604822495` | `0x5FA7A5DF` |
-- | `-1262465009` | `3032502287` | `0xB4C0500F` |
-- |  `-889553789` | `3405413507` | `0xCAFA7C83` |
-- | `-1557943086` | `2737024210` | `0xA323ACD2` |
-- | `-1318696617` | `2976270679` | `0xB1664957` |
-- |    `-7740003` | `4287227293` | `0xFF89E59D` |
-- | `-1815146967` | `2479820329` | `0x93CF0E29` |
-- |  `-339919356` | `3955047940` | `0xEBBD3E04` |
-- @param vehicle The vehicle you want to change the horn on.
-- @param override Must be set to true. If set to false, the default horn hash will be restored.
-- @param hornHash A horn hash.
function OverrideVehHorn(vehicle, override, hornHash)
	return _in(0x3CDC1E622CCE0356, vehicle, override, hornHash)
end

--- Overrides whether or not peds can stand on top of the specified vehicle.
-- Note this flag is not replicated automatically, you will have to manually do so.
-- @param vehicle The vehicle.
-- @param can Can they?
function OverrideVehiclePedsCanStandOnTopFlag(vehicle, can)
	return _in(0x7fa03e76, vehicle, can)
end

--- Return the local Participant ID
function ParticipantId()
	return _in(0x90986E8876CE0A83, _ri)
end

--- Return the local Participant ID.
-- This native is exactly the same as 'PARTICIPANT_ID' native.
function ParticipantIdToInt()
	return _in(0x57A3BDDAD8E5AA0A, _ri)
end

--- REQUEST_STREAMED_TEXTURE_DICT("MPOnMissMarkers", false);
-- *uParam0.f_809 = add_decal(9120, vParam1, vVar4, vVar7, 2f, 2f, to_float(iVar0) / 255f, to_float(iVar1) / 255f, to_float(iVar2) / 255f, 1f, -1f, 1, 0, 0);
-- PATCH_DECAL_DIFFUSE_MAP(9120, "MPOnMissMarkers", "Capture_The_Flag_Base_Icon");
function PatchDecalDiffuseMap(decalType, textureDict, textureName)
	return _in(0x8A35C742130C6080, decalType, _ts(textureDict), _ts(textureName))
end
N_0x8a35c742130c6080 = PatchDecalDiffuseMap
AddDecalToMarker = PatchDecalDiffuseMap
OverrideDecalTexture = PatchDecalDiffuseMap

function PauseClock(toggle)
	return _in(0x4055E40BD2DBEC1D, toggle)
end

function PauseDeathArrestRestart(toggle)
	return _in(0x2C2B3493FBF51C71, toggle)
end
DisableAutomaticRespawn = PauseDeathArrestRestart

--- Activates the specified frontend menu context.
-- pausemenu.xml defines some specific menu options using 'context'. Context is basically a 'condition'.
-- The `*ALL*` part of the context means that whatever is being defined, will be active when any or all of those conditions after `*ALL*` are met.
-- The `*NONE*` part of the context section means that whatever is being defined, will NOT be active if any or all of the conditions after `*NONE*` are met.
-- This basically allows you to hide certain menu sections, or things like instructional buttons.
-- See the old description below for more info.
-- ***
-- > Seems to add/set the current menu context (to show/hide buttons?)
-- > Pausemenu.xml:
-- > `<Contexts>*ALL*, DISPLAY_CORONA_BUTTONS, *NONE*, BET_LOCKED, BET_AVAILABLE, SCROLL_OPTION</Contexts>`
-- > Code:
-- >
-- > ```
-- > if (...) {
-- >     sub_bbd34(a_0, 0, "FM_BET_HELP");
-- >     UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_available}); // This native
-- >     UI::OBJECT_DECAL_TOGGLE(${bet_locked});
-- > } else {
-- >     sub_bbd34(a_0, 0, "");
-- >     UI::OBJECT_DECAL_TOGGLE(${bet_available});
-- >     UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_locked}); // This native
-- > }
-- > ```
-- >
-- > OBJECT_DECAL_TOGGLE seems to remove a context, It also has a hash collision
-- > // Old
-- > Scripts do not make this native's purpose clear. However, this native most likely has something to do with decals since in nearly every instance, "OBJECT_DECAL_TOGGLE" is called prior.
-- @param hash Context name hash.
function PauseMenuActivateContext(hash)
	return _in(0xDD564BDD0472C936, _ch(hash))
end
N_0xdd564bdd0472c936 = PauseMenuActivateContext
AddFrontendMenuContext = PauseMenuActivateContext

function PauseMenuDeactivateContext(contextHash)
	return _in(0x444D8CF241EC25C5, _ch(contextHash))
end
ObjectDecalToggle = PauseMenuDeactivateContext

--- Disables the loading spinner in Pause Menu when switching from one header tab to another.
-- @param toggle true to disable and false to re-enable the loading icon.
function PauseMenuDisableBusyspinner(toggle)
	return _in(0x9245E81072704B8A, toggle)
end
N_0x9245e81072704b8a = PauseMenuDisableBusyspinner

--- If mouse is hovering on a slot, it returns the slot's index, else it returns -1.
function PauseMenuGetIndexOfMouseHoveredSlot()
	return _in(0x359AF31A4B52F5ED, _ri)
end
N_0x359af31a4b52f5ed = PauseMenuGetIndexOfMouseHoveredSlot

--- If mouse is hovering on a slot, it returns uniqueid of that slot, else it returns -1.
function PauseMenuGetUniqueIdOfMouseHoveredSlot()
	return _in(0x13C4B962653A5280, _ri)
end
N_0x13c4b962653a5280 = PauseMenuGetUniqueIdOfMouseHoveredSlot

function PauseMenuIsContextActive(contextHash)
	return _in(0x84698AB38D0C6636, _ch(contextHash), _r)
end
N_0x84698ab38d0c6636 = PauseMenuIsContextActive

function PauseMenuIsContextMenuActive()
	return _in(0x2A25ADC48F87841F, _ri)
end
N_0x2a25adc48f87841f = PauseMenuIsContextMenuActive

--- Updates instructional buttons in Pause Menu after menu contexts have been toggled. p0 purpose is currently unknown, only 0 is used in scripts.
function PauseMenuRedrawInstructionalButtons(p0)
	return _in(0x4895BDEA16E7C080, p0)
end
EnableDeathbloodSeethrough = PauseMenuRedrawInstructionalButtons
N_0x4895bdea16e7c080 = PauseMenuRedrawInstructionalButtons

function PauseMenuSetBusySpinner(p0, p1, p2)
	return _in(0xC78E239AC5B2DDB9, p0, p1, p2)
end
N_0xc78e239ac5b2ddb9 = PauseMenuSetBusySpinner

--- Shows this warning message when trying to switch pause menu header tabs: https://i.imgur.com/8qmfztu.png
-- @param setWarn Wether to show the message or not.
function PauseMenuSetWarnOnTabChange(setWarn)
	return _in(0xF06EBB91A81E09E3, setWarn)
end
N_0xf06ebb91a81e09e3 = PauseMenuSetWarnOnTabChange

--- Sets current pause menu page/component to the specified value.
-- Available page IDs: https://pastebin.com/qxuhwjPT
function PauseMenuceptionGoDeeper(pageId)
	return _in(0x77F16B447824DA6C, pageId)
end
N_0x77f16b447824da6c = PauseMenuceptionGoDeeper

--- Forces the Pause Menu to back out of unique pages such as Awards, Unlocks, Key Bindings etc
function PauseMenuceptionTheKick()
	return _in(0xCDCA26E80FAECB8F)
end
N_0xcdca26e80faecb8f = PauseMenuceptionTheKick

function PausePlaybackRecordedVehicle(vehicle)
	return _in(0x632A689BF42301B1, vehicle)
end

function PauseScriptedConversation(p0)
	return _in(0x8530AD776CD72B12, p0)
end

function PedHasUseScenarioTask(ped)
	return _in(0x295E3CCEC879CCD7, ped, _r)
end

--- gets the network id of a ped
function PedToNet(ped)
	return _in(0x0EDEC3C276198689, ped, _ri)
end

function PinInteriorInMemory(interior)
	return _in(0x2CA429C029CCF247, interior)
end
N_0x2ca429c029ccf247 = PinInteriorInMemory
LoadInterior = PinInteriorInMemory

function PinRopeVertex(ropeId, vertex, x, y, z)
	return _in(0x2B320CF14146B69A, ropeId, vertex, x, y, z)
end

function PlaceObjectOnGroundProperly(object)
	return _in(0x58A850EAEE20FAA3, object, _r)
end

function PlaceObjectOnGroundProperly_2(object)
	return _in(0xD76EEEF746057FD6, object, _r)
end
N_0xd76eeef746057fd6 = PlaceObjectOnGroundProperly_2

function PlayAmbientSpeechFromPositionNative(speechName, voiceName, x, y, z, speechParam)
	return _in(0xED640017ED337E45, _ts(speechName), _ts(voiceName), x, y, z, _ts(speechParam))
end
N_0xed640017ed337e45 = PlayAmbientSpeechFromPositionNative
PlayAmbientSpeechAtCoords = PlayAmbientSpeechFromPositionNative

--- [Animations list](https://alexguirre.github.io/animations-list/)
function PlayAnimOnRunningScenario(ped, animDict, animName)
	return _in(0x748040460F8DF5DC, ped, _ts(animDict), _ts(animName))
end

--- Plays sounds from a ped with chop model. For example it used to play bark or sniff sounds. p1 is always 3 or 4294967295 in decompiled scripts. By a quick disassembling I can assume that this arg is unused.
-- This native is works only when you call it on the ped with right model (ac_chop only ?)
-- Speech Name can be: CHOP_SNIFF_SEQ CHOP_WHINE CHOP_LICKS_MOUTH CHOP_PANT bark GROWL SNARL BARK_SEQ
function PlayAnimalVocalization(pedHandle, p1, speechName)
	return _in(0xEE066C7006C49C0A, pedHandle, p1, _ts(speechName))
end
N_0xee066c7006c49c0a = PlayAnimalVocalization

--- NativeDB Introduced: v1290
function PlayBinkMovie(binkMovie)
	return _in(0x70D2CC8A542A973C, binkMovie)
end

--- ```
-- Atleast one time in a script for the zRot Rockstar uses GET_ENTITY_HEADING to help fill the parameter.
-- p9 is unknown at this time.
-- p10 throughout all the X360 Scripts is always 2.
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function PlayCamAnim(cam, animName, animDictionary, x, y, z, xRot, yRot, zRot, p9, p10)
	return _in(0x9A2D0FB2E7852392, cam, _ts(animName), _ts(animDictionary), x, y, z, xRot, yRot, zRot, p9, p10, _r)
end

--- Only call found in the b617d scripts:
-- AUDIO::PLAY_DEFERRED_SOUND_FRONTEND("BACK", "HUD_FREEMODE_SOUNDSET");
function PlayDeferredSoundFrontend(soundName, soundsetName)
	return _in(0xCADA5A0D0702381E, _ts(soundName), _ts(soundsetName))
end
N_0xcada5a0d0702381e = PlayDeferredSoundFrontend

function PlayEndCreditsMusic(play)
	return _in(0xCD536C4D33DCC900, play)
end

--- ```
-- delta and bitset are guessed fields. They are based on the fact that most of the calls have 0 or nil field types passed in.
-- The only time bitset has a value is 0x4000 and the only time delta has a value is during stealth with usually <1.0f values.
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function PlayEntityAnim(entity, animName, animDict, p3, loop, stayInAnim, p6, delta, bitset)
	return _in(0x7FB218262B810701, entity, _ts(animName), _ts(animDict), p3, loop, stayInAnim, p6, delta, bitset, _r)
end

function PlayEntityScriptedAnim(p0, p4, p5)
	return _in(0x77A1EEC547E7FCF1, p0, _i, _i, _i, p4, p5)
end

function PlayFacialAnim(ped, animName, animDict)
	return _in(0xE1E65CA8AC9C00ED, ped, _ts(animName), _ts(animDict))
end

--- Called 38 times in the scripts. There are 5 different audioNames used.
-- One unknown removed below.
-- AUDIO::PLAY_MISSION_COMPLETE_AUDIO("DEAD");
-- AUDIO::PLAY_MISSION_COMPLETE_AUDIO("FRANKLIN_BIG_01");
-- AUDIO::PLAY_MISSION_COMPLETE_AUDIO("GENERIC_FAILED");
-- AUDIO::PLAY_MISSION_COMPLETE_AUDIO("TREVOR_SMALL_01");
function PlayMissionCompleteAudio(audioName)
	return _in(0xB138AAB8A70D3C69, _ts(audioName))
end

--- Needs another parameter [int p2]. The signature is PED::PLAY_PAIN(Ped ped, int painID, int p1, int p2);
-- Last 2 parameters always seem to be 0.
-- EX: Function.Call(Hash.PLAY_PAIN, TestPed, 6, 0, 0);
-- Known Pain IDs
-- ________________________
-- 1 - Doesn't seem to do anything. Does NOT crash the game like previously said. (Latest patch)
-- 6 - Scream (Short)
-- 7 - Scared Scream (Kinda Long)
-- 8 - On Fire
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function PlayPain(ped, painID, p1)
	return _in(0xBC9AE166038A5CEC, ped, painID, p1)
end

--- See [`PLAY_PED_AMBIENT_SPEECH_NATIVE`](#\_0x8E04FEDD28D42462) for parameter specifications.
-- ```
-- NativeDB Added Parameter 4: Any p3
-- ```
function PlayPedAmbientSpeechAndCloneNative(ped, speechName, speechParam)
	return _in(0xC6941B4A3A8FBBB9, ped, _ts(speechName), _ts(speechParam))
end
PlayAmbientSpeech2 = PlayPedAmbientSpeechAndCloneNative

--- Plays ambient speech; see also [`PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE`](#\_0xC6941B4A3A8FBBB9).
-- ```
-- speechParam: Can be one of the following:
-- SPEECH_PARAMS_STANDARD
-- SPEECH_PARAMS_ALLOW_REPEAT
-- SPEECH_PARAMS_BEAT
-- SPEECH_PARAMS_FORCE
-- SPEECH_PARAMS_FORCE_FRONTEND
-- SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND
-- SPEECH_PARAMS_FORCE_NORMAL
-- SPEECH_PARAMS_FORCE_NORMAL_CLEAR
-- SPEECH_PARAMS_FORCE_NORMAL_CRITICAL
-- SPEECH_PARAMS_FORCE_SHOUTED
-- SPEECH_PARAMS_FORCE_SHOUTED_CLEAR
-- SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL
-- SPEECH_PARAMS_FORCE_PRELOAD_ONLY
-- SPEECH_PARAMS_MEGAPHONE
-- SPEECH_PARAMS_HELI
-- SPEECH_PARAMS_FORCE_MEGAPHONE
-- SPEECH_PARAMS_FORCE_HELI
-- SPEECH_PARAMS_INTERRUPT
-- SPEECH_PARAMS_INTERRUPT_SHOUTED
-- SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR
-- SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL
-- SPEECH_PARAMS_INTERRUPT_NO_FORCE
-- SPEECH_PARAMS_INTERRUPT_FRONTEND
-- SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND
-- SPEECH_PARAMS_ADD_BLIP
-- SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT
-- SPEECH_PARAMS_ADD_BLIP_FORCE
-- SPEECH_PARAMS_ADD_BLIP_SHOUTED
-- SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE
-- SPEECH_PARAMS_ADD_BLIP_INTERRUPT
-- SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE
-- SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED
-- SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR
-- SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL
-- SPEECH_PARAMS_SHOUTED
-- SPEECH_PARAMS_SHOUTED_CLEAR
-- SPEECH_PARAMS_SHOUTED_CRITICAL
-- Note: A list of Name and Parameters can be found here pastebin.com/1GZS5dCL
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
-- ```
-- @param ped The ped to play the ambient speech.
-- @param speechName Name of the speech to play, eg. "GENERIC_HI".
function PlayPedAmbientSpeechNative(ped, speechName, speechParam)
	return _in(0x8E04FEDD28D42462, ped, _ts(speechName), _ts(speechParam))
end
PlayAmbientSpeech1 = PlayPedAmbientSpeechNative

--- This is the same as PLAY_PED_AMBIENT_SPEECH_NATIVE and PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE but it will allow you to play a speech file from a specific voice file. It works on players and all peds, even animals.
-- EX (C#):
-- GTA.Native.Function.Call(Hash._0x3523634255FC3318, Game.Player.Character, "GENERIC_INSULT_HIGH", "s_m_y_sheriff_01_white_full_01", "SPEECH_PARAMS_FORCE_SHOUTED", 0);
-- The first param is the ped you want to play it on, the second is the speech name, the third is the voice name, the fourth is the speech param, and the last param is usually always 0.
function PlayPedAmbientSpeechWithVoiceNative(ped, speechName, voiceName, speechParam, p4)
	return _in(0x3523634255FC3318, ped, _ts(speechName), _ts(voiceName), _ts(speechParam), p4)
end
PlayAmbientSpeechWithVoice = PlayPedAmbientSpeechWithVoiceNative

--- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/RFb4GTny
-- AUDIO::PLAY_PED_RINGTONE("Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);
-- AUDIO::PLAY_PED_RINGTONE("Dial_and_Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);
function PlayPedRingtone(ringtoneName, ped, p2)
	return _in(0xF9E56683CA8E11A5, _ts(ringtoneName), ped, p2)
end

--- Plays the given police radio message.
-- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/GBnsQ5hr
function PlayPoliceReport(name, p1)
	return _in(0xDFEBD56D9BD1EB16, _ts(name), p1, _ri)
end

--- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/A8Ny8AHZ
function PlaySound(soundId, audioName, audioRef, p3, p4, p5)
	return _in(0x7FF4944CC209192D, soundId, _ts(audioName), _ts(audioRef), p3, p4, p5)
end

--- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/eeFc5DiW
-- gtaforums.com/topic/795622-audio-for-mods
function PlaySoundFromCoord(soundId, audioName, x, y, z, audioRef, isNetwork, range, p8)
	return _in(0x8D8686B622B88120, soundId, _ts(audioName), x, y, z, _ts(audioRef), isNetwork, range, p8)
end

--- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/f2A7vTj0
-- No changes made in b678d.
-- gtaforums.com/topic/795622-audio-for-mods
function PlaySoundFromEntity(soundId, audioName, entity, audioRef, isNetwork, p5)
	return _in(0xE65F427EB70AB1ED, soundId, _ts(audioName), entity, _ts(audioRef), isNetwork, p5)
end

--- List: https://pastebin.com/DCeRiaLJ
-- All occurrences as of Cayo Perico Heist DLC (b2189), sorted alphabetically and identical lines removed: https://git.io/JtLxM
function PlaySoundFrontend(soundId, audioName, audioRef, p3)
	return _in(0x67C540AA08E4A6F5, soundId, _ts(audioName), _ts(audioRef), p3)
end

--- Used with AUDIO::LOAD_STREAM
-- Example from finale_heist2b.c4:
-- TASK::TASK_SYNCHRONIZED_SCENE(l_4C8[2/*14*/], l_4C8[2/*14*/]._f7, l_30A, "push_out_vault_l", 4.0, -1.5, 5, 713, 4.0, 0);
-- PED::SET_SYNCHRONIZED_SCENE_PHASE(l_4C8[2/*14*/]._f7, 0.0);
-- PED::_2208438012482A1A(l_4C8[2/*14*/], 0, 0);
-- PED::SET_PED_COMBAT_ATTRIBUTES(l_4C8[2/*14*/], 38, 1);
-- PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(l_4C8[2/*14*/], 1);
-- if (AUDIO::LOAD_STREAM("Gold_Cart_Push_Anim_01", "BIG_SCORE_3B_SOUNDS")) {
-- AUDIO::PLAY_STREAM_FROM_OBJECT(l_36F[0/*1*/]);
-- }
function PlayStreamFromObject(object)
	return _in(0xEBAA9B64D76356FD, object)
end

function PlayStreamFromPed(ped)
	return _in(0x89049DD63C08B5D1, ped)
end
N_0x89049dd63c08b5d1 = PlayStreamFromPed

function PlayStreamFromPosition(x, y, z)
	return _in(0x21442F412E8DE56B, x, y, z)
end
SpecialFrontendEqual = PlayStreamFromPosition

function PlayStreamFromVehicle(vehicle)
	return _in(0xB70374A758007DFA, vehicle)
end

function PlayStreamFrontend()
	return _in(0x58FCE43488F9F5F4)
end

function PlaySynchronizedAudioEvent(p0)
	return _in(0x8B2FD4560E55DD2D, p0, _r)
end

--- ```
-- Examples:
-- CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_2734, NETWORK::_02C40BF885C567B6(l_2739), "PLAYER_EXIT_L_CAM", "mp_doorbell");
-- CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_F0D[7/*1*/], l_F4D[15/*1*/], "ah3b_attackheli_cam2", "missheistfbi3b_helicrash");
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function PlaySynchronizedCamAnim(camera, scene, animName, animDictionary)
	return _in(0xE32EFE9AB4A9AA0C, camera, scene, _ts(animName), _ts(animDictionary), _r)
end

--- ```
-- p4 and p7 are usually 1000.0f.
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function PlaySynchronizedEntityAnim(entity, syncedScene, animation, propName, p4, p5, p6, p7)
	return _in(0xC77720A12FE14A86, entity, syncedScene, _ts(animation), _ts(propName), p4, p5, p6, p7, _r)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function PlaySynchronizedMapEntityAnim(p0, p1, p2, p3, p4, p5, p8, p9, p10, p11)
	return _in(0xB9C54555ED30FBC4, p0, p1, p2, p3, p4, p5, _i, _i, p8, p9, p10, p11, _r)
end

function PlayTennisDiveAnim(ped, p1, p2, p3, p4, p5)
	return _in(0x8FA9C42FC5D7C64B, ped, p1, p2, p3, p4, p5)
end
N_0x8fa9c42fc5d7c64b = PlayTennisDiveAnim

function PlayTennisSwingAnim(ped, animDict, animName, p3, p4, p5)
	return _in(0xE266ED23311F24D4, ped, _ts(animDict), _ts(animName), p3, p4, p5)
end
N_0xe266ed23311f24d4 = PlayTennisSwingAnim

function PlayVehicleDoorCloseSound(vehicle, doorIndex)
	return _in(0x62A456AA4769EF34, vehicle, doorIndex)
end

function PlayVehicleDoorOpenSound(vehicle, doorIndex)
	return _in(0x3A539D52857EA82D, vehicle, doorIndex)
end

--- Only 1 match. ob_sofa_michael.
-- PLAYER::PLAYER_ATTACH_VIRTUAL_BOUND(-804.5928f, 173.1801f, 71.68436f, 0f, 0f, 0.590625f, 1f, 0.7f);1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
function PlayerAttachVirtualBound(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0xED51733DC73AED51, p0, p1, p2, p3, p4, p5, p6, p7)
end

--- 1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
function PlayerDetachVirtualBound()
	return _in(0x1DD5897E2FA6E7C9)
end

--- This returns YOUR 'identity' as a Player type.
-- Always returns 0 in story mode.
function PlayerId()
	return _in(0x4F8644AF03D0E0D6, _ri)
end

--- Returns current player ped
function PlayerPedId()
	return _in(0xD80958FC74E988A6, _ri)
end

function PlaystatsAcquiredHiddenPackage(p0)
	return _in(0x79AB33F0FBFAC40C, p0)
end
N_0x79ab33f0fbfac40c = PlaystatsAcquiredHiddenPackage

function PlaystatsActivityDone(p0, p1)
	return _in(0xA071E0ED98F91286, p0, p1)
end
N_0xa071e0ed98f91286 = PlaystatsActivityDone

--- NativeDB Introduced: v1734
function PlaystatsArcadegame(p0, p1, p2, p3, p4, p5)
	return _in(0x533A7D1EA58DF958, p0, p1, p2, p3, p4, p5)
end

--- NativeDB Introduced: v1604
function PlaystatsArenaWarSpectator(p0, p1, p2, p3, p4)
	return _in(0x6F4F599753F8200A, p0, p1, p2, p3, p4)
end

--- NativeDB Introduced: v1604
function PlaystatsArenaWarsEnded(data)
	return _in(0xB479D9F0D48A1BC5, _ii(data) --[[ may be optional ]])
end

function PlaystatsAwardBadsport(id)
	return _in(0x47B32F5611E6E483, id)
end
N_0x47b32f5611e6e483 = PlaystatsAwardBadsport

function PlaystatsAwardXp(amount, type, category)
	return _in(0x46F917F6B4128FE4, amount, _ch(type), _ch(category))
end

function PlaystatsBackgroundScriptAction(action, value)
	return _in(0x5009DFD741329729, _ts(action), value)
end
N_0x5009dfd741329729 = PlaystatsBackgroundScriptAction

function PlaystatsBanAlert(p0)
	return _in(0x516FC96EB88EEFE5, p0)
end
N_0x516fc96eb88eefe5 = PlaystatsBanAlert

function PlaystatsBuyContraband(data)
	return _in(0xD6781E42755531F7, _ii(data) --[[ may be optional ]])
end
N_0xd6781e42755531f7 = PlaystatsBuyContraband

--- NativeDB Introduced: v2372
function PlaystatsCarclubChallenge(p0, p1, p2, p3)
	return _in(0x1187CB58D7F3BED7, p0, p1, p2, p3)
end
N_0x1187cb58d7f3bed7 = PlaystatsCarclubChallenge

--- NativeDB Introduced: v2372
function PlaystatsCarclubPoints(p0)
	return _in(0xFF14D6FEEC507BBE, p0)
end
N_0xff14d6feec507bbe = PlaystatsCarclubPoints

--- NativeDB Introduced: v2372
function PlaystatsCarclubPrize(p0, p1)
	return _in(0x69C922B677621428, p0, p1)
end
N_0x69c922b677621428 = PlaystatsCarclubPrize

--- NativeDB Introduced: v1734
function PlaystatsCasinoBlackjack(p0)
	return _in(0x3EAE97309727E7AD, p0)
end

--- NativeDB Introduced: v1734
function PlaystatsCasinoBlackjackLight(p0)
	return _in(0xD5451C7BF151EB6F, p0)
end

--- NativeDB Introduced: v1734
function PlaystatsCasinoChip(p0)
	return _in(0x0999F3F090EC5012, p0)
end

--- NativeDB Introduced: v1734
function PlaystatsCasinoInsidetrack(p0)
	return _in(0x049F059625058A86, p0)
end

--- NativeDB Introduced: v1734
function PlaystatsCasinoInsidetrackLight(p0)
	return _in(0x23A3CBCD50D54E47, p0)
end

--- NativeDB Introduced: v1734
function PlaystatsCasinoLuckyseven(p0)
	return _in(0x0C432C1435F5E4FA, p0)
end

--- NativeDB Introduced: v1734
function PlaystatsCasinoMissionEnded(data)
	return _in(0x1A0D4A6C336B7BC5, _ii(data) --[[ may be optional ]])
end

--- NativeDB Introduced: v1734
function PlaystatsCasinoRoulette(p0)
	return _in(0x95101C443A84E7F1, p0)
end

--- NativeDB Introduced: v1734
function PlaystatsCasinoRouletteLight(p0)
	return _in(0x6572ABA3DE1197FC, p0)
end

--- NativeDB Introduced: v1734
function PlaystatsCasinoSlotmachine(p0)
	return _in(0xEF5EC67D392B830A, p0)
end

--- NativeDB Introduced: v1734
function PlaystatsCasinoSlotmachineLight(p0)
	return _in(0xE60054A0FAE8227F, p0)
end

--- NativeDB Introduced: v1734
function PlaystatsCasinoStoryMissionEnded(p0, p1)
	return _in(0xFCCCAC2BD3C1F180, p0, p1)
end

--- NativeDB Introduced: v1734
function PlaystatsCasinoThreecardpoker(p0)
	return _in(0xF740FB339D471C35, p0)
end

--- NativeDB Introduced: v1734
function PlaystatsCasinoThreecardpokerLight(p0)
	return _in(0xC9001364B4388F22, p0)
end

function PlaystatsChangeMcEmblem(p0, p1, p2, p3, p4)
	return _in(0x0A50D2604E05CB94, p0, p1, p2, p3, p4)
end
N_0x0a50d2604e05cb94 = PlaystatsChangeMcEmblem

function PlaystatsCheatApplied(cheat)
	return _in(0x6058665D72302D3F, _ts(cheat))
end

function PlaystatsClothChange(p0, p1, p2, p3, p4)
	return _in(0x34B973047A2268B9, p0, p1, p2, p3, p4)
end

--- NativeDB Introduced: v1734
function PlaystatsCollectible(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xCD0A8A9338681CF2, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end

function PlaystatsCopyRankIntoNewSlot(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xB7257BA2550EA10A, p0, p1, p2, p3, p4, p5, p6)
end
N_0xb7257ba2550ea10a = PlaystatsCopyRankIntoNewSlot

function PlaystatsCrateCreatedMissionDone(p0, p1, p2)
	return _in(0xAFC7E5E075A96F46, p0, p1, p2)
end
N_0xafc7e5e075a96f46 = PlaystatsCrateCreatedMissionDone
PlaystatsAmbientMissionCrateCreated = PlaystatsCrateCreatedMissionDone
PlaystatsCrateCreated = PlaystatsCrateCreatedMissionDone

--- NativeDB Added Parameter 7: Any p6
-- NativeDB Added Parameter 8: Any p7
function PlaystatsCrateDropMissionDone(p0, p1, p2, p3, p4, p5)
	return _in(0x1CAE5D2E3F9A07F0, p0, p1, p2, p3, p4, p5)
end
N_0x1cae5d2e3f9a07f0 = PlaystatsCrateDropMissionDone
PlaystatsCrateDrop = PlaystatsCrateDropMissionDone

--- NativeDB Introduced: v1290
function PlaystatsDarMissionEnd(data)
	return _in(0x0BC254FF3A911501, _ii(data) --[[ may be optional ]])
end

function PlaystatsDefendContraband(data)
	return _in(0x2605663BD4F23B5D, _ii(data) --[[ may be optional ]])
end
N_0x2605663bd4f23b5d = PlaystatsDefendContraband

function PlaystatsDirectorMode(p0)
	return _in(0x46326E13DA4E0546, _ii(p0) --[[ may be optional ]])
end
N_0x46326e13da4e0546 = PlaystatsDirectorMode

--- NativeDB Introduced: v1493
function PlaystatsDroneUsage(p0, p1, p2)
	return _in(0x66C7BB2416ED3FCE, p0, p1, p2)
end

function PlaystatsDupeDetection(data)
	return _in(0x848B66100EE33B05, _ii(data) --[[ may be optional ]])
end
N_0x848b66100ee33b05 = PlaystatsDupeDetection

function PlaystatsEarnedMcPoints(p0, p1, p2, p3, p4, p5)
	return _in(0x501478855A6074CE, p0, p1, p2, p3, p4, p5)
end
N_0x501478855a6074ce = PlaystatsEarnedMcPoints

--- NativeDB Introduced: v1290
function PlaystatsEnterSessionPack(data)
	return _in(0x878FF156D36E9956, _ii(data) --[[ may be optional ]])
end

--- NativeDB Introduced: v2372
function PlaystatsExtraEvent(p0)
	return _in(0xFA5B74BAB8A7EF99, p0)
end
N_0xfa5b74bab8a7ef99 = PlaystatsExtraEvent

function PlaystatsFriendActivity(p0, p1)
	return _in(0x0F71DE29AB2258F1, p0, p1)
end

function PlaystatsGunrunMissionEnded(data)
	return _in(0x0EACDF8487D5155A, _ii(data) --[[ may be optional ]])
end
N_0x0eacdf8487d5155a = PlaystatsGunrunMissionEnded

--- NativeDB Introduced: v1290
function PlaystatsH2FmprepEnd(data)
	return _in(0xD8AFB345A9C5CCBB, _ii(data) --[[ may be optional ]])
end

--- NativeDB Introduced: v1290
function PlaystatsH2InstanceEnd(p1, p2, p3)
	return _in(0x1E1497D0D2108115, _i, p1, p2, p3)
end

function PlaystatsHeistSaveCheat(hash, p1)
	return _in(0xF4FF020A08BC8863, _ch(hash), p1)
end
N_0xf4ff020a08bc8863 = PlaystatsHeistSaveCheat

function PlaystatsHoldUpMissionDone(p0, p1, p2, p3)
	return _in(0xCB00196B31C39EB1, p0, p1, p2, p3)
end
N_0xcb00196b31c39eb1 = PlaystatsHoldUpMissionDone
PlaystatsHoldUp = PlaystatsHoldUpMissionDone

--- longest time being ilde?
function PlaystatsIdleKick(time)
	return _in(0x5DA3A8DE8CB6226F, time)
end
N_0x5da3a8de8cb6226f = PlaystatsIdleKick

function PlaystatsImportExportMissionDone(p0, p1, p2, p3)
	return _in(0x2B69F5074C894811, p0, p1, p2, p3)
end
N_0x2b69f5074c894811 = PlaystatsImportExportMissionDone
PlaystatsImpExp = PlaystatsImportExportMissionDone

function PlaystatsLeaveJobChain(p0, p1, p2, p3, p4)
	return _in(0xC5BE134EC7BA96A0, p0, p1, p2, p3, p4)
end
N_0xc5be134ec7ba96a0 = PlaystatsLeaveJobChain

--- NativeDB Removed Parameter 4: Any p3
-- NativeDB Removed Parameter 5: Any p4
-- NativeDB Removed Parameter 6: Any p5
-- NativeDB Removed Parameter 7: Any p6
function PlaystatsMatchStarted(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xBC80E22DED931E3D, p0, p1, p2, p3, p4, p5, p6)
end

function PlaystatsMissionCheckpoint(p1, p2, p3)
	return _in(0xC900596A63978C1D, _i, p1, p2, p3)
end

function PlaystatsMissionOver(p1, p2, p3, p4, p5)
	return _in(0x7C4BB33A8CED7324, _i, p1, p2, p3, p4, p5)
end

function PlaystatsMissionStarted(p1, p2, p3)
	return _in(0xC19A2925C34D2231, _i, p1, p2, p3)
end

function PlaystatsNpcInvite(p0)
	return _in(0x93054C88E6AA7C44, _ii(p0) --[[ may be optional ]])
end

--- **This native does absolutely nothing, just a nullsub**
function PlaystatsOddjobDone(p0, p1, p2)
	return _in(0x69DEA3E9DB727B4C, p0, p1, p2)
end

--- NativeDB Introduced: v1734
function PlaystatsPassiveMode(p0, p1, p2, p3)
	return _in(0x35EEC6C2BC821A71, p0, p1, p2, p3)
end

--- NativeDB Introduced: v1180
function PlaystatsPegasaircraft(modelHash)
	return _in(0x9572BD4DD6B72122, _ch(modelHash))
end

function PlaystatsPiMenuHideSettings(data)
	return _in(0x203B381133817079, _ii(data) --[[ may be optional ]])
end
N_0x203b381133817079 = PlaystatsPiMenuHideSettings

function PlaystatsPropChange(p0, p1, p2, p3)
	return _in(0xBA739D6D5A05D6E7, p0, p1, p2, p3)
end

function PlaystatsQuickfixTool(element, item)
	return _in(0x90D0622866E80445, element, _ts(item))
end
N_0x90d0622866e80445 = PlaystatsQuickfixTool

function PlaystatsRaceCheckpoint(p0, p1, p2, p3, p4)
	return _in(0x9C375C315099DDE4, p0, p1, p2, p3, p4)
end

--- NativeDB Removed Parameter 5: Any p4
-- NativeDB Removed Parameter 6: Any p5
-- NativeDB Removed Parameter 7: Any p6
-- NativeDB Removed Parameter 8: Any p7
-- NativeDB Removed Parameter 9: Any p8
-- NativeDB Removed Parameter 10: Any p9
function PlaystatsRaceToPointMissionDone(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xADDD1C754E2E2914, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end
N_0xaddd1c754e2e2914 = PlaystatsRaceToPointMissionDone
PlaystatsRaceToPoint = PlaystatsRaceToPointMissionDone

function PlaystatsRandomMissionDone(name, p1, p2, p3)
	return _in(0x71862B1D855F32E1, _ts(name), p1, p2, p3)
end
N_0x71862b1d855f32e1 = PlaystatsRandomMissionDone

function PlaystatsRankUp(rank)
	return _in(0xC7F2DE41D102BFB4, rank)
end

function PlaystatsRecoverContraband(data)
	return _in(0x04D90BA8207ADA2D, _ii(data) --[[ may be optional ]])
end
N_0x04d90ba8207ada2d = PlaystatsRecoverContraband

--- NativeDB Introduced: v2372
function PlaystatsRobberyFinale(p0)
	return _in(0xBBA55BE9AAAABF44, p0)
end
N_0xbba55be9aaaabf44 = PlaystatsRobberyFinale

--- NativeDB Introduced: v2372
function PlaystatsRobberyPrep(p0)
	return _in(0x1A67DFBF1F5C3835, p0)
end
N_0x1a67dfbf1f5c3835 = PlaystatsRobberyPrep

function PlaystatsRosBet(amount, act, player, cm)
	return _in(0x121FB4DDDC2D5291, amount, act, player, cm)
end
N_0x121fb4dddc2d5291 = PlaystatsRosBet

function PlaystatsSellContraband(data)
	return _in(0xC729991A9065376E, _ii(data) --[[ may be optional ]])
end
N_0xc729991a9065376e = PlaystatsSellContraband

function PlaystatsShopItem(p0, p1, p2, p3, p4)
	return _in(0x176852ACAAC173D1, p0, p1, p2, p3, p4)
end

--- NativeDB Introduced: v1180
function PlaystatsSmugMissionEnded(data)
	return _in(0x320C35147D5B5DDD, _ii(data) --[[ may be optional ]])
end

--- NativeDB Introduced: v1604
function PlaystatsSpectatorWheelSpin(p0, p1, p2, p3)
	return _in(0x6731DE84A38BFAD0, p0, p1, p2, p3)
end

function PlaystatsSpentPiCustomLoadout(amount)
	return _in(0xBE509B0A3693DE8B, amount)
end
N_0xbe509b0a3693de8b = PlaystatsSpentPiCustomLoadout

--- PLAYSTATS_START_INVITE_DESPAWNING?
function PlaystatsStartOfflineMode()
	return _in(0x098760C7461724CD)
end
N_0x098760c7461724cd = PlaystatsStartOfflineMode

--- NativeDB Introduced: v1493
function PlaystatsStoneHatchetEnd(data)
	return _in(0x35E39E5570358630, _ii(data) --[[ may be optional ]])
end

--- Allows CEventNetworkStuntPerformed to be triggered.
function PlaystatsStuntPerformedEventAllowTrigger()
	return _in(0x928DBFB892638EF3)
end
N_0x928dbfb892638ef3 = PlaystatsStuntPerformedEventAllowTrigger

--- Disallows CEventNetworkStuntPerformed to be triggered.
function PlaystatsStuntPerformedEventDisallowTrigger()
	return _in(0x8A800DACCC0DA55D)
end
N_0x8a800daccc0da55d = PlaystatsStuntPerformedEventDisallowTrigger

function PlaystatsWeaponModeChange(weaponHash, componentHashTo, componentHashFrom)
	return _in(0xE95C8A1875A02CA4, _ch(weaponHash), _ch(componentHashTo), _ch(componentHashFrom))
end
N_0xe95c8a1875a02ca4 = PlaystatsWeaponModeChange

function PlaystatsWebsiteVisited(scaleformHash, p1)
	return _in(0xDDF24D535060F811, _ch(scaleformHash), p1)
end
N_0xddf24d535060f811 = PlaystatsWebsiteVisited

function PointCamAtCoord(cam, x, y, z)
	return _in(0xF75497BB865F0803, cam, x, y, z)
end

--- Points the camera at the specified entity.
-- Offset works like [GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS](#\_0x1899F328B0E12848).
-- @param cam Cam (Return value of CREATE_CAM or CREATE_CAM_WITH_PARAMS).
-- @param entity Entity for the camera to point at.
-- @param offsetX X offset for the camera (left/right).
-- @param offsetY Y offset for the camera (forward/backward).
-- @param offsetZ Z offset for the camera (up/down).
-- @param p5 Always seems to be 1 (true).
function PointCamAtEntity(cam, entity, offsetX, offsetY, offsetZ, p5)
	return _in(0x5640BFF86B16E8DC, cam, entity, offsetX, offsetY, offsetZ, p5)
end

--- Parameters p0-p5 seems correct. The bool p6 is unknown, but through every X360 script it's always 1. Please correct p0-p5 if any prove to be wrong.
function PointCamAtPedBone(cam, ped, boneIndex, x, y, z, p6)
	return _in(0x68B2B5F33BA63C41, cam, ped, boneIndex, x, y, z, p6)
end

--- Detaches the vehicle's windscreen.
function PopOutVehicleWindscreen(vehicle)
	return _in(0x6D645D59FB5F5AD3, vehicle)
end
DetachVehicleWindscreen = PopOutVehicleWindscreen

function PopTimecycleModifier()
	return _in(0x3C8938D7D872211E)
end

--- spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called
function PopulateNow()
	return _in(0x7472BB270D7B4F3E)
end

function Pow(base, exponent)
	return _in(0xE3621CC40F31FE2E, base, exponent, _rf)
end

--- This native is used to attribute the SRL that BeginSrl is going to load. This is usually used for 'in-game' cinematics (not cutscenes but camera stuff) instead of SetFocusArea because it loads a specific area of the map which is pretty useful when the camera moves from distant areas.
-- For instance, GTA:O opening cutscene.
-- https://pastebin.com/2EeKVeLA : a list of SRL found in srllist.meta
-- https://pastebin.com/zd9XYUWY : here is the content of a SRL file opened with codewalker.
-- @param srl A SRL name.
function PrefetchSrl(srl)
	return _in(0x3D245789CE12982C, _ts(srl))
end

function PreloadBusyspinner()
	return _in(0xC65AB383CD91DF98)
end
N_0xc65ab383cd91df98 = PreloadBusyspinner

--- Found in the scripts:
-- MISC::_11B56FBBF7224868("CONTRAILS");
function PreloadCloudHat(name)
	return _in(0x11B56FBBF7224868, _ts(name))
end
N_0x11b56fbbf7224868 = PreloadCloudHat

function PreloadScriptConversation(p0, p1, p2, p3)
	return _in(0x3B3CAD6166916D87, p0, p1, p2, p3)
end

function PreloadScriptPhoneConversation(p0, p1)
	return _in(0x6004BCB0E226AAEA, p0, p1)
end

--- NativeDB Introduced: v1180
function PreloadVehicleAudio(model)
	return _in(0xCA4CEA6AE0000A7E, _ch(model))
end
N_0xca4cea6ae0000a7e = PreloadVehicleAudio

function PreloadVehicleMod(p0, modType, p2)
	return _in(0x758F49C24925568A, p0, modType, p2)
end

--- Example:
-- bool prepareAlarm = AUDIO::PREPARE_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS");
function PrepareAlarm(alarmName)
	return _in(0x9D74AE343DB65533, _ts(alarmName), _r)
end

--- All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
function PrepareMusicEvent(eventName)
	return _in(0x1E5185B72EF5158A, _ts(eventName), _r)
end

function PrepareSynchronizedAudioEvent(p0, p1)
	return _in(0xC7ABCACA4985A766, _ts(p0), p1, _ri)
end

function PrepareSynchronizedAudioEventForScene(p0, p1)
	return _in(0x029FE7CD1B7E2E75, p0, _ii(p1) --[[ may be optional ]], _r)
end

--- Only one match in the scripts:
-- GRAPHICS::PRESET_INTERIOR_AMBIENT_CACHE("int_carrier_hanger");
function PresetInteriorAmbientCache(timecycleModifierName)
	return _in(0xD7021272EB0A451E, _ts(timecycleModifierName))
end
N_0xd7021272eb0a451e = PresetInteriorAmbientCache
PresetInteriorAmbientCache = PresetInteriorAmbientCache

function PreventCollectionOfPortablePickup(object, p1, p2)
	return _in(0x92AEFB5F6E294023, object, p1, p2)
end
N_0x92aefb5f6e294023 = PreventCollectionOfPortablePickup

function ProcessCashGift(p2)
	return _in(0x20194D48EAEC9A41, _i, _i, _ts(p2), _s)
end
N_0x20194d48eaec9a41 = ProcessCashGift

--- Called to update entity attachments.
function ProcessEntityAttachments(entity)
	return _in(0xF4080490ADC51C6F, entity)
end

--- Scope entry for profiler.
-- @param scopeName Scope name.
function ProfilerEnterScope(scopeName)
	return _in(0xc795a4a9, _ts(scopeName))
end

--- Scope exit for profiler.
function ProfilerExitScope()
	return _in(0xb39ca35c)
end

--- Returns true if the profiler is active.
-- @return True or false.
function ProfilerIsRecording()
	return _in(0xf8b7d7bb, _r)
end

function PulseBlip(blip)
	return _in(0x742D6FD43115AF73, blip)
end

function PushTimecycleModifier()
	return _in(0x58F735290861E6B4)
end

function QueryMovieMeshSetState(p0)
	return _in(0x9B6E70C5CEEF4EEB, p0, _ri)
end
N_0x9b6e70c5ceef4eeb = QueryMovieMeshSetState

function QueueMissionRepeatLoad()
	return _in(0x72DE52178C291CB5, _r)
end
N_0x72de52178c291cb5 = QueueMissionRepeatLoad

--- Shows the screen which is visible before you redo a mission? The game will make a restoration point where you will cameback when the mission is over.
-- @return Returns 1 if the message isn't currently on screen.
function QueueMissionRepeatSave()
	return _in(0x44A0BDC559B35F6E, _r)
end
N_0x44a0bdc559b35f6e = QueueMissionRepeatSave

--- Add a BLIP_GALLERY at the specific coordinate. Used in fm_maintain_transition_players to display race track points.
function RaceGalleryAddBlip(x, y, z)
	return _in(0x551DF99658DB6EE8, x, y, z, _ri)
end
N_0x551df99658db6ee8 = RaceGalleryAddBlip

--- If toggle is true, the map is shown in full screen
-- If toggle is false, the map is shown in normal mode
function RaceGalleryFullscreen(toggle)
	return _in(0x5354C5BA2EA868A4, toggle)
end
N_0x5354c5ba2ea868a4 = RaceGalleryFullscreen
SetMapFullScreen = RaceGalleryFullscreen

--- Sets the sprite of the next BLIP_GALLERY blip, values used in the native scripts: 143 (ObjectiveBlue), 144 (ObjectiveGreen), 145 (ObjectiveRed), 146 (ObjectiveYellow).
function RaceGalleryNextBlipSprite(spriteId)
	return _in(0x1EAE6DD17B7A5EFA, spriteId)
end
N_0x1eae6dd17b7a5efa = RaceGalleryNextBlipSprite

function RaiseConvertibleRoof(vehicle, instantlyRaise)
	return _in(0x8F5FB35D7E88FC70, vehicle, instantlyRaise)
end

function RaiseRetractableWheels(vehicle)
	return _in(0xF660602546D27BA8, vehicle)
end
RaiseLowerableWheels = RaiseRetractableWheels

function RecordBrokenGlass(x, y, z, radius)
	return _in(0xFBE20329593DEC9D, x, y, z, radius)
end
N_0xfbe20329593dec9d = RecordBrokenGlass

function RefillAmmoInstantly(ped)
	return _in(0x8C0D57EA686FAD87, ped, _r)
end
PedSkipNextReloading = RefillAmmoInstantly

function RefreshInterior(interiorID)
	return _in(0x41F37C3427C75AE0, interiorID)
end

function RefreshPlayerListStats(p0)
	return _in(0xE26CCFF8094D8C74, p0, _r)
end
UsingNetworkWeapontype = RefreshPlayerListStats
N_0xe26ccff8094d8c74 = RefreshPlayerListStats

function RefreshWaypoint()
	return _in(0x81FA173F170560D1)
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Registers a set of archetypes with the game engine. These should match `CBaseArchetypeDef` class information from the game.
-- @param factory A function returning a list of archetypes.
function RegisterArchetypes(factory)
	return _in(0x3c2f9037, _mfr(factory))
end

function RegisterBoolToSave(name)
	return _in(0xC8F4131414C835A1, _i, _ts(name))
end

--- Registered commands can be executed by entering them in the client console (this works for client side and server side registered commands). Or by entering them in the server console/through an RCON client (only works for server side registered commands). Or if you use a supported chat resource, like the default one provided in the cfx-server-data repository, then you can enter the command in chat by prefixing it with a `/`.
-- Commands registered using this function can also be executed by resources, using the [`ExecuteCommand` native](#\_0x561C060B).
-- The restricted bool is not used on the client side. Permissions can only be checked on the server side, so if you want to limit your command with an ace permission automatically, make it a server command (by registering it in a server script).
-- **Example result**:
-- ![](https://i.imgur.com/TaCnG09.png)
-- @param commandName The command you want to register.
-- @param handler A handler function that gets called whenever the command is executed.
-- @param restricted If this is a server command and you set this to true, then players will need the command.yourCommandName ace permission to execute this command.
function RegisterCommand(commandName, handler, restricted)
	return _in(0x5fa79b0f, _ts(commandName), _mfr(handler), restricted)
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Registers a set of entities with the game engine. These should match `CEntityDef` class information from the game.
-- At this time, this function **should not be used in a live environment**.
-- @param factory A function returning a list of entities.
function RegisterEntities(factory)
	return _in(0x410da7d3, _mfr(factory))
end

function RegisterEntityForCutscene(cutscenePed, cutsceneEntName, p2, modelHash, p4)
	return _in(0xE40C1C56DF95C2E8, cutscenePed, _ts(cutsceneEntName), p2, _ch(modelHash), p4)
end

function RegisterEnumToSave(name)
	return _in(0x10C2FA78D0E128A1, _i, _ts(name))
end

function RegisterFloatToSave(name)
	return _in(0x7CAEC29ECB5DFEBB, _i, _ts(name))
end

--- Registers a specified .gfx file as GFx font library.
-- The .gfx file has to be registered with the streamer already.
-- @param fileName The name of the .gfx file, without extension.
function RegisterFontFile(fileName)
	return _in(0x1b3a363, _ts(fileName))
end

--- Registers a specified font name for use with text draw commands.
-- @param fontName The name of the font in the GFx font library.
-- @return An index to use with [SET_TEXT_FONT](#\_0x66E0276CC5F6B9DA) and similar natives.
function RegisterFontId(fontName)
	return _in(0xacf6d8ee, _ts(fontName), _ri)
end

--- Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).
function RegisterHatedTargetsAroundPed(ped, radius)
	return _in(0x9222F300BF8354FE, ped, radius)
end

function RegisterInt64ToSave(name)
	return _in(0xA735353C77334EA0, _i, _ts(name))
end
N_0xa735353c77334ea0 = RegisterInt64ToSave

function RegisterIntToSave(name)
	return _in(0x34C9EE5986258415, _i, _ts(name))
end

--- Registers a key mapping for the current resource.
-- See the related [cookbook post](https://cookbook.fivem.net/2020/01/06/using-the-new-console-key-bindings/) for more information.
-- @param commandString The command to execute, and the identifier of the binding.
-- @param description A description for in the settings menu.
-- @param defaultMapper The [mapper ID](https://docs.fivem.net/docs/game-references/input-mapper-parameter-ids/) to use for the default binding, e.g. `keyboard`.
-- @param defaultParameter The [IO parameter ID](https://docs.fivem.net/docs/game-references/input-mapper-parameter-ids/) to use for the default binding, e.g. `f3`.
function RegisterKeyMapping(commandString, description, defaultMapper, defaultParameter)
	return _in(0xd7664fd1, _ts(commandString), _ts(description), _ts(defaultMapper), _ts(defaultParameter))
end

function RegisterNamedRendertarget(name, p1)
	return _in(0x57D9C12635E25CE3, _ts(name), p1, _r)
end

--- Used with 'NG_filmnoir_BW{01,02}' timecycles and the "NOIR_FILTER_SOUNDS" audioref.
function RegisterNoirScreenEffectThisFrame()
	return _in(0xA44FF770DFBC5DAE)
end
N_0xa44ff770dfbc5dae = RegisterNoirScreenEffectThisFrame

function RegisterNuiCallbackType(callbackType)
	return _in(0xcd03cda9, _ts(callbackType))
end


function RegisterNUICallback(callbackName, callback)
	return _in(0xcd03cda9, _ts(callbackName,callback))
end

--- Registers a script for any object with a specific model hash.
-- BRAIN::REGISTER_OBJECT_SCRIPT_BRAIN("ob_telescope", ${prop_telescope_01}, 100, 4.0, -1, 9);
function RegisterObjectScriptBrain(scriptName, modelHash, p2, activationRange, p4, p5)
	return _in(0x0BE84C318BA6EC22, _ts(scriptName), _ch(modelHash), p2, activationRange, p4, p5)
end

--- gtaforums.com/topic/885580-ped-headshotmugshot-txd/
function RegisterPedheadshot(ped)
	return _in(0x4462658788425076, ped, _ri)
end

--- Similar to REGISTER_PEDHEADSHOT but creates a transparent background instead of black.
-- **Result of the example code:**
-- <https://i.imgur.com/iHz8ztn.png>
-- @param ped A ped handle.
-- @return The Pedheadshot handle.
function RegisterPedheadshotTransparent(ped)
	return _in(0x953563CE563143AF, ped, _ri)
end
N_0x953563ce563143af = RegisterPedheadshotTransparent

function RegisterPedheadshot_3(ped)
	return _in(0xBA8805A1108A2515, ped, _ri)
end
N_0xba8805a1108a2515 = RegisterPedheadshot_3

function RegisterRawNuiCallback(callbackType, callback)
	return _in(0xa8ae9c2f, _ts(callbackType), _mfr(callback))
end

--- An internal function which allows the current resource's HLL script runtimes to receive state for the specified event.
-- @param eventName An event name, or "\*" to disable HLL event filtering for this resource.
function RegisterResourceAsEventHandler(eventName)
	return _in(0xd233a168, _ts(eventName))
end

function RegisterSaveHouse(p0, p1, p2, p3, p5, p6)
	return _in(0xC0714D0A7EEECA54, p0, p1, p2, p3, _i, p5, p6, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
function RegisterScriptWithAudio(p0)
	return _in(0xC6ED9D5092438D91, p0)
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Registers a dynamic streaming asset from the server with the GTA streaming module system.
-- @param resourceName The resource to add the asset to.
-- @param fileName A file name in the resource.
-- @param cacheString The string returned from `REGISTER_RESOURCE_ASSET` on the server.
function RegisterStreamingFileFromCache(resourceName, fileName, cacheString)
	return _in(0xcead2d4b, _ts(resourceName), _ts(fileName), _ts(cacheString))
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Registers a KVP value as an asset with the GTA streaming module system. This function currently won't work.
-- @param kvsKey The KVP key in the current resource to register as an asset.
function RegisterStreamingFileFromKvs(kvsKey)
	return _in(0x1493dcc1, _ts(kvsKey))
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Registers a file from an URL as a streaming asset in the GTA streaming subsystem. This will asynchronously register the asset, and caching is done based on the URL itself - cache headers are ignored.
-- Use `IS_STREAMING_FILE_READY` to check if the asset has been registered successfully.
-- @param registerAs The file name to register as, for example `asset.ydr`.
-- @param url The URL to fetch the asset from.
function RegisterStreamingFileFromUrl(registerAs, url)
	return _in(0xf44bfb95, _ts(registerAs), _ts(url))
end

function RegisterSynchronisedScriptSpeech()
	return _in(0x2131046957F31B04)
end

--- PED::REGISTER_TARGET(l_216, PLAYER::PLAYER_PED_ID()); from re_prisonbreak.txt.
-- l_216 = RECSBRobber1
function RegisterTarget(ped, target)
	return _in(0x2F25D9AEFA34FBA2, ped, target)
end

function RegisterTextLabelToSave(name)
	return _in(0xEDB1232C5BEAE62F, _i, _ts(name))
end

--- Seems to have the same functionality as REGISTER_TEXT_LABEL_TO_SAVE?
-- MISC::_6F7794F28C6B2535(&a_0._f1, "tlPlateText");
-- MISC::_6F7794F28C6B2535(&a_0._f1C, "tlPlateText_pending");
-- MISC::_6F7794F28C6B2535(&a_0._f10B, "tlCarAppPlateText");
-- "tl" prefix sounds like "Text Label"
function RegisterTextLabelToSave_2(name)
	return _in(0x6F7794F28C6B2535, _i, _ts(name))
end
N_0x6f7794f28c6b2535 = RegisterTextLabelToSave_2

function RegisterWorldPointScriptBrain(scriptName, activationRange, p2)
	return _in(0x3CDC7136613284BD, _ts(scriptName), activationRange, p2)
end

function ReleaseAllCommerceItemImages()
	return _in(0x72D0706CD6CCDB58)
end
N_0x72d0706cd6ccdb58 = ReleaseAllCommerceItemImages

function ReleaseAmbientAudioBank()
	return _in(0x65475A218FFAA93D)
end

--- NativeDB Introduced: v1290
function ReleaseBinkMovie(binkMovie)
	return _in(0x04D950EEFA4EED8C, binkMovie)
end

--- Enables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard if they were disabled using the native below.
-- To disable the keys, use [`0xEC9264727EEC0F28`](#\_0xEC9264727EEC0F28).
function ReleaseControlOfFrontend()
	return _in(0x14621BB1DF14E2B2)
end
N_0x14621bb1df14e2b2 = ReleaseControlOfFrontend

function ReleaseMissionAudioBank()
	return _in(0x0EC92A1BF0857187)
end

function ReleaseMovieMeshSet(movieMeshSet)
	return _in(0xEB119AA014E89183, movieMeshSet)
end

function ReleaseNamedRendertarget(name)
	return _in(0xE9F6FFE837354DD4, _ts(name), _r)
end

function ReleaseNamedScriptAudioBank(audioBank)
	return _in(0x77ED170667F50170, _ts(audioBank))
end

function ReleasePedPreloadPropData(ped)
	return _in(0xF79F9DEF0AADE61A, ped)
end
N_0xf79f9def0aade61a = ReleasePedPreloadPropData

function ReleasePedPreloadVariationData(ped)
	return _in(0x5AAB586FFEC0FD96, ped)
end
N_0x5aab586ffec0fd96 = ReleasePedPreloadVariationData

function ReleasePedheadshotImgUpload(id)
	return _in(0x5D517B27CF6ECD04, id)
end
N_0x5d517b27cf6ecd04 = ReleasePedheadshotImgUpload

function ReleasePreloadMods(vehicle)
	return _in(0x445D79F995508307, vehicle)
end

function ReleaseScriptAudioBank()
	return _in(0x7A2D8AD0A9EB9C3F)
end

--- Invalidates the entity handle passed by removing the fwScriptGuid from the entity. This should be used when receiving an
-- ambient entity from shape testing natives, but can also be used for other natives returning an 'irrelevant' entity handle.
-- @param entity The entity handle to invalidate.
function ReleaseScriptGuidFromEntity(entity)
	return _in(0x2B3334BCA57CD799, entity)
end
N_0x2b3334bca57cd799 = ReleaseScriptGuidFromEntity
ShapeTestResultEntity = ReleaseScriptGuidFromEntity

function ReleaseSoundId(soundId)
	return _in(0x353FC880830B88FA, soundId)
end

--- NativeDB Introduced: v323
function ReleaseWeaponAudio()
	return _in(0xCE4AC0439F607045)
end

--- NativeDB Added Parameter 1: Player player
-- NativeDB Added Parameter 2: int a
-- NativeDB Added Parameter 3: int b
function RemoteCheatDetected()
	return _in(0x472841A026D26D8B, _r)
end
N_0x472841a026d26d8b = RemoteCheatDetected

function RemoveActionModeAsset(asset)
	return _in(0x13E940F88470FA51, _ts(asset))
end

function RemoveAirDefenseZone(zoneId)
	return _in(0x0ABF535877897560, zoneId, _r)
end
N_0x0abf535877897560 = RemoveAirDefenseZone

function RemoveAllAirDefenseZones()
	return _in(0x1E45B34ADEBEE48E)
end
N_0x1e45b34adebee48e = RemoveAllAirDefenseZones

function RemoveAllCoverBlockingAreas()
	return _in(0xDB6708C0B46F56D8)
end

--- setting the last params to false it does that same so I would suggest its not a toggle
function RemoveAllPedWeapons(ped, p1)
	return _in(0xF25DF915FA38C5F3, ped, p1)
end

--- Pickup hashes: pastebin.com/8EuSv2r1
function RemoveAllPickupsOfType(pickupHash)
	return _in(0x27F9D613092159CF, _ch(pickupHash))
end

--- If `explode` true, then removal is done through exploding the projectile. Basically the same as EXPLODE_PROJECTILES but without defining the owner ped.
function RemoveAllProjectilesOfType(weaponHash, explode)
	return _in(0xFC52E0F37E446528, _ch(weaponHash), explode)
end

function RemoveAllShockingEvents(p0)
	return _in(0xEAABE8FDFA21274C, p0)
end

--- Used in am_mp_property_ext and am_mp_property_int
-- ```
-- ```
-- NativeDB Added Parameter 2: Ped ped
function RemoveAllStickyBombsFromEntity(entity)
	return _in(0x715135F4B82AC90D, entity)
end
N_0x715135f4b82ac90d = RemoveAllStickyBombsFromEntity

function RemoveAnimDict(animDict)
	return _in(0xF66A602F829E2A06, _ts(animDict))
end

--- Unloads the specified animation set. An animation set provides movement animations for a ped.
-- Animation set and clip set are synonymous. See [`SET_PED_MOVEMENT_CLIPSET`](#\_0xAF8A94EDE7712BEF).
function RemoveAnimSet(animSet)
	return _in(0x16350528F93024B3, _ts(animSet))
end

--- Removes the blip from your map.
-- @param blip Blip handle to remove.
function RemoveBlip(blip)
	return _in(0x86A652570E5F25DD, _ii(blip) --[[ may be optional ]])
end

--- Alias for REMOVE_ANIM_SET.
function RemoveClipSet(clipSet)
	return _in(0x01F73A131C18CD94, _ts(clipSet))
end

function RemoveCoverPoint(coverpoint)
	return _in(0xAE287C923D891715, coverpoint)
end

--- p0 is the handle returned from _0xFDBF4CDBC07E1706
function RemoveCurrentRise(p0)
	return _in(0xB1252E3E59A82AAF, p0)
end
N_0xb1252e3e59a82aaf = RemoveCurrentRise

--- Simply unloads the cutscene and doesn't do extra stuff that REMOVE_CUTSCENE does.
function RemoveCutFile(cutsceneName)
	return _in(0xD00D76A7DFC9D852, _ts(cutsceneName))
end
N_0xd00d76a7dfc9d852 = RemoveCutFile

function RemoveCutscene()
	return _in(0x440AF51A3462B86F)
end

function RemoveDecal(decal)
	return _in(0xED3F346429CCD659, decal)
end

function RemoveDecalsFromObject(obj)
	return _in(0xCCF71CBDDF5B6CB9, obj)
end

function RemoveDecalsFromObjectFacing(obj, x, y, z)
	return _in(0xA6F6F70FDC6D144C, obj, x, y, z)
end

function RemoveDecalsFromVehicle(vehicle)
	return _in(0xE91F1B65F2B48D57, vehicle)
end

--- Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...
function RemoveDecalsInRange(x, y, z, range)
	return _in(0x5D6B2D4830A67C62, x, y, z, range)
end

function RemoveDispatchSpawnBlockingArea(p0)
	return _in(0x264AC28B01B353A5, p0)
end

--- CDoor and CDoorSystemData still internally allocated (and their associations between doorHash, modelHash, and coordinates).
-- Only its NetObj removed and flag `*(v2 + 192) |= 8u` (1604 retail) toggled.
function RemoveDoorFromSystem(doorHash)
	return _in(0x464D8E1427156FE4, _ch(doorHash))
end

function RemoveEntityFromAudioMixGroup(entity, p1)
	return _in(0x18EB48CFC41F2EA0, entity, p1)
end
N_0x18eb48cfc41f2ea0 = RemoveEntityFromAudioMixGroup

function RemoveForcedObject(p0, p1, p2, p3, p4)
	return _in(0x61B6775E83C0DB6F, p0, p1, p2, p3, p4)
end

function RemoveFromItemset(p0, p1)
	return _in(0x25E68244B0177686, p0, p1)
end

function RemoveGroup(groupId)
	return _in(0x8EB2F69076AF7053, groupId)
end

--- IPL list: pastebin.com/iNGLY32D
function RemoveIpl(iplName)
	return _in(0xEE6C5AD3ECE0A82D, _ts(iplName))
end

function RemoveModelFromCreatorBudget(modelHash)
	return _in(0xF086AD9354FAC3A3, _ch(modelHash))
end
N_0xf086ad9354fac3a3 = RemoveModelFromCreatorBudget

--- p5 requires more research. See also [`CREATE_MODEL_HIDE`](#\_0x8A97BCA30A0CE478) and [`CREATE_MODEL_SWAP`](#\_0x92C47782FDA8B2A3).
-- Network players do not see changes done with this.
-- @param radius The radius specified in gta units
-- @param model The model that you want to make visible
function RemoveModelHide(x, y, z, radius, model, p5)
	return _in(0xD9E3006FB3CBD765, x, y, z, radius, _ch(model), p5)
end

function RemoveModelSwap(x, y, z, radius, originalModel, newModel, p6)
	return _in(0x033C0F9A64E229AE, x, y, z, radius, _ch(originalModel), _ch(newModel), p6)
end

--- Removes the gamer tag associated with the provided ID. This does not happen instantly. Use [IS_MP_GAMER_TAG_FREE](#\_0x595B5178E412E199) to determine when the ID is free for reuse.
-- @param gamerTagId A player ID with a gamer tag or a fake gamer tag ID.
function RemoveMpGamerTag(gamerTagId)
	return _in(0x31698AA80E0223F8, gamerTagId)
end
N_0x31698aa80e0223f8 = RemoveMpGamerTag

function RemoveMultiplayerBankCash()
	return _in(0xC7C6789AA1CFEDD0)
end

--- Removes multiplayer cash hud each frame
function RemoveMultiplayerHudCash()
	return _in(0x968F270E39141ECA)
end

function RemoveMultiplayerWalletCash()
	return _in(0x95CF81BD06EE1887)
end
N_0x95cf81bd06ee1887 = RemoveMultiplayerWalletCash

function RemoveNamedPtfxAsset(fxName)
	return _in(0x5F61EBBE1A00F96D, _ts(fxName))
end
RemoveNamedPtfxAsset = RemoveNamedPtfxAsset

function RemoveNavmeshBlockingObject(p0)
	return _in(0x46399A7895957C0E, p0)
end

function RemoveNavmeshRequiredRegions()
	return _in(0x916F0A3CDEC3445E)
end

function RemoveObjectHighDetailModel(object)
	return _in(0x4A39DB43E47CF3AA, object)
end
N_0x4a39db43e47cf3aa = RemoveObjectHighDetailModel

function RemoveParticleFx(ptfxHandle, p1)
	return _in(0xC401503DFE8D53CF, ptfxHandle, p1)
end

function RemoveParticleFxFromEntity(entity)
	return _in(0xB8FEAEEBCC127425, entity)
end

function RemoveParticleFxInRange(X, Y, Z, radius)
	return _in(0xDD19FA1C6D657305, X, Y, Z, radius)
end

--- Ped will no longer get angry when you stay near him.
function RemovePedDefensiveArea(ped, toggle)
	return _in(0x74D4E028107450A9, ped, toggle)
end

--- Judging purely from a quick disassembly, if the ped is in a vehicle, the ped will be deleted immediately. If not, it'll be marked as no longer needed.
function RemovePedElegantly(ped)
	return _in(0xAC6D445B994DF95E, _ii(ped) --[[ may be optional ]])
end

function RemovePedFromGroup(ped)
	return _in(0xED74007FFB146BC2, ped)
end

function RemovePedHelmet(ped, instantly)
	return _in(0xA7B2458D0AD6DED8, ped, instantly)
end

function RemovePedPreferredCoverSet(ped)
	return _in(0xFDDB234CF74073D9, ped)
end
N_0xfddb234cf74073d9 = RemovePedPreferredCoverSet

--- Retracts the hook on the cargobob.
-- Note: after you retract it the natives for dropping the hook no longer work
function RemovePickUpRopeForCargobob(cargobob)
	return _in(0x9768CF648F54C804, cargobob)
end
RetractCargobobHook = RemovePickUpRopeForCargobob

function RemovePickup(pickup)
	return _in(0x3288D8ACAECD2AB2, pickup)
end

function RemovePlayerHelmet(player, p2)
	return _in(0xF3AC26D3CC576528, player, p2)
end

function RemovePopMultiplierArea(id, p1)
	return _in(0xB129E447A2EDA4BF, id, p1)
end
N_0xb129e447a2eda4bf = RemovePopMultiplierArea

function RemovePopMultiplierSphere(id, p1)
	return _in(0xE6869BECDD8F2403, id, p1)
end
N_0xe6869becdd8f2403 = RemovePopMultiplierSphere

--- Found in the b617d scripts, duplicates removed:
-- AUDIO::_B4BBFD9CD8B3922B("V_CARSHOWROOM_PS_WINDOW_UNBROKEN");
-- AUDIO::_B4BBFD9CD8B3922B("V_CIA_PS_WINDOW_UNBROKEN");
-- AUDIO::_B4BBFD9CD8B3922B("V_DLC_HEIST_APARTMENT_DOOR_CLOSED");
-- AUDIO::_B4BBFD9CD8B3922B("V_FINALEBANK_PS_VAULT_INTACT");
-- AUDIO::_B4BBFD9CD8B3922B("V_MICHAEL_PS_BATHROOM_WITH_WINDOW");
function RemovePortalSettingsOverride(p0)
	return _in(0xB4BBFD9CD8B3922B, _ts(p0))
end
N_0xb4bbfd9cd8b3922b = RemovePortalSettingsOverride

function RemovePtfxAsset()
	return _in(0x88C6814073DD4A73)
end

function RemoveRelationshipGroup(groupHash)
	return _in(0xB6BA2444AB393DA2, _ch(groupHash))
end

--- Experimental natives, please do not use in a live environment.
function RemoveReplaceTexture(origTxd, origTxn)
	return _in(0xa896b20a, _ts(origTxd), _ts(origTxn))
end

function RemoveRoadNodeSpeedZone(speedzone)
	return _in(0x1033371FC8E842A7, speedzone, _r)
end
N_0x1033371fc8e842a7 = RemoveRoadNodeSpeedZone
RemoveSpeedZone = RemoveRoadNodeSpeedZone

function RemoveScaleformScriptHudMovie(hudComponent)
	return _in(0xF44A5456AC3F4F97, hudComponent)
end
N_0xf44a5456ac3f4f97 = RemoveScaleformScriptHudMovie

function RemoveScenarioBlockingArea(p0, p1)
	return _in(0x31D16B74C6E29D66, p0, p1)
end

function RemoveScenarioBlockingAreas()
	return _in(0xD37401D78A929A49)
end

function RemoveScriptFire(fireHandle)
	return _in(0x7FF548385680673F, fireHandle)
end

function RemoveShockingEvent(event)
	return _in(0x2CDA538C44C6CCE5, event, _r)
end

function RemoveShockingEventSpawnBlockingAreas()
	return _in(0x340F1415B68AEADE)
end

--- **Experimental**: This native may be altered or removed in future versions of CitizenFX without warning.
-- Removes a handler for changes to a state bag.
-- @param cookie The cookie.
function RemoveStateBagChangeHandler(cookie)
	return _in(0xd36be661, cookie)
end

--- Appears to remove stealth kill action from memory
function RemoveStealthKill(hash, p1)
	return _in(0xA6A12939F16D85BE, _ch(hash), p1)
end
N_0xa6a12939f16d85be = RemoveStealthKill

function RemoveStealthModeAsset(asset)
	return _in(0x9219857D21F0E842, _ts(asset))
end

function RemoveTcmodifierOverride(p0)
	return _in(0x15E33297C3E8DC60, _ts(p0))
end
N_0x15e33297c3e8dc60 = RemoveTcmodifierOverride

function RemoveVehicleAsset(vehicleAsset)
	return _in(0xACE699C71AB9DEB5, vehicleAsset)
end

function RemoveVehicleCombatAvoidanceArea(p0)
	return _in(0xE30524E1871F481D, p0)
end
N_0xe30524e1871f481d = RemoveVehicleCombatAvoidanceArea

function RemoveVehicleCrewEmblem(vehicle, p1)
	return _in(0xD2300034310557E4, vehicle, p1)
end
N_0xd2300034310557e4 = RemoveVehicleCrewEmblem

function RemoveVehicleHighDetailModel(vehicle)
	return _in(0x00689CDE5F7C6787, vehicle)
end

function RemoveVehicleMod(vehicle, modType)
	return _in(0x92D619E420858204, vehicle, modType)
end

--- See [REQUEST_VEHICLE_RECORDING](#\_0xAF514CABE74CBF15)
function RemoveVehicleRecording(recording, script)
	return _in(0xF1160ACCF98A3FC8, recording, _ts(script))
end

--- Remove the weird shadow applied by [\_SET_VEHICLE_SHADOW_EFFECT](#\_0x2A70BAE8883E4C81)
function RemoveVehicleShadowEffect(vehicle)
	return _in(0xF87D9F2301F7D206, vehicle)
end
N_0xf87d9f2301f7d206 = RemoveVehicleShadowEffect

function RemoveVehicleStuckCheck(vehicle)
	return _in(0x8386BFB614D06749, vehicle)
end

function RemoveVehicleUpsidedownCheck(vehicle)
	return _in(0xC53EB42A499A7E90, vehicle)
end

--- See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
function RemoveVehicleWindow(vehicle, windowIndex)
	return _in(0xA711568EEDB43069, vehicle, windowIndex)
end

function RemoveVehiclesFromGeneratorsInArea(x1, y1, z1, x2, y2, z2, unk)
	return _in(0x46A1E1A299EC4BBA, x1, y1, z1, x2, y2, z2, unk)
end

function RemoveWarningMessageListItems()
	return _in(0x6EF54AB721DC6242)
end
N_0x6ef54ab721dc6242 = RemoveWarningMessageListItems

function RemoveWaypointRecording(name)
	return _in(0xFF1B8B4AA1C25DC8, _ts(name))
end

function RemoveWeaponAsset(weaponHash)
	return _in(0xAA08EF13F341C8FC, _ch(weaponHash))
end

function RemoveWeaponComponentFromPed(ped, weaponHash, componentHash)
	return _in(0x1E8BE90C74FB4C09, ped, _ch(weaponHash), _ch(componentHash))
end

function RemoveWeaponComponentFromWeaponObject(weaponObject, addonHash)
	return _in(0xF7D82B0D66777611, weaponObject, _ch(addonHash))
end

--- This native removes a specified weapon from your selected ped.
-- Weapon Hashes: pastebin.com/0wwDZgkF
-- Example:
-- C#:
-- Function.Call(Hash.REMOVE_WEAPON_FROM_PED, Game.Player.Character, 0x99B507EA);
-- C++:
-- WEAPON::REMOVE_WEAPON_FROM_PED(PLAYER::PLAYER_PED_ID(), 0x99B507EA);
-- The code above removes the knife from the player.
function RemoveWeaponFromPed(ped, weaponHash)
	return _in(0x4899CB088EDF59B8, ped, _ch(weaponHash))
end

--- draws circular marker at pos
-- -1 = none
-- 0 = red
-- 1 = green
-- 2 = blue
-- 3 = green larger
-- 4 = nothing
-- 5 = green small
function RenderFakePickupGlow(x, y, z, colorIndex)
	return _in(0x3430676B11CDF21D, x, y, z, colorIndex)
end
N_0x3430676b11cdf21d = RenderFakePickupGlow
HighlightPlacementCoords = RenderFakePickupGlow

--- ease - smooth transition between the camera's positions
-- easeTime - Time in milliseconds for the transition to happen
-- If you have created a script (rendering) camera, and want to go back to the
-- character (gameplay) camera, call this native with render set to 0.
-- Setting ease to 1 will smooth the transition.
-- ```
-- ```
-- NativeDB Added Parameter 6: Any p5
function RenderScriptCams(render, ease, easeTime, p3, p4)
	return _in(0x07E5B515DB0636FC, render, ease, easeTime, p3, p4)
end

--- HUD colors and their values: pastebin.com/d9aHPbXN
-- --------------------------------------------------
-- makes hudColorIndex2 color into hudColorIndex color
function ReplaceHudColour(hudColorIndex, hudColorIndex2)
	return _in(0x1CCC708F0F850613, hudColorIndex, hudColorIndex2)
end
N_0x1ccc708f0f850613 = ReplaceHudColour
SetHudColoursSwitch = ReplaceHudColour

--- HUD colors and their values: pastebin.com/d9aHPbXN
function ReplaceHudColourWithRgba(hudColorIndex, r, g, b, a)
	return _in(0xF314CF4F0211894E, hudColorIndex, r, g, b, a)
end
N_0xf314cf4f0211894e = ReplaceHudColourWithRgba
SetHudColour = ReplaceHudColourWithRgba

function ReplayFreeCamGetMaxRange()
	return _in(0x8BFCEB5EA1B161B6, _rf)
end
N_0x8bfceb5ea1b161b6 = ReplayFreeCamGetMaxRange

--- PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(), 37, PLAYER::GET_WANTED_LEVEL_THRESHOLD(1));
-- From am_armybase.ysc.c4:
-- PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(4), 36, PLAYER::GET_WANTED_LEVEL_THRESHOLD(4));
-- -----
-- This was taken from the GTAV.exe v1.334. The function is called sub_140592CE8. For a full decompilation of the function, see here: pastebin.com/09qSMsN7
-- -----
-- crimeType:
-- 1: Firearms possession
-- 2: Person running a red light ("5-0-5")
-- 3: Reckless driver
-- 4: Speeding vehicle (a "5-10")
-- 5: Traffic violation (a "5-0-5")
-- 6: Motorcycle rider without a helmet
-- 7: Vehicle theft (a "5-0-3")
-- 8: Grand Theft Auto
-- 9: ???
-- 10: ???
-- 11: Assault on a civilian (a "2-40")
-- 12: Assault on an officer
-- 13: Assault with a deadly weapon (a "2-45")
-- 14: Officer shot (a "2-45")
-- 15: Pedestrian struck by a vehicle
-- 16: Officer struck by a vehicle
-- 17: Helicopter down (an "AC"?)
-- 18: Civilian on fire (a "2-40")
-- 19: Officer set on fire (a "10-99")
-- 20: Car on fire
-- 21: Air unit down (an "AC"?)
-- 22: An explosion (a "9-96")
-- 23: A stabbing (a "2-45") (also something else I couldn't understand)
-- 24: Officer stabbed (also something else I couldn't understand)
-- 25: Attack on a vehicle ("MDV"?)
-- 26: Damage to property
-- 27: Suspect threatening officer with a firearm
-- 28: Shots fired
-- 29: ???
-- 30: ???
-- 31: ???
-- 32: ???
-- 33: ???
-- 34: A "2-45"
-- 35: ???
-- 36: A "9-25"
-- 37: ???
-- 38: ???
-- 39: ???
-- 40: ???
-- 41: ???
-- 42: ???
-- 43: Possible disturbance
-- 44: Civilian in need of assistance
-- 45: ???
-- 46: ???
function ReportCrime(player, crimeType, wantedLvlThresh)
	return _in(0xE9B09589827545E7, player, crimeType, wantedLvlThresh)
end

function ReportPoliceSpottedPlayer(player)
	return _in(0xDC64D2C53493ED12, player)
end
N_0xdc64d2c53493ed12 = ReportPoliceSpottedPlayer

function RequestActionModeAsset(asset)
	return _in(0x290E2780BB7AA598, _ts(asset))
end

function RequestAdditionalCollisionAtCoord(x, y, z)
	return _in(0xC9156DC11411A9EA, x, y, z)
end

--- Request a gxt into the passed slot.
function RequestAdditionalText(gxt, slot)
	return _in(0x71A78003C8E71424, _ts(gxt), slot)
end

function RequestAdditionalTextForDlc(gxt, slot)
	return _in(0x6009F9F1AE90D8A6, _ts(gxt), slot)
end
RequestAdditionalText_2 = RequestAdditionalTextForDlc

--- All occurrences and usages found in b617d, sorted alphabetically and identical lines removed: pastebin.com/XZ1tmGEz
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function RequestAmbientAudioBank(p0, p1)
	return _in(0xFE02FFBED8CA9D99, _ts(p0), p1, _r)
end

function RequestAnimDict(animDict)
	return _in(0xD3BD40951412FEF6, _ts(animDict))
end

--- Starts loading the specified animation set. An animation set provides movement animations for a ped. See [`SET_PED_MOVEMENT_CLIPSET`](#\_0xAF8A94EDE7712BEF).
function RequestAnimSet(animSet)
	return _in(0x6EA47DAE7FAD0EED, _ts(animSet))
end

function RequestClipSet(clipSet)
	return _in(0xD2A71E1A77418A49, _ts(clipSet))
end

function RequestCollisionAtCoord(x, y, z)
	return _in(0x07503F7948F491A7, x, y, z)
end

function RequestCollisionForModel(model)
	return _in(0x923CB32A3B874FCB, _ch(model))
end

function RequestCommerceItemImage(index)
	return _in(0xA2F952104FC6DD4B, index, _r)
end
N_0xa2f952104fc6dd4b = RequestCommerceItemImage

--- Simply loads the cutscene and doesn't do extra stuff that REQUEST_CUTSCENE does.
function RequestCutFile(cutsceneName)
	return _in(0x06A3524161C502BA, _ts(cutsceneName))
end
N_0x06a3524161c502ba = RequestCutFile

--- flags: Usually 8
function RequestCutscene(cutsceneName, flags)
	return _in(0x7A86743F475D9E09, _ts(cutsceneName), flags)
end

--- flags: Usually 8
-- playbackFlags: Which scenes should be played.
-- Example: 0x105 (bit 0, 2 and 8 set) will enable scene 1, 3 and 9.
function RequestCutsceneWithPlaybackList(cutsceneName, playbackFlags, flags)
	return _in(0xC23DE0E91C30B58C, _ts(cutsceneName), playbackFlags, flags)
end
N_0xc23de0e91c30b58c = RequestCutsceneWithPlaybackList
RequestCutsceneEx = RequestCutsceneWithPlaybackList

--- Exemple: REQUEST_IPL("TrevorsTrailerTrash");
function RequestIpl(iplName)
	return _in(0x41B4893843BBDB74, _ts(iplName))
end

function RequestMenuPedModel(model)
	return _in(0xA0261AEF7ACFC51E, _ch(model))
end
N_0xa0261aef7acfc51e = RequestMenuPedModel

--- All occurrences and usages found in b617d: pastebin.com/NzZZ2Tmm
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function RequestMissionAudioBank(p0, p1)
	return _in(0x7345BDD95E62E0F2, _ts(p0), p1, _r)
end

--- Request a model to be loaded into memory.
function RequestModel(model)
	return _in(0x963D27A58DF860AC, _ch(model))
end

--- STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "V_FIB01_cur_elev");
-- STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");
-- STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "V_Office_gnd_lifts");
-- STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "limbo");
-- STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "v_fib01_jan_elev");
-- STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");
function RequestModelsInRoom(interior, roomName)
	return _in(0x8A7A40100EDFEC58, interior, _ts(roomName))
end
N_0x8a7a40100edfec58 = RequestModelsInRoom
RequestInteriorRoomByName = RequestModelsInRoom

--- From the b678d decompiled scripts:
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("core_snow");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("fm_mission_controler");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("proj_xmas_firework");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_apartment_mp");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_biolab_heist");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_fireworks");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_parachute");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_wheelsmoke");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_cig_plane");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_creator");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_tankbattle");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_ornate_heist");
-- STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_prison_break_heist_station");
function RequestNamedPtfxAsset(fxName)
	return _in(0xB80D8756B4668AB6, _ts(fxName))
end

--- Used internally for long range tasks
function RequestPathsPreferAccurateBoundingstruct(x1, y1, x2, y2)
	return _in(0x07FB139B592FA687, x1, y1, x2, y2, _r)
end
N_0x07fb139b592fa687 = RequestPathsPreferAccurateBoundingstruct

function RequestPedVehicleVisibilityTracking(ped, p1)
	return _in(0x2BC338A7B21F4608, ped, p1)
end
GetPedFloodInvincibility = RequestPedVehicleVisibilityTracking

function RequestPedVisibilityTracking(ped)
	return _in(0x7D7A2E43E74E2EB8, ped)
end
N_0x7d7a2e43e74e2eb8 = RequestPedVisibilityTracking

function RequestPedheadshotImgUpload(id)
	return _in(0xF0DAEF2F545BEE25, id, _r)
end
N_0xf0daef2f545bee25 = RequestPedheadshotImgUpload

--- maps script name (thread + 0xD0) by lookup via scriptfx.dat - does nothing when script name is empty
function RequestPtfxAsset()
	return _in(0x944955FB2A3935C8)
end

function RequestScaleformMovie(scaleformName)
	return _in(0x11FE353CF9733E6F, _ts(scaleformName), _ri)
end

--- Same as [REQUEST_SCALEFORM_MOVIE](#\_0x11FE353CF9733E6F), except it seems to fix stretched scaleforms on ultrawide.
function RequestScaleformMovieInstance(scaleformName)
	return _in(0xC514489CFB8AF806, _ts(scaleformName), _ri)
end

--- Similar to REQUEST_SCALEFORM_MOVIE, but seems to be some kind of "interactive" scaleform movie?
-- These seem to be the only scaleforms ever requested by this native:
-- "breaking_news"
-- "desktop_pc"
-- "ECG_MONITOR"
-- "Hacking_PC"
-- "TEETH_PULLING"
-- Note: Unless this hash is out-of-order, this native is next-gen only.
function RequestScaleformMovieInteractive(scaleformName)
	return _in(0xBD06C611BB9048C2, _ts(scaleformName), _ri)
end
RequestScaleformMovie3 = RequestScaleformMovieInteractive

--- Another [REQUEST_SCALEFORM_MOVIE](#\_0x11FE353CF9733E6F) equivalent.
function RequestScaleformMovie_2(scaleformName)
	return _in(0x65E7E78842E74CDB, _ts(scaleformName), _ri)
end
N_0x65e7e78842e74cdb = RequestScaleformMovie_2

function RequestScaleformScriptHudMovie(hudComponent)
	return _in(0x9304881D6F6537EA, hudComponent)
end
N_0x9304881d6f6537ea = RequestScaleformScriptHudMovie
RequestHudScaleform = RequestScaleformScriptHudMovie

function RequestScript(scriptName)
	return _in(0x6EB5F71AA68F2E8E, _ts(scriptName))
end

--- All occurrences and usages found in b617d, sorted alphabetically and identical lines removed: pastebin.com/AkmDAVn6
-- ```
-- ```
-- NativeDB Added Parameter 3: int p2
function RequestScriptAudioBank(p0, p1)
	return _in(0x2F844A8B08D76685, _ts(p0), p1, _r)
end

--- formerly _REQUEST_STREAMED_SCRIPT
function RequestScriptWithNameHash(scriptHash)
	return _in(0xD62A67D26D9653E6, _ch(scriptHash))
end
RequestStreamedScript = RequestScriptWithNameHash

function RequestStealthModeAsset(asset)
	return _in(0x2A0A62FCDEE16D4F, _ts(asset))
end

--- This function can requests texture dictonaries from following RPFs:
-- scaleform_generic.rpf
-- scaleform_minigames.rpf
-- scaleform_minimap.rpf
-- scaleform_web.rpf
-- last param isnt a toggle
function RequestStreamedTextureDict(textureDict, p1)
	return _in(0xDFA2EF8E04127DD5, _ts(textureDict), p1)
end

function RequestTaskMoveNetworkStateTransition(ped, name)
	return _in(0xD01015C7316AE176, ped, _ts(name), _r)
end
N_0xd01015c7316ae176 = RequestTaskMoveNetworkStateTransition

--- REQUEST_VEHICLE_ASSET(GET_HASH_KEY(cargobob3), 3);
-- vehicle found that have asset's:
-- cargobob3
-- submersible
-- blazer
function RequestVehicleAsset(vehicleHash, vehicleAsset)
	return _in(0x81A15811460FAB3A, _ch(vehicleHash), vehicleAsset)
end

--- REQUEST_VEHICLE_*
function RequestVehicleDashboardScaleformMovie(vehicle)
	return _in(0xDBA3C090E3D74690, vehicle)
end
N_0xdba3c090e3d74690 = RequestVehicleDashboardScaleformMovie

function RequestVehicleHighDetailModel(vehicle)
	return _in(0xA6E9FDCB2C76785E, vehicle)
end

--- Request the vehicle recording defined by the lowercase format string "%s%03d.yvr". For example, REQUEST_VEHICLE_RECORDING(1, "FBIs1UBER") corresponds to fbis1uber001.yvr.
-- For all vehicle recording/playback natives, "script" is a common prefix that usually corresponds to the script/mission the recording is used in, "recording" is its int suffix, and "id" (e.g., in native GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID) corresponds to a unique identifier within the recording streaming module.
-- Note that only 24 recordings (hardcoded in multiple places) can ever active at a given time before clobbering begins.
function RequestVehicleRecording(recording, script)
	return _in(0xAF514CABE74CBF15, recording, _ts(script))
end

--- For a full list of the points, see here: goo.gl/wIH0vn
-- Max number of loaded recordings is 32.
function RequestWaypointRecording(name)
	return _in(0x9EEFB62EB27B5792, _ts(name))
end

--- Nearly every instance of p1 I found was 31. Nearly every instance of p2 I found was 0.
-- REQUEST_WEAPON_ASSET(iLocal_1888, 31, 26);
function RequestWeaponAsset(weaponHash, p1, p2)
	return _in(0x5443438F033E29C3, _ch(weaponHash), p1, p2)
end

function RequestWeaponHighDetailModel(weaponObject)
	return _in(0x48164DBB970AC3F0, weaponObject)
end

--- Internal logging string: SCRIPT_RESERVING_LOCAL_OBJECTS
-- ```
-- ```
-- NativeDB Introduced: v1290
function ReserveNetworkLocalObjects(amount)
	return _in(0x797F9C5E661D920E, amount)
end
N_0x797f9c5e661d920e = ReserveNetworkLocalObjects

--- Internal logging string: SCRIPT_RESERVING_LOCAL_PEDS
-- ```
-- ```
-- NativeDB Introduced: v1493
function ReserveNetworkLocalPeds(amount)
	return _in(0x2C8DF5D129595281, amount)
end
N_0x2c8df5d129595281 = ReserveNetworkLocalPeds

function ReserveNetworkLocalVehicles(amount)
	return _in(0x42613035157E4208, amount)
end
N_0x42613035157e4208 = ReserveNetworkLocalVehicles

function ReserveNetworkMissionObjects(amount)
	return _in(0x4E5C93BD0C32FBF8, amount)
end

function ReserveNetworkMissionPeds(amount)
	return _in(0xB60FEBA45333D36F, amount)
end

function ReserveNetworkMissionVehicles(amount)
	return _in(0x76B02E21ED27A469, amount)
end

function ResetAiMeleeWeaponDamageModifier()
	return _in(0x46E56A7CD1D63C3F)
end

function ResetAiWeaponDamageModifier()
	return _in(0xEA16670E7BA4743C)
end

--- Begins with RESET_*. Next character in the name is either D or E.
function ResetBenchmarkRecording()
	return _in(0x437138B6A830166A)
end
N_0x437138b6a830166a = ResetBenchmarkRecording

--- Sets the waves intensity back to original (1.0 in most cases).
function ResetDeepOceanScaler()
	return _in(0x5E5E99285AE812DB)
end
N_0x5e5e99285ae812db = ResetDeepOceanScaler
ResetWavesIntensity = ResetDeepOceanScaler
ResetCurrentIntensity = ResetDeepOceanScaler

function ResetDispatchIdealSpawnDistance()
	return _in(0x77A84429DD9F0A15)
end

function ResetDispatchSpawnBlockingAreas()
	return _in(0xAC7BFD5C1D83EA75)
end

--- NativeDB Introduced: v1868
function ResetDispatchSpawnLocation()
	return _in(0x5896F2BD5683A4E1)
end

--- NativeDB Introduced: v323
function ResetDispatchTimeBetweenSpawnAttempts(p0)
	return _in(0xEB2DB0CAD13154B3, p0)
end

--- Sets (almost, not sure) all Rockstar Editor values (bIsRecording etc) to 0.
function ResetEditorValues()
	return _in(0x3353D13F09307691)
end
N_0x3353d13f09307691 = ResetEditorValues

function ResetEntityAlpha(entity)
	return _in(0x9B1E824FFBB7027A, entity)
end

function ResetExclusiveScenarioGroup()
	return _in(0x4202BBCB8684563D)
end

--- Resets the extra timecycle modifier strength normally set with [`SetExtraTimecycleModifierStrength`](#\_0x2C328AF17210F009)
function ResetExtraTimecycleModifierStrength()
	return _in(0x2BF72AD5B41AA739)
end
N_0x2bf72ad5b41aa739 = ResetExtraTimecycleModifierStrength

--- Resets parameters which is used by the game for checking is ped needs to fly through windscreen after a crash to default values.
function ResetFlyThroughWindscreenParams()
	return _in(0x6d712937)
end

--- Sets the alpha value used by [`_SET_LOCAL_PLAYER_AS_GHOST`](#\_0x5FFE9B4144F9712F), [`SET_NETWORK_VEHICLE_AS_GHOST`](#\_0x6274C4712850841E), and [`_NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER`](#\_0x4BA166079D658ED4).
function ResetGhostedEntityAlpha()
	return _in(0x17330EBF2F2124A8)
end
N_0x17330ebf2f2124a8 = ResetGhostedEntityAlpha

function ResetGlobalActionscriptFlag(flagIndex)
	return _in(0xB99C4E4D9499DF29, flagIndex)
end
N_0xb99c4e4d9499df29 = ResetGlobalActionscriptFlag

function ResetGroupFormationDefaultSpacing(groupHandle)
	return _in(0x63DAB4CCB3273205, groupHandle)
end

function ResetHudComponentValues(id)
	return _in(0x450930E616475D0D, id)
end

--- S*
function ResetInputMappingScheme()
	return _in(0x643ED62D5EA3BEBD)
end
N_0x643ed62d5ea3bebd = ResetInputMappingScheme

--- Resets values from the zoom level data by index to defaults from mapzoomdata.meta.
-- @param index Zoom level index.
function ResetMapZoomDataLevel(index)
	return _in(0x11a5b7ed, index)
end

--- Resets mapdata entity transform matrix to its original state.
-- This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param mapDataHash A mapdata hash from `mapDataLoaded` event.
-- @param entityInternalIdx An internal entity's index.
-- @return True if successful, false if not.
function ResetMapdataEntityMatrix(mapDataHash, entityInternalIdx)
	return _in(0x8143fa4f, mapDataHash, entityInternalIdx, _r)
end

--- Resets the effect of SET_PARTICLE_FX_OVERRIDE
function ResetParticleFxOverride(name)
	return _in(0x89C8553DD3274AAE, _ts(name))
end
N_0x89c8553dd3274aae = ResetParticleFxOverride
ResetParticleFxAssetOldToNew = ResetParticleFxOverride

function ResetPausedRenderphases()
	return _in(0xE1C8709406F2C41C)
end
N_0xe1c8709406f2c41c = ResetPausedRenderphases

function ResetPedAudioFlags(ped)
	return _in(0xF54BB7B61036F335, ped)
end

function ResetPedInVehicleContext(ped)
	return _in(0x22EF8FF8778030EB, ped)
end

--- Resets the value for the last vehicle driven by the Ped.
function ResetPedLastVehicle(ped)
	return _in(0xBB8DE8CF6A8DD8BB, ped)
end

function ResetPedMovementClipset(ped, transitionSpeed)
	return _in(0xAA74EC0CB0AAEA2C, ped, transitionSpeed)
end

function ResetPedRagdollTimer(ped)
	return _in(0x9FA4664CF62E47E8, ped)
end

function ResetPedStrafeClipset(ped)
	return _in(0x20510814175EA477, ped)
end

function ResetPedVisibleDamage(ped)
	return _in(0x3AC1F7B898F30C05, ped)
end

function ResetPedWeaponMovementClipset(ped)
	return _in(0x97B0DB5B4AA74E77, ped)
end

function ResetPlayerArrestState(player)
	return _in(0x2D03E13C460760D6, player)
end

function ResetPlayerInputGait(player)
	return _in(0x19531C47A2ABD691, player)
end

function ResetPlayerStamina(player)
	return _in(0xA6F312FCCE9C1DFE, player)
end

function ResetReticuleValues()
	return _in(0x12782CE0A636E9F0)
end

function ResetScenarioGroupsEnabled()
	return _in(0xDD902D0349AFAD3A)
end

function ResetScenarioTypesEnabled()
	return _in(0x0D40EE2A7F2B2D6D)
end

--- This function resets the alignment set using `SET_SCRIPT_GFX_ALIGN` and `SET_SCRIPT_GFX_ALIGN_PARAMS` to the default
-- values ('I', 'I'; 0, 0, 0, 0). This should be used after having used the aforementioned functions in order to not affect
-- any other scripts attempting to draw.
function ResetScriptGfxAlign()
	return _in(0xE3A3DB414A373DAB)
end
N_0xe3a3db414a373dab = ResetScriptGfxAlign
ScreenDrawPositionEnd = ResetScriptGfxAlign

function ResetTrevorRage()
	return _in(0xE78503B10C4314E0)
end

--- Resets whether or not peds can stand on top of the specified vehicle.
-- Note this flag is not replicated automatically, you will have to manually do so.
-- @param vehicle The vehicle.
function ResetVehiclePedsCanStandOnTopFlag(vehicle)
	return _in(0xdf62cfe2, vehicle)
end

--- The inner function has a switch on the second parameter. It's the stuck timer index.
-- Here's some pseudo code I wrote for the inner function:
-- void __fastcall NATIVE_RESET_VEHICLE_STUCK_TIMER_INNER(CUnknown* unknownClassInVehicle, int timerIndex)
-- {
-- switch (timerIndex)
-- {
-- case 0:
-- unknownClassInVehicle->FirstStuckTimer = (WORD)0u;
-- case 1:
-- unknownClassInVehicle->SecondStuckTimer = (WORD)0u;
-- case 2:
-- unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;
-- case 3:
-- unknownClassInVehicle->FourthStuckTimer = (WORD)0u;
-- case 4:
-- unknownClassInVehicle->FirstStuckTimer = (WORD)0u;
-- unknownClassInVehicle->SecondStuckTimer = (WORD)0u;
-- unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;
-- unknownClassInVehicle->FourthStuckTimer = (WORD)0u;
-- break;
-- };
-- }
function ResetVehicleStuckTimer(vehicle, nullAttributes)
	return _in(0xD7591B0065AFAA7A, vehicle, nullAttributes)
end

function ResetVehicleWheels(vehicle, toggle)
	return _in(0x21D2E5662C1F6FED, vehicle, toggle)
end

function ResetWantedLevelDifficulty(player)
	return _in(0xB9D0DD990DC141DD, player)
end

--- NativeDB Introduced: v323
function ResetWorldBoundaryForPlayer()
	return _in(0xDA1DF03D5A315F4E)
end

--- Before using this native click the native above and look at the decription.
-- Example:
-- int GetHash = Function.Call<int>(Hash.GET_HASH_KEY, "fe_menu_version_corona_lobby");
-- Function.Call(Hash.ACTIVATE_FRONTEND_MENU, GetHash, 0, -1);
-- Function.Call(Hash.RESTART_FRONTEND_MENU(GetHash, -1);
-- This native refreshes the frontend menu.
-- p1 = Hash of Menu
-- p2 = Unknown but always works with -1.
function RestartFrontendMenu(menuHash, p1)
	return _in(0x10706DC6AD2D49C0, _ch(menuHash), p1)
end

--- In singleplayer it does exactly what the name implies. In FiveM / GTA:Online it shows `Disconnecting from GTA Online` HUD and then quits the game.
function RestartGame()
	return _in(0xE574A662ACAEFBB1)
end
N_0xe574a662acaefbb1 = RestartGame

function RestartScriptedConversation()
	return _in(0x9AEB285D1818C9AC)
end

function RestorePlayerStamina(player, p1)
	return _in(0xA352C1B864CAFD33, player, p1)
end

--- This function will simply bring the dead person back to life.
-- Try not to use it alone, since using this function alone, will make peds fall through ground in hell(well for the most of the times).
-- Instead, before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at.(For instance, Around 2 floats of Player's current position.)
-- Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
function ResurrectPed(ped)
	return _in(0x71BC8E838B9C6035, ped)
end

function ReturnTwo(p0)
	return _in(0x40AFB081F8ADD4EE, p0, _ri)
end
N_0x40afb081f8add4ee = ReturnTwo

--- It will revive/cure the injured ped. The condition is ped must not be dead.
-- Upon setting and converting the health int, found, if health falls below 5, the ped will lay on the ground in pain(Maximum default health is 100).
-- This function is well suited there.
function ReviveInjuredPed(ped)
	return _in(0x8D8ACD8388CD99CE, ped)
end

function RockstarMessageGetString()
	return _in(0xDF649C4E9AFDD788, _s)
end
N_0xdf649c4e9afdd788 = RockstarMessageGetString

--- See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
function RollDownWindow(vehicle, windowIndex)
	return _in(0x7AD9E6CE657D69E3, vehicle, windowIndex)
end

--- Roll down all the windows of the vehicle passed through the first parameter.
function RollDownWindows(vehicle)
	return _in(0x85796B0549DDE156, vehicle)
end

--- See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
function RollUpWindow(vehicle, windowIndex)
	return _in(0x602E548F46E24D59, vehicle, windowIndex)
end

function RopeAreTexturesLoaded()
	return _in(0xF2D0E6A75CC05597, _r)
end

function RopeConvertToSimple(ropeId)
	return _in(0x5389D48EFA2F079A, ropeId)
end

function RopeDrawShadowEnabled(toggle)
	return _in(0xF159A63806BB5BA8, _i, toggle)
end

--- Forces a rope to a certain length.
function RopeForceLength(ropeId, length)
	return _in(0xD009F759A723DB1B, ropeId, length)
end

function RopeGetDistanceBetweenEnds(ropeId)
	return _in(0x73040398DFF9A4A6, ropeId, _rf)
end
GetRopeLength = RopeGetDistanceBetweenEnds

--- Loads rope textures for all ropes in the current scene.
function RopeLoadTextures()
	return _in(0x9B9039DBF2D258C1)
end

--- Reset a rope to a certain length.
function RopeResetLength(ropeId, length)
	return _in(0xC16DE94D9BEA14A0, ropeId, length)
end

function RopeSetUpdateOrder(ropeId, p1)
	return _in(0xDC57A637A20006ED, ropeId, p1)
end
N_0xdc57a637a20006ed = RopeSetUpdateOrder

function RopeSetUpdatePinverts(ropeId)
	return _in(0xC8D667EE52114ABA, ropeId)
end

--- Unloads rope textures for all ropes in the current scene.
function RopeUnloadTextures()
	return _in(0x6CE36C35C1AC8163)
end

function Round(value)
	return _in(0xF2DB717A73826179, value, _ri)
end

--- Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\GTA V\Benchmarks and submits some metrics.
function SaveBenchmarkRecording()
	return _in(0x37DEB0AA183FB6D8)
end
N_0x37deb0aa183fb6d8 = SaveBenchmarkRecording

function SaveHighQualityPhoto(unused)
	return _in(0x3DEC726C25A11BAC, unused, _r)
end
N_0x3dec726c25a11bac = SaveHighQualityPhoto

function SaveRecordingClip()
	return _in(0x644546EC5287471B, _r)
end
N_0x644546ec5287471b = SaveRecordingClip

function ScEmailMessageClearRecipList()
	return _in(0x55DF6DB45179236E)
end
N_0x55df6db45179236e = ScEmailMessageClearRecipList

function ScEmailMessagePushGamerToRecipList(networkHandle)
	return _in(0x2330C12A7A605D16, _ii(networkHandle) --[[ may be optional ]])
end

--- Same as HAS_ACHIEVEMENT_BEEN_PASSED
function ScGetHasAchievementBeenPassed(achievement)
	return _in(0x418DC16FAE452C1C, achievement, _r)
end
N_0x418dc16fae452c1c = ScGetHasAchievementBeenPassed

--- sfink: from scripts:
-- func_720(socialclub::_0x8416FE4E4629D7D7("bIgnoreCheaterOverride"));
-- func_719(socialclub::_0x8416FE4E4629D7D7("bIgnoreBadSportOverride"));
function ScGetIsProfileAttributeSet(name)
	return _in(0x8416FE4E4629D7D7, _ts(name), _r)
end
N_0x8416fe4e4629d7d7 = ScGetIsProfileAttributeSet

--- Returns the nickname of the logged-in Rockstar Social Club account.
function ScGetNickname()
	return _in(0x198D161F458ECC7F, _s)
end

function ScInboxGetEmails(offset, limit)
	return _in(0x040ADDCBAFA1018A, offset, limit)
end
N_0x040addcbafa1018a = ScInboxGetEmails

function ScInboxGetMessageIsReadAtIndex(msgIndex)
	return _in(0x93028F1DB42BFD08, msgIndex, _r)
end
N_0x93028f1db42bfd08 = ScInboxGetMessageIsReadAtIndex
IsScInboxValid = ScInboxGetMessageIsReadAtIndex

function ScInboxGetMessageTypeAtIndex(msgIndex)
	return _in(0xBB8EA16ECBC976C4, msgIndex, _ri)
end
N_0xbb8ea16ecbc976c4 = ScInboxGetMessageTypeAtIndex
ScInboxMessageInit = ScInboxGetMessageTypeAtIndex

function ScInboxGetTotalNumMessages()
	return _in(0x03A93FF1A2CA0864, _ri)
end
N_0x03a93ff1a2ca0864 = ScInboxGetTotalNumMessages
GetTotalScInboxIds = ScInboxGetTotalNumMessages

function ScInboxMessageDoApply(p0)
	return _in(0x9A2C8064B6C1E41A, p0, _r)
end
N_0x9a2c8064b6c1e41a = ScInboxMessageDoApply
ScInboxMessagePush = ScInboxMessageDoApply

function ScInboxMessageGetBountyData(index, outData)
	return _in(0x87E0052F08BD64E6, index, _ii(outData) --[[ may be optional ]], _r)
end
N_0x87e0052f08bd64e6 = ScInboxMessageGetBountyData

function ScInboxMessageGetDataBool(p0, p1)
	return _in(0xFFE5C16F402D851D, p0, _ts(p1), _r)
end
N_0xffe5c16f402d851d = ScInboxMessageGetDataBool

function ScInboxMessageGetDataInt(p0, context, out)
	return _in(0xA00EFE4082C4056E, p0, _ts(context), _ii(out) --[[ may be optional ]], _r)
end

function ScInboxMessageGetDataString(p0, context, out)
	return _in(0x7572EF42FC6A9B6D, p0, _ts(context), _ts(out), _r)
end

function ScInboxMessageGetString(p0)
	return _in(0xF3E31D16CBDCB304, p0, _s)
end
N_0xf3e31d16cbdcb304 = ScInboxMessageGetString

function ScInboxMessageGetUgcdata(p0, p1)
	return _in(0x69D82604A1A5A254, p0, _ii(p1) --[[ may be optional ]], _r)
end

function ScInboxMessagePop(p0)
	return _in(0x2C015348CF19CA1D, p0, _r)
end
N_0x2c015348cf19ca1d = ScInboxMessagePop

function ScInboxMessagePushGamerToEventRecipList(networkHandle)
	return _in(0xDA024BDBD600F44A, _ii(networkHandle) --[[ may be optional ]])
end
N_0xda024bdbd600f44a = ScInboxMessagePushGamerToEventRecipList

function ScInboxMessageSendBountyPresenceEvent(data)
	return _in(0x6AFD2CD753FEEF83, _ts(data), _r)
end
N_0x6afd2cd753feef83 = ScInboxMessageSendBountyPresenceEvent

function ScInboxMessageSendUgcStatUpdateEvent(data)
	return _in(0xA68D3D229F4F3B06, _ts(data))
end
N_0xa68d3d229f4f3b06 = ScInboxMessageSendUgcStatUpdateEvent

--- NativeDB Introduced: v323
-- NativeDB Added Parameter 1: Hash attrHash
-- NativeDB Added Parameter 2: float value
function ScPresenceAttrSetFloat()
	return _in(0xC4C4575F62534A24, _r)
end
N_0xc4c4575f62534a24 = ScPresenceAttrSetFloat

function ScPresenceAttrSetInt(attrHash, value)
	return _in(0x1F1E9682483697C7, _ch(attrHash), value, _r)
end
N_0x1f1e9682483697c7 = ScPresenceAttrSetInt

function ScPresenceAttrSetString(attrHash, value)
	return _in(0x287F1F75D2803595, _ch(attrHash), _ts(value), _r)
end
N_0x287f1f75d2803595 = ScPresenceAttrSetString

--- Starts a task to check an entered string for profanity on the ROS/Social Club services.
-- See also: [`SC_PROFANITY_GET_CHECK_IS_VALID`](#\_0x1753344C770358AE) and [`SC_PROFANITY_GET_CHECK_IS_PENDING`](#\_0x82E4A58BABC15AE7).
function ScProfanityCheckString(string, token)
	return _in(0x75632C5ECD7ED843, _ts(string), _ii(token) --[[ may be optional ]], _r)
end
N_0x75632c5ecd7ed843 = ScProfanityCheckString
ScStartCheckStringTask = ScProfanityCheckString

function ScProfanityCheckUgcString(string, token)
	return _in(0xEB2BF817463DFA28, _ts(string), _ii(token) --[[ may be optional ]], _r)
end
N_0xeb2bf817463dfa28 = ScProfanityCheckUgcString

function ScProfanityGetCheckIsPending(token)
	return _in(0x82E4A58BABC15AE7, token, _r)
end
N_0x82e4a58babc15ae7 = ScProfanityGetCheckIsPending
ScGetCheckStringStatus = ScProfanityGetCheckIsPending

function ScProfanityGetCheckIsValid(token)
	return _in(0x1753344C770358AE, token, _r)
end
N_0x1753344c770358ae = ScProfanityGetCheckIsValid
ScHasCheckStringTaskCompleted = ScProfanityGetCheckIsValid

function ScProfanityGetStringPassed(token)
	return _in(0x85535ACF97FC0969, token, _r)
end
N_0x85535acf97fc0969 = ScProfanityGetStringPassed

function ScProfanityGetStringStatus(token)
	return _in(0x930DE22F07B1CCE3, token, _ri)
end
N_0x930de22f07b1cce3 = ScProfanityGetStringStatus

--- Pushes a boolean for the Scaleform function onto the stack.
function ScaleformMovieMethodAddParamBool(value)
	return _in(0xC58424BA936EB458, value)
end
PushScaleformMovieFunctionParameterBool = ScaleformMovieMethodAddParamBool
PushScaleformMovieMethodParameterBool = ScaleformMovieMethodAddParamBool

--- Pushes a float for the Scaleform function onto the stack.
function ScaleformMovieMethodAddParamFloat(value)
	return _in(0xD69736AAE04DB51A, value)
end
PushScaleformMovieFunctionParameterFloat = ScaleformMovieMethodAddParamFloat
PushScaleformMovieMethodParameterFloat = ScaleformMovieMethodAddParamFloat

--- Pushes an integer for the Scaleform function onto the stack.
function ScaleformMovieMethodAddParamInt(value)
	return _in(0xC3D0841A0CC546A6, value)
end
PushScaleformMovieFunctionParameterInt = ScaleformMovieMethodAddParamInt
PushScaleformMovieMethodParameterInt = ScaleformMovieMethodAddParamInt

--- Values:
-- 0 - Dialogue Brief
-- 1 - Help Text Brief
-- 2 - Mission Objective Brief
function ScaleformMovieMethodAddParamLatestBriefString(value)
	return _in(0xEC52C631A1831C03, value)
end
N_0xec52c631a1831c03 = ScaleformMovieMethodAddParamLatestBriefString
ScaleformMovieMethodAddParamIntString = ScaleformMovieMethodAddParamLatestBriefString

--- This method is the equivalent to PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_STRING when using it to add a new button (like "INSTRUCTIONAL_BUTTONS").
-- When switching with a controller, the icons update and become the controller's icons.
function ScaleformMovieMethodAddParamPlayerNameString(string)
	return _in(0xE83A3E3557A56640, _ts(string))
end
N_0xe83a3e3557a56640 = ScaleformMovieMethodAddParamPlayerNameString
PushScaleformMovieMethodParameterButtonName = ScaleformMovieMethodAddParamPlayerNameString

function ScaleformMovieMethodAddParamTextureNameString(string)
	return _in(0xBA7148484BD90365, _ts(string))
end
PushScaleformMovieFunctionParameterString = ScaleformMovieMethodAddParamTextureNameString
PushScaleformMovieMethodParameterString = ScaleformMovieMethodAddParamTextureNameString

--- GRAPHICS::\_0x77FE3402004CD1B0(HUD::\_GET_LABEL_TEXT("YACHT_GSY"));
-- GRAPHICS::\_0x77FE3402004CD1B0(PLAYER::GET_PLAYER_NAME(PLAYER::PLAYER_ID()));
-- Both \_0xBA7148484BD90365 / \_0x77FE3402004CD1B0 works, but \_0x77FE3402004CD1B0 is usually used for "name" (organisation, players..).
function ScaleformMovieMethodAddParamTextureNameString_2(string)
	return _in(0x77FE3402004CD1B0, _ts(string))
end
N_0x77fe3402004cd1b0 = ScaleformMovieMethodAddParamTextureNameString_2
PushScaleformMovieMethodParameterString_2 = ScaleformMovieMethodAddParamTextureNameString_2

--- If bool Toggle = true so the mobile is hide to screen.
-- If bool Toggle = false so the mobile is show to screen.
function ScriptIsMovingMobilePhoneOffscreen(toggle)
	return _in(0xF511F759238A5122, toggle)
end

function ScriptRaceGetPlayerSplitTime(player)
	return _in(0x8EF5573A1F801A5C, player, _i, _i, _r)
end
N_0x8ef5573a1f801a5c = ScriptRaceGetPlayerSplitTime

function ScriptRaceInit(p0, p1, p2, p3)
	return _in(0x0A60017F841A54F2, p0, p1, p2, p3)
end
N_0x0a60017f841a54f2 = ScriptRaceInit

function ScriptRaceShutdown()
	return _in(0x1FF6BF9A63E5757F)
end
N_0x1ff6bf9a63e5757f = ScriptRaceShutdown

--- If the function returns 0, the end of the iteration has been reached.
function ScriptThreadIteratorGetNextThreadId()
	return _in(0x30B4FA1C82DD4B9F, _ri)
end
N_0x30b4fa1c82dd4b9f = ScriptThreadIteratorGetNextThreadId
GetIdOfNextThreadInEnumeration = ScriptThreadIteratorGetNextThreadId

--- Starts a new iteration of the current threads.
-- Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
function ScriptThreadIteratorReset()
	return _in(0xDADFADA5A20143A8)
end
N_0xdadfada5a20143a8 = ScriptThreadIteratorReset
BeginEnumeratingThreads = ScriptThreadIteratorReset

--- NativeDB Introduced: v1290
function SeethroughGetMaxThickness()
	return _in(0x43DBAE39626CE83F, _rf)
end

--- NativeDB Introduced: v323
function SeethroughReset()
	return _in(0x70A64C0234EF522C)
end

function SeethroughSetColorNear(red, green, blue)
	return _in(0x1086127B3A63505E, red, green, blue)
end
N_0x1086127b3a63505e = SeethroughSetColorNear

function SeethroughSetFadeEndDistance(distance)
	return _in(0x9D75795B9DC6EBBF, distance)
end
N_0x9d75795b9dc6ebbf = SeethroughSetFadeEndDistance

function SeethroughSetFadeStartDistance(distance)
	return _in(0xA78DE25577300BA1, distance)
end
N_0xa78de25577300ba1 = SeethroughSetFadeStartDistance

function SeethroughSetHeatscale(index, heatScale)
	return _in(0xD7D0B00177485411, index, heatScale)
end
N_0xd7d0b00177485411 = SeethroughSetHeatscale

function SeethroughSetHiLightIntensity(intensity)
	return _in(0x19E50EB6E33E1D28, intensity)
end
N_0x19e50eb6e33e1d28 = SeethroughSetHiLightIntensity

function SeethroughSetHiLightNoise(noise)
	return _in(0x1636D7FC127B10D2, noise)
end
N_0x1636d7fc127b10d2 = SeethroughSetHiLightNoise

function SeethroughSetMaxThickness(thickness)
	return _in(0x0C8FAC83902A62DF, thickness)
end
N_0x0c8fac83902a62df = SeethroughSetMaxThickness

function SeethroughSetNoiseAmountMax(amount)
	return _in(0xFEBFBFDFB66039DE, amount)
end
N_0xfebfbfdfb66039de = SeethroughSetNoiseAmountMax

function SeethroughSetNoiseAmountMin(amount)
	return _in(0xFF5992E1C9E65D05, amount)
end
N_0xff5992e1c9e65d05 = SeethroughSetNoiseAmountMin

--- Gets the selected entity at the current mouse cursor position, and changes the current selection depth. This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param hitFlags A bit mask of entity types to match.
-- @param precise Whether to do a *precise* test, i.e. of visual coordinates, too.
-- @return An entity handle, or zero.
function SelectEntityAtCursor(hitFlags, precise)
	return _in(0x3dd8130f, hitFlags, precise, _ri)
end

--- Gets the selected entity at the specified mouse cursor position, and changes the current selection depth. This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param fracX Mouse cursor X fraction.
-- @param fracY Mouse cursor Y fraction.
-- @param hitFlags A bit mask of entity types to match.
-- @param precise Whether to do a *precise* test, i.e. of visual coordinates, too.
-- @return An entity handle, or zero.
function SelectEntityAtPos(fracX, fracY, hitFlags, precise)
	return _in(0xafe8d405, fracX, fracY, hitFlags, precise, _ri)
end

--- Sends a message to the specific DUI root page. This is similar to SEND_NUI_MESSAGE.
-- @param duiObject The DUI browser handle.
-- @param jsonString The message, encoded as JSON.
function SendDuiMessage(duiObject, jsonString)
	return _in(0xcd380da9, duiObject, _ts(jsonString))
end

--- Injects a 'mouse down' event for a DUI object. Coordinates are expected to be set using SEND_DUI_MOUSE_MOVE.
-- @param duiObject The DUI browser handle.
-- @param button Either `'left'`, `'middle'` or `'right'`.
function SendDuiMouseDown(duiObject, button)
	return _in(0x5d01f191, duiObject, _ts(button))
end

--- Injects a 'mouse move' event for a DUI object. Coordinates are in browser space.
-- @param duiObject The DUI browser handle.
-- @param x The mouse X position.
-- @param y The mouse Y position.
function SendDuiMouseMove(duiObject, x, y)
	return _in(0xd9d7a0aa, duiObject, x, y)
end

--- Injects a 'mouse up' event for a DUI object. Coordinates are expected to be set using SEND_DUI_MOUSE_MOVE.
-- @param duiObject The DUI browser handle.
-- @param button Either `'left'`, `'middle'` or `'right'`.
function SendDuiMouseUp(duiObject, button)
	return _in(0x1d735b93, duiObject, _ts(button))
end

--- Injects a 'mouse wheel' event for a DUI object.
-- @param duiObject The DUI browser handle.
-- @param deltaY The wheel Y delta.
-- @param deltaX The wheel X delta.
function SendDuiMouseWheel(duiObject, deltaY, deltaX)
	return _in(0x2d62133a, duiObject, deltaY, deltaX)
end

--- Sends a message to the `loadingScreen` NUI frame, which contains the HTML page referenced in `loadscreen` resources.
-- @param jsonString The JSON-encoded message.
-- @return A success value.
function SendLoadingScreenMessage(jsonString)
	return _in(0x8bbe6cc0, _ts(jsonString), _r)
end

function SendNuiMessage(jsonString)
	return _in(0x78608acb, _ts(jsonString), _r)
end

function SetAbilityBarValue(value, maxValue)
	return _in(0x9969599CCFF5D85E, value, maxValue)
end

--- NativeDB Introduced: v1493
function SetAbilityBarVisibilityInMultiplayer(visible)
	return _in(0x1DFEDD15019315A9, visible)
end

--- For Steam.
-- Does nothing and always returns false in the retail version of the game.
function SetAchievementProgress(achievement, progress)
	return _in(0xC2AFFFDABBDC2C5C, achievement, progress, _r)
end
N_0xc2afffdabbdc2c5c = SetAchievementProgress
SetAchievementProgression = SetAchievementProgress

function SetActivateObjectPhysicsAsSoonAsItIsUnfrozen(object, toggle)
	return _in(0x406137F8EF90EAF5, object, toggle)
end

--- Makes pedestrians sound their horn longer, faster and more agressive when they use their horn.
function SetAggressiveHorns(toggle)
	return _in(0x395BF71085D1B1D9, toggle)
end

--- Activates Cayo Perico path nodes if passed `1`. GPS navigation will start working, maybe more stuff will change, not sure. It seems if you try to unload (pass `0`) when close to the island, your game might crash.
-- ```
-- NativeDB Introduced: v2189
-- ```
function SetAiGlobalPathNodesType(type)
	return _in(0xF74B1FFA4A15FBEA, type)
end

function SetAiMeleeWeaponDamageModifier(modifier)
	return _in(0x66460DEDDD417254, modifier)
end

function SetAiWeaponDamageModifier(value)
	return _in(0x1B1E2A40A65B8521, value)
end

--- Adds a cooldown between instances of moving and then aiming.
-- Can be optionally used to hinder 'speedboosting'
-- To turn off, set value to 0
-- @param value Number of milliseconds between allowed aiming
function SetAimCooldown(value)
	return _in(0xa42a3dbf, value)
end

--- This can be between 1.0f - 14.9f
-- You can change the max in IDA from 15.0. I say 15.0 as the function blrs if what you input is greater than or equal to 15.0 hence why it's 14.9 max default.
-- On PC the multiplier can be between 0.0f and 50.0f (inclusive).
function SetAirDragMultiplierForPlayersVehicle(player, multiplier)
	return _in(0xCA7DC8329F0A1E9E, player, multiplier)
end

function SetAllLowPriorityVehicleGeneratorsActive(active)
	return _in(0x608207E7A8FB787C, active)
end

--- Toggles a global boolean, name is probably a hash collision but describes its functionality.
function SetAllPathsCacheBoundingstruct(toggle)
	return _in(0x228E5C6AD4D74BFD, toggle)
end
N_0x228e5c6ad4d74bfd = SetAllPathsCacheBoundingstruct

function SetAllRandomPedsFlee(player, toggle)
	return _in(0x056E0FE8534C2949, player, toggle)
end

function SetAllRandomPedsFleeThisFrame(player)
	return _in(0x471D2FF42A94B4F2, player)
end

function SetAllVehicleGeneratorsActive()
	return _in(0x34AD89078831A4BC)
end

function SetAllVehicleGeneratorsActiveInArea(x1, y1, z1, x2, y2, z2, p6, p7)
	return _in(0xC12321827687FE4D, x1, y1, z1, x2, y2, z2, p6, p7)
end

--- NativeDB Introduced: v1868
function SetAllowAbilityBarInMultiplayer(toggle)
	return _in(0x889329C80FE5963C, toggle)
end

function SetAmbientPedRangeMultiplierThisFrame(multiplier)
	return _in(0x0B919E1FB47CC4E0, multiplier)
end
N_0x0b919e1fb47cc4e0 = SetAmbientPedRangeMultiplierThisFrame

function SetAmbientPedsDropMoney(p0)
	return _in(0x6B0E6172C9A4D902, p0)
end
N_0x6b0e6172c9a4d902 = SetAmbientPedsDropMoney

function SetAmbientVehicleRangeMultiplierThisFrame(range)
	return _in(0x90B6DA738A9A25DA, range)
end
N_0x90b6da738a9a25da = SetAmbientVehicleRangeMultiplierThisFrame
SetSomeVehicleDensityMultiplierThisFrame = SetAmbientVehicleRangeMultiplierThisFrame

--- Audio List
-- gtaforums.com/topic/795622-audio-for-mods/
-- All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/FTeAj4yZ
-- Yes
function SetAmbientVoiceName(ped, name)
	return _in(0x6C8065A3B780185B, ped, _ts(name))
end

function SetAmbientVoiceNameHash(ped, hash)
	return _in(0x9A53DED9921DE990, ped, _ch(hash))
end
N_0x9a53ded9921de990 = SetAmbientVoiceNameHash

function SetAmbientZoneListState(p0, p1, p2)
	return _in(0x9748FA4DE50CCE3E, _ts(p0), p1, p2)
end

function SetAmbientZoneListStatePersistent(ambientZone, p1, p2)
	return _in(0xF3638DAE8C4045E1, _ts(ambientZone), p1, p2)
end

function SetAmbientZoneState(zoneName, p1, p2)
	return _in(0xBDA07E5950085E46, _ts(zoneName), p1, p2)
end

function SetAmbientZoneStatePersistent(ambientZone, p1, p2)
	return _in(0x1D6650420CEC9D3B, _ts(ambientZone), p1, p2)
end

function SetAmmoInClip(ped, weaponHash, ammo)
	return _in(0xDCD2A934D65CB497, ped, _ch(weaponHash), ammo, _r)
end

function SetAnimLooped(p0, p1, p2, p3)
	return _in(0x70033C3CC29A1FF4, p0, p1, p2, p3)
end

--- NativeDB Introduced: v2372
function SetAnimPlaybackTime(entity, p1, p2, p3)
	return _in(0xDDF3CB5A0A4C0B49, entity, p1, p2, p3)
end
N_0xddf3cb5a0a4c0b49 = SetAnimPlaybackTime

function SetAnimRate(p0, p1, p2, p3)
	return _in(0x032D49C5E359C847, p0, p1, p2, p3)
end

function SetAnimWeight(p0, p1, p2, p3, p4)
	return _in(0x207F1A47C0342F48, p0, p1, p2, p3, p4)
end

--- mood can be 0 or 1 (it's not a boolean value!). Effects audio of the animal.
function SetAnimalMood(animal, mood)
	return _in(0xCC97B29285B1DC3B, animal, mood)
end

--- Does not affect weapons, particles, fire/explosions, flashlights or the sun.
-- When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.
-- Used in Humane Labs Heist for EMP.
-- @param state True turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on.
function SetArtificialLightsState(state)
	return _in(0x1268615ACE24D504, state)
end
SetBlackout = SetArtificialLightsState

--- If "blackout" is enabled, this native allows you to ignore "blackout" for vehicles.
-- ```
-- NativeDB Introduced: v2060
-- ```
function SetArtificialLightsStateAffectsVehicles(toggle)
	return _in(0xE2B187C0939B3D32, toggle)
end

--- Possible flag names:
-- "ActivateSwitchWheelAudio"
-- "AllowAmbientSpeechInSlowMo"
-- "AllowCutsceneOverScreenFade"
-- "AllowForceRadioAfterRetune"
-- "AllowPainAndAmbientSpeechToPlayDuringCutscene"
-- "AllowPlayerAIOnMission"
-- "AllowPoliceScannerWhenPlayerHasNoControl"
-- "AllowRadioDuringSwitch"
-- "AllowRadioOverScreenFade"
-- "AllowScoreAndRadio"
-- "AllowScriptedSpeechInSlowMo"
-- "AvoidMissionCompleteDelay"
-- "DisableAbortConversationForDeathAndInjury"
-- "DisableAbortConversationForRagdoll"
-- "DisableBarks"
-- "DisableFlightMusic"
-- "DisableReplayScriptStreamRecording"
-- "EnableHeadsetBeep"
-- "ForceConversationInterrupt"
-- "ForceSeamlessRadioSwitch"
-- "ForceSniperAudio"
-- "FrontendRadioDisabled"
-- "HoldMissionCompleteWhenPrepared"
-- "IsDirectorModeActive"
-- "IsPlayerOnMissionForSpeech"
-- "ListenerReverbDisabled"
-- "LoadMPData"
-- "MobileRadioInGame"
-- "OnlyAllowScriptTriggerPoliceScanner"
-- "PlayMenuMusic"
-- "PoliceScannerDisabled"
-- "ScriptedConvListenerMaySpeak"
-- "SpeechDucksScore"
-- "SuppressPlayerScubaBreathing"
-- "WantedMusicDisabled"
-- "WantedMusicOnMission"
-- -------------------------------
-- No added flag names between b393d and b573d, including b573d.
-- #######################################################################
-- "IsDirectorModeActive" is an audio flag which will allow you to play speech infinitely without any pauses like in Director Mode.
-- -----------------------------------------------------------------------
-- All flag IDs and hashes:
-- ID: 01 | Hash: 0x20A7858F
-- ID: 02 | Hash: 0xA11C2259
-- ID: 03 | Hash: 0x08DE4700
-- ID: 04 | Hash: 0x989F652F
-- ID: 05 | Hash: 0x3C9E76BA
-- ID: 06 | Hash: 0xA805FEB0
-- ID: 07 | Hash: 0x4B94EA26
-- ID: 08 | Hash: 0x803ACD34
-- ID: 09 | Hash: 0x7C741226
-- ID: 10 | Hash: 0x31DB9EBD
-- ID: 11 | Hash: 0xDF386F18
-- ID: 12 | Hash: 0x669CED42
-- ID: 13 | Hash: 0x51F22743
-- ID: 14 | Hash: 0x2052B35C
-- ID: 15 | Hash: 0x071472DC
-- ID: 16 | Hash: 0xF9928BCC
-- ID: 17 | Hash: 0x7ADBDD48
-- ID: 18 | Hash: 0xA959BA1A
-- ID: 19 | Hash: 0xBBE89B60
-- ID: 20 | Hash: 0x87A08871
-- ID: 21 | Hash: 0xED1057CE
-- ID: 22 | Hash: 0x1584AD7A
-- ID: 23 | Hash: 0x8582CFCB
-- ID: 24 | Hash: 0x7E5E2FB0
-- ID: 25 | Hash: 0xAE4F72DB
-- ID: 26 | Hash: 0x5D16D1FA
-- ID: 27 | Hash: 0x06B2F4B8
-- ID: 28 | Hash: 0x5D4CDC96
-- ID: 29 | Hash: 0x8B5A48BA
-- ID: 30 | Hash: 0x98FBD539
-- ID: 31 | Hash: 0xD8CB0473
-- ID: 32 | Hash: 0x5CBB4874
-- ID: 33 | Hash: 0x2E9F93A9
-- ID: 34 | Hash: 0xD93BEA86
-- ID: 35 | Hash: 0x92109B7D
-- ID: 36 | Hash: 0xB7EC9E4D
-- ID: 37 | Hash: 0xCABDBB1D
-- ID: 38 | Hash: 0xB3FD4A52
-- ID: 39 | Hash: 0x370D94E5
-- ID: 40 | Hash: 0xA0F7938F
-- ID: 41 | Hash: 0xCBE1CE81
-- ID: 42 | Hash: 0xC27F1271
-- ID: 43 | Hash: 0x9E3258EB
-- ID: 44 | Hash: 0x551CDA5B
-- ID: 45 | Hash: 0xCB6D663C
-- ID: 46 | Hash: 0x7DACE87F
-- ID: 47 | Hash: 0xF9DE416F
-- ID: 48 | Hash: 0x882E6E9E
-- ID: 49 | Hash: 0x16B447E7
-- ID: 50 | Hash: 0xBD867739
-- ID: 51 | Hash: 0xA3A58604
-- ID: 52 | Hash: 0x7E046BBC
-- ID: 53 | Hash: 0xD95FDB98
-- ID: 54 | Hash: 0x5842C0ED
-- ID: 55 | Hash: 0x285FECC6
-- ID: 56 | Hash: 0x9351AC43
-- ID: 57 | Hash: 0x50032E75
-- ID: 58 | Hash: 0xAE6D0D59
-- ID: 59 | Hash: 0xD6351785
-- ID: 60 | Hash: 0xD25D71BC
-- ID: 61 | Hash: 0x1F7F6423
-- ID: 62 | Hash: 0xE24C3AA6
-- ID: 63 | Hash: 0xBFFDD2B7
function SetAudioFlag(flagName, toggle)
	return _in(0xB9EFD5C25018725A, _ts(flagName), toggle)
end

function SetAudioSceneVariable(scene, variable, value)
	return _in(0xEF21A9EF089A2668, _ts(scene), _ts(variable), value)
end

function SetAudioScriptCleanupTime(time)
	return _in(0xA5F377B175A699C5, time)
end
N_0xa5f377b175a699c5 = SetAudioScriptCleanupTime

--- Needs to be called every frame.
-- Audio mode to apply this frame: https://alloc8or.re/gta5/doc/enums/audSpecialEffectMode.txt
-- @param mode Audio mode to apply this frame
function SetAudioSpecialEffectMode(mode)
	return _in(0x12561FCBB62D5B9C, mode)
end
N_0x12561fcbb62d5b9c = SetAudioSpecialEffectMode

--- Sets a floating-point parameter for a submix effect.
-- @param submixId The submix.
-- @param effectSlot The effect slot for the submix. It is expected that the effect is set in this slot beforehand.
-- @param paramIndex The parameter index for the effect.
-- @param paramValue The parameter value to set.
function SetAudioSubmixEffectParamFloat(submixId, effectSlot, paramIndex, paramValue)
	return _in(0x9a209b3c, submixId, effectSlot, paramIndex, paramValue)
end

--- Sets an integer parameter for a submix effect.
-- @param submixId The submix.
-- @param effectSlot The effect slot for the submix. It is expected that the effect is set in this slot beforehand.
-- @param paramIndex The parameter index for the effect.
-- @param paramValue The parameter value to set.
function SetAudioSubmixEffectParamInt(submixId, effectSlot, paramIndex, paramValue)
	return _in(0x77fae2b8, submixId, effectSlot, paramIndex, paramValue)
end

--- Assigns a RadioFX effect to a submix effect slot.
-- The parameter values for this effect are as follows (backticks are used to represent hashes):
-- | Index | Type | Description |
-- |-|-|-|
-- | \`enabled\` | int | Enables or disables RadioFX on this DSP. |
-- | \`default\` | int | Sets default parameters for the RadioFX DSP and enables it. |
-- | \`freq_low\` | float |  |
-- | \`freq_hi\` | float |  |
-- | \`fudge\` | float |  |
-- | \`rm_mod_freq\` | float |  |
-- | \`rm_mix\` | float |  |
-- | \`o_freq_lo\` | float |  |
-- | \`o_freq_hi\` | float |  |
-- @param submixId The submix.
-- @param effectSlot The effect slot for the submix.
function SetAudioSubmixEffectRadioFx(submixId, effectSlot)
	return _in(0xaaa94d53, submixId, effectSlot)
end

--- Sets the volumes for the sound channels in a submix effect.
-- Values can be between 0.0 and 1.0.
-- Channel 5 and channel 6 are not used in voice chat but are believed to be center and LFE channels.
-- Output slot starts at 0 for the first ADD_AUDIO_SUBMIX_OUTPUT call then incremented by 1 on each subsequent call.
-- @param submixId The submix.
-- @param outputSlot The output slot index.
-- @param frontLeftVolume The volume for the front left channel.
-- @param frontRightVolume The volume for the front right channel.
-- @param rearLeftVolume The volume for the rear left channel.
-- @param rearRightVolume The volume for the rear right channel.
-- @param channel5Volume The volume for channel 5.
-- @param channel6Volume The volume for channel 6.
function SetAudioSubmixOutputVolumes(submixId, outputSlot, frontLeftVolume, frontRightVolume, rearLeftVolume, rearRightVolume, channel5Volume, channel6Volume)
	return _in(0x825dc0d1, submixId, outputSlot, frontLeftVolume, frontRightVolume, rearLeftVolume, rearRightVolume, channel5Volume, channel6Volume)
end

function SetAudioVehiclePriority(vehicle, p1)
	return _in(0xE5564483E407F914, vehicle, p1)
end

function SetAutoGiveParachuteWhenEnterPlane(player, toggle)
	return _in(0x9F343285A00B4BB6, player, toggle)
end

function SetAutoGiveScubaGearWhenExitVehicle(player, toggle)
	return _in(0xD2B315B6689D537D, player, toggle)
end
N_0xd2b315b6689d537d = SetAutoGiveScubaGearWhenExitVehicle

function SetBackfaceculling(toggle)
	return _in(0x23BA6B0C2AD7B0D3, toggle)
end
N_0x23ba6b0c2ad7b0d3 = SetBackfaceculling

function SetBalanceAddMachine(contentId, contentTypeName)
	return _in(0x815E5E3073DA1D67, _ts(contentId), _ts(contentTypeName), _r)
end

function SetBalanceAddMachines(dataCount, contentTypeName)
	return _in(0xB8322EEB38BE7C26, _i, dataCount, _ts(contentTypeName), _r)
end

function SetBeastModeActive(player)
	return _in(0x438822C279B73B93, player)
end
N_0x438822c279b73b93 = SetBeastModeActive

--- Toggles the big minimap state like in GTA:Online.
-- To get the current state of the minimap, use [`IS_BIGMAP_ACTIVE`](#\_0xFFF65C63).
-- @param toggleBigMap Enable or disable the expanded minimap.
-- @param showFullMap Enable or disable the full map from being shown on the minimap, requires p0 to be true.
function SetBigmapActive(toggleBigMap, showFullMap)
	return _in(0x231C8F89D0539D8F, toggleBigMap, showFullMap)
end
SetRadarBigmapEnabled = SetBigmapActive

--- Only works on bikes, both X and Y work in the -1 - 1 range.
-- X forces the bike to turn left or right (-1, 1)
-- Y forces the bike to lean to the left or to the right (-1, 1)
-- Example with X -1/Y 1
-- http://i.imgur.com/TgIuAPJ.jpg
function SetBikeOnStand(vehicle, x, y)
	return _in(0x9CFA4896C3A53CBB, vehicle, x, y)
end
SetBikeLeanAngle = SetBikeOnStand

--- NativeDB Introduced: v1290
function SetBinkMovie(name)
	return _in(0x338D9F609FD632DB, _ts(name), _ri)
end
SetBinkMovieRequested = SetBinkMovie

--- In percentage: 0.0 - 100.0
-- NativeDB Introduced: v1290
function SetBinkMovieTime(binkMovie, progress)
	return _in(0x0CB6B3446855B57A, binkMovie, progress)
end
SetBinkMovieProgress = SetBinkMovieTime

--- NativeDB Introduced: v1868
function SetBinkMovieUnk_2(binkMovie, p1)
	return _in(0xF816F2933752322D, binkMovie, p1)
end

--- binkMovie: Is return value from _SET_BINK_MOVIE. Has something to do with bink volume? (audRequestedSettings::SetVolumeCurveScale)
-- ```
-- ```
-- NativeDB Introduced: v1290
function SetBinkMovieVolume(binkMovie, value)
	return _in(0xAFF33B1178172223, binkMovie, value)
end
SetBinkMovieUnk = SetBinkMovieVolume

--- NativeDB Introduced: v1290
function SetBinkShouldSkip(binkMovie, shouldSkip)
	return _in(0x6805D58CAA427B72, binkMovie, shouldSkip)
end
N_0x6805d58caa427b72 = SetBinkShouldSkip

--- This sets bit [offset] of [address] to on.
-- The offsets used are different bits to be toggled on and off, typically there is only one address used in a script.
-- Example:
-- MISC::SET_BIT(&bitAddress, 1);
-- To check if this bit has been enabled:
-- MISC::IS_BIT_SET(bitAddress, 1); // will return 1 afterwards
-- Please note, this method may assign a value to [address] when used.
function SetBit(offset)
	return _in(0x933D6A9EEC1BACD0, _i, offset)
end

function SetBitsInRange(rangeStart, rangeEnd, p3)
	return _in(0x8EF07E15701D61ED, _i, rangeStart, rangeEnd, p3)
end

--- Sets alpha-channel for blip color.
-- Example:
-- Blip blip = HUD::ADD_BLIP_FOR_ENTITY(entity);
-- HUD::SET_BLIP_COLOUR(blip , 3);
-- HUD::SET_BLIP_ALPHA(blip , 64);
function SetBlipAlpha(blip, alpha)
	return _in(0x45FF974EEE1C8734, blip, alpha)
end

--- false for enemy
-- true for friendly
function SetBlipAsFriendly(blip, toggle)
	return _in(0x6F6F290102C02AB4, blip, toggle)
end

function SetBlipAsMissionCreatorBlip(blip, toggle)
	return _in(0x24AC0137444F9FD5, blip, toggle)
end

--- Sets whether or not the specified blip should only be displayed when nearby, or on the minimap.
-- @param blip The blip handle.
-- @param toggle True to only display the blip as 'short range', false to display the blip from a longer distance.
function SetBlipAsShortRange(blip, toggle)
	return _in(0xBE8BE4FE60E27B72, blip, toggle)
end

function SetBlipBright(blip, toggle)
	return _in(0xB203913733F27884, blip, toggle)
end

--- Examples result:
-- ![](https://i.imgur.com/skY6vAJ.png)
-- **index:**
-- ```
-- 1 = No distance shown in legend
-- 2 = Distance shown in legend
-- 7 = "Other Players" category, also shows distance in legend
-- 10 = "Property" category
-- 11 = "Owned Property" category
-- ```
-- Any other value behaves like `index = 1`, `index` wraps around after 255
-- Blips with categories `7`, `10` or `11` will all show under the specific categories listing in the map legend, regardless of sprite or name.
-- **Legend entries**
-- | index | Legend entry | Label |
-- | --- | --- | --- |
-- | 7 | Other Players | `BLIP_OTHPLYR` |
-- | 10 | Property | `BLIP_PROPCAT` |
-- | 11 | Owned Property | `BLIP_APARTCAT` |
-- @param blip The blip to change the category index of
-- @param index The category index to change to
function SetBlipCategory(blip, index)
	return _in(0x234CDD44D996FD9A, blip, index)
end

--- See https://docs.fivem.net/docs/game-references/blips/#BlipColors
function SetBlipColour(blip, color)
	return _in(0x03D7FB09E75D6B7E, blip, color)
end

function SetBlipCoords(blip, posX, posY, posZ)
	return _in(0xAE2AF67E9D9AF65D, blip, posX, posY, posZ)
end

--- **displayId Behaviour** <br>
-- 0 = Doesn't show up, ever, anywhere. <br>
-- 1 = Doesn't show up, ever, anywhere. <br>
-- 2 = Shows on both main map and minimap. (Selectable on map) <br>
-- 3 = Shows on main map only. (Selectable on map) <br>
-- 4 = Shows on main map only. (Selectable on map) <br>
-- 5 = Shows on minimap only. <br>
-- 6 = Shows on both main map and minimap. (Selectable on map) <br>
-- 7 = Doesn't show up, ever, anywhere. <br>
-- 8 = Shows on both main map and minimap. (Not selectable on map) <br>
-- 9 = Shows on minimap only. <br>
-- 10 = Shows on both main map and minimap. (Not selectable on map) <br>
-- Anything higher than 10 seems to be exactly the same as 10. <br>
-- <br>
-- Rockstar seem to only use 0, 2, 3, 4, 5 and 8 in the decompiled scripts.
function SetBlipDisplay(blip, displayId)
	return _in(0x9029B2F3DA924928, blip, displayId)
end

--- Must be toggled before being queued for animation
function SetBlipDisplayIndicatorOnBlip(blip, toggle)
	return _in(0xC4278F70131BAA6D, blip, toggle)
end
N_0xc4278f70131baa6d = SetBlipDisplayIndicatorOnBlip

function SetBlipFade(blip, opacity, duration)
	return _in(0x2AEE8F8390D2298C, blip, opacity, duration)
end

--- Sets the interval in milliseconds before flashing the blip.
-- @param blip The blip to change flashing interval
-- @param interval Interval in milliseconds before flashing the blip
function SetBlipFlashInterval(blip, interval)
	return _in(0xAA51DB313C010A7E, blip, interval)
end

--- Flashes blip for time in milliseconds before stopping.
-- @param blip The blip to start flashing
-- @param duration Time in milliseconds to flash the blip before stopping
function SetBlipFlashTimer(blip, duration)
	return _in(0xD3CD6FD297AE87CC, blip, duration)
end

function SetBlipFlashes(blip, toggle)
	return _in(0xB14552383D39CE3E, blip, toggle)
end

function SetBlipFlashesAlternate(blip, toggle)
	return _in(0x2E8D9498C56DD0D1, blip, toggle)
end

function SetBlipHiddenOnLegend(blip, toggle)
	return _in(0x54318C915D27E4CE, blip, toggle)
end
N_0x54318c915d27e4ce = SetBlipHiddenOnLegend

function SetBlipHighDetail(blip, toggle)
	return _in(0xE2590BC29220CEBB, blip, toggle)
end

--- Doesn't work if the label text of gxtEntry is >= 80.
function SetBlipNameFromTextFile(blip, gxtEntry)
	return _in(0xEAA0FFE120D92784, blip, _ts(gxtEntry))
end

function SetBlipNameToPlayerName(blip, player)
	return _in(0x127DE7B20C60A6A3, blip, player)
end

--- See this topic for more details : gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-35?p=1069477935
function SetBlipPriority(blip, priority)
	return _in(0xAE9FC9EF6A9FAC79, blip, priority)
end

--- After some testing, looks like you need to use CEIL() on the rotation (vehicle/ped heading) before using it there.
function SetBlipRotation(blip, rotation)
	return _in(0xF87683CDF73C3F6E, blip, rotation)
end

--- Enable / disable showing route for the Blip-object.
function SetBlipRoute(blip, enabled)
	return _in(0x4F7D8A9BFB0B43E9, blip, enabled)
end

function SetBlipRouteColour(blip, colour)
	return _in(0x837155CD2F63DA09, blip, colour)
end

function SetBlipScale(blip, scale)
	return _in(0xD38744167B2FA257, blip, scale)
end

--- See https://imgur.com/a/lLkEsMN
-- ```
-- NativeDB Introduced: v1734
-- ```
function SetBlipScaleTransformation(blip, xScale, yScale)
	return _in(0xCD6524439909C979, blip, xScale, yScale)
end

function SetBlipSecondaryColour(blip, r, g, b)
	return _in(0x14892474891E09EB, blip, r, g, b)
end

--- NativeDB Added Parameter 3: Any p2
function SetBlipShowCone(blip, toggle)
	return _in(0x13127EC3665E8EE1, blip, toggle)
end

--- Makes a blip go small when off the minimap.
-- SET_BLIP_AS_*
function SetBlipShrink(blip, toggle)
	return _in(0x2B6D467DAB714E8D, blip, toggle)
end
N_0x2b6d467dab714e8d = SetBlipShrink

--- <!--
-- _loc1_.map((name, idx) => `| ${idx} | ${name} | ![${name}](https://runtime.fivem.net/blips/${name}.svg) |`).join('\n')
-- -->
-- Sets the displayed sprite for a specific blip.
-- There's a [list of sprites](https://docs.fivem.net/game-references/blips/) on the FiveM documentation site.
-- @param blip The blip to change.
-- @param spriteId The sprite ID to set.
function SetBlipSprite(blip, spriteId)
	return _in(0xDF735600A4696DAF, blip, spriteId)
end

--- Does not require whole number/integer rotations.
function SetBlipSquaredRotation(blip, heading)
	return _in(0xA8B6AFDAC320AC87, blip, heading)
end
N_0xa8b6afdac320ac87 = SetBlipSquaredRotation

--- works with TASK::TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS to make a ped completely oblivious to all events going on around him
function SetBlockingOfNonTemporaryEvents(ped, toggle)
	return _in(0x9F8AA94D6D97DBF4, ped, toggle)
end

function SetBoatAnchor(vehicle, toggle)
	return _in(0x75DBEC174AEEAD10, vehicle, toggle)
end

--- Sets the boat boom position for the `TR3` trailer.
-- Ratio value is between `0.0` and `1.0`, where `0.0` is 90 degrees to the left of the boat, and `1.0` is just slightly to the right/back of the boat.
-- To get the current boom position ratio, use [GET_BOAT_BOOM_POSITION_RATIO](#\_0x6636C535F6CC2725).
-- @param vehicle The TR3 vehicle.
-- @param ratio A value between 0.0 (left) and 1.0 (back)
function SetBoatBoomPositionRatio(vehicle, ratio)
	return _in(0xF488C566413B4232, vehicle, ratio)
end
N_0xf488c566413b4232 = SetBoatBoomPositionRatio

function SetBoatDisableAvoidance(vehicle, p1)
	return _in(0x0A6A279F3AA4FD70, vehicle, p1)
end
N_0x0a6a279f3aa4fd70 = SetBoatDisableAvoidance

function SetBoatFrozenWhenAnchored(vehicle, toggle)
	return _in(0xE3EBAAE484798530, vehicle, toggle)
end
N_0xe3ebaae484798530 = SetBoatFrozenWhenAnchored

function SetBoatIsSinking(vehicle)
	return _in(0xBD32E46AA95C1DD2, vehicle)
end
N_0xbd32e46aa95c1dd2 = SetBoatIsSinking
SetBoatSinking = SetBoatIsSinking

function SetBoatMovementResistance(vehicle, value)
	return _in(0xE842A9398079BD82, vehicle, value)
end
N_0xe842a9398079bd82 = SetBoatMovementResistance
SetBoatAnchorBuoyancyCoefficient = SetBoatMovementResistance

function SetBoatSinksWhenWrecked(vehicle, toggle)
	return _in(0x8F719973E1445BA2, vehicle, toggle)
end
N_0x8f719973e1445ba2 = SetBoatSinksWhenWrecked
SetBoatExplodesOnWreckedAction = SetBoatSinksWhenWrecked

--- Set camera as active/inactive.
function SetCamActive(cam, active)
	return _in(0x026FB97D0A425F84, cam, active)
end

--- Previous declaration void SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, BOOL easeLocation, BOOL easeRotation) is completely wrong. The last two params are integers not BOOLs...
function SetCamActiveWithInterp(camTo, camFrom, duration, easeLocation, easeRotation)
	return _in(0x9FBDA379383A52A4, camTo, camFrom, duration, easeLocation, easeRotation)
end

--- Allows you to aim and shoot at the direction the camera is facing.
function SetCamAffectsAiming(cam, toggle)
	return _in(0x8C1DC7770C51DC8D, cam, toggle)
end

function SetCamAnimCurrentPhase(cam, phase)
	return _in(0x4145A4C44FF3B5A6, cam, phase)
end

--- Sets the position of the cam.
function SetCamCoord(cam, posX, posY, posZ)
	return _in(0x4D41783FB745E42E, cam, posX, posY, posZ)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function SetCamDebugName(camera, name)
	return _in(0x1B93E0107865DD40, camera, _ts(name))
end

--- This native has its name defined inside its codE
function SetCamDofFnumberOfLens(camera, p1)
	return _in(0x7DD234D6F3914C5B, camera, p1)
end
N_0x7dd234d6f3914c5b = SetCamDofFnumberOfLens

--- Native name labeled within its code
function SetCamDofFocalLengthMultiplier(camera, multiplier)
	return _in(0x47B595D60664CFFA, camera, multiplier)
end
N_0x47b595d60664cffa = SetCamDofFocalLengthMultiplier

--- This native has a name defined inside its code
function SetCamDofFocusDistanceBias(camera, p1)
	return _in(0xC669EEA5D031B7DE, camera, p1)
end
N_0xc669eea5d031b7de = SetCamDofFocusDistanceBias

--- This native has a name defined inside its code
function SetCamDofMaxNearInFocusDistance(camera, p1)
	return _in(0xC3654A441402562D, camera, p1)
end
N_0xc3654a441402562d = SetCamDofMaxNearInFocusDistance

--- This native has a name defined inside its code
function SetCamDofMaxNearInFocusDistanceBlendLevel(camera, p1)
	return _in(0x2C654B4943BDDF7C, camera, p1)
end
N_0x2c654b4943bddf7c = SetCamDofMaxNearInFocusDistanceBlendLevel

function SetCamDofPlanes(cam, p1, p2, p3, p4)
	return _in(0x3CF48F6F96E749DC, cam, p1, p2, p3, p4)
end

function SetCamDofStrength(cam, dofStrength)
	return _in(0x5EE29B4D7D5DF897, cam, dofStrength)
end

--- if p0 is 0, effect is cancelled
-- if p0 is 1, effect zooms in, gradually tilts cam clockwise apx 30 degrees, wobbles slowly. Motion blur is active until cancelled.
-- if p0 is 2, effect immediately tilts cam clockwise apx 30 degrees, begins to wobble slowly, then gradually tilts cam back to normal. The wobbling will continue until the effect is cancelled.
function SetCamEffect(p0)
	return _in(0x80C8B1846639BB19, p0)
end

function SetCamFarClip(cam, farClip)
	return _in(0xAE306F2A904BF86E, cam, farClip)
end

function SetCamFarDof(cam, farDOF)
	return _in(0xEDD91296CD01AEE0, cam, farDOF)
end

--- Sets the field of view of the cam.
-- ---------------------------------------------
-- Min: 1.0f
-- Max: 130.0f
function SetCamFov(cam, fieldOfView)
	return _in(0xB13C14F66A00D047, cam, fieldOfView)
end

--- The native seems to only be called once.
-- The native is used as so,
-- CAM::SET_CAM_INHERIT_ROLL_VEHICLE(l_544, getElem(2, &l_525, 4));
-- In the exile1 script.
function SetCamInheritRollVehicle(cam, p1)
	return _in(0x45F1DE9C34B93AE6, cam, p1)
end

function SetCamMotionBlurStrength(cam, strength)
	return _in(0x6F0F77FBA9A8F2E6, cam, strength)
end

function SetCamNearClip(cam, nearClip)
	return _in(0xC7848EFCCC545182, cam, nearClip)
end

function SetCamNearDof(cam, nearDOF)
	return _in(0x3FA4BF0A7AB7DE2C, cam, nearDOF)
end

function SetCamParams(cam, posX, posY, posZ, rotX, rotY, rotZ, fieldOfView, transitionSpeed, p9, p10, rotationOrder)
	return _in(0xBFD8727AEA3CCEBA, cam, posX, posY, posZ, rotX, rotY, rotZ, fieldOfView, transitionSpeed, p9, p10, rotationOrder)
end

--- Sets the rotation of the cam.
-- Last parameter unknown.
-- Last parameter seems to always be set to 2.
function SetCamRot(cam, rotX, rotY, rotZ, rotationOrder)
	return _in(0x85973643155D0B07, cam, rotX, rotY, rotZ, rotationOrder)
end

function SetCamShakeAmplitude(cam, amplitude)
	return _in(0xD93DB43B82BC0D00, cam, amplitude)
end

--- I named p1 as timeDuration as it is obvious. I'm assuming tho it is ran in ms(Milliseconds) as usual.
function SetCamSplineDuration(cam, timeDuration)
	return _in(0x1381539FEE034CDA, cam, timeDuration)
end

function SetCamSplineNodeEase(cam, p1, p2, p3)
	return _in(0x83B8201ED82A9A2D, cam, p1, p2, p3)
end
N_0x83b8201ed82a9a2d = SetCamSplineNodeEase

function SetCamSplineNodeExtraFlags(cam, p1, flags)
	return _in(0x7BF1A54AE67AC070, cam, p1, flags)
end
N_0x7bf1a54ae67ac070 = SetCamSplineNodeExtraFlags

function SetCamSplineNodeVelocityScale(cam, p1, scale)
	return _in(0xA6385DEB180F319F, cam, p1, scale)
end
N_0xa6385deb180f319f = SetCamSplineNodeVelocityScale

function SetCamSplinePhase(cam, p1)
	return _in(0x242B5874F0A4E052, cam, p1)
end

function SetCamSplineSmoothingStyle(cam, smoothingStyle)
	return _in(0xD1B0F412F109EA5D, cam, smoothingStyle)
end
N_0xd1b0f412f109ea5d = SetCamSplineSmoothingStyle

function SetCamUseShallowDofMode(cam, toggle)
	return _in(0x16A96863A17552BB, cam, toggle)
end

function SetCamViewModeForContext(context, viewMode)
	return _in(0x2A2173E46DAECD12, context, viewMode)
end
N_0x2a2173e46daecd12 = SetCamViewModeForContext

function SetCamberedWheelsDisabled(vehicle, toggle)
	return _in(0x1201E8A3290A3B98, vehicle, toggle)
end
N_0x1201e8a3290a3b98 = SetCamberedWheelsDisabled

--- Setting ped to true allows the ped to shoot "friendlies".
-- p2 set to true when toggle is also true seams to make peds permanently unable to aim at, even if you set p2 back to false.
-- p1 = false & p2 = false for unable to aim at.
-- p1 = true & p2 = false for able to aim at.
function SetCanAttackFriendly(ped, toggle, p2)
	return _in(0xB3B1CB349FF9C75D, ped, toggle, p2)
end

function SetCanAutoVaultOnEntity(entity, toggle)
	return _in(0xE12ABE5E3A389A6C, entity, toggle)
end
N_0xe12abe5e3a389a6c = SetCanAutoVaultOnEntity

function SetCanClimbOnEntity(entity, toggle)
	return _in(0xA80AE305E0A3044F, entity, toggle)
end
N_0xa80ae305e0a3044f = SetCanClimbOnEntity

--- Does the same as [`_SET_CAN_PED_SELECT_WEAPON`](https://runtime.fivem.net/doc/natives/#\_0xB4771B9AAF4E68E4) except for all weapons.
function SetCanPedEquipAllWeapons(ped, toggle)
	return _in(0xEFF296097FF1E509, ped, toggle)
end
N_0xeff296097ff1e509 = SetCanPedEquipAllWeapons

--- Disables selecting the given weapon. Ped isn't forced to put the gun away. However you can't reselect the weapon if you holster then unholster. Weapon is also grayed out on the weapon wheel.
function SetCanPedEquipWeapon(ped, weaponHash, toggle)
	return _in(0xB4771B9AAF4E68E4, ped, _ch(weaponHash), toggle)
end
N_0xb4771b9aaf4e68e4 = SetCanPedEquipWeapon
SetCanPedSelectWeapon = SetCanPedEquipWeapon

--- Hardcoded to not work in multiplayer.
function SetCanResprayVehicle(vehicle, state)
	return _in(0x52BBA29D5EC69356, vehicle, state)
end

function SetCarBootOpen(vehicle)
	return _in(0xFC40CBF7B90CA77C, vehicle)
end
N_0xfc40cbf7b90ca77c = SetCarBootOpen

--- Something to do with "high speed bump severity"?
-- if (!sub_87a46("SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER")) {
-- VEHICLE::_84FD40F56075E816(0.0);
-- sub_8795b("SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER", 1);
-- }
function SetCarHighSpeedBumpSeverityMultiplier(multiplier)
	return _in(0x84FD40F56075E816, multiplier)
end
N_0x84fd40f56075e816 = SetCarHighSpeedBumpSeverityMultiplier

--- Stops the cargobob from being able to attach any vehicle
-- ```
-- ```
-- NativeDB Introduced: v1180
function SetCargobobHookCanAttach(vehicle, toggle)
	return _in(0x94A68DA412C4007D, vehicle, toggle)
end
N_0x94a68da412c4007d = SetCargobobHookCanAttach

--- Stops cargobob from beeing able to detach the attached vehicle.
function SetCargobobHookCanDetach(cargobob, toggle)
	return _in(0x571FEB383F629926, cargobob, toggle)
end
N_0x571feb383f629926 = SetCargobobHookCanDetach

--- Won't attract or magnetize to any helicopters or planes of course, but that's common sense.
function SetCargobobPickupMagnetActive(cargobob, isActive)
	return _in(0x9A665550F8DA349B, cargobob, isActive)
end
CargobobMagnetGrabVehicle = SetCargobobPickupMagnetActive
SetCargobobPickupMagnetActive = SetCargobobPickupMagnetActive

function SetCargobobPickupMagnetEffectRadius(vehicle, p1)
	return _in(0xA17BAD153B51547E, vehicle, p1)
end
N_0xa17bad153b51547e = SetCargobobPickupMagnetEffectRadius

function SetCargobobPickupMagnetFalloff(vehicle, p1)
	return _in(0x685D5561680D088B, vehicle, p1)
end
N_0x685d5561680d088b = SetCargobobPickupMagnetFalloff

function SetCargobobPickupMagnetPullRopeLength(cargobob, p1)
	return _in(0x6D8EAC07506291FB, cargobob, p1)
end
N_0x6d8eac07506291fb = SetCargobobPickupMagnetPullRopeLength

function SetCargobobPickupMagnetPullStrength(cargobob, p1)
	return _in(0xED8286F71A819BAA, cargobob, p1)
end
N_0xed8286f71a819baa = SetCargobobPickupMagnetPullStrength

function SetCargobobPickupMagnetReducedFalloff(cargobob, p1)
	return _in(0x66979ACF5102FD2F, cargobob, p1)
end
N_0x66979acf5102fd2f = SetCargobobPickupMagnetReducedFalloff

function SetCargobobPickupMagnetReducedStrength(cargobob, vehicle)
	return _in(0xE301BD63E9E13CF0, cargobob, vehicle)
end
N_0xe301bd63e9e13cf0 = SetCargobobPickupMagnetReducedStrength

function SetCargobobPickupMagnetStrength(cargobob, strength)
	return _in(0xBCBFCD9D1DAC19E2, cargobob, strength)
end
N_0xbcbfcd9d1dac19e2 = SetCargobobPickupMagnetStrength
SetCargobobPickupMagnetStrength = SetCargobobPickupMagnetStrength

function SetCargobobPickupRopeDampingMultiplier(cargobob, p1)
	return _in(0xCF1182F682F65307, cargobob, p1)
end
N_0xcf1182f682f65307 = SetCargobobPickupRopeDampingMultiplier

function SetCargobobPickupRopeType(vehicle, state)
	return _in(0x0D5F65A8F4EBDAB5, vehicle, state)
end
N_0x0d5f65a8f4ebdab5 = SetCargobobPickupRopeType

function SetCgAtBoundcenter(entity)
	return _in(0xBE520D9761FF811F, entity)
end

function SetCgoffset(entity, x, y, z)
	return _in(0xD8FA3908D7B86904, entity, x, y, z)
end

--- Sets the cylinder height of the checkpoint.
-- Parameters:
-- * nearHeight - The height of the checkpoint when inside of the radius.
-- * farHeight - The height of the checkpoint when outside of the radius.
-- * radius - The radius of the checkpoint.
function SetCheckpointCylinderHeight(checkpoint, nearHeight, farHeight, radius)
	return _in(0x2707AAE9D9297D89, checkpoint, nearHeight, farHeight, radius)
end

--- This multiplies the height of the icon inside a checkpoint with the default height of about 2 units above the checkpoint's coordinates.
-- @param checkpoint The checkpoint the multiplier should be applied to.
-- @param height_multiplier The multiplier for the icon height above the checkpoint's coordinates. Default is 1.0
function SetCheckpointIconHeight(checkpoint, height_multiplier)
	return _in(0x4B5B4DA5D79F1943, checkpoint, height_multiplier)
end
N_0x4b5b4da5d79f1943 = SetCheckpointIconHeight
SetCheckpointScale = SetCheckpointIconHeight

function SetCheckpointIconScale(checkpoint, scale)
	return _in(0x44621483FF966526, checkpoint, scale)
end
N_0x44621483ff966526 = SetCheckpointIconScale

--- Sets the checkpoint color.
function SetCheckpointRgba(checkpoint, red, green, blue, alpha)
	return _in(0x7167371E8AD747F7, checkpoint, red, green, blue, alpha)
end

--- Sets the checkpoint icon color.
function SetCheckpointRgba2(checkpoint, red, green, blue, alpha)
	return _in(0xB9EA40907C680580, checkpoint, red, green, blue, alpha)
end
SetCheckpointIconRgba = SetCheckpointRgba2

function SetCinematicButtonActive(p0)
	return _in(0x51669F7D1FB53D9F, p0)
end

function SetCinematicCamShakeAmplitude(p0)
	return _in(0xC724C701C30B2FE7, p0)
end

--- Toggles the vehicle cinematic cam; requires the player ped to be in a vehicle to work.
function SetCinematicModeActive(toggle)
	return _in(0xDCF0754AC3D6FD4E, toggle)
end

function SetCinematicNewsChannelActiveThisUpdate()
	return _in(0xDC9DA9E8789F5246)
end
N_0xdc9da9e8789f5246 = SetCinematicNewsChannelActiveThisUpdate

function SetClockDate(day, month, year)
	return _in(0xB096419DF0D06CE7, day, month, year)
end

--- SET_CLOCK_TIME(12, 34, 56);
function SetClockTime(hour, minute, second)
	return _in(0x47C3B5848C3E45D8, hour, minute, second)
end

function SetCloudHatOpacity(opacity)
	return _in(0xF36199225D6D8C86, opacity)
end
N_0xf36199225d6d8c86 = SetCloudHatOpacity

function SetColourOfNextTextComponent(hudColor)
	return _in(0x39BBF623FC803EAC, hudColor)
end
N_0x39bbf623fc803eac = SetColourOfNextTextComponent
SetNotificationColorNext = SetColourOfNextTextComponent

function SetCombatFloat(ped, combatType, p2)
	return _in(0xFF41B4B141ED981C, ped, combatType, p2)
end

function SetControlLightEffectColor(padIndex, red, green, blue)
	return _in(0x8290252FFF36ACB5, padIndex, red, green, blue)
end
N_0x8290252fff36acb5 = SetControlLightEffectColor
SetControlGroupColor = SetControlLightEffectColor

--- This is for simulating player input.
-- @param padIndex The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- @param amount An unbounded normal value.
function SetControlNormal(padIndex, control, amount)
	return _in(0xE8A25867FBA3B05E, padIndex, control, amount, _r)
end
N_0xe8a25867fba3b05e = SetControlNormal

function SetConvertibleRoof(vehicle, p1)
	return _in(0xF39C4F538B5124C2, vehicle, p1)
end

function SetConvertibleRoofLatchState(vehicle, state)
	return _in(0x1A78AD3D8240536F, vehicle, state)
end
N_0x1a78ad3d8240536f = SetConvertibleRoofLatchState

function SetCreateRandomCops(toggle)
	return _in(0x102E68B2024D536D, toggle)
end

function SetCreateRandomCopsNotOnScenarios(toggle)
	return _in(0x8A4986851C4EF6E7, toggle)
end

function SetCreateRandomCopsOnScenarios(toggle)
	return _in(0x444CB7D7DBE6973D, toggle)
end

--- Requires a component_at_*_flsh to be attached to the weapon object
function SetCreateWeaponObjectLightSource(object, toggle)
	return _in(0xBCE595371A5FBAAF, object, toggle)
end
N_0xbce595371a5fbaaf = SetCreateWeaponObjectLightSource

function SetCreditsActive(toggle)
	return _in(0xB938B7E6D3C0620C, toggle)
end

function SetCurrentPedVehicleWeapon(ped, weaponHash)
	return _in(0x75C55983C2C39DAA, ped, _ch(weaponHash), _r)
end

function SetCurrentPedWeapon(ped, weaponHash, bForceInHand)
	return _in(0xADF692B254977C0C, ped, _ch(weaponHash), bForceInHand)
end

function SetCurrentPlayerTcmodifier(modifierName)
	return _in(0xBBF327DED94E4DEB, _ts(modifierName))
end
N_0xbbf327ded94e4deb = SetCurrentPlayerTcmodifier

function SetCursorLocation(x, y)
	return _in(0xFC695459D4D0E219, x, y, _r)
end
N_0xfc695459d4d0e219 = SetCursorLocation

--- Examples:
-- AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_MICHAEL", 1);
-- AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_MICHAEL", 1);
-- AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_TREVOR", 1);
-- AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_SAVE_MICHAEL_TREVOR", 1);
-- AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "OFF_ROAD_RADIO_ROCK_LIST", 1);
-- AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_06_COUNTRY", "MAGDEMO2_RADIO_DINGHY", 1);
-- AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_16_SILVERLAKE", "SEA_RACE_RADIO_PLAYLIST", 1);
-- AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "OFF_ROAD_RADIO_ROCK_LIST", 1);
function SetCustomRadioTrackList(radioStation, trackListName, p2)
	return _in(0x4E404A9361F75BB2, _ts(radioStation), _ts(trackListName), p2)
end
N_0x4e404a9361f75bb2 = SetCustomRadioTrackList

--- All occurrences found in b617d, sorted alphabetically and identical lines removed:
-- AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_AK");
-- AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_CUSTOM");
-- AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_TOOTHLESS");
function SetCutsceneAudioOverride(name)
	return _in(0x3B4BF5F0859204D9, _ts(name))
end

function SetCutsceneCanBeSkipped(p0)
	return _in(0x41FAA8FB2ECE8720, p0)
end
N_0x41faa8fb2ece8720 = SetCutsceneCanBeSkipped

function SetCutsceneEntityStreamingFlags(cutsceneEntName, p1, p2)
	return _in(0x4C61C75BEE8184C2, _ts(cutsceneEntName), p1, p2)
end
N_0x4c61c75bee8184c2 = SetCutsceneEntityStreamingFlags

function SetCutsceneFadeValues(p0, p1, p2, p3)
	return _in(0x8093F23ABACCC7D4, p0, p1, p2, p3)
end

--- p3 could be heading. Needs more research.
function SetCutsceneOrigin(x, y, z, p3, p4)
	return _in(0xB812B3FD1C01CF27, x, y, z, p3, p4)
end

function SetCutscenePedComponentVariation(cutsceneEntName, p1, p2, p3, modelHash)
	return _in(0xBA01E7B6DEEFBBC9, _ts(cutsceneEntName), p1, p2, p3, _ch(modelHash))
end

function SetCutscenePedComponentVariationFromPed(cutsceneEntName, ped, modelHash)
	return _in(0x2A56C06EBEF2B0D9, _ts(cutsceneEntName), ped, _ch(modelHash))
end
N_0x2a56c06ebef2b0d9 = SetCutscenePedComponentVariationFromPed

--- Thanks R*! ;)
-- if ((l_161 == 0) || (l_161 == 2)) {
-- sub_2ea27("Trying to set Jimmy prop variation");
-- CUTSCENE::_0546524ADE2E9723("Jimmy_Boston", 1, 0, 0, 0);
-- }
function SetCutscenePedPropVariation(cutsceneEntName, p1, p2, p3, modelHash)
	return _in(0x0546524ADE2E9723, _ts(cutsceneEntName), p1, p2, p3, _ch(modelHash))
end
N_0x0546524ade2e9723 = SetCutscenePedPropVariation

--- Only used twice in R* scripts
function SetCutsceneTriggerArea(p0, p1, p2, p3, p4, p5)
	return _in(0x9896CE4721BE84BA, p0, p1, p2, p3, p4, p5)
end

function SetDamping(entity, vertex, value)
	return _in(0xEEA3B200A6FEB65B, entity, vertex, value)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function SetDebugLinesAndSpheresDrawingActive(enabled)
	return _in(0x175B6BFC15CDD0C5, enabled)
end

function SetDecisionMaker(ped, name)
	return _in(0xB604A2942ADED0EE, ped, _ch(name))
end

--- Sets a value that determines how aggressive the ocean waves will be. Values of 2.0 or more make for very aggressive waves like you see during a thunderstorm.
-- Works only ~200 meters around the player.
function SetDeepOceanScaler(intensity)
	return _in(0xB96B00E976BE977F, intensity)
end
N_0xb96b00e976be977f = SetDeepOceanScaler
SetWavesIntensity = SetDeepOceanScaler
SetCurrentIntensity = SetDeepOceanScaler

--- Sets the default number plate text pattern for vehicles seen on the local client with the specified plate index as their *default* index (`plateProbabilities` from carvariations).
-- For consistency, this should be used with the same value on all clients, since vehicles *without* custom text will use a seeded random number generator with this pattern to determine the default plate text.
-- The default value is `11AAA111`, and using this or a NULL string will revert to the default game RNG.
-- ### Pattern string format
-- *   `1` will lead to a random number from 0-9.
-- *   `A` will lead to a random letter from A-Z.
-- *   `.` will lead to a random letter *or* number, with 50% probability of being either.
-- *   `^1` will lead to a literal `1` being emitted.
-- *   `^A` will lead to a literal `A` being emitted.
-- *   Any other character will lead to said character being emitted.
-- *   A string shorter than 8 characters will be padded on the right.
-- @param plateIndex A plate index, or `-1` to set a default for any indices that do not have a specific value.
-- @param pattern A number plate pattern string, or a null value to reset to default.
function SetDefaultVehicleNumberPlateTextPattern(plateIndex, pattern)
	return _in(0x79780fd2, plateIndex, _ts(pattern))
end

--- Only used with the "akula" and "annihilator2" in the decompiled native scripts.
-- ```
-- NativeDB Introduced: v1290
-- ```
function SetDeployHeliStubWings(vehicle, deploy, p2)
	return _in(0xB251E0B33E58B424, vehicle, deploy, p2)
end
N_0xb251e0b33e58b424 = SetDeployHeliStubWings

--- SET_*
function SetDirectorModeClearTriggeredFlag()
	return _in(0x2632482FD6B9AB87)
end
N_0x2632482fd6b9ab87 = SetDirectorModeClearTriggeredFlag

function SetDisableAmbientMeleeMove(player, toggle)
	return _in(0x2E8AABFA40A84F8C, player, toggle)
end

function SetDisableBreaking(object, toggle)
	return _in(0x5CEC1A84620E7D5B, object, toggle)
end

function SetDisableDecalRenderingThisFrame()
	return _in(0x4B5CFC83122DF602)
end
N_0x4b5cfc83122df602 = SetDisableDecalRenderingThisFrame

function SetDisableFragDamage(object, toggle)
	return _in(0x01BA3AED21C16CFB, object, toggle)
end

function SetDisablePretendOccupants(vehicle, toggle)
	return _in(0x25367DE49D64CF16, vehicle, toggle)
end
N_0x25367de49d64cf16 = SetDisablePretendOccupants

function SetDisableRandomTrainsThisFrame(toggle)
	return _in(0xD4B8E3D1917BC86B, toggle)
end
N_0xd4b8e3d1917bc86b = SetDisableRandomTrainsThisFrame
SetSomethingMultiplierThisFrame = SetDisableRandomTrainsThisFrame

function SetDisableSuperdummyMode(vehicle, p1)
	return _in(0xB088E9A47AE6EDD5, vehicle, p1)
end
N_0xb088e9a47ae6edd5 = SetDisableSuperdummyMode

--- Disables turret movement when called in a loop. You can still fire and aim. You cannot shoot backwards though.
-- ```
-- NativeDB Introduced: v1365
-- ```
function SetDisableTurretMovementThisFrame(vehicle, turretIdx)
	return _in(0xE615BB7A7752C76A, vehicle, turretIdx)
end
N_0xe615bb7a7752c76a = SetDisableTurretMovementThisFrame
SetDisableTurretMovement = SetDisableTurretMovementThisFrame

function SetDisableVehicleEngineFires(vehicle, toggle)
	return _in(0x91A0BD635321F145, vehicle, toggle)
end
N_0x91a0bd635321f145 = SetDisableVehicleEngineFires

--- True stops vtols from switching modes. Doesn't stop the sound though.
-- ```
-- ```
-- NativeDB Introduced: v1290
function SetDisableVehicleFlightNozzlePosition(vehicle, direction)
	return _in(0xCE2B43770B655F8F, vehicle, direction)
end
SetPlaneVtolAnimationDisabled = SetDisableVehicleFlightNozzlePosition

function SetDisableVehiclePetrolTankDamage(vehicle, toggle)
	return _in(0x37C8252A7C92D017, vehicle, toggle)
end

function SetDisableVehiclePetrolTankFires(vehicle, toggle)
	return _in(0x465BF26AB9684352, vehicle, toggle)
end
N_0x465bf26ab9684352 = SetDisableVehiclePetrolTankFires

--- NativeDB Introduced: v1604
function SetDisableVehicleUnk(toggle)
	return _in(0x143921E45EC44D62, toggle)
end

--- NativeDB Introduced: v1604
function SetDisableVehicleUnk_2(toggle)
	return _in(0x211E95CE9903940C, toggle)
end

--- R\* used it to "remove" vehicle windows when "nightshark" had some mod, which adding some kind of armored windows. When enabled, you can't break vehicles glass. All your bullets wiil shoot through glass. You also will not able to break the glass with any other way (hitting and etc)
-- @param vehicle The vehicle to toggle this for.
-- @param toggle True disables the collision, false enables the collision
function SetDisableVehicleWindowCollisions(vehicle, toggle)
	return _in(0x1087BC8EC540DAEB, vehicle, toggle)
end
N_0x1087bc8ec540daeb = SetDisableVehicleWindowCollisions

--- This native sets the app id for the discord rich presence implementation.
-- @param appId A valid Discord API App Id, can be generated at https://discordapp.com/developers/applications/
function SetDiscordAppId(appId)
	return _in(0x6a02254d, _ts(appId))
end

--- Sets a clickable button to be displayed in a player's Discord rich presence.
-- @param index The button index, either 0 or 1.
-- @param label The text to display on the button.
-- @param url The URL to open when clicking the button. This has to start with `fivem://connect/` or `https://`.
function SetDiscordRichPresenceAction(index, label, url)
	return _in(0xcbbc3fac, index, _ts(label), _ts(url))
end

--- This native sets the image asset for the discord rich presence implementation.
-- @param assetName The name of a valid asset registered on Discordapp's developer dashboard. note that the asset has to be registered under the same discord API application set using the SET_DISCORD_APP_ID native.
function SetDiscordRichPresenceAsset(assetName)
	return _in(0x53dfd530, _ts(assetName))
end

--- This native sets the small image asset for the discord rich presence implementation.
-- @param assetName The name of a valid asset registered on Discordapp's developer dashboard. Note that the asset has to be registered under the same discord API application set using the SET_DISCORD_APP_ID native.
function SetDiscordRichPresenceAssetSmall(assetName)
	return _in(0xf61d04c4, _ts(assetName))
end

--- This native sets the hover text of the small image asset for the discord rich presence implementation.
-- @param text Text to be displayed when hovering over small image asset. Note that you must also set a valid small image asset using the SET_DISCORD_RICH_PRESENCE_ASSET_SMALL native.
function SetDiscordRichPresenceAssetSmallText(text)
	return _in(0x35e62b6a, _ts(text))
end

--- This native sets the hover text of the image asset for the discord rich presence implementation.
-- @param text Text to be displayed when hovering over image asset. Note that you must also set a valid image asset using the SET_DISCORD_RICH_PRESENCE_ASSET native.
function SetDiscordRichPresenceAssetText(text)
	return _in(0xb029d2fa, _ts(text))
end

function SetDispatchCopsForPlayer(player, toggle)
	return _in(0xDB172424876553F4, player, toggle)
end

function SetDispatchIdealSpawnDistance(p0)
	return _in(0x6FE601A64180D423, p0)
end

function SetDispatchSpawnLocation(x, y, z)
	return _in(0xD10F442036302D50, x, y, z)
end
N_0xd10f442036302d50 = SetDispatchSpawnLocation

function SetDispatchTimeBetweenSpawnAttempts(p0, p1)
	return _in(0x44F7CBC1BEB3327D, p0, p1)
end

function SetDispatchTimeBetweenSpawnAttemptsMultiplier(p0, p1)
	return _in(0x48838ED9937A15D1, p0, p1)
end

--- Toggles to render distant vehicles. They may not be vehicles but images to look like vehicles.
function SetDistantCarsEnabled(toggle)
	return _in(0xF796359A959DF65D, toggle)
end
N_0xf796359a959df65d = SetDistantCarsEnabled
DisplayDistantVehicles = SetDistantCarsEnabled

--- This is a NOP function. It does nothing at all.
function SetDitchPoliceModels(toggle)
	return _in(0x42CBE54462D92634, toggle)
end

--- Sets the on-screen drawing origin for draw-functions in world coordinates.
-- The effect can be reset by calling [`CLEAR_DRAW_ORIGIN`](#\_0xFF0B610F6BE0D7AF) and is limited to 32 different origins each frame.
function SetDrawOrigin(x, y, z, p3)
	return _in(0xAA0008F3BBB8F416, x, y, z, p3)
end

--- NativeDB Introduced: v2372
function SetDriftTyresEnabled(vehicle, toggle)
	return _in(0x5AC79C98C5C17F05, vehicle, toggle)
end

function SetDriveTaskCruiseSpeed(driver, cruiseSpeed)
	return _in(0x5C9B84BD7D31D908, driver, cruiseSpeed)
end

--- This native is used to set the driving style for specific ped.
-- Driving styles id seems to be:
-- 786468
-- 262144
-- 786469
-- http://gtaforums.com/topic/822314-guide-driving-styles/
function SetDriveTaskDrivingStyle(ped, drivingStyle)
	return _in(0xDACE1BE37D88AF67, ped, drivingStyle)
end

function SetDriveTaskMaxCruiseSpeed(p0, p1)
	return _in(0x404A5AA9B9F0B746, p0, p1)
end

--- For p1 & p2 (Ped, Vehicle). I could be wrong, as the only time this native is called in scripts is once and both are 0, but I assume this native will work like SET_MOUNTED_WEAPON_TARGET in which has the same exact amount of parameters and the 1st and last 3 parameters are right and the same for both natives.
function SetDrivebyTaskTarget(shootingPed, targetPed, targetVehicle, x, y, z)
	return _in(0xE5B302114D8162EE, shootingPed, targetPed, targetVehicle, x, y, z)
end

--- The function specifically verifies the value is equal to, or less than 1.0f. If it is greater than 1.0f, the function does nothing at all.
function SetDriverAbility(driver, ability)
	return _in(0xB195FFA8042FC5C3, driver, ability)
end

--- range 0.0f - 1.0f
function SetDriverAggressiveness(driver, aggressiveness)
	return _in(0xA731F608CA104E3C, driver, aggressiveness)
end

--- Scripts use 0.2, 0.5 and 1.0. Value must be >= 0.0 && <= 1.0
function SetDriverRacingModifier(driver, modifier)
	return _in(0xDED5AF5A0EA4B297, driver, modifier)
end
N_0xded5af5a0ea4b297 = SetDriverRacingModifier

--- Navigates the specified DUI browser to a different URL.
-- @param duiObject The DUI browser handle.
-- @param url The new URL.
function SetDuiUrl(duiObject, url)
	return _in(0xf761d9f3, duiObject, _ts(url))
end

function SetEmitterRadioStation(emitterName, radioStation)
	return _in(0xACF57305B12AF907, _ts(emitterName), _ts(radioStation))
end

--- Activate the physics to: "xs_prop_arena_{flipper,wall,bollard,turntable,pit}"
-- ```
-- ```
-- NativeDB Introduced: v1604
function SetEnableArenaPropPhysics(entity, toggle, p2)
	return _in(0x911024442F4898F0, entity, toggle, p2)
end
N_0x911024442f4898f0 = SetEnableArenaPropPhysics

--- NativeDB Introduced: v1604
function SetEnableArenaPropPhysicsOnPed(entity, toggle, p2, ped)
	return _in(0xB20834A7DD3D8896, entity, toggle, p2, ped)
end
N_0xb20834a7dd3d8896 = SetEnableArenaPropPhysicsOnPed

--- Used with [SET_ENABLE_HANDCUFFS](#\_0xDF1AF8B5D56542FA) in decompiled scripts. From my observations, I have noticed that while being ragdolled you are not able to get up but you can still run. Your legs can also bend.
function SetEnableBoundAnkles(ped, toggle)
	return _in(0xC52E0F855C58FC2E, ped, toggle)
end

--- ped can not pull out a weapon when true
function SetEnableHandcuffs(ped, toggle)
	return _in(0xDF1AF8B5D56542FA, ped, toggle)
end

function SetEnablePedEnveffScale(ped, toggle)
	return _in(0xD2C5AA0C0E8D0F1E, ped, toggle)
end

--- Enables diving motion when underwater.
function SetEnableScuba(ped, toggle)
	return _in(0xF99F62004024D506, ped, toggle)
end

--- NativeDB Introduced: v1493
function SetEnableScubaGearLight(ped, toggle)
	return _in(0xEE2476B9EE4A094F, ped, toggle)
end

--- Enable/Disables global slipstream physics
function SetEnableVehicleSlipstreaming(toggle)
	return _in(0xE6C0C80B8C867537, toggle)
end
N_0xe6c0c80b8c867537 = SetEnableVehicleSlipstreaming

--- This native sets the entity's alpha level.
-- @param entity The entity to change the alpha for.
-- @param alphaLevel The alpha level ranges from 0 to 255, but changes occur every 20% (every 51).
-- @param skin Whether or not to change the alpha of the entity's skin.
function SetEntityAlpha(entity, alphaLevel, skin)
	return _in(0x44A0870B7E92D7C0, entity, alphaLevel, skin)
end

function SetEntityAlwaysPrerender(entity, toggle)
	return _in(0xACAD101E1FB66689, entity, toggle)
end

--- NativeDB Introduced: v2372
function SetEntityAngularVelocity(entity, x, y, z)
	return _in(0x8339643499D1222E, entity, x, y, z)
end
N_0x8339643499d1222e = SetEntityAngularVelocity

--- [Animations list](https://alexguirre.github.io/animations-list/)
function SetEntityAnimCurrentTime(entity, animDictionary, animName, time)
	return _in(0x4487C259F0F70977, entity, _ts(animDictionary), _ts(animName), time)
end

function SetEntityAnimSpeed(entity, animDictionary, animName, speedMultiplier)
	return _in(0x28D1A16553C51776, entity, _ts(animDictionary), _ts(animName), speedMultiplier)
end

--- Makes the specified entity (ped, vehicle or object) persistent. Persistent entities will not automatically be removed by the engine.
-- p1 has no effect when either its on or off
-- maybe a quick disassembly will tell us what it does
-- p2 has no effect when either its on or off
-- maybe a quick disassembly will tell us what it does
function SetEntityAsMissionEntity(entity, p1, p2)
	return _in(0xAD738C3085FE7E11, entity, p1, p2)
end

--- Marks the specified entity (ped, vehicle or object) as no longer needed.
-- Entities marked as no longer needed, will be deleted as the engine sees fit.
function SetEntityAsNoLongerNeeded(entity)
	return _in(0xB736A491E64A32CF, _ii(entity) --[[ may be optional ]])
end

function SetEntityCanBeDamaged(entity, toggle)
	return _in(0x1760FFA8AB074D66, entity, toggle)
end

function SetEntityCanBeDamagedByRelationshipGroup(entity, bCanBeDamaged, relGroup)
	return _in(0xE22D8FDE858B8119, entity, bCanBeDamaged, relGroup)
end

--- Sets whether the entity can be targeted without being in line-of-sight.
function SetEntityCanBeTargetedWithoutLos(entity, toggle)
	return _in(0xD3997889736FD899, entity, toggle)
end

--- True means it can be deleted by the engine when switching lobbies/missions/etc, false means the script is expected to clean it up.
function SetEntityCleanupByEngine(entity, toggle)
	return _in(0x3910051CCECDB00C, entity, toggle)
end
N_0x3910051ccecdb00c = SetEntityCleanupByEngine
SetEntityRegister = SetEntityCleanupByEngine
SetEntitySomething = SetEntityCleanupByEngine

function SetEntityCollision(entity, toggle, keepPhysics)
	return _in(0x1A9205C1B9EE827F, entity, toggle, keepPhysics)
end

function SetEntityCompletelyDisableCollision(entity, toggle, keepPhysics)
	return _in(0x9EBC85ED0FFFE51C, entity, toggle, keepPhysics)
end
N_0x9ebc85ed0fffe51c = SetEntityCompletelyDisableCollision
SetEntityCollision_2 = SetEntityCompletelyDisableCollision

--- Sets the coordinates (world position) for a specified entity, offset by the radius of the entity on the Z axis.
-- @param entity The entity to change coordinates for.
-- @param xPos The X coordinate.
-- @param yPos The Y coordinate.
-- @param zPos The Z coordinate, ground level.
-- @param alive Unused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.
-- @param deadFlag Whether to disable physics for dead peds, too, and not just living peds.
-- @param ragdollFlag A special flag used for ragdolling peds.
-- @param clearArea Whether to clear any entities in the target area.
function SetEntityCoords(entity, xPos, yPos, zPos, alive, deadFlag, ragdollFlag, clearArea)
	return _in(0x06843DA7060A026B, entity, xPos, yPos, zPos, alive, deadFlag, ragdollFlag, clearArea)
end

--- Sets the coordinates (world position) for a specified entity.
-- @param entity The entity to change coordinates for.
-- @param xPos The X coordinate.
-- @param yPos The Y coordinate.
-- @param zPos The Z coordinate, origin level.
-- @param alive Unused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.
-- @param deadFlag Whether to disable physics for dead peds, too, and not just living peds.
-- @param ragdollFlag A special flag used for ragdolling peds.
function SetEntityCoordsNoOffset(entity, xPos, yPos, zPos, alive, deadFlag, ragdollFlag)
	return _in(0x239A3351AC1DA385, entity, xPos, yPos, zPos, alive, deadFlag, ragdollFlag)
end

function SetEntityCoordsWithoutPlantsReset(entity, xPos, yPos, zPos, alive, deadFlag, ragdollFlag, clearArea)
	return _in(0x621873ECE1178967, entity, xPos, yPos, zPos, alive, deadFlag, ragdollFlag, clearArea)
end
SetEntityCoords_2 = SetEntityCoordsWithoutPlantsReset

--- SET_ENTITY_*
function SetEntityDecalsDisabled(entity, p1)
	return _in(0x2C2E3DC128F44309, entity, p1)
end
N_0x2c2e3dc128f44309 = SetEntityDecalsDisabled

--- Draws an outline around a given entity. This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param entity A valid entity handle.
-- @param enabled Whether or not to draw an outline.
function SetEntityDrawOutline(entity, enabled)
	return _in(0x76180407, entity, enabled)
end

--- Sets color for entity outline. `255, 0, 255, 255` by default.
-- @param red Red component of color.
-- @param green Green component of color.
-- @param blue Blue component of color.
-- @param alpha Alpha component of color, ignored for shader `0`.
function SetEntityDrawOutlineColor(red, green, blue, alpha)
	return _in(0xb41a56c2, red, green, blue, alpha)
end

--- Sets variant of shader that will be used to draw entity outline.
-- Variants are:
-- *   **0**: Default value, gauss shader.
-- *   **1**: 2px wide solid color outline.
-- *   **2**: Fullscreen solid color except for entity.
-- @param shader An outline shader variant.
function SetEntityDrawOutlineShader(shader)
	return _in(0x5261a01a, shader)
end

function SetEntityDynamic(entity, toggle)
	return _in(0x1718DE8E3F2823CA, entity, toggle)
end

function SetEntityHasGravity(entity, toggle)
	return _in(0x4A4722448F18EEF5, entity, toggle)
end

--- Set the heading of an entity in degrees also known as "Yaw".
-- @param entity The entity to set the heading for.
-- @param heading The heading in degrees.
function SetEntityHeading(entity, heading)
	return _in(0x8E2530AA8ADA980E, entity, heading)
end

--- health >= 0
-- male ped ~= 100 - 200
-- female ped ~= 0 - 100
-- ```
-- NativeDB Added Parameter 3: int p2
-- ```
function SetEntityHealth(entity, health)
	return _in(0x6B76DC1F3AE6E6A3, entity, health)
end

function SetEntityIconColor(entity, red, green, blue, alpha)
	return _in(0x1D5F595CCAE2E238, entity, red, green, blue, alpha)
end

function SetEntityIconVisibility(entity, toggle)
	return _in(0xE0E8BEECCA96BA31, entity, toggle)
end

--- Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions and the tazer animation won't apply either.
-- If you use this for a ped and you want Ragdoll to stay enabled, then do:
-- *(DWORD *)(pedAddress + 0x188) |= (1 << 9);
-- Use this if you want to get the invincibility status:
-- bool IsPedInvincible(Ped ped)
-- {
-- auto addr = getScriptHandleBaseAddress(ped);
-- if (addr)
-- {
-- DWORD flag = *(DWORD *)(addr + 0x188);
-- return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);
-- }
-- return false;
-- }
function SetEntityInvincible(entity, toggle)
	return _in(0x3882114BDE571AD4, entity, toggle)
end

function SetEntityIsTargetPriority(entity, p1, p2)
	return _in(0xEA02E132F5C68722, entity, p1, p2)
end

function SetEntityLights(entity, toggle)
	return _in(0x7CFBA6A80BDF3874, entity, toggle)
end

--- Loads collision grid for an entity spawned outside of a player's loaded area. This allows peds to execute tasks rather than sit dormant because of a lack of a physics grid.
-- Certainly not the main usage of this native but when set to true for a Vehicle, it will prevent the vehicle to explode if it is spawned far away from the player.
-- ```
-- NativeDB Added Parameter 3: Any p2
-- ```
function SetEntityLoadCollisionFlag(entity, toggle)
	return _in(0x0DC7CABAB1E9B67E, entity, toggle)
end

--- Sets the provided entity not visible for yourself for the current frame.
function SetEntityLocallyInvisible(entity)
	return _in(0xE135A9FF3F5D05D8, entity)
end

--- Sets the provided entity visible for yourself for the current frame.
-- @param entity The entity to set locally visible.
function SetEntityLocallyVisible(entity)
	return _in(0x241E289B5C059EDC, entity)
end

--- LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).
function SetEntityLodDist(entity, value)
	return _in(0x5927F96A78577363, entity, value)
end

--- Sets an entity's matrix. Arguments are in the same order as with GET_ENTITY_MATRIX.
-- @param entity A valid entity handle.
function SetEntityMatrix(entity, forwardX, forwardY, forwardZ, rightX, rightY, rightZ, upX, upY, upZ, atX, atY, atZ)
	return _in(0xfb0639b, entity, forwardX, forwardY, forwardZ, rightX, rightY, rightZ, upX, upY, upZ, atX, atY, atZ)
end

--- For instance: ENTITY::SET_ENTITY_MAX_HEALTH(PLAYER::PLAYER_PED_ID(), 200); // director_mode.c4: 67849
function SetEntityMaxHealth(entity, value)
	return _in(0x166E7CF68597D8B5, entity, value)
end

function SetEntityMaxSpeed(entity, speed)
	return _in(0x0E46A3FCBDE2A1B1, entity, speed)
end

function SetEntityMotionBlur(entity, toggle)
	return _in(0x295D82A8559F9150, entity, toggle)
end

--- Calling this function disables collision between two entities.
-- The importance of the order for entity1 and entity2 is unclear.
-- The third parameter, `thisFrame`, decides whether the collision is to be disabled until it is turned back on, or if it's just this frame.
function SetEntityNoCollisionEntity(entity1, entity2, thisFrameOnly)
	return _in(0xA53ED5520C07654A, entity1, entity2, thisFrameOnly)
end

function SetEntityOnlyDamagedByPlayer(entity, toggle)
	return _in(0x79F020FF9EDC0748, entity, toggle)
end

function SetEntityOnlyDamagedByRelationshipGroup(entity, p1, relationshipHash)
	return _in(0x7022BD828FA0B082, entity, p1, _ch(relationshipHash))
end

function SetEntityProofUnk(entity, toggle)
	return _in(0x15F944730C832252, entity, toggle)
end
N_0x15f944730c832252 = SetEntityProofUnk

--- Enable / disable each type of damage.
-- --------------
-- p7 is to to '1' in am_mp_property_ext/int: entity::set_entity_proofs(uParam0->f_19, true, true, true, true, true, true, 1, true);
function SetEntityProofs(entity, bulletProof, fireProof, explosionProof, collisionProof, meleeProof, steamProof, p7, drownProof)
	return _in(0xFAEE099C6F890BB8, entity, bulletProof, fireProof, explosionProof, collisionProof, meleeProof, steamProof, p7, drownProof)
end

--- w is the correct parameter name!
function SetEntityQuaternion(entity, x, y, z, w)
	return _in(0x77B21BE7AC540F07, entity, x, y, z, w)
end

function SetEntityRecordsCollisions(entity, toggle)
	return _in(0x0A50A1EEDAD01E65, entity, toggle)
end

function SetEntityRenderScorched(entity, toggle)
	return _in(0x730F5F8D3F0F2050, entity, toggle)
end

function SetEntityRotation(entity, pitch, roll, yaw, rotationOrder, p5)
	return _in(0x8524A8B0171D5E07, entity, pitch, roll, yaw, rotationOrder, p5)
end

--- Example here: www.gtaforums.com/topic/830463-help-with-turning-lights-green-and-causing-peds-to-crash-into-each-other/#entry1068211340
-- 0 = green
-- 1 = red
-- 2 = yellow
-- 3 = reset changes
-- changing lights may not change the behavior of vehicles
function SetEntityTrafficlightOverride(entity, state)
	return _in(0x57C5DB656185EAC4, entity, state)
end

--- Note that the third parameter(denoted as z) is "up and down" with positive numbers encouraging upwards movement.
function SetEntityVelocity(entity, x, y, z)
	return _in(0x1C99BB7B6E96D16F, entity, x, y, z)
end

--- Toggle the visibility of a given entity.
-- @param entity The entity to change the visibility of
-- @param toggle Whether or not the entity will be visible
-- @param unk Always 0 in scripts
function SetEntityVisible(entity, toggle, unk)
	return _in(0xEA1C610A04DB6BBB, entity, toggle, unk)
end

function SetEntityVisibleInCutscene(p0, p1, p2)
	return _in(0xE0031D3C8F36AB82, p0, p1, p2)
end

function SetEveryoneIgnorePlayer(player, toggle)
	return _in(0x8EEDA153AD141BA4, player, toggle)
end

--- Groups found in the scripts used with this native:
-- "AMMUNATION",
-- "QUARRY",
-- "Triathlon_1",
-- "Triathlon_2",
-- "Triathlon_3"
function SetExclusiveScenarioGroup(scenarioGroup)
	return _in(0x535E97E1F7FC0C6A, _ts(scenarioGroup))
end

function SetExplosiveAmmoThisFrame(player)
	return _in(0xA66C71C98D5F2CFB, player)
end

function SetExplosiveMeleeThisFrame(player)
	return _in(0xFF1BED81BFDC0FE0, player)
end

function SetExtraTimecycleModifier(modifierName)
	return _in(0x5096FD9CCB49056D, _ts(modifierName))
end

--- The same as [`SetTimecycleModifierStrength`](#\_0x82E7FFCD5B2326B3) but for the secondary tiemcycle modifier.
function SetExtraTimecycleModifierStrength(strength)
	return _in(0x2C328AF17210F009, strength)
end
N_0x2c328af17210f009 = SetExtraTimecycleModifierStrength

--- Clipsets:
-- "facials@gen_female@base"
-- "facials@gen_male@base"
-- "facials@p_m_zero@base"
-- Typically followed with [SET_FACIAL_IDLE_ANIM_OVERRIDE](#\_0xFFC24B988B938B38):
-- "mood_drunk\_1"
-- "mood_stressed\_1"
-- "mood_happy\_1"
-- "mood_talking\_1"
-- ```
-- NativeDB Introduced: v1493
-- ```
function SetFacialClipsetOverride(ped, animDict)
	return _in(0x5687C7F05B39E401, ped, _ts(animDict))
end
N_0x5687c7f05b39e401 = SetFacialClipsetOverride

function SetFacialIdleAnimOverride(ped, animName, animDict)
	return _in(0xFFC24B988B938B38, ped, _ts(animName), _ts(animDict))
end

--- Sets whether the game should fade in after the player dies or is arrested.
function SetFadeInAfterDeathArrest(toggle)
	return _in(0xDA66D2796BA33F12, toggle)
end

function SetFadeInAfterLoad(toggle)
	return _in(0xF3D78F59DFE18D79, toggle)
end

--- Sets whether the game should fade out after the player is arrested.
function SetFadeOutAfterArrest(toggle)
	return _in(0x1E0B4DC0D990A4E7, toggle)
end

--- Sets whether the game should fade out after the player dies.
function SetFadeOutAfterDeath(toggle)
	return _in(0x4A18E01DF2C87B86, toggle)
end

--- Sets a visually fake wanted level on the user interface. Used by Rockstar's scripts to "override" regular wanted levels and make custom ones while the real wanted level and multipliers are still in effect.
-- Max is 6, anything above this makes it just 6. Also the mini-map gets the red & blue flashing effect.
function SetFakeWantedLevel(fakeWantedLevel)
	return _in(0x1454F2448DE30163, fakeWantedLevel)
end

function SetFarDrawVehicles(toggle)
	return _in(0x26324F33423F3CC3, toggle)
end

function SetFireAmmoThisFrame(player)
	return _in(0x11879CDD803D30F4, player)
end

--- SET_FIRE_\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function SetFireSpreadRate(p0)
	return _in(0x8F390AC4155099BA, p0)
end

function SetFirstPersonAimCamNearClipThisUpdate(distance)
	return _in(0x0AF7B437918103B3, distance)
end
N_0x0af7b437918103b3 = SetFirstPersonAimCamNearClipThisUpdate
SetFirstPersonCamNearClip = SetFirstPersonAimCamNearClipThisUpdate

function SetFirstPersonAimCamZoomFactor(zoomFactor)
	return _in(0x70894BD0915C5BCA, zoomFactor)
end
N_0x70894bd0915c5bca = SetFirstPersonAimCamZoomFactor

function SetFirstPersonCamPitchRange(minAngle, maxAngle)
	return _in(0xBCFC632DB7673BF0, minAngle, maxAngle)
end
N_0xbcfc632db7673bf0 = SetFirstPersonCamPitchRange

--- Purpose of p0 and p1 unknown.
function SetFlash(p0, p1, fadeIn, duration, fadeOut)
	return _in(0x0AB84296FED9CFC6, p0, p1, fadeIn, duration, fadeOut)
end

--- Enables/disables flashlight on ped's weapon.
-- ```
-- NativeDB Introduced: v2060
-- ```
function SetFlashLightEnabled(ped, toggle)
	return _in(0x988DB6FE9B3AC000, ped, toggle)
end

function SetFlashLightFadeDistance(distance)
	return _in(0xCEA66DAD478CD39B, distance, _ri)
end

--- Allows Weapon-Flashlight beams to stay visible while moving. Normally it only stays on while aiming.
-- @param state On/Off
function SetFlashLightKeepOnWhileMoving(state)
	return _in(0x7635b349, state)
end

function SetFloatingHelpTextScreenPosition(hudIndex, x, y)
	return _in(0x7679CC1BCEBE3D4C, hudIndex, x, y)
end
N_0x7679cc1bcebe3d4c = SetFloatingHelpTextScreenPosition

function SetFloatingHelpTextStyle(hudIndex, p1, p2, p3, p4, p5)
	return _in(0x788E7FD431BD67F1, hudIndex, p1, p2, p3, p4, p5)
end
N_0x788e7fd431bd67f1 = SetFloatingHelpTextStyle

function SetFloatingHelpTextToEntity(hudIndex, entity, offsetX, offsetY)
	return _in(0xB094BC1DB4018240, hudIndex, entity, offsetX, offsetY)
end
N_0xb094bc1db4018240 = SetFloatingHelpTextToEntity

function SetFloatingHelpTextWorldPosition(hudIndex, x, y, z)
	return _in(0x784BA7E0ECEB4178, hudIndex, x, y, z)
end
N_0x784ba7e0eceb4178 = SetFloatingHelpTextWorldPosition

function SetFlyCamCoordAndConstrain(cam, x, y, z)
	return _in(0xC91C6C55199308CA, cam, x, y, z)
end
N_0xc91c6c55199308ca = SetFlyCamCoordAndConstrain

function SetFlyCamHorizontalResponse(cam, p1, p2, p3)
	return _in(0x503F5920162365B2, cam, p1, p2, p3)
end
N_0x503f5920162365b2 = SetFlyCamHorizontalResponse

function SetFlyCamMaxHeight(cam, height)
	return _in(0xF9D02130ECDD1D77, cam, height)
end
N_0xf9d02130ecdd1d77 = SetFlyCamMaxHeight
SetCameraRange = SetFlyCamMaxHeight

function SetFlyCamVerticalSpeedMultiplier(cam, p1, p2, p3)
	return _in(0xE827B9382CFB41BA, cam, p1, p2, p3)
end
N_0xe827b9382cfb41ba = SetFlyCamVerticalSpeedMultiplier

--- Sets some in-game parameters which is used for checks is ped needs to fly through windscreen after a crash.
-- @param vehMinSpeed Vehicle minimum speed (default 35.0).
-- @param unkMinSpeed Unknown minimum speed (default 40.0).
-- @param unkModifier Unknown modifier (default 17.0).
-- @param minDamage Minimum damage (default 2000.0).
-- @return A bool indicating if parameters was set successfully.
function SetFlyThroughWindscreenParams(vehMinSpeed, unkMinSpeed, unkModifier, minDamage)
	return _in(0x4d3118ed, vehMinSpeed, unkMinSpeed, unkModifier, minDamage, _r)
end

--- It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.
function SetFocusEntity(entity)
	return _in(0x198F77705FA0931D, entity)
end

--- Override the area where the camera will render the terrain.
-- p3, p4 and p5 are usually set to 0.0
function SetFocusPosAndVel(x, y, z, offsetX, offsetY, offsetZ)
	return _in(0xBB7454BAFF08FE25, x, y, z, offsetX, offsetY, offsetZ)
end
SetFocusArea = SetFocusPosAndVel

--- From the scripts:
-- CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_ATTACHED_TO_ROPE_CAMERA", 0);
-- CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_ON_EXILE1_LADDER_CAMERA", 1500);
-- CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 0);
-- CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 3000);
-- CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_FAMILY5_CAMERA", 0);
-- CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 0);
function SetFollowPedCamThisUpdate(camName, p1)
	return _in(0x44A113DD6FFC48D1, _ts(camName), p1, _r)
end
SetFollowPedCamCutsceneChat = SetFollowPedCamThisUpdate

--- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
function SetFollowPedCamViewMode(viewMode)
	return _in(0x5A4F9EDF1673F704, viewMode)
end

--- NativeDB Introduced: v1365
-- @param seatIndex See [IS_TURRET_SEAT](#\_0xE33FFA906CE74880)
function SetFollowTurretSeatCam(seatIndex)
	return _in(0x5C90CAB09951A12F, seatIndex)
end
N_0x5c90cab09951a12f = SetFollowTurretSeatCam

--- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
function SetFollowVehicleCamViewMode(viewMode)
	return _in(0xAC253D7842768F48, viewMode)
end

--- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
function SetFollowVehicleCamZoomLevel(zoomLevel)
	return _in(0x19464CB6E4078C8A, zoomLevel)
end

function SetForceFootstepUpdate(ped, toggle)
	return _in(0x129466ED55140F8D, ped, toggle)
end
N_0x129466ed55140f8d = SetForceFootstepUpdate

function SetForceHdVehicle(vehicle, toggle)
	return _in(0x97CE68CB032583F0, vehicle, toggle)
end
N_0x97ce68cb032583f0 = SetForceHdVehicle

function SetForceObjectThisFrame(x, y, z, p3)
	return _in(0xF538081986E49E9D, x, y, z, p3)
end

--- Forces footstep tracks on all surfaces.
-- USE_/USING_*
function SetForcePedFootstepsTracks(toggle)
	return _in(0xAEEDAD1420C65CC0, toggle)
end

--- NativeDB Introduced: v1180
function SetForcePlayerToJump(player)
	return _in(0xA1183BCFEE0F93D1, player)
end
N_0xa1183bcfee0f93d1 = SetForcePlayerToJump

function SetForceStepType(ped, p1, type, p3)
	return _in(0xCB968B53FC7F916D, ped, p1, type, p3)
end
N_0xcb968b53fc7f916d = SetForceStepType

--- Forces vehicle trails on all surfaces.
-- USE_/USING_*
function SetForceVehicleTrails(toggle)
	return _in(0x4CC7F0FEA5283FE0, toggle)
end

--- X,Y position of boat is frozen in place when anchored and its engine disabled, only the Z value changes. Requires 0xE3EBAAE484798530 to be set to true.
-- SET_FORCED_ZENITH_QUADTREE?
function SetForcedBoatLocationWhenAnchored(vehicle, toggle)
	return _in(0xB28B1FE5BFADD7F5, vehicle, toggle)
end
N_0xb28b1fe5bfadd7f5 = SetForcedBoatLocationWhenAnchored

--- 0.0 = Lowest 1.0 = Highest. This is best to be used if you wanna pick-up a car since un-realistically on GTA V forklifts can't pick up much of anything due to vehicle mass. If you put this under a car then set it above 0.0 to a 'lifted-value' it will raise the car with no issue lol
function SetForkliftForkHeight(vehicle, height)
	return _in(0x37EBBF3117BD6A25, vehicle, height)
end
N_0x37ebbf3117bd6a25 = SetForkliftForkHeight

function SetFrontendActive(active)
	return _in(0x745711A75AB09277, active)
end

function SetFrontendRadioActive(active)
	return _in(0xF7F26C6E9CC9EBB8, active)
end

--- Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused which means you will lose control and the game remains in paused mode until you exit GTA5.exe
function SetGamePaused(toggle)
	return _in(0x577D1284D6873711, toggle)
end

function SetGamePausesForStreaming(toggle)
	return _in(0x717CD6E6FAEBBEDC, toggle)
end

function SetGameplayCamFollowPedThisUpdate(ped)
	return _in(0x8BBACBF51DA047A8, ped)
end
N_0x8bbacbf51da047a8 = SetGameplayCamFollowPedThisUpdate

--- Sets gameplay camera to hash
-- ```
-- ```
-- NativeDB Introduced: v1180
function SetGameplayCamHash(camName)
	return _in(0x425A920FDB9A0DDA, _ts(camName))
end
N_0x425a920fdb9a0dda = SetGameplayCamHash

function SetGameplayCamRawPitch(pitch)
	return _in(0x759E13EBC1C15C5A, pitch)
end

--- Does nothing
-- ```
-- ```
-- NativeDB Added Parameter 2: Any p1
function SetGameplayCamRawYaw(yaw)
	return _in(0x103991D4A307D472, yaw)
end

--- Sets the camera position relative to heading in float from -360 to +360.
-- Heading is alwyas 0 in aiming camera.
function SetGameplayCamRelativeHeading(heading)
	return _in(0xB4EC2312F4E5B1F1, heading)
end

--- This native sets the camera's pitch (rotation on the x-axis).
-- @param angle the angle to rotate the camera by
-- @param scalingFactor always seems to be set to 1.0 in native calls
function SetGameplayCamRelativePitch(angle, scalingFactor)
	return _in(0x6D0858B8EDFD2B7D, angle, scalingFactor)
end

function SetGameplayCamRelativeRotation(roll, pitch, yaw)
	return _in(0x48608C3464F58AB4, roll, pitch, yaw)
end
N_0x48608c3464f58ab4 = SetGameplayCamRelativeRotation

--- Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake. Used in script "drunk_controller.ysc.c4" to simulate making the player drunk.
function SetGameplayCamShakeAmplitude(amplitude)
	return _in(0xA87E00932DB4D85D, amplitude)
end

--- From b617 scripts:
-- CAM::_21E253A7F8DA5DFB("DINGHY");
-- CAM::_21E253A7F8DA5DFB("ISSI2");
-- CAM::_21E253A7F8DA5DFB("SPEEDO");
function SetGameplayCamVehicleCamera(vehicleName)
	return _in(0x21E253A7F8DA5DFB, _ts(vehicleName))
end
N_0x21e253a7f8da5dfb = SetGameplayCamVehicleCamera

function SetGameplayCamVehicleCameraName(vehicleModel)
	return _in(0x11FA5D3479C7DD47, _ch(vehicleModel))
end
N_0x11fa5d3479c7dd47 = SetGameplayCamVehicleCameraName

function SetGameplayCoordHint(x, y, z, duration, blendOutDuration, blendInDuration, unk)
	return _in(0xD51ADCD2D8BC0FB3, x, y, z, duration, blendOutDuration, blendInDuration, unk)
end

--- p6 & p7 - possibly length or time
function SetGameplayEntityHint(entity, xOffset, yOffset, zOffset, p4, p5, p6, p7, p8)
	return _in(0x189E955A8313E298, entity, xOffset, yOffset, zOffset, p4, p5, p6, p7, p8)
end

function SetGameplayHintAnimCloseup(toggle)
	return _in(0xE3433EADAAF7EE40, toggle)
end
GetIsMultiplayerBrief = SetGameplayHintAnimCloseup
N_0xe3433eadaaf7ee40 = SetGameplayHintAnimCloseup

function SetGameplayHintAnimOffsetx(xOffset)
	return _in(0x5D7B620DAE436138, xOffset)
end
N_0x5d7b620dae436138 = SetGameplayHintAnimOffsetx

function SetGameplayHintAnimOffsety(yOffset)
	return _in(0xC92717EF615B6704, yOffset)
end
N_0xc92717ef615b6704 = SetGameplayHintAnimOffsety

function SetGameplayHintBaseOrbitPitchOffset(value)
	return _in(0xD1F8363DFAD03848, value)
end
N_0xd1f8363dfad03848 = SetGameplayHintBaseOrbitPitchOffset
SetGameplayHintAngle = SetGameplayHintBaseOrbitPitchOffset

function SetGameplayHintFollowDistanceScalar(value)
	return _in(0xF8BDBF3D573049A1, value)
end
N_0xf8bdbf3d573049a1 = SetGameplayHintFollowDistanceScalar
SetGameplayHintAnimOffsetz = SetGameplayHintFollowDistanceScalar

function SetGameplayHintFov(FOV)
	return _in(0x513403FB9C56211F, FOV)
end

function SetGameplayObjectHint(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0x83E87508A2CA2AC6, p0, p1, p2, p3, p4, p5, p6, p7)
end

function SetGameplayPedHint(p0, x1, y1, z1, p4, duration, blendOutDuration, blendInDuration)
	return _in(0x2B486269ACD548D3, p0, x1, y1, z1, p4, duration, blendOutDuration, blendInDuration)
end

--- Focuses the camera on the specified vehicle.
-- @param vehicle The vehicle to focus on.
-- @param offsetX Position offset X
-- @param offsetY Position offset Y
-- @param offsetZ Position offset Z
-- @param time Effect duration
-- @param easeInTime Effect fade in duration
-- @param easeOutTime EFfect fade out duration
function SetGameplayVehicleHint(vehicle, offsetX, offsetY, offsetZ, p4, time, easeInTime, easeOutTime)
	return _in(0xA2297E18F3E71C2E, vehicle, offsetX, offsetY, offsetZ, p4, time, easeInTime, easeOutTime)
end

function SetGarbageTrucks(toggle)
	return _in(0x2AFD795EEAC8D30D, toggle)
end

--- Sets the alpha value used by [`_SET_LOCAL_PLAYER_AS_GHOST`](#\_0x5FFE9B4144F9712F), [`SET_NETWORK_VEHICLE_AS_GHOST`](#\_0x6274C4712850841E), and [`_NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER`](#\_0x4BA166079D658ED4).
-- 'Solidness' cannot be achieved using 255 - this will have the opposite effect of it defaulting to 128 it seems (or just having no effect at all).
-- @param alpha A value between 1 and 254. Default: 128
function SetGhostedEntityAlpha(alpha)
	return _in(0x658500AE6D723A7E, alpha)
end
N_0x658500ae6d723a7e = SetGhostedEntityAlpha

--- Birds will try to reach the given height.
function SetGlobalMinBirdFlightHeight(height)
	return _in(0x6C6B148586F934F7, height)
end

function SetGpsActive(active)
	return _in(0x3BD3F52BA9B1E4E8, active)
end

function SetGpsCustomRouteRender(toggle, radarThickness, mapThickness)
	return _in(0x900086F371220B6F, toggle, radarThickness, mapThickness)
end
N_0x900086f371220b6f = SetGpsCustomRouteRender

function SetGpsDisabledZone(x1, y1, z1, x2, y2, z2)
	return _in(0xDC20483CD3DD5201, x1, y1, z1, x2, y2, z2)
end

--- Disables the GPS route displayed on the minimap while within a certain zone (area). When in a disabled zone and creating a waypoint, the GPS route is not shown on the minimap until you are outside of the zone. When disabled, the direct distance is shown on minimap opposed to distance to travel. Seems to only work before setting a waypoint.
-- You can clear the disabled zone with CLEAR_GPS_DISABLED_ZONE_AT_INDEX.
-- **Setting a waypoint at the same coordinate:**
-- Disabled Zone: <https://i.imgur.com/P9VUuxM.png>
-- Enabled Zone (normal): <https://i.imgur.com/BPi24aw.png>
-- @param x1 X coordinate of first vector.
-- @param y1 Y coordinate of first vector.
-- @param z1 Z coordinate of first vector.
-- @param x2 X coordinate of second vector.
-- @param y2 Y coordinate of second vector.
-- @param z2 Z coordinate of second vector.
-- @param index Index of zone.
function SetGpsDisabledZoneAtIndex(x1, y1, z1, x2, y2, z2, index)
	return _in(0xD0BC1C6FB18EE154, x1, y1, z1, x2, y2, z2, index)
end
N_0xd0bc1c6fb18ee154 = SetGpsDisabledZoneAtIndex

--- Only the script that originally called SET_GPS_FLAGS can set them again. Another script cannot set the flags, until the first script that called it has called CLEAR_GPS_FLAGS.
-- Doesn't seem like the flags are actually read by the game at all.
function SetGpsFlags(p0, p1)
	return _in(0x5B440763A4C8D15B, p0, p1)
end

function SetGpsFlashes(toggle)
	return _in(0x320D0E0D936A0E9B, toggle)
end

function SetGpsMultiRouteRender(toggle)
	return _in(0x3DDA37128DD1ACA8, toggle)
end
N_0x3dda37128dd1aca8 = SetGpsMultiRouteRender

--- level can be from 0 to 3
-- 0: 9.8
-- 1: 2.4
-- 2: 0.1 - very low
-- 3: 0.0
function SetGravityLevel(level)
	return _in(0x740E14FAD5842351, level)
end

--- 0: Freedom to move
-- 1: Circle Around Leader
-- 2: Alternative Circle Around Leader
-- 3: Line, with Leader at center
-- 4: Arrow Formation
-- 5: "V" Formation
-- 6: Line Follow Formation
-- 7: Single Formation
-- 8: Pairwise
function SetGroupFormation(groupId, formationType)
	return _in(0xCE2F5FC3AF7E8C1E, groupId, formationType)
end

function SetGroupFormationSpacing(groupId, p1, p2, p3)
	return _in(0x1D9D45004C28C916, groupId, p1, p2, p3)
end

--- Sets the range at which members will automatically leave the group.
function SetGroupSeparationRange(groupHandle, separationRange)
	return _in(0x4102C7858CFEE4E4, groupHandle, separationRange)
end

function SetHandleRockstarMessageViaScript(toggle)
	return _in(0xBFA0A56A817C6C7D, toggle)
end
N_0xbfa0a56a817c6c7d = SetHandleRockstarMessageViaScript

--- Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
-- Example: `SetHandlingField('AIRTUG', 'CHandlingData', 'fSteeringLock', 360.0)`
-- @param vehicle The vehicle class to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The value to set.
function SetHandlingField(vehicle, class_, fieldName, value)
	return _in(0xfe8064e3, _ts(vehicle), _ts(class_), _ts(fieldName), value)
end

--- Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
-- Example: `SetHandlingFloat('AIRTUG', 'CHandlingData', 'fSteeringLock', 360.0)`
-- @param vehicle The vehicle class to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The floating-point value to set.
function SetHandlingFloat(vehicle, class_, fieldName, value)
	return _in(0x90dd01c, _ts(vehicle), _ts(class_), _ts(fieldName), value)
end

--- Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
-- @param vehicle The vehicle class to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The integer value to set.
function SetHandlingInt(vehicle, class_, fieldName, value)
	return _in(0x8ab3f46c, _ts(vehicle), _ts(class_), _ts(fieldName), value)
end

--- Sets a global handling override for a specific vehicle class. The name is supposed to match the `handlingName` field from handling.meta.
-- Example: `SetHandlingVector('AIRTUG', 'CHandlingData', 'vecCentreOfMassOffset', vector3(0.0, 0.0, -5.0))`
-- @param vehicle The vehicle class to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The Vector3 value to set.
function SetHandlingVector(vehicle, class_, fieldName, value)
	return _in(0x7f9d543, _ts(vehicle), _ts(class_), _ts(fieldName), value)
end

--- Sets profile setting 866
-- SET_*
function SetHasContentUnlocksFlags(value)
	return _in(0xDAC073C7901F9E15, value)
end
N_0xdac073c7901f9e15 = SetHasContentUnlocksFlags

function SetHdArea(x, y, z, radius)
	return _in(0xB85F26619073E775, x, y, z, radius)
end

--- Preview: https://gfycat.com/MaleRareAmazonparrot
-- @param id From 0 to 3.
function SetHeadBlendPaletteColor(ped, r, g, b, id)
	return _in(0xCC9682B8951C5229, ped, r, g, b, id)
end
N_0xcc9682b8951c5229 = SetHeadBlendPaletteColor

function SetHealthHudDisplayValues(health, capacity, wasAdded)
	return _in(0x3F5CC444DCAAA8F2, health, capacity, wasAdded)
end
N_0x3f5cc444dcaaa8f2 = SetHealthHudDisplayValues

--- Equivalent of SET_HELI_BLADES_SPEED(vehicleHandle, 1.0f);
-- this native works on planes to?
function SetHeliBladesFullSpeed(vehicle)
	return _in(0xA178472EBB8AE60D, vehicle)
end

--- Sets the speed of the helicopter blades in percentage of the full speed.
-- vehicleHandle: The helicopter.
-- speed: The speed in percentage, 0.0f being 0% and 1.0f being 100%.
function SetHeliBladesSpeed(vehicle, speed)
	return _in(0xFD280B4D7F3ABC4D, vehicle, speed)
end

function SetHeliMainRotorHealth(vehicle, health)
	return _in(0x4056EA1105F5ABD7, vehicle, health)
end
N_0x4056ea1105f5abd7 = SetHeliMainRotorHealth

function SetHeliTailExplodeThrowDashboard(vehicle, p1)
	return _in(0x3EC8BF18AA453FE9, vehicle, p1)
end
WasCounterActivated = SetHeliTailExplodeThrowDashboard
N_0x3ec8bf18aa453fe9 = SetHeliTailExplodeThrowDashboard

function SetHeliTailRotorHealth(vehicle, health)
	return _in(0xFE205F38AAA58E5B, vehicle, health)
end
N_0xfe205f38aaa58e5b = SetHeliTailRotorHealth

function SetHeliTurbulenceScalar(vehicle, p1)
	return _in(0xE6F13851780394DA, vehicle, p1)
end
N_0xe6f13851780394da = SetHeliTurbulenceScalar

--- value between 0.0 and 1.0
function SetHelicopterRollPitchYawMult(helicopter, multiplier)
	return _in(0x6E0859B530A365CC, helicopter, multiplier)
end

function SetHelpMessageTextStyle(style, hudColor, alpha, p3, p4)
	return _in(0xB9C362BABECDDC7A, style, hudColor, alpha, p3, p4)
end
N_0xb9c362babecddc7a = SetHelpMessageTextStyle

function SetHidofOverride(p0, p1, nearplaneOut, nearplaneIn, farplaneOut, farplaneIn)
	return _in(0xBA3D65906822BED5, p0, p1, nearplaneOut, nearplaneIn, farplaneOut, farplaneIn)
end
N_0xba3d65906822bed5 = SetHidofOverride
SetHidofEnvBlurParams = SetHidofOverride

function SetHighFallTask(ped, duration, p2, p3)
	return _in(0x8C825BDC7741D37C, ped, duration, p2, p3)
end

function SetHornEnabled(vehicle, toggle)
	return _in(0x76D683C108594D0E, vehicle, toggle)
end

function SetHudComponentPosition(id, x, y)
	return _in(0xAABB1F56E2A17CED, id, x, y)
end

function SetHydraulicRaised(vehicle, toggle)
	return _in(0x28B18377EB6E25F6, vehicle, toggle)
end
N_0x28b18377eb6e25f6 = SetHydraulicRaised

function SetHydraulicWheelState(vehicle, state)
	return _in(0x8EA86DF356801C7D, vehicle, state)
end
N_0x8ea86df356801c7d = SetHydraulicWheelState

--- Sets vehicle wheel hydraulic states transition. Known states:
-- 0 - reset
-- 1 - raise wheel (uses value arg, works just like _SET_VEHICLE_HYDRAULIC_WHEEL_VALUE)
-- 2 - jump using wheel
function SetHydraulicWheelStateTransition(vehicle, wheelId, state, value, p4)
	return _in(0xC24075310A8B9CD1, vehicle, wheelId, state, value, p4)
end
N_0xc24075310a8b9cd1 = SetHydraulicWheelStateTransition

--- Works only on vehicles that support hydraulic.
function SetHydraulicWheelValue(vehicle, wheelId, value)
	return _in(0x84EA99C62CB3EF0C, vehicle, wheelId, value)
end
N_0x84ea99c62cb3ef0c = SetHydraulicWheelValue
SetHydraulicState = SetHydraulicWheelValue

function SetIgnoreLowPriorityShockingEvents(player, toggle)
	return _in(0x596976B02B6B5700, player, toggle)
end

function SetIgnoreNoGpsFlag(toggle)
	return _in(0x72751156E7678833, toggle)
end

--- See: SET_BLIP_ROUTE
function SetIgnoreSecondaryRouteNodes(toggle)
	return _in(0x1FC289A0C3FF470F, toggle)
end
N_0x1fc289a0c3ff470f = SetIgnoreSecondaryRouteNodes

function SetIkTarget(ped, ikIndex, entityLookAt, boneLookAt, offsetX, offsetY, offsetZ, p7, blendInDuration, blendOutDuration)
	return _in(0xC32779C16FCEECD9, ped, ikIndex, entityLookAt, boneLookAt, offsetX, offsetY, offsetZ, p7, blendInDuration, blendOutDuration)
end

function SetInVehicleCamStateThisUpdate(p0, p1)
	return _in(0xE9EA16D6E54CDCA4, p0, p1)
end
N_0xe9ea16d6e54cdca4 = SetInVehicleCamStateThisUpdate

function SetIncidentRequestedUnits(incidentId, dispatchService, numUnits)
	return _in(0xB08B85D860E7BA3C, incidentId, dispatchService, numUnits)
end
N_0xb08b85d860e7ba3c = SetIncidentRequestedUnits

--- SET_INCIDENT_*
function SetIncidentUnk(incidentId, p1)
	return _in(0xD261BA3E7E998072, incidentId, p1)
end
N_0xd261ba3e7e998072 = SetIncidentUnk

function SetInitialPlayerStation(radioStation)
	return _in(0x88795F13FACDA88D, _ts(radioStation))
end

function SetInputExclusive(padIndex, control)
	return _in(0xEDE476E5EE29EDB1, padIndex, control)
end

--- Sets an unknown flag used by CScene in determining which entities from CMapData scene nodes to draw, similar to SET_INSTANCE_PRIORITY_MODE.
function SetInstancePriorityHint(flag)
	return _in(0xC5F0A8EBD3F361CE, flag)
end
SetUnkMapFlag = SetInstancePriorityHint

--- Sets the maximum prop density and changes a loading screen flag from 'loading story mode' to 'loading GTA Online'. It causes a loading screen to show as it reloads map data.
-- @param toggle toggles the instance priority mode
function SetInstancePriorityMode(toggle)
	return _in(0x9BAE5AD2508DF078, toggle)
end
EnableMpDlcMaps = SetInstancePriorityMode
UseFreemodeMapBehavior = SetInstancePriorityMode
LowerMapPropDensity = SetInstancePriorityMode

function SetInteriorActive(interiorID, toggle)
	return _in(0xE37B76C387BE28ED, interiorID, toggle)
end

function SetInteriorEntitySetColor(interior, entitySetName, color)
	return _in(0xC1F1920BAF281317, interior, _ts(entitySetName), color)
end
SetInteriorPropColor = SetInteriorEntitySetColor

function SetInteriorPortalCornerPosition(interiorId, portalIndex, cornerIndex, posX, posY, posZ)
	return _in(0x87f43553, interiorId, portalIndex, cornerIndex, posX, posY, posZ)
end

function SetInteriorPortalEntityFlag(interiorId, portalIndex, entityIndex, flag)
	return _in(0x8349cd76, interiorId, portalIndex, entityIndex, flag)
end

function SetInteriorPortalFlag(interiorId, portalIndex, flag)
	return _in(0x88b2355e, interiorId, portalIndex, flag)
end

function SetInteriorPortalRoomFrom(interiorId, portalIndex, roomFrom)
	return _in(0x298fc783, interiorId, portalIndex, roomFrom)
end

function SetInteriorPortalRoomTo(interiorId, portalIndex, roomTo)
	return _in(0x58982680, interiorId, portalIndex, roomTo)
end

function SetInteriorRoomExtents(interiorId, roomIndex, bbMinX, bbMinY, bbMinZ, bbMaxX, bbMaxY, bbMaxZ)
	return _in(0x4fdcf51e, interiorId, roomIndex, bbMinX, bbMinY, bbMinZ, bbMaxX, bbMaxY, bbMaxZ)
end

function SetInteriorRoomFlag(interiorId, roomIndex, flag)
	return _in(0x5518d60b, interiorId, roomIndex, flag)
end

function SetInteriorRoomTimecycle(interiorId, roomIndex, timecycleHash)
	return _in(0x31c9a848, interiorId, roomIndex, timecycleHash)
end

--- NativeDB Introduced: v2372
function SetInteriorZoomLevelDecreased(toggle)
	return _in(0x7EC8ABA5E74B3D7A, toggle)
end
N_0x7ec8aba5e74b3d7a = SetInteriorZoomLevelDecreased

--- NativeDB Introduced: v1493
function SetInteriorZoomLevelIncreased(toggle)
	return _in(0x504DFE62A1692296, toggle)
end
N_0x504dfe62a1692296 = SetInteriorZoomLevelIncreased

--- Enables the specified island. For more information, see islandhopper.meta
-- ```
-- NativeDB Introduced: v2189
-- ```
function SetIslandHopperEnabled(name, toggle)
	return _in(0x9A9D1BA639675CF1, _ts(name), toggle)
end

function SetLastDrivenVehicle(vehicle)
	return _in(0xACFB2463CC22BED2, vehicle)
end
N_0xacfb2463cc22bed2 = SetLastDrivenVehicle

--- Related to the lower-end of a vehicles fTractionCurve, e.g., from standing starts and acceleration from low/zero speeds.
-- ```
-- NativeDB Introduced: v1604
-- ```
function SetLaunchControlEnabled(toggle)
	return _in(0xAA6A6098851C396F, toggle)
end
N_0xaa6a6098851c396f = SetLaunchControlEnabled

function SetLightsCutoffDistanceTweak(distance)
	return _in(0xBC3CCA5844452B06, distance)
end
N_0xbc3cca5844452b06 = SetLightsCutoffDistanceTweak

--- Formerly incorrectly named `USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR` due to incorrect treatment of console vs. PC native registration.
-- Native name guessed through ordering.
-- ```
-- NativeDB Added Parameter 2: BOOL p1
-- ```
function SetLocalPlayerAsGhost(toggle)
	return _in(0x5FFE9B4144F9712F, toggle)
end

function SetLocalPlayerCanCollectPortablePickups(p0)
	return _in(0x78857FC65CADB909, p0)
end
N_0x78857fc65cadb909 = SetLocalPlayerCanCollectPortablePickups

--- Maximum amount of pickup models that can be disallowed is 30.
-- SET_LOCAL_PLAYER_*
function SetLocalPlayerCanUsePickupsWithThisModel(modelHash, toggle)
	return _in(0x88EAEC617CD26926, _ch(modelHash), toggle)
end
N_0x88eaec617cd26926 = SetLocalPlayerCanUsePickupsWithThisModel

function SetLocalPlayerInvisibleLocally(p0)
	return _in(0xE5F773C1A1D9D168, p0)
end

function SetLocalPlayerVisibleInCutscene(p0, p1)
	return _in(0xD1065D68947E7B6E, p0, p1)
end

function SetLocalPlayerVisibleLocally(p0)
	return _in(0x7619364C82D3BF14, p0)
end

function SetMainPlayerBlipColour(color)
	return _in(0x7B21E0BB01E8224A, color)
end
N_0x7b21e0bb01e8224a = SetMainPlayerBlipColour

--- Sets whether or not `SHUTDOWN_LOADING_SCREEN` automatically shuts down the NUI frame for the loading screen. If this is enabled,
-- you will have to manually invoke `SHUTDOWN_LOADING_SCREEN_NUI` whenever you want to hide the NUI loading screen.
-- @param manualShutdown TRUE to manually shut down the loading screen NUI.
function SetManualShutdownLoadingScreenNui(manualShutdown)
	return _in(0x1722c938, manualShutdown)
end

--- Sets values to the zoom level data by index.
-- @param index Zoom level index.
-- @param zoomScale fZoomScale value.
-- @param zoomSpeed fZoomSpeed value.
-- @param scrollSpeed fScrollSpeed value.
-- @param tilesX vTiles X.
-- @param tilesY vTiles Y.
function SetMapZoomDataLevel(index, zoomScale, zoomSpeed, scrollSpeed, tilesX, tilesY)
	return _in(0x447c718e, index, zoomScale, zoomSpeed, scrollSpeed, tilesX, tilesY)
end

--- Possible p0 values:
-- "prologue"
-- "Prologue_Main"
function SetMapdatacullboxEnabled(name, toggle)
	return _in(0xAF12610C644A35C9, _ts(name), toggle)
end
N_0xaf12610c644a35c9 = SetMapdatacullboxEnabled

function SetMaxArmourHudDisplay(maximumValue)
	return _in(0x06A320535F5F0248, maximumValue)
end
N_0x06a320535f5f0248 = SetMaxArmourHudDisplay

function SetMaxHealthHudDisplay(maximumValue)
	return _in(0x975D66A0BC17064C, maximumValue)
end
N_0x975d66a0bc17064c = SetMaxHealthHudDisplay

function SetMaxNumPortablePickupsCarriedByPlayer(modelHash, p1)
	return _in(0x0BF3B3BD47D79C08, _ch(modelHash), p1)
end
N_0x0bf3b3bd47d79c08 = SetMaxNumPortablePickupsCarriedByPlayer

function SetMaxWantedLevel(maxWantedLevel)
	return _in(0xAA5F02DB48D704B9, maxWantedLevel)
end

--- If this is the correct name, what microphone? I know your TV isn't going to reach out and adjust your headset so..
function SetMicrophonePosition(p0, x1, y1, z1, x2, y2, z2, x3, y3, z3)
	return _in(0xB6AE90EDDE95C762, p0, x1, y1, z1, x2, y2, z2, x3, y3, z3)
end

--- Overrides how many real ms are equal to one game minute.
-- A setter for [`GetMillisecondsPerGameMinute`](#\_0x2F8B4D1C595B11DB).
-- @param value Milliseconds.
function SetMillisecondsPerGameMinute(value)
	return _in(0x36ca2554, value)
end

function SetMinigameInProgress(toggle)
	return _in(0x19E00D7322C6F85B, toggle)
end

--- Argument must be 0.0f or above 38.0f, or it will be ignored.
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function SetMinimapAltitudeIndicatorLevel(altitude, p1)
	return _in(0xD201F3FF917A506D, altitude, p1)
end
SetMinimapAttitudeIndicatorLevel = SetMinimapAltitudeIndicatorLevel

function SetMinimapBlockWaypoint(toggle)
	return _in(0x58FADDED207897DC, toggle)
end

--- Sets the type for the minimap blip clipping object to be either rectangular or rounded.
-- @param type 0 for rectangular, 1 for rounded.
function SetMinimapClipType(type)
	return _in(0xb8b4490c, type)
end

--- This native is used to colorize certain map components like the army base at the top of the map.
-- An incomplete list of components ID:
-- 0: Los Santos' air port yellow lift-off markers.
-- 1: Sandy Shore's air port yellow lift-off markers.
-- 2: Trevor's air port yellow lift-off markers.
-- 6: Vespucci Beach lifeguard building.
-- 15: Army base.
-- [List of hud colors](https://pastebin.com/d9aHPbXN)
-- @param componentID The component ID to change.
-- @param toggle True to enable the color, false to disable the effect.
-- @param hudColor The hudcolor index.
function SetMinimapComponent(componentID, toggle, hudColor)
	return _in(0x75A9A10948D1DEA6, componentID, toggle, hudColor, _ri)
end

--- Overrides the minimap component data (from `common:/data/ui/frontend.xml`) for a specified component.
-- @param name The name of the minimap component to override.
-- @param alignX Equivalent to the `alignX` field in `frontend.xml`.
-- @param alignY Equivalent to the `alignY` field in `frontend.xml`.
-- @param posX Equivalent to the `posX` field in `frontend.xml`.
-- @param posY Equivalent to the `posY` field in `frontend.xml`.
-- @param sizeX Equivalent to the `sizeX` field in `frontend.xml`.
-- @param sizeY Equivalent to the `sizeY` field in `frontend.xml`.
function SetMinimapComponentPosition(name, alignX, alignY, posX, posY, sizeX, sizeY)
	return _in(0x3e882b23, _ts(name), _ts(alignX), _ts(alignY), posX, posY, sizeX, sizeY)
end

function SetMinimapFowRevealCoordinate(x, y, z)
	return _in(0x0923DBF87DFF735E, x, y, z)
end
N_0x0923dbf87dff735e = SetMinimapFowRevealCoordinate

--- Not much is known so far on what it does *exactly*.
-- All I know for sure is that it draws the specified hole ID on the pause menu map as well as on the mini-map/radar. This native also seems to change some other things related to the pause menu map's behaviour, for example: you can no longer set waypoints, the pause menu map starts up in a 'zoomed in' state. This native does not need to be executed every tick.
-- You need to center the minimap manually as well as change/lock it's zoom and angle in order for it to appear correctly on the minimap.
-- You'll also need to use the `GOLF` scaleform in order to get the correct minmap border to show up.
-- Use [`N_0x35edd5b2e3ff01c0()`](https://runtime.fivem.net/doc/reference.html#\_0x35EDD5B2E3FF01C0) to reset the map when you no longer want to display any golf holes (you still need to unlock zoom, position and angle of the radar manually after calling this).
-- @param hole The ID of the hole to draw on the map. ID starts with 1 for hole 1, 2 for hole 2, etc. 0 disables the golf map behaviour.
function SetMinimapGolfCourse(hole)
	return _in(0x71BDB63DBAF8DA59, hole)
end
N_0x71bdb63dbaf8da59 = SetMinimapGolfCourse

function SetMinimapGolfCourseOff()
	return _in(0x35EDD5B2E3FF01C0)
end
N_0x35edd5b2e3ff01c0 = SetMinimapGolfCourseOff

--- If true, the entire map will be revealed.
function SetMinimapHideFow(toggle)
	return _in(0xF8DEE0A5600CBB93, toggle)
end
N_0xf8dee0a5600cbb93 = SetMinimapHideFow
SetMinimapRevealed = SetMinimapHideFow

--- Toggles the North Yankton map
function SetMinimapInPrologue(toggle)
	return _in(0x9133955F1A2DA957, toggle)
end
SetDrawMapVisible = SetMinimapInPrologue
SetNorthYanktonMap = SetMinimapInPrologue

function SetMinimapInSpectatorMode(toggle, ped)
	return _in(0x1A5CD7752DD28CD3, toggle, ped)
end
KeyHudColour = SetMinimapInSpectatorMode

--- Sets the display info for a minimap overlay.
-- @param miniMap The minimap overlay ID.
-- @param x The X position for the overlay. This is equivalent to a game coordinate X.
-- @param y The Y position for the overlay. This is equivalent to a game coordinate Y, except that it's inverted (gfxY = -gameY).
-- @param xScale The X scale for the overlay. This is equivalent to the Flash \_xscale property, therefore 100 = 100%.
-- @param yScale The Y scale for the overlay. This is equivalent to the Flash \_yscale property.
-- @param alpha The alpha value for the overlay. This is equivalent to the Flash \_alpha property, therefore 100 = 100%.
function SetMinimapOverlayDisplay(miniMap, x, y, xScale, yScale, alpha)
	return _in(0x6a48b3ca, miniMap, x, y, xScale, yScale, alpha)
end

--- NativeDB Introduced: v2189
function SetMinimapSonarEnabled(toggle)
	return _in(0x6B50FC8749632EC1, toggle)
end

--- If true, the player can't save the game.
-- If the parameter is true, sets the mission flag to true, if the parameter is false, the function does nothing at all.
-- ^ also, if the mission flag is already set, the function does nothing at all
function SetMissionFlag(toggle)
	return _in(0xC4301E5121A0ED73, toggle)
end

function SetMissionName(p0, name)
	return _in(0x5F28ECF5FC84772F, p0, _ts(name))
end

function SetMissionName_2(p0, name)
	return _in(0xE45087D85F468BC2, p0, _ts(name))
end
N_0xe45087d85f468bc2 = SetMissionName_2

--- p1 is always 0
function SetMissionTrainAsNoLongerNeeded(p1)
	return _in(0xBBE7648349B49BE8, _i, p1)
end

function SetMissionTrainCoords(train, x, y, z)
	return _in(0x591CA673AA6AB736, train, x, y, z)
end

function SetMobilePhonePosition(posX, posY, posZ)
	return _in(0x693A5C6D6734085B, posX, posY, posZ)
end

function SetMobilePhoneRadioState(state)
	return _in(0xBF286C554784F3DF, state)
end

--- Last parameter is unknown and always zero.
function SetMobilePhoneRotation(rotX, rotY, rotZ, p3)
	return _in(0xBB779C0CA917E865, rotX, rotY, rotZ, p3)
end

--- The minimum/default is 500.0f. If you plan to make it bigger set it's position as well. Also this seems to need to be called in a loop as when you close the phone the scale is reset. If not in a loop you'd need to call it everytime before you re-open the phone.
function SetMobilePhoneScale(scale)
	return _in(0xCBDD322A73D6D932, scale)
end

function SetMobilePhoneUnk(toggle)
	return _in(0x375A706A5C2FD084, toggle)
end
N_0x375a706a5c2fd084 = SetMobilePhoneUnk

function SetMobileRadioEnabledDuringGameplay(toggle)
	return _in(0x1098355A16064BB3, toggle)
end

--- Unloads model from memory
function SetModelAsNoLongerNeeded(model)
	return _in(0xE532F5D78798DAAB, _ch(model))
end

function SetModelHeadlightConfiguration(modelHash, ratePerSecond, headlightRotation, invertRotation)
	return _in(0x7f6b8d75, _ch(modelHash), ratePerSecond, headlightRotation, invertRotation)
end

--- Note: Look in decompiled scripts and the times that p1 and p2 aren't 0. They are filled with vars. If you look through out that script what other natives those vars are used in, you can tell p1 is a ped and p2 is a vehicle. Which most likely means if you want the mounted weapon to target a ped set targetVehicle to 0 or vice-versa.
-- ```
-- ```
-- NativeDB Added Parameter 7: Any p6
-- NativeDB Added Parameter 8: Any p7
function SetMountedWeaponTarget(shootingPed, targetPed, targetVehicle, x, y, z)
	return _in(0xCCD892192C6D2BB9, shootingPed, targetPed, targetVehicle, x, y, z)
end

--- Shows the cursor on screen for one frame.
function SetMouseCursorActiveThisFrame()
	return _in(0xAAE7CE1D63167423)
end
ShowCursorThisFrame = SetMouseCursorActiveThisFrame

--- Changes the mouse cursor's sprite.
-- public enum CursorType
-- {
-- None = 0,
-- Normal = 1,
-- TransparentNormal = 2,
-- PreGrab = 3,
-- Grab = 4,
-- MiddleFinger = 5,
-- LeftArrow = 6,
-- RightArrow = 7,
-- UpArrow = 8,
-- DownArrow = 9,
-- HorizontalExpand = 10,
-- Add = 11,
-- Remove = 12,
-- }
function SetMouseCursorSprite(spriteId)
	return _in(0x8DB8CFFD58B62552, spriteId)
end
N_0x8db8cffd58b62552 = SetMouseCursorSprite
SetCursorSprite = SetMouseCursorSprite

--- Shows/hides the frontend cursor on the pause menu or similar menus.
-- Clicking off and then on the game window will show it again.
-- @param enable Set to false to disable the cursor, true to enable it.
function SetMouseCursorVisibleInMenus(enable)
	return _in(0x98215325A695E78A, enable)
end
N_0x98215325a695e78a = SetMouseCursorVisibleInMenus

--- name: "MP_FEMALE_ACTION" found multiple times in the b617d scripts.
function SetMovementModeOverride(ped, name)
	return _in(0x781DE8FA214E87D2, ped, _ts(name))
end
N_0x781de8fa214e87d2 = SetMovementModeOverride

--- Sets flag's sprite transparency. 0-255.
function SetMpGamerTagAlpha(gamerTagId, component, alpha)
	return _in(0xD48FE545CD46F857, gamerTagId, component, alpha)
end
N_0xd48fe545cd46f857 = SetMpGamerTagAlpha

function SetMpGamerTagBigText(gamerTagId, string)
	return _in(0x7B7723747CCB55B6, gamerTagId, _ts(string))
end
N_0x7b7723747ccb55b6 = SetMpGamerTagBigText
SetMpGamerTagChatting = SetMpGamerTagBigText

--- Sets a gamer tag's component colour
-- @param gamerTagId a gamerTagId obtained using  for example: [`CREATE_FAKE_MP_GAMER_TAG`](#\_0xBFEFE3321A3F5015).
-- @param component a component id, see the full list here: [link](https://docs.fivem.net/docs/game-references/gamer-tags/#components-list)
-- @param hudColorIndex a hud color index, see the full list here: [link](https://pastebin.com/d9aHPbXN)
function SetMpGamerTagColour(gamerTagId, component, hudColorIndex)
	return _in(0x613ED644950626AE, gamerTagId, component, hudColorIndex)
end
N_0x613ed644950626ae = SetMpGamerTagColour

--- By default, the player health value shown by a gamer tag's health bar is synchronised with the health of the ped it is attached to.
-- This native disables that behaviour, allowing [`_SET_MP_GAMER_TAG_OVERRIDE_PLAYER_HEALTH`](#\_0x1563FE35E9928E67) to have an effect.
-- @param toggle If player health synchronisation should be disabled.
function SetMpGamerTagDisablePlayerHealthSync(gamerTagId, toggle)
	return _in(0xD29EC58C2F6B5014, gamerTagId, toggle)
end
N_0xd29ec58c2f6b5014 = SetMpGamerTagDisablePlayerHealthSync
SetMpGamerHealthBarDisplay = SetMpGamerTagDisablePlayerHealthSync

--- Should be enabled as component (2). Has 0 alpha by default.
-- @param gamerTagId a gamerTagId obtained using  for example: [CREATE_FAKE_MP_GAMER_TAG](https://runtime.fivem.net/doc/natives/?\_0xBFEFE3321A3F5015)
-- @param hudColorIndex a hud color index, see the full list here: [link](pastebin.com/d9aHPbXN)
function SetMpGamerTagHealthBarColour(gamerTagId, hudColorIndex)
	return _in(0x3158C77A7E888AB4, gamerTagId, hudColorIndex)
end
N_0x3158c77a7e888ab4 = SetMpGamerTagHealthBarColour
SetMpGamerTagHealthBarColor = SetMpGamerTagHealthBarColour

--- displays wanted star above head
function SetMpGamerTagMpBagLargeCount(gamerTagId, count)
	return _in(0x9C16459B2324B2CF, gamerTagId, count)
end
N_0x9b9aa95688f78dd3 = SetMpGamerTagMpBagLargeCount
SetMpGamerTagUnk = SetMpGamerTagMpBagLargeCount

function SetMpGamerTagName(gamerTagId, string)
	return _in(0xDEA2B8283BAA3944, gamerTagId, _ts(string))
end
N_0xdea2b8283baa3944 = SetMpGamerTagName

--- Manually sets the player health value for a gamer tag, using the maximum health to calculate what percentage of the bar should be filled.
-- Has no effect unless [\_SET_MP_GAMER_TAG_DISABLE_PLAYER_HEALTH_SYNC](#\_0xD29EC58C2F6B5014) has been called prior to disable synchronisation with the attached ped.
-- @param health The amount the health the player has.
-- @param maximumHealth The maximum amount of health the player could have.
function SetMpGamerTagOverridePlayerHealth(gamerTagId, health, maximumHealth)
	return _in(0x1563FE35E9928E67, gamerTagId, health, maximumHealth)
end
N_0x1563fe35e9928e67 = SetMpGamerTagOverridePlayerHealth
SetMpGamerHealthBarMax = SetMpGamerTagOverridePlayerHealth

--- Sets the health bar of a gamer tag to show the health of the last (or current) vehicle of the ped the gamer tag is attached to.
-- The vehicle health value is stored separate from the player health and using it won't clear any player health overrides.
-- @param toggle If vehicle health should be displayed instead of player health.
function SetMpGamerTagUseVehicleHealth(gamerTagId, toggle)
	return _in(0xA67F9C46D612B6F1, gamerTagId, toggle)
end
N_0xa67f9c46d612b6f1 = SetMpGamerTagUseVehicleHealth
SetMpGamerTagIcons = SetMpGamerTagUseVehicleHealth

--- cpp
-- enum eMpGamerTagComponent
-- {
-- MP_TAG_GAMER_NAME,
-- MP_TAG_CREW_TAG,
-- MP_TAG_HEALTH_ARMOUR,
-- MP_TAG_BIG_TEXT,
-- MP_TAG_AUDIO_ICON,
-- MP_TAG_USING_MENU,
-- MP_TAG_PASSIVE_MODE,
-- MP_TAG_WANTED_STARS,
-- MP_TAG_DRIVER,
-- MP_TAG_CO_DRIVER,
-- MP_TAG_TAGGED,
-- MP_TAG_GAMER_NAME_NEARBY,
-- MP_TAG_ARROW,
-- MP_TAG_PACKAGES,
-- MP_TAG_INV_IF_PED_FOLLOWING,
-- MP_TAG_RANK_TEXT,
-- MP_TAG_TYPING,
-- MP_TAG_BAG_LARGE,
-- MP_TAG_ARROW,
-- MP_TAG_GANG_CEO,
-- MP_TAG_GANG_BIKER,
-- MP_TAG_BIKER_ARROW,
-- MP_TAG_MC_ROLE_PRESIDENT,
-- MP_TAG_MC_ROLE_VICE_PRESIDENT,
-- MP_TAG_MC_ROLE_ROAD_CAPTAIN,
-- MP_TAG_MC_ROLE_SARGEANT,
-- MP_TAG_MC_ROLE_ENFORCER,
-- MP_TAG_MC_ROLE_PROSPECT,
-- MP_TAG_TRANSMITTER,
-- MP_TAG_BOMB
-- };
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function SetMpGamerTagVisibility(gamerTagId, component, toggle)
	return _in(0x63BB75ABEDC1F6A0, gamerTagId, component, toggle)
end
N_0x63bb75abedc1f6a0 = SetMpGamerTagVisibility

--- Sets the visibility of all components of the gamer tag to the specified value.
-- @param toggle The new visibility state of all gamer tag components.
function SetMpGamerTagVisibilityAll(gamerTagId, toggle)
	return _in(0xEE76FF7E6A0166B0, gamerTagId, toggle)
end
N_0xee76ff7e6a0166b0 = SetMpGamerTagVisibilityAll
SetMpGamerTag_ = SetMpGamerTagVisibilityAll
SetMpGamerTag = SetMpGamerTagVisibilityAll
SetMpGamerTagEnabled = SetMpGamerTagVisibilityAll

--- displays wanted star above head
function SetMpGamerTagWantedLevel(gamerTagId, wantedlvl)
	return _in(0xCF228E2AA03099C3, gamerTagId, wantedlvl)
end
N_0xcf228e2aa03099c3 = SetMpGamerTagWantedLevel

--- Sets whether all tags should group (normal game behavior) or should remain independent and above each ped's respective head when in a vehicle.
-- @param enabled Whether tags should use normal game behavior. Default is true.
function SetMpGamerTagsUseVehicleBehavior(enabled)
	return _in(0x7a27bc93, enabled)
end

--- Sets the maximum distance at which all tags will be visible and which beyond will not be displayed. Distance is measured from the camera position.
-- @param distance The visible distance. Default is 100.0f.
function SetMpGamerTagsVisibleDistance(distance)
	return _in(0xd61676b3, distance)
end

--- Preview image:
-- ![](https://i.imgur.com/1BTmdyv.png)
-- To change the bank balance use [`STAT_SET_INT`](#\_0xB3271D7AB655B441) with "BANK_BALANCE" to whatever value you need to.
function SetMultiplayerBankCash()
	return _in(0xDD21B55DF695CD0A)
end

--- **This native does absolutely nothing, just a nullsub**
function SetMultiplayerHudCash(p0, p1)
	return _in(0xFD1D220394BCB824, p0, p1)
end

--- Preview image:
-- ![](https://i.imgur.com/1BTmdyv.png)
-- To change money value use [`STAT_SET_INT`](#\_0xB3271D7AB655B441) with "MP0\_WALLET_BALANCE" to whatever value you need to.
function SetMultiplayerWalletCash()
	return _in(0xC2D15BEF167E27BC)
end
N_0xc2d15bef167e27bc = SetMultiplayerWalletCash

function SetNetworkCutsceneEntities(toggle)
	return _in(0xAAA553E7DD28A457, toggle)
end
N_0xaaa553e7dd28a457 = SetNetworkCutsceneEntities

--- Enables a periodic ShapeTest within the NetBlender and invokes rage::netBlenderLinInterp::GoStraightToTarget (or some functional wrapper).
function SetNetworkEnableVehiclePositionCorrection(vehicle, toggle)
	return _in(0x838DA0936A24ED4D, vehicle, toggle)
end
N_0x838da0936a24ed4d = SetNetworkEnableVehiclePositionCorrection

function SetNetworkIdAlwaysExistsForPlayer(netId, player, toggle)
	return _in(0xA8A024587329F36A, netId, player, toggle)
end
N_0xa8a024587329f36a = SetNetworkIdAlwaysExistsForPlayer
SetNetworkIdSyncToPlayer = SetNetworkIdAlwaysExistsForPlayer

--- Whether or not another player is allowed to take control of the entity
function SetNetworkIdCanMigrate(netId, toggle)
	return _in(0x299EEB23175895FC, netId, toggle)
end

function SetNetworkIdExistsOnAllMachines(netId, toggle)
	return _in(0xE05E81A888FA63C8, netId, toggle)
end

function SetNetworkIdVisibleInCutscene(netId, p1, p2)
	return _in(0xA6928482543022B4, netId, p1, p2)
end

function SetNetworkVehicleAsGhost(vehicle, toggle)
	return _in(0x6274C4712850841E, vehicle, toggle)
end
N_0x6274c4712850841e = SetNetworkVehicleAsGhost
SetNetworkObjectNonContact = SetNetworkVehicleAsGhost

--- rage::netBlenderLinInterp::GetPositionMaxForUpdateLevel
function SetNetworkVehiclePositionUpdateMultiplier(vehicle, multiplier)
	return _in(0xA2A707979FE754DC, vehicle, multiplier)
end
N_0xa2a707979fe754dc = SetNetworkVehiclePositionUpdateMultiplier
SetNetworkVehicleBlenderDistanceMultiplier = SetNetworkVehiclePositionUpdateMultiplier

--- NativeDB Added Parameter 3: Any p2
-- NativeDB Added Parameter 4: Any p3
function SetNetworkVehicleRespotTimer(netId, time)
	return _in(0xEC51713AB6EC36E8, netId, time)
end

function SetNewWaypoint(x, y)
	return _in(0xFE43368D2AA4F2FC, x, y)
end

--- **This native does absolutely nothing, just a nullsub**
function SetNextDesiredMoveState(p0)
	return _in(0xF1B9F16E89E2C93A, p0)
end

function SetNextPlayerTcmodifier(modifierName)
	return _in(0xBF59707B3E5ED531, _ts(modifierName))
end
N_0xbf59707b3e5ed531 = SetNextPlayerTcmodifier

--- Enables Night Vision.
-- Example:
-- C#: Function.Call(Hash.SET_NIGHTVISION, true);
-- C++: GRAPHICS::SET_NIGHTVISION(true);
-- BOOL toggle:
-- true = turns night vision on for your player.
-- false = turns night vision off for your player.
function SetNightvision(toggle)
	return _in(0x18F621F7A5B1F85D, toggle)
end

function SetNoLoadingScreen(toggle)
	return _in(0x5262CC1995D07E09, toggle)
end

function SetNoiseoveride(toggle)
	return _in(0xE787BF1C5CF823C9, toggle)
end

function SetNoisinessoveride(value)
	return _in(0xCB6A7C3BB17A0C67, value)
end

function SetNuiFocus(hasFocus, hasCursor)
	return _in(0x5b98ae30, hasFocus, hasCursor)
end

function SetNuiFocusKeepInput(keepInput)
	return _in(0x3ff5e5f8, keepInput)
end

function SetNumberOfParkedVehicles(value)
	return _in(0xCAA15F13EBD417FF, value)
end

--- Overrides the climbing/blocking flags of the object, used in the native scripts mostly for "prop_dock_bouy_*"
function SetObjectAllowLowLodBuoyancy(object, toggle)
	return _in(0x4D89D607CB3DD1D2, object, toggle)
end
N_0x4d89d607cb3dd1d2 = SetObjectAllowLowLodBuoyancy
SetObjectCanClimbOn = SetObjectAllowLowLodBuoyancy

--- This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
function SetObjectAsNoLongerNeeded(object)
	return _in(0x3AE22DEB5BA5A3E6, _ii(object) --[[ may be optional ]])
end

--- Overrides a flag on the object which determines if the object should be avoided by a vehicle in task: CTaskVehicleGoToPointWithAvoidanceAutomobile.
-- Tested on vehicles that were created by the vehicle generators.
function SetObjectForceVehiclesToAvoid(object, toggle)
	return _in(0x77F33F2CCF64B3AA, object, toggle)
end
N_0x77f33f2ccf64b3aa = SetObjectForceVehiclesToAvoid
SetObjectSomething = SetObjectForceVehiclesToAvoid

--- Sets color of embedded light source.
-- Only appears in am_mp_nightclub.c for the nightclub dancefloor.
-- Not sure what p1 does, seems to only ever be '1' in scripts.
-- ```
-- NativeDB Introduced: v1493
-- ```
function SetObjectLightColor(object, p1, r, g, b)
	return _in(0x5F048334B4A4E774, object, p1, r, g, b, _ri)
end

--- rage::phArchetypeDamp
-- p9: Some phBoundGeometry margin value, limited to (0.0, 0.1) exclusive.
function SetObjectPhysicsParams(object, mass, gravityFactor, linearC, linearV, linearV2, angularC, angularV, angularV2, p9, maxAngSpeed, buoyancyFactor)
	return _in(0xF6DF6E90DE7DF90F, object, mass, gravityFactor, linearC, linearV, linearV2, angularC, angularV, angularV2, p9, maxAngSpeed, buoyancyFactor)
end

function SetObjectStuntPropDuration(object, duration)
	return _in(0xDF6CA0330F2E737B, object, duration)
end
N_0xdf6ca0330f2e737b = SetObjectStuntPropDuration

function SetObjectStuntPropSpeedup(object, p1)
	return _in(0x96EE0EBA0163DF80, object, p1)
end
N_0x96ee0eba0163df80 = SetObjectStuntPropSpeedup

function SetObjectTargettable(object, targettable)
	return _in(0x8A7391690F5AFD81, object, targettable)
end

--- enum ObjectPaintVariants
-- {
-- Pacific = 0,
-- Azure = 1,
-- Nautical = 2,
-- Continental = 3,
-- Battleship = 4,
-- Intrepid = 5,
-- Uniform = 6,
-- Classico = 7,
-- Mediterranean = 8,
-- Command = 9,
-- Mariner = 10,
-- Ruby = 11,
-- Vintage = 12,
-- Pristine = 13,
-- Merchant = 14,
-- Voyager = 15
-- };
function SetObjectTextureVariation(object, textureVariation)
	return _in(0x971DA0055324D033, object, textureVariation)
end
N_0x971da0055324d033 = SetObjectTextureVariation
SetObjectTextureVariant = SetObjectTextureVariation

--- Set state to true to extend the wings, false to retract them.
-- @param vehicle The vehicle (tested with oppressor only)
-- @param extend Set to true to extend the wings, false to retract them.
function SetOppressorTransformState(vehicle, extend)
	return _in(0x544996C0081ABDEB, vehicle, extend)
end
N_0x544996c0081abdeb = SetOppressorTransformState

--- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
function SetOverrideWeather(weatherType)
	return _in(0xA43D5C6FE51ADBEF, _ts(weatherType))
end

--- p0 always seems to be 0
-- duration in milliseconds
-- frequency should range from about 10 (slow vibration) to 255 (very fast)
-- example:
-- SET_PAD_SHAKE(0, 100, 200);
function SetPadShake(padIndex, duration, frequency)
	return _in(0x48B3886C1358D0D5, padIndex, duration, frequency)
end

function SetParachuteTaskTarget(ped, x, y, z)
	return _in(0xC313379AF0FCEDA7, ped, x, y, z)
end

function SetParachuteTaskThrust(ped, thrust)
	return _in(0x0729BAC1B8C64317, ped, thrust)
end

function SetParkedVehicleDensityMultiplierThisFrame(multiplier)
	return _in(0xEAE6DCC7EEE3DB1D, multiplier)
end

function SetParticleFxBulletImpactScale(scale)
	return _in(0x27E32866E9A5C416, scale)
end
N_0x27e32866e9a5c416 = SetParticleFxBulletImpactScale

function SetParticleFxCamInsideNonplayerVehicle(vehicle, p1)
	return _in(0xACEE6F360FC1F6B6, vehicle, p1)
end

function SetParticleFxCamInsideVehicle(p0)
	return _in(0xEEC4047028426510, p0)
end

function SetParticleFxLoopedAlpha(ptfxHandle, alpha)
	return _in(0x726845132380142E, ptfxHandle, alpha)
end

--- only works on some fx's
-- p4 = 0
function SetParticleFxLoopedColour(ptfxHandle, r, g, b, p4)
	return _in(0x7F8F65877F88783B, ptfxHandle, r, g, b, p4)
end

function SetParticleFxLoopedEvolution(ptfxHandle, propertyName, amount, noNetwork)
	return _in(0x5F0C4B5B1C393BE2, ptfxHandle, _ts(propertyName), amount, noNetwork)
end

function SetParticleFxLoopedFarClipDist(ptfxHandle, range)
	return _in(0xDCB194B85EF7B541, ptfxHandle, range)
end
SetParticleFxLoopedRange = SetParticleFxLoopedFarClipDist

function SetParticleFxLoopedOffsets(ptfxHandle, x, y, z, rotX, rotY, rotZ)
	return _in(0xF7DDEBEC43483C43, ptfxHandle, x, y, z, rotX, rotY, rotZ)
end

function SetParticleFxLoopedScale(ptfxHandle, scale)
	return _in(0xB44250AAA456492D, ptfxHandle, scale)
end

--- Usage example for C#:
-- Function.Call(Hash.SET_PARTICLE_FX_NON_LOOPED_ALPHA, new InputArgument[] { 0.1f });
-- Note: the argument alpha ranges from 0.0f-1.0f !
function SetParticleFxNonLoopedAlpha(alpha)
	return _in(0x77168D722C58B2FC, alpha)
end

--- Only works on some fx's, while on others it might SEEM to work "properly", but the colors can be "strange" or even completly different from what you've expected. Reason for this is that those fx's might already have colors "baked into them" which then start to act as a "mixing palette", resulting in a different color than expected. A hypothetical example of this would be if the fx itself is already full (bright) red (RGB: 1.0, 0.0, 0.0) and you then set the color to (bright) green (RGB: 0.0, 1.0, 0.0), that it MIGHT result in Yellow (RGB: 1.0, 1.0, 0.0).
-- This doc previously stated that the set color is **NOT** networked, however it does actually turns out to be networked. Tested with all fireworks effects and several other FX effects resulted in colored fx effects on all clients when used in combination with [START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD](#\_0xF56B8137DF10135D).
-- This might however not be the case for all types of particle fx's, so it's recommended to test this thoroughly with multiple clients before releasing your script for example.
-- @param r Red (0.0 - 1.0)
-- @param g Green (0.0 - 1.0)
-- @param b Blue (0.0 - 1.0)
function SetParticleFxNonLoopedColour(r, g, b)
	return _in(0x26143A59EF48B262, r, g, b)
end

function SetParticleFxOverride(oldAsset, newAsset)
	return _in(0xEA1E2D93F6F75ED9, _ts(oldAsset), _ts(newAsset))
end
SetPtfxAssetOld_2New = SetParticleFxOverride
SetParticleFxAssetOldToNew = SetParticleFxOverride

function SetParticleFxShootoutBoat(p0)
	return _in(0x96EF97DAEB89BEF5, p0)
end

function SetPauseMenuActive(toggle)
	return _in(0xDF47FC56C71569CF, toggle)
end

--- Toggles the light state for the pause menu ped in frontend menus.
-- This is used by R\* in combination with [`SET_PAUSE_MENU_PED_SLEEP_STATE`](#\_0xECF128344E9FF9F1) to toggle the "offline" or "online" state in the "friends" tab of the pause menu in GTA Online.
-- Example:
-- On: ![lights on](https://vespura.com/hi/i/2019-04-01\_16-09\_540ee\_1015.png)
-- Off: ![lights off](https://vespura.com/hi/i/2019-04-01\_16-10\_8b5e7\_1016.png)
-- @param state True enables the light, false disables the light.
function SetPauseMenuPedLighting(state)
	return _in(0x3CA6050692BC61B0, state)
end
N_0x3ca6050692bc61b0 = SetPauseMenuPedLighting

--- Toggles the pause menu ped sleep state for frontend menus.
-- [Example GIF](https://vespura.com/hi/i/2019-04-01\_15-51\_8ed38\_1014.gif)
-- @param state 0 will make the ped slowly fall asleep, 1 will slowly wake the ped up.
function SetPauseMenuPedSleepState(state)
	return _in(0xECF128344E9FF9F1, state)
end
N_0xecf128344e9ff9f1 = SetPauseMenuPedSleepState

--- accuracy = 0-100, 100 being perfectly accurate
function SetPedAccuracy(ped, accuracy)
	return _in(0x7AEFB85C1D49DEB6, ped, accuracy)
end

--- if "flag" is true, the AI blip will always be displayed for the specified ped, if it has an AI blip
-- If "flag" is false, the AI blip will only be displayed when the player is in combat with the specified ped, if it has an AI blip
function SetPedAiBlipForcedOn(ped, toggle)
	return _in(0x0C4BBF625CA98C4E, ped, toggle)
end
N_0x0c4bbf625ca98c4e = SetPedAiBlipForcedOn
IsAiBlipAlwaysShown = SetPedAiBlipForcedOn

function SetPedAiBlipGangId(ped, gangId)
	return _in(0xE52B8E7F85D39A08, ped, gangId)
end
N_0xe52b8e7f85d39a08 = SetPedAiBlipGangId
SetAiBlipType = SetPedAiBlipGangId

function SetPedAiBlipHasCone(ped, toggle)
	return _in(0x3EED80DFF7325CAA, ped, toggle)
end
HideSpecialAbilityLockonOperation = SetPedAiBlipHasCone

function SetPedAiBlipNoticeRange(ped, range)
	return _in(0x97C65887D4B37FA9, ped, range)
end
N_0x97c65887d4b37fa9 = SetPedAiBlipNoticeRange
SetAiBlipMaxDistance = SetPedAiBlipNoticeRange

function SetPedAiBlipSprite(ped, spriteId)
	return _in(0xFCFACD0DB9D7A57D, ped, spriteId)
end
N_0xfcfacd0db9d7a57d = SetPedAiBlipSprite

--- value ranges from 0 to 3.
function SetPedAlertness(ped, value)
	return _in(0xDBA71115ED9941A6, ped, value)
end

function SetPedAllowVehiclesOverride(ped, toggle)
	return _in(0x3C028C636A414ED9, ped, toggle)
end

function SetPedAllowedToDuck(ped, toggle)
	return _in(0xDA1F1B7BE1A8766F, ped, toggle)
end

--- ```
-- stance:
-- 0 = idle
-- 1 = walk
-- 2 = running
-- p5 = usually set to true
-- ```
-- [Animations list](https://alexguirre.github.io/animations-list/)
function SetPedAlternateMovementAnim(ped, stance, animDictionary, animationName, p4, p5)
	return _in(0x90A43CC281FFAB46, ped, stance, _ts(animDictionary), _ts(animationName), p4, p5)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function SetPedAlternateWalkAnim(ped, animDict, animName, p3, p4)
	return _in(0x6C60394CB4F75E9A, ped, _ts(animDict), _ts(animName), p3, p4)
end

--- NativeDB Added Parameter 4: BOOL p3
function SetPedAmmo(ped, weaponHash, ammo)
	return _in(0x14E56BC5B5DB6A19, ped, _ch(weaponHash), ammo)
end

function SetPedAmmoByType(ped, ammoType, ammo)
	return _in(0x5FD1E1F011E76D7E, ped, _ch(ammoType), ammo)
end

function SetPedAmmoToDrop(ped, ammo)
	return _in(0xA4EFEF9440A5B0EF, ped, ammo)
end

function SetPedAngledDefensiveArea(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xC7F76DF27A5045A1, ped, p1, p2, p3, p4, p5, p6, p7, p8, p9)
end

--- Enable/disable ped shadow (ambient occlusion). https://gfycat.com/thankfulesteemedgecko
function SetPedAoBlobRendering(ped, toggle)
	return _in(0x2B5AA717A181FB4C, ped, toggle)
end
N_0x2b5aa717a181fb4c = SetPedAoBlobRendering

--- Sets the armor of the specified ped.
-- ped: The Ped to set the armor of.
-- amount: A value between 0 and 100 indicating the value to set the Ped's armor to.
function SetPedArmour(ped, amount)
	return _in(0xCEA04D83135264CC, ped, amount)
end

--- Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. SWAT and Army will still shoot at you. Toggling ped as "false" has no effect; you must change p0's ped model to disable the effect.
function SetPedAsCop(ped, toggle)
	return _in(0xBB03C38DD3FB7FFD, ped, toggle)
end

function SetPedAsEnemy(ped, toggle)
	return _in(0x02A0C9720B854BFA, ped, toggle)
end

function SetPedAsGroupLeader(ped, groupId)
	return _in(0x2A7819605465FBCE, ped, groupId)
end

function SetPedAsGroupMember(ped, groupId)
	return _in(0x9F3480FE65DB31B5, ped, groupId)
end

--- This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
function SetPedAsNoLongerNeeded(ped)
	return _in(0x2595DD4236549CE3, _ii(ped) --[[ may be optional ]])
end

--- Enables/disables ped's "loud" footstep sound.
-- ```
-- ```
-- NativeDB Introduced: v1493
function SetPedAudioFootstepLoud(ped, toggle)
	return _in(0x0653B735BFBDFE87, ped, toggle)
end
N_0x0653b735bfbdfe87 = SetPedAudioFootstepLoud

--- Enables/disables ped's "quiet" footstep sound.
-- ```
-- ```
-- NativeDB Introduced: v1493
function SetPedAudioFootstepQuiet(ped, toggle)
	return _in(0x29DA3CA8D8B2692D, ped, toggle)
end
N_0x29da3ca8d8b2692d = SetPedAudioFootstepQuiet

function SetPedAudioGender(ped, p1)
	return _in(0xA5342D390CDA41D6, ped, p1)
end
N_0xa5342d390cda41d6 = SetPedAudioGender

function SetPedBlendFromParents(ped, father, mother, fathersSide, mothersSide)
	return _in(0x137BBD05230DB22D, ped, father, mother, fathersSide, mothersSide)
end

function SetPedBlocksPathingWhenDead(ped, toggle)
	return _in(0x576594E8D64375E2, ped, toggle)
end
N_0x576594e8d64375e2 = SetPedBlocksPathingWhenDead

function SetPedBoundsOrientation(ped, p1, p2, p3, p4, p5)
	return _in(0x4F5F651ACCC9C4CF, ped, p1, p2, p3, p4, p5)
end

function SetPedCanArmIk(ped, toggle)
	return _in(0x6C3B4D6D13B4C841, ped, toggle)
end

function SetPedCanBeDraggedOut(ped, toggle)
	return _in(0xC1670E958EEE24E5, ped, toggle)
end

--- state: https://alloc8or.re/gta5/doc/enums/eKnockOffVehicle.txt
function SetPedCanBeKnockedOffVehicle(ped, state)
	return _in(0x7A6535691B477C48, ped, state)
end

function SetPedCanBeShotInVehicle(ped, toggle)
	return _in(0xC7EF1BA83230BA07, ped, toggle)
end

function SetPedCanBeTargetedWhenInjured(ped, toggle)
	return _in(0x638C03B0F9878F57, ped, toggle)
end

function SetPedCanBeTargetedWithoutLos(ped, toggle)
	return _in(0x4328652AE5769C71, ped, toggle)
end

function SetPedCanBeTargetted(ped, toggle)
	return _in(0x63F58F7C80513AAD, ped, toggle)
end

function SetPedCanBeTargettedByPlayer(ped, player, toggle)
	return _in(0x66B57B72E0836A76, ped, player, toggle)
end

function SetPedCanBeTargettedByTeam(ped, team, toggle)
	return _in(0xBF1CA77833E58F2C, ped, team, toggle)
end

--- It simply makes the said ped to cower behind cover object(wall, desk, car)
-- Peds flee attributes must be set to not to flee, first. Else, most of the peds, will just flee from gunshot sounds or any other panic situations.
function SetPedCanCowerInCover(ped, toggle)
	return _in(0xCB7553CDCEF4A735, ped, toggle)
end

function SetPedCanEvasiveDive(ped, toggle)
	return _in(0x6B7A646C242A7059, ped, toggle)
end

function SetPedCanHeadIk(ped, toggle)
	return _in(0xC11C18092C5530DC, ped, toggle)
end

function SetPedCanLegIk(ped, toggle)
	return _in(0x73518ECE2485412B, ped, toggle)
end

--- It makes the ped lose (or not lose) their props (like glasses or helmets/hat) when someone punches or pushes the ped.
-- This is probably what's being used in GTA:O to keep players from knocking other player's hats/glasses off when in combat.
-- @param ped The target ped
-- @param loseProps true = allow props to fall off, false = don't let props fall off
-- @param p2 purpose unknown, usually 0
function SetPedCanLosePropsOnDamage(ped, loseProps, p2)
	return _in(0xE861D0B05C7662B8, ped, loseProps, p2)
end
N_0xe861d0b05c7662b8 = SetPedCanLosePropsOnDamage

function SetPedCanPeekInCover(ped, toggle)
	return _in(0xC514825C507E3736, ped, toggle)
end

function SetPedCanPlayAmbientAnims(ped, toggle)
	return _in(0x6373D1349925A70E, ped, toggle)
end

function SetPedCanPlayAmbientBaseAnims(ped, toggle)
	return _in(0x0EB0585D15254740, ped, toggle)
end

--- Appears only in fm_mission_controller and used only 3 times.
-- ped was always PLAYER_PED_ID()
-- p1 was always true
-- p2 was always true
function SetPedCanPlayAmbientIdles(ped, p1, p2)
	return _in(0x8FD89A6240813FD0, ped, p1, p2)
end
N_0x8fd89a6240813fd0 = SetPedCanPlayAmbientIdles

function SetPedCanPlayGestureAnims(ped, toggle)
	return _in(0xBAF20C5432058024, ped, toggle)
end

function SetPedCanPlayInjuredAnims(ped, p1)
	return _in(0x33A60D8BDD6E508C, ped, p1)
end
N_0x33a60d8bdd6e508c = SetPedCanPlayInjuredAnims

--- p2 usually 0
function SetPedCanPlayVisemeAnims(ped, toggle, p2)
	return _in(0xF833DDBA3B104D43, ped, toggle, p2)
end

function SetPedCanRagdoll(ped, toggle)
	return _in(0xB128377056A54E2A, ped, toggle)
end

function SetPedCanRagdollFromPlayerImpact(ped, toggle)
	return _in(0xDF993EE5E90ABA25, ped, toggle)
end

function SetPedCanSmashGlass(ped, p1, p2)
	return _in(0x1CCE141467FF42A2, ped, p1, p2)
end

function SetPedCanSwitchWeapon(ped, toggle)
	return _in(0xED7F7EFE9FABF340, ped, toggle)
end

--- This only will teleport the ped to the group leader if the group leader teleports (sets coords).
-- Only works in singleplayer
function SetPedCanTeleportToGroupLeader(pedHandle, groupHandle, toggle)
	return _in(0x2E2F4240B3F24647, pedHandle, groupHandle, toggle)
end

function SetPedCanTorsoIk(ped, toggle)
	return _in(0xF2B7106D37947CE0, ped, toggle)
end

function SetPedCanTorsoReactIk(ped, p1)
	return _in(0xF5846EDB26A98A24, ped, p1)
end
N_0xf5846edb26a98a24 = SetPedCanTorsoReactIk

function SetPedCanTorsoVehicleIk(ped, p1)
	return _in(0x6647C5F6F5792496, ped, p1)
end
N_0x6647c5f6f5792496 = SetPedCanTorsoVehicleIk

function SetPedCanUseAutoConversationLookat(ped, toggle)
	return _in(0xEC4686EC06434678, ped, toggle)
end

--- Overrides the ped's collision capsule radius for the current tick.
-- Must be called every tick to be effective.
-- Setting this to 0.001 will allow warping through some objects.
function SetPedCapsule(ped, value)
	return _in(0x364DF566EC833DE2, ped, value)
end

function SetPedChanceOfFiringBlanks(ped, xBias, yBias)
	return _in(0x8378627201D5497D, ped, xBias, yBias)
end

function SetPedClothPackageIndex(ped, p1)
	return _in(0x78C4E9961DB3EB5B, ped, p1)
end
N_0x78c4e9961db3eb5b = SetPedClothPackageIndex

function SetPedClothProne(p0, p1)
	return _in(0x82A3D6D9CC2CB8E3, p0, p1)
end
N_0x82a3d6d9cc2cb8e3 = SetPedClothProne

--- 100 would equal attack
-- less then 50ish would mean run away
-- Only the values 0, 1 and 2 occur in the decompiled scripts. Most likely refers directly to the values also described in combatbehaviour.meta:
-- 0: CA_Poor
-- 1: CA_Average
-- 2: CA_Professional
-- Tested this and got the same results as the first explanation here. Could not find any difference between 0, 1 and 2.
function SetPedCombatAbility(ped, p1)
	return _in(0xC7622C0D36B2FDA8, ped, p1)
end

--- These combat attributes seem to be the same as the BehaviourFlags from combatbehaviour.meta.
-- So far, these are the equivalents found:
-- ```
-- enum CombatAttributes
-- {
-- BF_CanUseCover = 0,
-- BF_CanUseVehicles = 1,
-- BF_CanDoDrivebys = 2,
-- BF_CanLeaveVehicle = 3,
-- BF_CanFightArmedPedsWhenNotArmed = 5,
-- BF_CanTauntInVehicle = 20,
-- BF_AlwaysFight = 46,
-- BF_IgnoreTrafficWhenDriving = 52,
-- BF_FleesFromInvincibleOpponents = 63,
-- BF_FreezeMovement = 292,
-- BF_PlayerCanUseFiringWeapons = 1424
-- };
-- ```
-- 8 = ?\
-- 9 = ?\
-- 13 = ?\
-- 14 ?\
-- Research thread: gtaforums.com/topic/833391-researchguide-combat-behaviour-flags/
function SetPedCombatAttributes(ped, attributeIndex, enabled)
	return _in(0x9F7794730795E019, ped, attributeIndex, enabled)
end

--- 0 - Stationary (Will just stand in place)
-- 1 - Defensive (Will try to find cover and very likely to blind fire)
-- 2 - Offensive (Will attempt to charge at enemy but take cover as well)
-- 3 - Suicidal Offensive (Will try to flank enemy in a suicidal attack)
function SetPedCombatMovement(ped, combatMovement)
	return _in(0x4D9CA1009AFBD057, ped, combatMovement)
end

--- Only the values 0, 1 and 2 occur in the decompiled scripts. Most likely refers directly to the values also described as AttackRange in combatbehaviour.meta:
-- 0: CR_Near
-- 1: CR_Medium
-- 2: CR_Far
function SetPedCombatRange(ped, p1)
	return _in(0x3C606747B23E497B, ped, p1)
end

--- This native is used to set component variation on a ped. Components, drawables and textures IDs are related to the ped model.
-- ### MP Freemode list of components
-- **0**: Face\
-- **1**: Mask\
-- **2**: Hair\
-- **3**: Torso\
-- **4**: Leg\
-- **5**: Parachute / bag\
-- **6**: Shoes\
-- **7**: Accessory\
-- **8**: Undershirt\
-- **9**: Kevlar\
-- **10**: Badge\
-- **11**: Torso 2
-- ### Related and useful natives
-- [GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS](#\_0x27561561732A7842)\
-- [GET_NUMBER_OF_PED_TEXTURE_VARIATIONS](#\_0x8F7156A3142A6BAD)
-- [List of component/props ID](gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html) of player_two with examples
-- @param ped The ped handle.
-- @param componentId The component that you want to set.
-- @param drawableId The drawable id that is going to be set.
-- @param textureId The texture id of the drawable.
-- @param paletteId 0 to 3.
function SetPedComponentVariation(ped, componentId, drawableId, textureId, paletteId)
	return _in(0x262B14F48D29DE80, ped, componentId, drawableId, textureId, paletteId)
end

--- cpp
-- // Potential names and hash collisions included as comments
-- enum ePedConfigFlags {
-- _0x67D1A445 = 0,
-- _0xC63DE95E = 1,
-- CPED_CONFIG_FLAG_NoCriticalHits = 2,
-- CPED_CONFIG_FLAG_DrownsInWater = 3,
-- CPED_CONFIG_FLAG_DisableReticuleFixedLockon = 4,
-- _0x37D196F4 = 5,
-- _0xE2462399 = 6,
-- CPED_CONFIG_FLAG_UpperBodyDamageAnimsOnly = 7,
-- _0xEDDEB838 = 8,
-- _0xB398B6FD = 9,
-- _0xF6664E68 = 10,
-- _0xA05E7CA3 = 11,
-- _0xCE394045 = 12,
-- CPED_CONFIG_FLAG_NeverLeavesGroup = 13,
-- _0xCD8D1411 = 14,
-- _0xB031F1A9 = 15,
-- _0xFE65BEE3 = 16,
-- CPED_CONFIG_FLAG_BlockNonTemporaryEvents = 17,
-- _0x380165BD = 18,
-- _0x07C045C7 = 19,
-- _0x583B5E2D = 20,
-- _0x475EDA58 = 21,
-- _0x8629D05B = 22,
-- _0x1522968B = 23,
-- CPED_CONFIG_FLAG_IgnoreSeenMelee = 24,
-- _0x4CC09C4B = 25,
-- _0x034F3053 = 26,
-- _0xD91BA7CC = 27,
-- _0x5C8DC66E = 28,
-- _0x8902EAA0 = 29,
-- _0x6580B9D2 = 30,
-- _0x0EF7A297 = 31,
-- _0x6BF86E5B = 32,
-- CPED_CONFIG_FLAG_DieWhenRagdoll = 33,
-- CPED_CONFIG_FLAG_HasHelmet = 34,
-- CPED_CONFIG_FLAG_UseHelmet = 35,
-- _0xEEB3D630 = 36,
-- _0xB130D17B = 37,
-- _0x5F071200 = 38,
-- CPED_CONFIG_FLAG_DisableEvasiveDives = 39,
-- _0xC287AAFF = 40,
-- _0x203328CC = 41,
-- CPED_CONFIG_FLAG_DontInfluenceWantedLevel = 42,
-- CPED_CONFIG_FLAG_DisablePlayerLockon = 43,
-- CPED_CONFIG_FLAG_DisableLockonToRandomPeds = 44,
-- _0xEC4A8ACF = 45,
-- _0xDB115BFA = 46,
-- CPED_CONFIG_FLAG_PedBeingDeleted = 47,
-- CPED_CONFIG_FLAG_BlockWeaponSwitching = 48,
-- _0xF8E99565 = 49,
-- _0xDD17FEE6 = 50,
-- _0x7ED9B2C9 = 51,
-- _0x655E8618 = 52,
-- _0x5A6C1F6E = 53,
-- _0xD749FC41 = 54,
-- _0x357F63F3 = 55,
-- _0xC5E60961 = 56,
-- _0x29275C3E = 57,
-- CPED_CONFIG_FLAG_IsFiring = 58,
-- CPED_CONFIG_FLAG_WasFiring = 59,
-- CPED_CONFIG_FLAG_IsStanding = 60,
-- CPED_CONFIG_FLAG_WasStanding = 61,
-- CPED_CONFIG_FLAG_InVehicle = 62,
-- CPED_CONFIG_FLAG_OnMount = 63,
-- CPED_CONFIG_FLAG_AttachedToVehicle = 64,
-- CPED_CONFIG_FLAG_IsSwimming = 65,
-- CPED_CONFIG_FLAG_WasSwimming = 66,
-- CPED_CONFIG_FLAG_IsSkiing = 67,
-- CPED_CONFIG_FLAG_IsSitting = 68,
-- CPED_CONFIG_FLAG_KilledByStealth = 69,
-- CPED_CONFIG_FLAG_KilledByTakedown = 70,
-- CPED_CONFIG_FLAG_Knockedout = 71,
-- _0x3E3C4560 = 72,
-- _0x2994C7B7 = 73,
-- _0x6D59D275 = 74,
-- CPED_CONFIG_FLAG_UsingCoverPoint = 75,
-- CPED_CONFIG_FLAG_IsInTheAir = 76,
-- _0x2D493FB7 = 77,
-- CPED_CONFIG_FLAG_IsAimingGun = 78,
-- _0x14D69875 = 79,
-- _0x40B05311 = 80,
-- _0x8B230BC5 = 81,
-- _0xC74E5842 = 82,
-- _0x9EA86147 = 83,
-- _0x674C746C = 84,
-- _0x3E56A8C2 = 85,
-- _0xC144A1EF = 86,
-- _0x0548512D = 87,
-- _0x31C93909 = 88,
-- _0xA0269315 = 89,
-- _0xD4D59D4D = 90,
-- _0x411D4420 = 91,
-- _0xDF4AEF0D = 92,
-- CPED_CONFIG_FLAG_ForcePedLoadCover = 93,
-- _0x300E4CD3 = 94,
-- _0xF1C5BF04 = 95,
-- _0x89C2EF13 = 96,
-- CPED_CONFIG_FLAG_VaultFromCover = 97,
-- _0x02A852C8 = 98,
-- _0x3D9407F1 = 99,
-- _0x319B4558 = 100,
-- CPED_CONFIG_FLAG_ForcedAim = 101,
-- _0xB942D71A = 102,
-- _0xD26C55A8 = 103,
-- _0xB89E703B = 104,
-- CPED_CONFIG_FLAG_ForceReload = 105,
-- _0xD9E73DA2 = 106,
-- _0xFF71DC2C = 107,
-- _0x1E27E8D8 = 108,
-- _0xF2C53966 = 109,
-- _0xC4DBE247 = 110,
-- _0x83C0A4BF = 111,
-- _0x0E0FAF8C = 112,
-- _0x26616660 = 113,
-- _0x43B80B79 = 114,
-- _0x0D2A9309 = 115,
-- _0x12C1C983 = 116,
-- CPED_CONFIG_FLAG_BumpedByPlayer = 117,
-- _0xE586D504 = 118,
-- _0x52374204 = 119,
-- CPED_CONFIG_FLAG_IsHandCuffed = 120,
-- CPED_CONFIG_FLAG_IsAnkleCuffed = 121,
-- CPED_CONFIG_FLAG_DisableMelee = 122,
-- _0xFE714397 = 123,
-- _0xB3E660BD = 124,
-- _0x5FED6BFD = 125,
-- _0xC9D6F66F = 126,
-- _0x519BC986 = 127,
-- CPED_CONFIG_FLAG_CanBeAgitated = 128,
-- _0x9A4B617C = 129, // CPED_CONFIG_FLAG_FaceDirInsult
-- _0xDAB70E9F = 130,
-- _0xE569438A = 131,
-- _0xBBC77D6D = 132,
-- _0xCB59EF0F = 133,
-- _0x8C5EA971 = 134,
-- CPED_CONFIG_FLAG_IsScuba = 135,
-- CPED_CONFIG_FLAG_WillArrestRatherThanJack = 136,
-- _0xDCE59B58 = 137,
-- CPED_CONFIG_FLAG_RidingTrain = 138,
-- CPED_CONFIG_FLAG_ArrestResult = 139,
-- CPED_CONFIG_FLAG_CanAttackFriendly = 140,
-- _0x98A4BE43 = 141,
-- _0x6901E731 = 142,
-- _0x9EC9BF6C = 143,
-- _0x42841A8F = 144,
-- CPED_CONFIG_FLAG_ShootingAnimFlag = 145,
-- CPED_CONFIG_FLAG_DisableLadderClimbing = 146,
-- CPED_CONFIG_FLAG_StairsDetected = 147,
-- CPED_CONFIG_FLAG_SlopeDetected = 148,
-- _0x1A15670B = 149,
-- _0x61786EE5 = 150,
-- _0xCB9186BD = 151,
-- _0xF0710152 = 152,
-- _0x43DFE310 = 153,
-- _0xC43C624E = 154,
-- CPED_CONFIG_FLAG_CanPerformArrest = 155,
-- CPED_CONFIG_FLAG_CanPerformUncuff = 156,
-- CPED_CONFIG_FLAG_CanBeArrested = 157,
-- _0xF7960FF5 = 158,
-- _0x59564113 = 159,
-- _0x0C6C3099 = 160,
-- _0x645F927A = 161,
-- _0xA86549B9 = 162,
-- _0x8AAF337A = 163,
-- _0x13BAA6E7 = 164,
-- _0x5FB9D1F5 = 165,
-- CPED_CONFIG_FLAG_IsInjured = 166,
-- _0x6398A20B = 167,
-- _0xD8072639 = 168,
-- _0xA05B1845 = 169,
-- _0x83F6D220 = 170,
-- _0xD8430331 = 171,
-- _0x4B547520 = 172,
-- _0xE66E1406 = 173,
-- _0x1C4BFE0C = 174,
-- _0x90008BFA = 175,
-- _0x07C7A910 = 176,
-- _0xF15F8191 = 177,
-- _0xCE4E8BE2 = 178,
-- _0x1D46E4F2 = 179,
-- CPED_CONFIG_FLAG_IsInCustody = 180,
-- _0xE4FD9B3A = 181,
-- _0x67AE0812 = 182,
-- CPED_CONFIG_FLAG_IsAgitated = 183,
-- CPED_CONFIG_FLAG_PreventAutoShuffleToDriversSeat = 184,
-- _0x7B2D325E = 185,
-- CPED_CONFIG_FLAG_EnableWeaponBlocking = 186,
-- CPED_CONFIG_FLAG_HasHurtStarted = 187,
-- CPED_CONFIG_FLAG_DisableHurt = 188,
-- CPED_CONFIG_FLAG_PlayerIsWeird = 189,
-- _0x32FC208B = 190,
-- _0x0C296E5A = 191,
-- _0xE63B73EC = 192,
-- _0x04E9CC80 = 193,
-- CPED_CONFIG_FLAG_UsingScenario = 194,
-- CPED_CONFIG_FLAG_VisibleOnScreen = 195,
-- _0xD88C58A1 = 196,
-- _0x5A3DCF43 = 197, // CPED_CONFIG_FLAG_AvoidUnderSide
-- _0xEA02B420 = 198,
-- _0x3F559CFF = 199,
-- _0x8C55D029 = 200,
-- _0x5E6466F6 = 201,
-- _0xEB5AD706 = 202,
-- _0x0EDDDDE7 = 203,
-- _0xA64F7B1D = 204,
-- _0x48532CBA = 205,
-- _0xAA25A9E7 = 206,
-- _0x415B26B9 = 207,
-- CPED_CONFIG_FLAG_DisableExplosionReactions = 208,
-- CPED_CONFIG_FLAG_DodgedPlayer = 209,
-- _0x67405504 = 210,
-- _0x75DDD68C = 211,
-- _0x2AD879B4 = 212,
-- _0x51486F91 = 213,
-- _0x32F79E21 = 214,
-- _0xBF099213 = 215,
-- _0x054AC8E2 = 216,
-- _0x14E495CC = 217,
-- _0x3C7DF9DF = 218,
-- _0x848FFEF2 = 219,
-- CPED_CONFIG_FLAG_DontEnterLeadersVehicle = 220,
-- _0x2618E1CF = 221,
-- _0x84F722FA = 222,
-- _0xD1B87B1F = 223,
-- _0x728AA918 = 224,
-- CPED_CONFIG_FLAG_DisablePotentialToBeWalkedIntoResponse = 225,
-- CPED_CONFIG_FLAG_DisablePedAvoidance = 226,
-- _0x59E91185 = 227,
-- _0x1EA7225F = 228,
-- CPED_CONFIG_FLAG_DisablePanicInVehicle = 229,
-- _0x6DCA7D88 = 230,
-- _0xFC3E572D = 231,
-- _0x08E9F9CF = 232,
-- _0x2D3BA52D = 233,
-- _0xFD2F53EA = 234,
-- _0x31A1B03B = 235,
-- CPED_CONFIG_FLAG_IsHoldingProp = 236,
-- _0x82ED0A66 = 237, // CPED_CONFIG_FLAG_BlocksPathingWhenDead
-- _0xCE57C9A3 = 238,
-- _0x26149198 = 239,
-- _0x1B33B598 = 240,
-- _0x719B6E87 = 241,
-- _0x13E8E8E8 = 242,
-- _0xF29739AE = 243,
-- _0xABEA8A74 = 244,
-- _0xB60EA2BA = 245,
-- _0x536B0950 = 246,
-- _0x0C754ACA = 247,
-- CPED_CONFIG_FLAG_DisableVehicleSeatRandomAnimations = 248,
-- _0x12659168 = 249,
-- _0x1BDF2F04 = 250,
-- _0x7728FAA3 = 251,
-- _0x6A807ED8 = 252,
-- CPED_CONFIG_FLAG_OnStairs = 253,
-- _0xE1A2F73F = 254,
-- _0x5B3697C8 = 255,
-- _0xF1EB20A9 = 256,
-- _0x8B7DF407 = 257,
-- _0x329DCF1A = 258,
-- _0x8D90DD1B = 259,
-- _0xB8A292B7 = 260,
-- _0x8374B087 = 261,
-- _0x2AF558F0 = 262,
-- _0x82251455 = 263,
-- _0x30CF498B = 264,
-- _0xE1CD50AF = 265,
-- _0x72E4AE48 = 266,
-- _0xC2657EA1 = 267,
-- _0x29FF6030 = 268,
-- _0x8248A5EC = 269,
-- CPED_CONFIG_FLAG_OnStairSlope = 270,
-- _0xA0897933 = 271,
-- CPED_CONFIG_FLAG_DontBlipCop = 272,
-- CPED_CONFIG_FLAG_ClimbedShiftedFence = 273,
-- _0xF7823618 = 274,
-- _0xDC305CCE = 275, // CPED_CONFIG_FLAG_KillWhenTrapped
-- CPED_CONFIG_FLAG_EdgeDetected = 276,
-- _0x92B67896 = 277,
-- _0xCAD677C9 = 278,
-- CPED_CONFIG_FLAG_AvoidTearGas = 279,
-- _0x5276AC7B = 280,
-- _0x1032692A = 281,
-- _0xDA23E7F1 = 282,
-- _0x9139724D = 283,
-- _0xA1457461 = 284,
-- _0x4186E095 = 285,
-- _0xAC68E2EB = 286,
-- CPED_CONFIG_FLAG_RagdollingOnBoat = 287,
-- CPED_CONFIG_FLAG_HasBrandishedWeapon = 288,
-- _0x1B9EE8A1 = 289,
-- _0xF3F5758C = 290,
-- _0x2A9307F1 = 291,
-- _0x7403D216 = 292,
-- _0xA06A3C6C = 293,
-- CPED_CONFIG_FLAG_DisableShockingEvents = 294,
-- _0xF8DA25A5 = 295,
-- _0x7EF55802 = 296,
-- _0xB31F1187 = 297,
-- _0x84315402 = 298,
-- _0x0FD69867 = 299,
-- _0xC7829B67 = 300,
-- CPED_CONFIG_FLAG_DisablePedConstraints = 301,
-- _0x6D23CF25 = 302,
-- _0x2ADA871B = 303,
-- _0x47BC8A58 = 304,
-- _0xEB692FA5 = 305,
-- _0x4A133C50 = 306,
-- _0xC58099C3 = 307,
-- _0xF3D76D41 = 308,
-- _0xB0EEE9F2 = 309,
-- CPED_CONFIG_FLAG_IsInCluster = 310,
-- _0x0FA153EF = 311,
-- _0xD73F5CD3 = 312,
-- _0xD4136C22 = 313,
-- _0xE404CA6B = 314,
-- _0xB9597446 = 315,
-- _0xD5C98277 = 316,
-- _0xD5060A9C = 317,
-- _0x3E5F1CBB = 318,
-- _0xD8BE1D54 = 319,
-- _0x0B1F191F = 320,
-- _0xC995167A = 321,
-- CPED_CONFIG_FLAG_HasHighHeels = 322,
-- _0x86B01E54 = 323,
-- _0x3A56FE15 = 324,
-- _0xC03B736C = 325, // CPED_CONFIG_FLAG_SpawnedAtScenario
-- _0xBBF47729 = 326,
-- _0x22B668A8 = 327,
-- _0x2624D4D4 = 328,
-- CPED_CONFIG_FLAG_DisableTalkTo = 329,
-- CPED_CONFIG_FLAG_DontBlip = 330,
-- CPED_CONFIG_FLAG_IsSwitchingWeapon = 331,
-- _0x630F55F3 = 332,
-- _0x150468FD = 333,
-- _0x914EBD6B = 334,
-- _0x79AF3B6D = 335,
-- _0x75C7A632 = 336,
-- _0x52D530E2 = 337,
-- _0xDB2A90E0 = 338,
-- _0x5922763D = 339,
-- _0x12ADB567 = 340,
-- _0x105C8518 = 341,
-- _0x106F703D = 342,
-- _0xED152C3E = 343,
-- _0xA0EFE6A8 = 344,
-- _0xBF348C82 = 345,
-- _0xCDDFE830 = 346,
-- _0x7B59BD9B = 347,
-- _0x0124C788 = 348,
-- CPED_CONFIG_FLAG_EquipJetpack = 349,
-- _0x08D361A5 = 350,
-- _0xE13D1F7C = 351,
-- _0x40E25FB9 = 352,
-- _0x930629D9 = 353,
-- _0xECCF0C7F = 354,
-- _0xB6E9613B = 355,
-- _0x490C0478 = 356,
-- _0xE8865BEA = 357,
-- _0xF3C34A29 = 358,
-- CPED_CONFIG_FLAG_IsDuckingInVehicle = 359,
-- _0xF660E115 = 360,
-- _0xAB0E6DED = 361,
-- CPED_CONFIG_FLAG_HasReserveParachute = 362,
-- CPED_CONFIG_FLAG_UseReserveParachute = 363,
-- _0x5C5D9CD3 = 364,
-- _0x8F7701F3 = 365,
-- _0xBC4436AD = 366,
-- _0xD7E07D37 = 367,
-- _0x03C4FD24 = 368,
-- _0x7675789A = 369,
-- _0xB7288A88 = 370,
-- _0xC06B6291 = 371,
-- _0x95A4A805 = 372,
-- _0xA8E9A042 = 373,
-- CPED_CONFIG_FLAG_NeverLeaveTrain = 374,
-- _0xBAC674B3 = 375,
-- _0x147F1FFB = 376,
-- _0x4376DD79 = 377,
-- _0xCD3DB518 = 378,
-- _0xFE4BA4B6 = 379,
-- _0x5DF03A55 = 380,
-- _0xBCD816CD = 381,
-- _0xCF02DD69 = 382,
-- _0xF73AFA2E = 383,
-- _0x80B9A9D0 = 384,
-- _0xF601F7EE = 385,
-- _0xA91350FC = 386,
-- _0x3AB23B96 = 387,
-- CPED_CONFIG_FLAG_IsClimbingLadder = 388,
-- CPED_CONFIG_FLAG_HasBareFeet = 389,
-- _0xB4B1CD4C = 390,
-- _0x5459AFB8 = 391,
-- _0x54F27667 = 392,
-- _0xC11D3E8F = 393,
-- _0x5419EB3E = 394,
-- _0x82D8DBB4 = 395,
-- _0x33B02D2F = 396,
-- _0xAE66176D = 397,
-- _0xA2692593 = 398,
-- _0x714C7E31 = 399,
-- _0xEC488AC7 = 400,
-- _0xAE398504 = 401,
-- _0xABC58D72 = 402,
-- _0x5E5B9591 = 403,
-- _0x6BA1091E = 404,
-- _0x77840177 = 405,
-- _0x1C7ACAC4 = 406,
-- _0x124420E9 = 407,
-- _0x75A65587 = 408,
-- _0xDFD2D55B = 409,
-- _0xBDD39919 = 410,
-- _0x43DEC267 = 411,
-- _0xE42B7797 = 412,
-- CPED_CONFIG_FLAG_IsHolsteringWeapon = 413,
-- _0x4F8149F5 = 414,
-- _0xDD9ECA7A = 415,
-- _0x9E7EF9D2 = 416,
-- _0x2C6ED942 = 417,
-- CPED_CONFIG_FLAG_IsSwitchingHelmetVisor = 418,
-- _0xA488727D = 419,
-- _0xCFF5F6DE = 420,
-- _0x6D614599 = 421,
-- CPED_CONFIG_FLAG_DisableVehicleCombat = 422,
-- _0xFE401D26 = 423,
-- CPED_CONFIG_FLAG_FallsLikeAircraft = 424,
-- _0x2B42AE82 = 425,
-- _0x7A95734F = 426,
-- _0xDF4D8617 = 427,
-- _0x578F1F14 = 428,
-- CPED_CONFIG_FLAG_DisableStartEngine = 429,
-- CPED_CONFIG_FLAG_IgnoreBeingOnFire = 430,
-- _0x153C9500 = 431,
-- _0xCB7A632E = 432,
-- _0xDE727981 = 433,
-- CPED_CONFIG_FLAG_DisableHomingMissileLockon = 434,
-- _0x12BBB935 = 435,
-- _0xAD0A1277 = 436,
-- _0xEA6AA46A = 437,
-- CPED_CONFIG_FLAG_DisableHelmetArmor = 438,
-- _0xCB7F3A1E = 439,
-- _0x50178878 = 440,
-- _0x051B4F0D = 441,
-- _0x2FC3DECC = 442,
-- _0xC0030B0B = 443,
-- _0xBBDAF1E9 = 444,
-- _0x944FE59C = 445,
-- _0x506FBA39 = 446,
-- _0xDD45FE84 = 447,
-- _0xE698AE75 = 448,
-- _0x199633F8 = 449,
-- CPED_CONFIG_FLAG_PedIsArresting = 450,
-- CPED_CONFIG_FLAG_IsDecoyPed = 451,
-- _0x3A251D83 = 452,
-- _0xA56F6986 = 453,
-- _0x1D19C622 = 454,
-- _0xB68D3EAB = 455,
-- CPED_CONFIG_FLAG_CanBeIncapacitated = 456,
-- _0x4BD5EBAD = 457,
-- }
function SetPedConfigFlag(ped, flagId, value)
	return _in(0x1913FE4CBF41C463, ped, flagId, value)
end

--- teleports ped to coords along with the vehicle ped is in
function SetPedCoordsKeepVehicle(ped, posX, posY, posZ)
	return _in(0x9AFEFF481A85AB2E, ped, posX, posY, posZ)
end

function SetPedCoordsNoGang(ped, posX, posY, posZ)
	return _in(0x87052FE446E07247, ped, posX, posY, posZ)
end

--- Found in the b617d scripts:
-- PED::_9DBA107B4937F809(v_7, "trevor_heist_cover_2h");
-- SET_PED_MO*
function SetPedCoverClipsetOverride(ped, p1)
	return _in(0x9DBA107B4937F809, ped, _ts(p1))
end
N_0x9dba107b4937f809 = SetPedCoverClipsetOverride

--- p1: Only "CODE_HUMAN_STAND_COWER" found in the b617d scripts.
function SetPedCowerHash(ped, p1)
	return _in(0xA549131166868ED3, ped, _ts(p1))
end

--- Has 5 parameters since latest patches.
function SetPedCurrentWeaponVisible(ped, visible, deselectWeapon, p3, p4)
	return _in(0x0725A4CCFDED9A70, ped, visible, deselectWeapon, p3, p4)
end

--- Sets Ped Default Clothes
function SetPedDefaultComponentVariation(ped)
	return _in(0x45EEE61580806D63, ped)
end

function SetPedDefensiveAreaAttachedToPed(ped, attachPed, p2, p3, p4, p5, p6, p7, p8, p9, p10)
	return _in(0x4EF47FE21698A8B6, ped, attachPed, p2, p3, p4, p5, p6, p7, p8, p9, p10)
end

function SetPedDefensiveAreaDirection(ped, p1, p2, p3, p4)
	return _in(0x413C6C763A4AFFAD, ped, p1, p2, p3, p4)
end

function SetPedDefensiveSphereAttachedToPed(ped, target, xOffset, yOffset, zOffset, radius, p6)
	return _in(0xF9B8F91AAD3B953E, ped, target, xOffset, yOffset, zOffset, radius, p6)
end
N_0xf9b8f91aad3b953e = SetPedDefensiveSphereAttachedToPed

function SetPedDefensiveSphereAttachedToVehicle(ped, target, xOffset, yOffset, zOffset, radius, p6)
	return _in(0xE4723DB6E736CCFF, ped, target, xOffset, yOffset, zOffset, radius, p6)
end
N_0xe4723db6e736ccff = SetPedDefensiveSphereAttachedToVehicle

function SetPedDensityMultiplierThisFrame(multiplier)
	return _in(0x95E3D6257B166CF2, multiplier)
end

function SetPedDesiredHeading(ped, heading)
	return _in(0xAA5A7ECE2AA8FE70, ped, heading)
end

function SetPedDesiredMoveBlendRatio(ped, p1)
	return _in(0x1E982AC8716912C5, ped, p1)
end

function SetPedDiesInSinkingVehicle(ped, toggle)
	return _in(0xD718A22995E2B4BC, ped, toggle)
end

function SetPedDiesInVehicle(ped, toggle)
	return _in(0x2A30922C90C9B42C, ped, toggle)
end

function SetPedDiesInWater(ped, toggle)
	return _in(0x56CEF0AC79073BDE, ped, toggle)
end

function SetPedDiesInstantlyInWater(ped, toggle)
	return _in(0xEEB64139BA29A7CF, ped, toggle)
end

function SetPedDiesWhenInjured(ped, toggle)
	return _in(0x5BA7919BED300023, ped, toggle)
end

function SetPedDriveByClipsetOverride(ped, clipset)
	return _in(0xED34AB6C5CB36520, ped, _ts(clipset))
end

function SetPedDropsInventoryWeapon(ped, weaponHash, xOffset, yOffset, zOffset, ammoCount)
	return _in(0x208A1888007FC0E6, ped, _ch(weaponHash), xOffset, yOffset, zOffset, ammoCount)
end

function SetPedDropsWeapon(ped)
	return _in(0x6B7513D9966FBEC0, ped)
end

function SetPedDropsWeaponsWhenDead(ped, toggle)
	return _in(0x476AE72C1D19D1A8, ped, toggle)
end

--- This is the SET_CHAR_DUCKING from GTA IV, that makes Peds duck. This function does nothing in GTA V. It cannot set the ped as ducking in vehicles, and IS_PED_DUCKING will always return false.
function SetPedDucking(ped, toggle)
	return _in(0x030983CA930B692D, ped, toggle)
end

--- This native sets the glow intensity of illuminated clothing items.
-- This native does **NOT** need to be executed every tick.
-- This native is **NOT** synced with other connected players, you will have to set the opacity on the ped on all clients individually.
-- Glow intensity is a value between `0.0` and `1.0`.
-- In some older decompiled scripts this is known as `_SET_PED_REFLECTION_INTENSITY`.
-- Since there's no joaat hash for this, I find `_SET_PED_ILLUMINATED_CLOTHING_GLOW_INTENSITY` more descriptive than `_SET_PED_REFLECTION_INTENSITY`.
-- Use [`GetPedIlluminatedClothingGlowIntensity`](#\_0x1461B28A06717D68) to get the illuminated clothing glow intensity of a specific ped.
-- Intensity: `1.0`:
-- ![](https://www.vespura.com/hi/i/2018-11-13\_17-03\_c2e23\_229.png)
-- Intensity: `0.0`:
-- ![](https://www.vespura.com/hi/i/2018-11-13\_17-03\_35c33\_230.png)
-- **Examples code result**:
-- ![](https://www.vespura.com/hi/i/2018-11-13\_17-11\_10199\_232.gif)
-- (Direct link if embed doesn't work: [here](https://www.vespura.com/hi/i/2018-11-13\_17-11\_10199\_232.gif))
-- @param ped The ped to set the glow intensity on.
-- @param intensity The glow intensity, value between `0.0` and `1.0`.
function SetPedEmissiveIntensity(ped, intensity)
	return _in(0x4E90D746056E273D, ped, intensity)
end
N_0x4e90d746056e273d = SetPedEmissiveIntensity
SetPedIlluminatedClothingGlowIntensity = SetPedEmissiveIntensity

function SetPedEnableWeaponBlocking(ped, toggle)
	return _in(0x97A790315D3831FD, ped, toggle)
end

--- Something related to the environmental effects natives.
-- In the "agency_heist3b" script, p1 - p3 are always under 100 - usually they are {87, 81, 68}. If SET_PED_ENVEFF_SCALE is set to 0.65 (instead of the usual 1.0), they use {74, 69, 60}
function SetPedEnveffColorModulator(ped, r, g, b)
	return _in(0xD69411AA0CEBF9E9, ped, r, g, b)
end
N_0xd69411aa0cebf9e9 = SetPedEnveffColorModulator

--- Values look to be between 0.0 and 1.0
-- From decompiled scripts: 0.0, 0.6, 0.65, 0.8, 1.0
-- You are correct, just looked in IDA it breaks from the function if it's less than 0.0f or greater than 1.0f.
function SetPedEnveffScale(ped, value)
	return _in(0xBF29516833893561, ped, value)
end

--- Used for freemode (online) characters.
-- Indices:
-- 1.  black
-- 2.  very light blue/green
-- 3.  dark blue
-- 4.  brown
-- 5.  darker brown
-- 6.  light brown
-- 7.  blue
-- 8.  light blue
-- 9.  pink
-- 10. yellow
-- 11. purple
-- 12. black
-- 13. dark green
-- 14. light brown
-- 15. yellow/black pattern
-- 16. light colored spiral pattern
-- 17. shiny red
-- 18. shiny half blue/half red
-- 19. half black/half light blue
-- 20. white/red perimter
-- 21. green snake
-- 22. red snake
-- 23. dark blue snake
-- 24. dark yellow
-- 25. bright yellow
-- 26. all black
-- 27. red small pupil
-- 28. devil blue/black
-- 29. white small pupil
-- 30. glossed over
function SetPedEyeColor(ped, index)
	return _in(0x50B56988B170AFDF, ped, index)
end

--- Sets the various freemode face features, e.g. nose length, chin shape. Scale ranges from -1.0 to 1.0.
-- Index can be 0 - 19
-- SET_PED_M*
-- Here is the list of names. It starts at 0 and runs in sequence
-- Face_Feature
-- Nose_Width
-- Nose_Peak_Hight
-- Nose_Peak_Lenght
-- Nose_Bone_High
-- Nose_Peak_Lowering
-- Nose_Bone_Twist
-- EyeBrown_High
-- EyeBrown_Forward
-- Cheeks_Bone_High
-- Cheeks_Bone_Width
-- Cheeks_Width
-- Eyes_Openning
-- Lips_Thickness
-- Jaw_Bone_Width: Bone size to sides
-- Jaw_Bone_Back_Lenght: Bone size to back
-- Chimp_Bone_Lowering: Go Down
-- Chimp_Bone_Lenght: Go forward
-- Chimp_Bone_Width
-- Chimp_Hole
-- Neck_Thikness
function SetPedFaceFeature(ped, index, scale)
	return _in(0x71A5C1DBA060049E, ped, index, scale)
end

--- FIRING_PATTERN_BURST_FIRE = 0xD6FF6D61 ( 1073727030 )
-- FIRING_PATTERN_BURST_FIRE_IN_COVER = 0x026321F1 ( 40051185 )
-- FIRING_PATTERN_BURST_FIRE_DRIVEBY = 0xD31265F2 ( -753768974 )
-- FIRING_PATTERN_FROM_GROUND = 0x2264E5D6 ( 577037782 )
-- FIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC = 0x7A845691 ( 2055493265 )
-- FIRING_PATTERN_FULL_AUTO = 0xC6EE6B4C ( -957453492 )
-- FIRING_PATTERN_SINGLE_SHOT = 0x5D60E4E0 ( 1566631136 )
-- FIRING_PATTERN_BURST_FIRE_PISTOL = 0xA018DB8A ( -1608983670 )
-- FIRING_PATTERN_BURST_FIRE_SMG = 0xD10DADEE ( 1863348768 )
-- FIRING_PATTERN_BURST_FIRE_RIFLE = 0x9C74B406 ( -1670073338 )
-- FIRING_PATTERN_BURST_FIRE_MG = 0xB573C5B4 ( -1250703948 )
-- FIRING_PATTERN_BURST_FIRE_PUMPSHOTGUN = 0x00BAC39B ( 12239771 )
-- FIRING_PATTERN_BURST_FIRE_HELI = 0x914E786F ( -1857128337 )
-- FIRING_PATTERN_BURST_FIRE_MICRO = 0x42EF03FD ( 1122960381 )
-- FIRING_PATTERN_SHORT_BURSTS = 0x1A92D7DF ( 445831135 )
-- FIRING_PATTERN_SLOW_FIRE_TANK = 0xE2CA3A71 ( -490063247 )
-- if anyone is interested firing pattern info: pastebin.com/Px036isB
function SetPedFiringPattern(ped, patternHash)
	return _in(0x9AC577F5A12AD8A9, ped, _ch(patternHash))
end

--- bit 15 (0x8000) = force cower
function SetPedFleeAttributes(ped, attributeFlags, enable)
	return _in(0x70A2D1137C8ED7C9, ped, attributeFlags, enable)
end

--- p1/gadgetHash was always 0xFBAB5776 ("GADGET_PARACHUTE").
-- p2 is always true.
function SetPedGadget(ped, gadgetHash, p2)
	return _in(0xD0D7B1E680ED4A1A, ped, _ch(gadgetHash), p2)
end

function SetPedGeneratesDeadBodyEvents(ped, toggle)
	return _in(0x7FB17BA2E7DECA5B, ped, toggle)
end

--- From the scripts:
-- PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),
-- "ANIM_GROUP_GESTURE_MISS_FRA0");
-- PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),
-- "ANIM_GROUP_GESTURE_MISS_DocksSetup1");
function SetPedGestureGroup(ped, animGroupGesture)
	return _in(0xDDF803377F94AAA8, ped, _ts(animGroupGesture))
end

function SetPedGetOutUpsideDownVehicle(ped, toggle)
	return _in(0xBC0ED94165A48BC2, ped, toggle)
end

--- enable or disable the gravity of a ped
-- Examples:
-- PED::SET_PED_GRAVITY(PLAYER::PLAYER_PED_ID(), 0x00000001);
-- PED::SET_PED_GRAVITY(Local_289[iVar0 /*20*/], 0x00000001);
function SetPedGravity(ped, toggle)
	return _in(0x9FF447B6B6AD960A, ped, toggle)
end

function SetPedGroupMemberPassengerIndex(ped, index)
	return _in(0x0BDDB8D9EC6BCF3C, ped, index)
end

--- Used for freemode (online) characters.
function SetPedHairColor(ped, colorID, highlightColorID)
	return _in(0x4CFFC65454C93A49, ped, colorID, highlightColorID)
end

--- This native turns on the AI blip on the specified ped. It also disappears automatically when the ped is too far or if the ped is dead. You don't need to control it with other natives.
-- See gtaforums.com/topic/884370-native-research-ai-blips for further information.
function SetPedHasAiBlip(ped, hasCone)
	return _in(0xD30C50DF888D58B5, ped, hasCone)
end
N_0xd30c50df888d58b5 = SetPedHasAiBlip
SetPedEnemyAiBlip = SetPedHasAiBlip
SetPedAiBlip = SetPedHasAiBlip

function SetPedHasAiBlipWithColor(ped, hasCone, color)
	return _in(0xB13DCB4C6FAAD238, ped, hasCone, color)
end
N_0xb13dcb4c6faad238 = SetPedHasAiBlipWithColor

--- The "shape" parameters control the shape of the ped's face. The "skin" parameters control the skin tone. ShapeMix and skinMix control how much the first and second IDs contribute,(typically mother and father.) ThirdMix overrides the others in favor of the third IDs. IsParent is set for "children" of the player character's grandparents during old-gen character creation. It has unknown effect otherwise.
-- The IDs start at zero and go Male Non-DLC, Female Non-DLC, Male DLC, and Female DLC.
-- !!!Can someone add working example for this???
-- try this:
-- headBlendData headData;
-- _GET_PED_HEAD_BLEND_DATA(PLAYER_PED_ID(), &headData);
-- SET_PED_HEAD_BLEND_DATA(PLAYER_PED_ID(), headData.shapeFirst, headData.shapeSecond, headData.shapeThird, headData.skinFirst, headData.skinSecond
-- , headData.skinThird, headData.shapeMix, headData.skinMix, headData.skinThird, 0);
-- For more info please refer to this topic.
-- gtaforums.com/topic/858970-all-gtao-face-ids-pedset-ped-head-blend-data-explained
function SetPedHeadBlendData(ped, shapeFirstID, shapeSecondID, shapeThirdID, skinFirstID, skinSecondID, skinThirdID, shapeMix, skinMix, thirdMix, isParent)
	return _in(0x9414E18B9434C2FE, ped, shapeFirstID, shapeSecondID, shapeThirdID, skinFirstID, skinSecondID, skinThirdID, shapeMix, skinMix, thirdMix, isParent)
end

--- OverlayID ranges from 0 to 12, index from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1, and opacity from 0.0 to 1.0.
-- overlayID       Part                  Index, to disable
-- 0               Blemishes             0 - 23, 255
-- 1               Facial Hair           0 - 28, 255
-- 2               Eyebrows              0 - 33, 255
-- 3               Ageing                0 - 14, 255
-- 4               Makeup                0 - 74, 255
-- 5               Blush                 0 - 6, 255
-- 6               Complexion            0 - 11, 255
-- 7               Sun Damage            0 - 10, 255
-- 8               Lipstick              0 - 9, 255
-- 9               Moles/Freckles        0 - 17, 255
-- 10              Chest Hair            0 - 16, 255
-- 11              Body Blemishes        0 - 11, 255
-- 12              Add Body Blemishes    0 - 1, 255
function SetPedHeadOverlay(ped, overlayID, index, opacity)
	return _in(0x48F44967FA05CC1E, ped, overlayID, index, opacity)
end

--- Used for freemode (online) characters.
-- ColorType is 1 for eyebrows, beards, and chest hair; 2 for blush and lipstick; and 0 otherwise, though not called in those cases.
-- Called after SET_PED_HEAD_OVERLAY().
function SetPedHeadOverlayColor(ped, overlayID, colorType, colorID, secondColorID)
	return _in(0x497BF74A7B9CB952, ped, overlayID, colorType, colorID, secondColorID)
end

function SetPedHearingRange(ped, value)
	return _in(0x33A8F7F7D5F7F33C, ped, value)
end

function SetPedHeatscaleOverride(ped, heatScale)
	return _in(0xC1F6EBF9A3D55538, ped, heatScale)
end
N_0xc1f6ebf9a3d55538 = SetPedHeatscaleOverride

function SetPedHelmet(ped, canWearHelmet)
	return _in(0x560A43136EB58105, ped, canWearHelmet)
end

function SetPedHelmetFlag(ped, helmetFlag)
	return _in(0xC0E78D5C2CE3EB25, ped, helmetFlag)
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
-- ```
-- ```
-- NativeDB Added Parameter 3: BOOL p2
function SetPedHelmetPropIndex(ped, propIndex)
	return _in(0x26D83693ED99291C, ped, propIndex)
end

function SetPedHelmetTextureIndex(ped, textureIndex)
	return _in(0xF1550C4BD22582E2, ped, textureIndex)
end

function SetPedHelmetUnk(ped, p1, p2, p3)
	return _in(0x3F7325574E41B44D, ped, p1, p2, p3)
end
N_0x3f7325574e41b44d = SetPedHelmetUnk

function SetPedHighlyPerceptive(ped, toggle)
	return _in(0x52D59AB61DDC05DD, ped, toggle)
end
N_0x52d59ab61ddc05dd = SetPedHighlyPerceptive

function SetPedIdRange(ped, value)
	return _in(0xF107E836A70DCE05, ped, value)
end

--- PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_PASSENGER"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_RESTRICTED_PASSENGER"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT_REAR"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(l_95, MISC::GET_HASH_KEY("MISS_FAMILY2_JIMMY_BICYCLE"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(num3, MISC::GET_HASH_KEY("MISSFBI2_MICHAEL_DRIVEBY"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISS_ARMENIAN3_FRANKLIN_TENSE"));
-- PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISSFBI5_TREVOR_DRIVING"));
function SetPedInVehicleContext(ped, context)
	return _in(0x530071295899A8C6, ped, _ch(context))
end

function SetPedIncreasedAvoidanceRadius(ped)
	return _in(0x570389D1C3DE3C6B, ped)
end
N_0x570389d1c3de3c6b = SetPedIncreasedAvoidanceRadius

function SetPedInfiniteAmmo(ped, toggle, weaponHash)
	return _in(0x3EDCB0505123623B, ped, toggle, _ch(weaponHash))
end

function SetPedInfiniteAmmoClip(ped, toggle)
	return _in(0x183DADC6AA953186, ped, toggle)
end

function SetPedIntoVehicle(ped, vehicle, seatIndex)
	return _in(0xF75B0D629E1C063D, ped, vehicle, seatIndex)
end

--- Sets the ped drunk sounds.  Only works with PLAYER_PED_ID
-- ====================================================
-- As mentioned above, this only sets the drunk sound to ped/player.
-- To give the Ped a drunk effect with drunk walking animation try using SET_PED_MOVEMENT_CLIPSET
-- Below is an example
-- if (!Function.Call<bool>(Hash.HAS_ANIM_SET_LOADED, "move_m@drunk@verydrunk"))
-- {
-- Function.Call(Hash.REQUEST_ANIM_SET, "move_m@drunk@verydrunk");
-- }
-- Function.Call(Hash.SET_PED_MOVEMENT_CLIPSET, Ped.Handle, "move_m@drunk@verydrunk", 0x3E800000);
-- And to stop the effect use
-- RESET_PED_MOVEMENT_CLIPSET
function SetPedIsDrunk(ped, toggle)
	return _in(0x95D2D383D5396B8A, ped, toggle)
end

function SetPedKeepTask(ped, toggle)
	return _in(0x971D38760FBC02EF, ped, toggle)
end

--- "IK" stands for "Inverse kinematics." I assume this has something to do with how the ped uses his legs to balance. In the scripts, the second parameter is always an int with a value of 2, 0, or sometimes 1
function SetPedLegIkMode(ped, mode)
	return _in(0xC396F5B86FF9FEBD, ped, mode)
end

function SetPedLodMultiplier(ped, multiplier)
	return _in(0xDC2C5C242AAC342B, ped, multiplier)
end

--- sets the maximum health of a ped
-- I think it's never been used in any script
function SetPedMaxHealth(ped, value)
	return _in(0xF5F6378C4F3419D3, ped, value)
end

function SetPedMaxMoveBlendRatio(ped, value)
	return _in(0x433083750C5E064A, ped, value)
end

function SetPedMaxTimeInWater(ped, value)
	return _in(0x43C851690662113D, ped, value)
end

--- Set the maximum time a ped can stay underwater. Maximum seems to be 50 seconds.
-- @param ped Ped id.
-- @param value Time in seconds. Maximum is 50.0, any value above will be changed to 50.0.
function SetPedMaxTimeUnderwater(ped, value)
	return _in(0x6BA428C528D9E522, ped, value)
end

--- Ped will stay on the ground after being stunned for at lest ms time. (in milliseconds)
function SetPedMinGroundTimeForStungun(ped, ms)
	return _in(0xFA0675AB151073FA, ped, ms)
end

function SetPedMinMoveBlendRatio(ped, value)
	return _in(0x01A898D26E2333DD, ped, value)
end

function SetPedModelIsSuppressed(model, toggle)
	return _in(0xE163A4BCE4DE6F11, _ch(model), toggle)
end

--- Overrides a ped model personality type.
-- @param modelHash Ped's model.
-- @param personalityHash Personality hash.
function SetPedModelPersonality(modelHash, personalityHash)
	return _in(0x46f6b38b, _ch(modelHash), _ch(personalityHash))
end

--- Maximum possible amount of money on MP is 2000. ~JX
-- -----------------------------------------------------------------------------
-- Maximum amount that a ped can theoretically have is 65535 (0xFFFF) since the amount is stored as an unsigned short (uint16_t) value.
function SetPedMoney(ped, amount)
	return _in(0xA9C8960E8684C1B5, ped, amount)
end

function SetPedMotionBlur(ped, toggle)
	return _in(0x0A986918B102B448, ped, toggle)
end

function SetPedMoveAnimsBlendOut(ped)
	return _in(0x9E8C908F41584ECD, ped)
end

--- Min: 0.00
-- Max: 10.00
-- Can be used in combo with fast run cheat.
-- When value is set to 10.00:
-- Sprinting without fast run cheat: 66 m/s
-- Sprinting with fast run cheat: 77 m/s
-- Needs to be looped!
-- Note: According to IDA for the Xbox360 xex, when they check bgt they seem to have the min to 0.0f, but the max set to 1.15f not 10.0f.
function SetPedMoveRateOverride(ped, value)
	return _in(0x085BF80FA50A39D1, ped, value)
end

--- List of movement clipsets:
-- Thanks to elsewhat for list.
-- "ANIM_GROUP_MOVE_BALLISTIC"
-- "ANIM_GROUP_MOVE_LEMAR_ALLEY"
-- "clipset@move@trash_fast_turn"
-- "FEMALE_FAST_RUNNER"
-- "missfbi4prepp1_garbageman"
-- "move_characters@franklin@fire"
-- "move_characters@Jimmy@slow@"
-- "move_characters@michael@fire"
-- "move_f@flee@a"
-- "move_f@scared"
-- "move_f@sexy@a"
-- "move_heist_lester"
-- "move_injured_generic"
-- "move_lester_CaneUp"
-- "move_m@bag"
-- "MOVE_M@BAIL_BOND_NOT_TAZERED"
-- "MOVE_M@BAIL_BOND_TAZERED"
-- "move_m@brave"
-- "move_m@casual@d"
-- "move_m@drunk@moderatedrunk"
-- "MOVE_M@DRUNK@MODERATEDRUNK"
-- "MOVE_M@DRUNK@MODERATEDRUNK_HEAD_UP"
-- "MOVE_M@DRUNK@SLIGHTLYDRUNK"
-- "MOVE_M@DRUNK@VERYDRUNK"
-- "move_m@fire"
-- "move_m@gangster@var_e"
-- "move_m@gangster@var_f"
-- "move_m@gangster@var_i"
-- "move_m@JOG@"
-- "MOVE_M@PRISON_GAURD"
-- "MOVE_P_M_ONE"
-- "MOVE_P_M_ONE_BRIEFCASE"
-- "move_p_m_zero_janitor"
-- "move_p_m_zero_slow"
-- "move_ped_bucket"
-- "move_ped_crouched"
-- "move_ped_mop"
-- "MOVE_M@FEMME@"
-- "MOVE_F@FEMME@"
-- "MOVE_M@GANGSTER@NG"
-- "MOVE_F@GANGSTER@NG"
-- "MOVE_M@POSH@"
-- "MOVE_F@POSH@"
-- "MOVE_M@TOUGH_GUY@"
-- "MOVE_F@TOUGH_GUY@"
-- ~ NotCrunchyTaco
-- @param transitionSpeed time in seconds it takes to transition from one movement clipset to another.
function SetPedMovementClipset(ped, clipSet, transitionSpeed)
	return _in(0xAF8A94EDE7712BEF, ped, _ts(clipSet), transitionSpeed)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
-- *untested but char *name could also be a hash for a localized string
function SetPedNameDebug(ped, name)
	return _in(0x98EFA132A4117BE1, ped, _ts(name))
end

function SetPedNeverLeavesGroup(ped, toggle)
	return _in(0x3DBFC55D5C9BB447, ped, toggle)
end

--- The distance between these points, is the diagonal of a box (remember it's 3D).
function SetPedNonCreationArea(x1, y1, z1, x2, y2, z2)
	return _in(0xEE01041D559983EA, x1, y1, z1, x2, y2, z2)
end

function SetPedPanicExitScenario(ped, x, y, z)
	return _in(0xFE07FF6495D52E2A, ped, x, y, z, _ri)
end
N_0xfe07ff6495d52e2a = SetPedPanicExitScenario

function SetPedParachuteTintIndex(ped, tintIndex)
	return _in(0x333FC8DB079B7186, ped, tintIndex)
end

function SetPedPathAvoidFire(ped, avoidFire)
	return _in(0x4455517B28441E60, ped, avoidFire)
end

function SetPedPathCanDropFromHeight(ped, Toggle)
	return _in(0xE361C5C71C431A4F, ped, Toggle)
end

function SetPedPathCanUseClimbovers(ped, Toggle)
	return _in(0x8E06A6FE76C9EFF4, ped, Toggle)
end

function SetPedPathCanUseLadders(ped, Toggle)
	return _in(0x77A5B103C87F476E, ped, Toggle)
end

--- Default modifier is 1.0, minimum is 0.0 and maximum is 10.0.
function SetPedPathClimbCostModifier(ped, modifier)
	return _in(0x88E32DB8C1A4AA4B, ped, modifier)
end
N_0x88e32db8c1a4aa4b = SetPedPathClimbCostModifier

function SetPedPathMayEnterWater(ped, mayEnterWater)
	return _in(0xF35425A4204367EC, ped, mayEnterWater)
end
SetPedPathsWidthPlant = SetPedPathMayEnterWater

function SetPedPathPreferToAvoidWater(ped, avoidWater)
	return _in(0x38FE1EC73743793C, ped, avoidWater)
end

--- NativeDB Added Parameter 7: Any p6
function SetPedPathsBackToOriginal(p0, p1, p2, p3, p4, p5)
	return _in(0xE04B48F2CC926253, p0, p1, p2, p3, p4, p5)
end

--- NativeDB Added Parameter 8: Any p7
function SetPedPathsInArea(x1, y1, z1, x2, y2, z2, unknown)
	return _in(0x34F060F4BF92E018, x1, y1, z1, x2, y2, z2, unknown)
end

--- i could be time. Only example in the decompiled scripts uses it as -1.
function SetPedPinnedDown(ped, pinned, i)
	return _in(0xAAD6D1ACF08F4612, ped, pinned, i, _ri)
end

--- **This native does absolutely nothing, just a nullsub**
-- ```
-- Points to the same function as for example GET_RANDOM_VEHICLE_MODEL_IN_MEMORY and it does absolutely nothing.
-- ```
function SetPedPlaysHeadOnHornAnimWhenDiesInVehicle(ped, toggle)
	return _in(0x94D94BF1A75AED3D, ped, toggle)
end

--- Control how many new (ambient?) peds will spawn in the game world.
-- Range for p0 seems to be 0-3, where 0 is none and 3 is the normal level.
function SetPedPopulationBudget(p0)
	return _in(0x8C95333CFC3340F3, p0)
end

function SetPedPreferredCoverSet(ped, itemSet)
	return _in(0x8421EB4DA7E391B9, ped, itemSet)
end
N_0x8421eb4da7e391b9 = SetPedPreferredCoverSet

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function SetPedPreloadPropData(ped, componentId, drawableId, TextureId)
	return _in(0x2B16A3BFF1FBCE49, ped, componentId, drawableId, TextureId, _r)
end
N_0x2b16a3bff1fbce49 = SetPedPreloadPropData
IsPedPropValid = SetPedPreloadPropData

--- from extreme3.c4
-- PED::_39D55A620FCB6A3A(PLAYER::PLAYER_PED_ID(), 8, PED::GET_PED_DRAWABLE_VARIATION(PLAYER::PLAYER_PED_ID(), 8), PED::GET_PED_TEXTURE_VARIATION(PLAYER::PLAYER_PED_ID(), 8));
-- p1 is probably componentId
function SetPedPreloadVariationData(ped, slot, drawableId, textureId)
	return _in(0x39D55A620FCB6A3A, ped, slot, drawableId, textureId, _ri)
end
N_0x39d55a620fcb6a3a = SetPedPreloadVariationData

--- This is only called once in the scripts.
-- sub_1CD9(&l_49, 0, getElem(3, &l_34, 4), "MICHAEL", 0, 1);
-- sub_1CA8("WORLD_HUMAN_SMOKING", 2);
-- PED::SET_PED_PRIMARY_LOOKAT(getElem(3, &l_34, 4), PLAYER::PLAYER_PED_ID());
function SetPedPrimaryLookat(ped, lookAt)
	return _in(0xCD17B554996A8D9E, ped, lookAt)
end

--- This native is used to set prop variation on a ped. Components, drawables and textures IDs are related to the ped model.
-- ### MP Freemode list of props
-- **0**: Hat\
-- **1**: Glass\
-- **2**: Ear\
-- **6**: Watch\
-- **7**: Bracelet
-- ### Related and useful natives
-- [GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS](#\_0x5FAF9754E789FB47)\
-- [GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS](#\_0xA6E7F1CEB523E171)
-- [List of component/props ID](https://gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html) of player_two with examples
-- @param ped The ped handle.
-- @param componentId The component that you want to set.
-- @param drawableId The drawable id that is going to be set.
-- @param textureId The texture id of the drawable.
-- @param attach Attached or not.
function SetPedPropIndex(ped, componentId, drawableId, textureId, attach)
	return _in(0x93376B65A266EB5F, ped, componentId, drawableId, textureId, attach)
end

function SetPedRagdollForceFall(ped)
	return _in(0x01F6594B923B9251, ped)
end

--- Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
function SetPedRagdollOnCollision(ped, toggle)
	return _in(0xF0A4F1BBF4FA7497, ped, toggle)
end

--- p1 is always 0 in R* scripts; and a quick disassembly seems to indicate that p1 is unused.
-- List of component/props ID:
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function SetPedRandomComponentVariation(ped, p1)
	return _in(0xC8A9481A01E63C28, ped, p1)
end

--- List of component/props ID
-- gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
function SetPedRandomProps(ped)
	return _in(0xC44AA05345C992C6, ped)
end

function SetPedRelationshipGroupDefaultHash(ped, hash)
	return _in(0xADB3F206518799E8, ped, _ch(hash))
end

function SetPedRelationshipGroupHash(ped, hash)
	return _in(0xC80A74AC829DDD92, ped, _ch(hash))
end

function SetPedReserveParachuteTintIndex(ped, p1)
	return _in(0xE88DA0751C22A2AD, ped, p1)
end

--- PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 240, 1);
-- Known values:
function SetPedResetFlag(ped, flagId, doReset)
	return _in(0xC1E8A365BF3B29F2, ped, flagId, doReset)
end

--- Assigns some ambient voice to the ped.
function SetPedScream(ped)
	return _in(0x40CF0D12D142A9E8, ped)
end
N_0x40cf0d12d142a9e8 = SetPedScream

--- This native sets a scuba mask for freemode models and an oxygen bottle for player_\* models. It works on freemode and player_\* models.
function SetPedScubaGearVariation(ped)
	return _in(0x36C6984C3ED0C911, ped)
end
N_0x36c6984c3ed0c911 = SetPedScubaGearVariation

function SetPedSeeingRange(ped, value)
	return _in(0xF29CF591C4BF6CEE, ped, value)
end

--- Returns handle of the projectile.
function SetPedShootOrdnanceWeapon(ped, p1)
	return _in(0xB4C8D77C80C0421E, ped, p1, _ri)
end
N_0xb4c8d77c80c0421e = SetPedShootOrdnanceWeapon

--- shootRate 0-1000
function SetPedShootRate(ped, shootRate)
	return _in(0x614DA022990752DC, ped, shootRate)
end

function SetPedShootsAtCoord(ped, x, y, z, toggle)
	return _in(0x96A05E4FB321B1BA, ped, x, y, z, toggle)
end

function SetPedShouldPlayDirectedScenarioExit(p0, p1, p2, p3)
	return _in(0xEC6935EBE0847B90, p0, p1, p2, p3, _ri)
end
N_0xec6935ebe0847b90 = SetPedShouldPlayDirectedScenarioExit

function SetPedShouldPlayFleeScenarioExit(ped, p1, p2, p3)
	return _in(0xEEED8FAFEC331A70, ped, p1, p2, p3, _ri)
end
N_0xeeed8fafec331a70 = SetPedShouldPlayFleeScenarioExit

function SetPedShouldPlayImmediateScenarioExit(ped)
	return _in(0xF1C03A5352243A30, ped)
end
N_0xf1c03a5352243a30 = SetPedShouldPlayImmediateScenarioExit

function SetPedShouldPlayNormalScenarioExit(ped)
	return _in(0xA3A9299C4F2ADB98, ped)
end
N_0xa3a9299c4f2adb98 = SetPedShouldPlayNormalScenarioExit

function SetPedSphereDefensiveArea(ped, x, y, z, radius, p5, p6)
	return _in(0x9D3151A373974804, ped, x, y, z, radius, p5, p6)
end

function SetPedStayInVehicleWhenJacked(ped, toggle)
	return _in(0xEDF4079F9D54C9A1, ped, toggle)
end

--- p1 is usually 0 in the scripts. action is either 0 or a pointer to "DEFAULT_ACTION".
function SetPedStealthMovement(ped, p1, action)
	return _in(0x88CBB5CEB96B7BD2, ped, p1, _ts(action))
end

function SetPedSteersAroundObjects(ped, toggle)
	return _in(0x1509C089ADC208BF, ped, toggle)
end

function SetPedSteersAroundPeds(ped, toggle)
	return _in(0x46F2193B3AD1D891, ped, toggle)
end

function SetPedSteersAroundVehicles(ped, toggle)
	return _in(0xEB6FB9D48DDE23EC, ped, toggle)
end

function SetPedStrafeClipset(ped, clipSet)
	return _in(0x29A28F3F8CF6D854, ped, _ts(clipSet))
end

--- Ped no longer takes critical damage modifiers if set to FALSE.
-- Example: Headshotting a player no longer one shots them. Instead they will take the same damage as a torso shot.
function SetPedSuffersCriticalHits(ped, toggle)
	return _in(0xEBD76F2359F190AC, ped, toggle)
end

--- Sweat is set to 100.0 or 0.0 in the decompiled scripts.
function SetPedSweat(ped, sweat)
	return _in(0x27B0405F59637D1F, ped, sweat)
end

--- Speech related.
function SetPedTalk(ped)
	return _in(0x4ADA3F19BE4A6047, ped)
end
N_0x4ada3f19be4a6047 = SetPedTalk

--- Only 1 and 2 appear in the scripts. combatbehaviour.meta seems to only have TLR_SearchForTarget for all peds, but we don't know if that's 1 or 2.
function SetPedTargetLossResponse(ped, responseType)
	return _in(0x0703B9079823DA4A, ped, responseType)
end

function SetPedToInformRespectedFriends(ped, radius, maxFriends)
	return _in(0x112942C6E708F70B, ped, radius, maxFriends)
end

function SetPedToLoadCover(ped, toggle)
	return _in(0x332B562EEDA62399, ped, toggle)
end

--- p4/p5: Unusued in TU27
-- ### Ragdoll Types
-- **0**: CTaskNMRelax
-- **1**: CTaskNMScriptControl: Hardcoded not to work in networked environments.
-- **Else**: CTaskNMBalance
-- @param time1 Time(ms) Ped is in ragdoll mode; only applies to ragdoll types 0 and not 1.
function SetPedToRagdoll(ped, time1, time2, ragdollType, p4, p5, p6)
	return _in(0xAE99FB955581844A, ped, time1, time2, ragdollType, p4, p5, p6, _r)
end

--- Return variable is never used in R*'s scripts.
-- Not sure what p2 does. It seems like it would be a time judging by it's usage in R*'s scripts, but didn't seem to affect anything in my testings.
-- x, y, and z are coordinates, most likely to where the ped will fall.
-- p7 is probably the force of the fall, but untested, so I left the variable name the same.
-- p8 to p13 are always 0f in R*'s scripts.
-- (Simplified) Example of the usage of the function from R*'s scripts:
-- ped::set_ped_to_ragdoll_with_fall(ped, 1500, 2000, 1, -entity::get_entity_forward_vector(ped), 1f, 0f, 0f, 0f, 0f, 0f, 0f);
function SetPedToRagdollWithFall(ped, time, p2, ragdollType, x, y, z, p7, p8, p9, p10, p11, p12, p13)
	return _in(0xD76632D99E4966C8, ped, time, p2, ragdollType, x, y, z, p7, p8, p9, p10, p11, p12, p13, _r)
end

--- p2 is usually -1 in the scripts. action is either 0 or "DEFAULT_ACTION".
function SetPedUsingActionMode(ped, p1, p2, action)
	return _in(0xD75ACCF5E0FB5367, ped, p1, p2, _ts(action))
end

--- NativeDB Added Parameter 5: Any p4
-- @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
function SetPedVehicleForcedSeatUsage(ped, vehicle, seatIndex, flags)
	return _in(0x952F06BEECD775CC, ped, vehicle, seatIndex, flags)
end
N_0x952f06beecd775cc = SetPedVehicleForcedSeatUsage

function SetPedVisualFieldCenterAngle(ped, angle)
	return _in(0x3B6405E8AB34A907, ped, angle)
end

function SetPedVisualFieldMaxAngle(ped, value)
	return _in(0x70793BDCA1E854D4, ped, value)
end

--- This native refers to the field of vision the ped has above them, starting at 0 degrees. 90f would let the ped see enemies directly above of them.
function SetPedVisualFieldMaxElevationAngle(ped, angle)
	return _in(0x78D0B67629D75856, ped, angle)
end

function SetPedVisualFieldMinAngle(ped, value)
	return _in(0x2DB492222FB21E26, ped, value)
end

--- This native refers to the field of vision the ped has below them, starting at 0 degrees. The angle value should be negative.
function SetPedVisualFieldMinElevationAngle(ped, angle)
	return _in(0x7A276EB2C224D70F, ped, angle)
end

function SetPedVisualFieldPeripheralRange(ped, range)
	return _in(0x9C74B0BC831B753A, ped, range)
end

--- From the scripts:
-- AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("PAIGE_PVG"));
-- AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("TALINA_PVG"));
-- AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_BLACK_PVG"));
-- AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_WHITE_PVG"));
function SetPedVoiceGroup(ped, voiceGroupHash)
	return _in(0x7CDC8C3B89F661B3, ped, _ch(voiceGroupHash))
end
N_0x7cdc8c3b89f661b3 = SetPedVoiceGroup

function SetPedWaypointRouteOffset(p0, p1, p2, p3)
	return _in(0xED98E10B0AFCE4B4, p0, p1, p2, p3, _ri)
end

function SetPedWeaponLiveryColor(ped, weaponHash, camoComponentHash, colorIndex)
	return _in(0x9FE5633880ECD8ED, ped, _ch(weaponHash), _ch(camoComponentHash), colorIndex)
end
N_0x9fe5633880ecd8ed = SetPedWeaponLiveryColor

function SetPedWeaponMovementClipset(ped, clipSet)
	return _in(0x2622E35B77D3ACA2, ped, _ts(clipSet))
end

--- tintIndex can be the following:
-- 0 : Default/Black
-- 1 : Green
-- 2 : Gold
-- 3 : Pink
-- 4 : Army
-- 5 : LSPD
-- 6 : Orange
-- 7 : Platinum
-- tintIndex for MK2 weapons :
-- 0 : Classic Black
-- 1 : Classic Gray
-- 2 : Classic Two-Tone
-- 3 : Classic White
-- 4 : Classic Beige
-- 5 : Classic Green
-- 6 : Classic Blue
-- 7 : Classic Earth
-- 8 : Classic Brown & Black
-- 9 : Red Contrast
-- 10 : Blue Contrast
-- 11 : Yellow Contrast
-- 12 : Orange Contrast
-- 13 : Bold Pink
-- 14 : Bold Purple & Yellow
-- 15 : Bold Orange
-- 16 : Bold Green & Purple
-- 17 : Bold Red Features
-- 18 : Bold Green Features
-- 19 : Bold Cyan Features
-- 20 : Bold Yellow Features
-- 21 : Bold Red & White
-- 22 : Bold Blue & White
-- 23 : Metallic Gold
-- 24 : Metallic Platinum
-- 25 : Metallic Gray & Lilac
-- 26 : Metallic Purple & Lime
-- 27 : Metallic Red
-- 28 : Metallic Green
-- 29 : Metallic Blue
-- 30 : Metallic White & Aqua
-- 31 : Metallic Orange & Yellow
-- 32 : Mettalic Red and Yellow
-- @param ped The target ped
-- @param weaponHash The target weapon hash
-- @param tintIndex Tint for weapon hash
function SetPedWeaponTintIndex(ped, weaponHash, tintIndex)
	return _in(0x50969B9B89ED5738, ped, _ch(weaponHash), tintIndex)
end

--- combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function
function SetPedWetnessEnabledThisFrame(ped)
	return _in(0xB5485E4907B53019, ped)
end

--- It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.
function SetPedWetnessHeight(ped, height)
	return _in(0x44CB6447D2571AA0, ped, height)
end

function SetPickupAmmoAmountScaler(p0)
	return _in(0xE620FD3512A04F18, p0)
end
N_0xe620fd3512a04f18 = SetPickupAmmoAmountScaler

function SetPickupGenerationRangeMultiplier(multiplier)
	return _in(0x318516E02DE3ECE2, multiplier)
end
N_0x318516e02de3ece2 = SetPickupGenerationRangeMultiplier

function SetPickupHiddenWhenUncollectable(p0, p1)
	return _in(0x3ED2B83AB2E82799, p0, p1)
end
N_0x3ed2b83ab2e82799 = SetPickupHiddenWhenUncollectable

function SetPickupRegenerationTime(pickup, duration)
	return _in(0x78015C9B4B3ECC9D, pickup, duration)
end

--- min: 1.9f, max: 100.0f
function SetPickupRopeLengthForCargobob(cargobob, length1, length2, state)
	return _in(0x877C1EAEAC531023, cargobob, length1, length2, state)
end
N_0x877c1eaeac531023 = SetPickupRopeLengthForCargobob
SetCargobobHookPosition = SetPickupRopeLengthForCargobob

function SetPickupUncollectable(p0, p1)
	return _in(0x1C1B69FAE509BA97, p0, p1)
end
N_0x1c1b69fae509ba97 = SetPickupUncollectable

--- Works just like SET_VEHICLE_ENGINE_HEALTH, didn't saw any difference. But this native works only for planes.
function SetPlaneEngineHealth(vehicle, health)
	return _in(0x2A86A0475B6A1434, vehicle, health)
end
N_0x2a86a0475b6a1434 = SetPlaneEngineHealth

function SetPlanePropellersHealth(plane, health)
	return _in(0x4C815EB175086F84, plane, health)
end
N_0x4c815eb175086f84 = SetPlanePropellersHealth

--- This native sets the turbulence multiplier. It only works for planes.
-- 0.0 = no turbulence at all.
-- 1.0 = heavy turbulence.
-- Works by just calling it once, does not need to be called every tick.
-- @param vehicle The plane to set the multiplier for
-- @param multiplier The turbulence multiplier. Value between 0.0 and 1.0
function SetPlaneTurbulenceMultiplier(vehicle, multiplier)
	return _in(0xAD2D28A1AFDFF131, vehicle, multiplier)
end
N_0xad2d28a1afdff131 = SetPlaneTurbulenceMultiplier

function SetPlaybackSpeed(vehicle, speed)
	return _in(0x6683AB880E427778, vehicle, speed)
end

--- Identical to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER with 0 as arguments for p1 and p3.
function SetPlaybackToUseAi(vehicle, drivingStyle)
	return _in(0xA549C3B37EA28131, vehicle, drivingStyle)
end

--- Time is number of milliseconds before reverting, zero for indefinitely.
function SetPlaybackToUseAiTryToRevertBackLater(vehicle, time, drivingStyle, p3)
	return _in(0x6E63860BBB190730, vehicle, time, drivingStyle, p3)
end

function SetPlayerAirDefenseZoneFlag(player, zoneId, enable)
	return _in(0xECDC202B25E5CF48, player, zoneId, enable)
end
N_0xecdc202b25e5cf48 = SetPlayerAirDefenseZoneFlag

function SetPlayerAngry(ped, toggle)
	return _in(0xEA241BB04110F091, ped, toggle)
end

--- Sets the position of the arrow icon representing the player on both the minimap and world map.
-- Too bad this wouldn't work over the network (obviously not). Could spoof where we would be.
function SetPlayerBlipPositionThisFrame(x, y)
	return _in(0x77E2DD177910E1CF, x, y)
end

function SetPlayerBluetoothState(player, state)
	return _in(0x5DC40A8869C22141, player, state)
end
N_0x5dc40a8869c22141 = SetPlayerBluetoothState

--- Sets whether this player can be hassled by gangs.
function SetPlayerCanBeHassledByGangs(player, toggle)
	return _in(0xD5E460AD7020A246, player, toggle)
end

--- Sets whether the player is able to do drive-bys in vehicle (shooting & aiming in vehicles), this also includes middle finger taunts.
-- This is a toggle, it does not have to be ran every frame.
-- Example:
-- ```lua
-- SetPlayerCanDoDriveBy(PlayerId(), false)
-- ```
-- @param player The player to target.
-- @param toggle If set to false, disables the players ability to do drive bys.
function SetPlayerCanDoDriveBy(player, toggle)
	return _in(0x6E8834B52EC20C77, player, toggle)
end

function SetPlayerCanLeaveParachuteSmokeTrail(player, enabled)
	return _in(0xF401B182DBA8AF53, player, enabled)
end

--- Sets whether this player can take cover.
function SetPlayerCanUseCover(player, toggle)
	return _in(0xD465A8599DFF6814, player, toggle)
end

--- Displays cash change notifications on HUD.
function SetPlayerCashChange(cash, bank)
	return _in(0x0772DF77852C2E30, cash, bank)
end
SetSingleplayerHudCash = SetPlayerCashChange

--- 6 matches across 4 scripts. 5 occurrences were 240. The other was 255.
function SetPlayerClothLockCounter(value)
	return _in(0x14D913B777DFF5DA, value)
end

--- Every occurrence was either 0 or 2.
function SetPlayerClothPackageIndex(index)
	return _in(0x9F7BBA2EA6372500, index)
end

function SetPlayerClothPinFrames(player, p1)
	return _in(0x749FADDF97DFE930, player, p1)
end

--- Flags:
-- SPC_AMBIENT_SCRIPT = (1 << 1),
-- SPC_CLEAR_TASKS = (1 << 2),
-- SPC_REMOVE_FIRES = (1 << 3),
-- SPC_REMOVE_EXPLOSIONS = (1 << 4),
-- SPC_REMOVE_PROJECTILES = (1 << 5),
-- SPC_DEACTIVATE_GADGETS = (1 << 6),
-- SPC_REENABLE_CONTROL_ON_DEATH = (1 << 7),
-- SPC_LEAVE_CAMERA_CONTROL_ON = (1 << 8),
-- SPC_ALLOW_PLAYER_DAMAGE = (1 << 9),
-- SPC_DONT_STOP_OTHER_CARS_AROUND_PLAYER = (1 << 10),
-- SPC_PREVENT_EVERYBODY_BACKOFF = (1 << 11),
-- SPC_ALLOW_PAD_SHAKE = (1 << 12)
-- See: https://alloc8or.re/gta5/doc/enums/eSetPlayerControlFlag.txt
function SetPlayerControl(player, bHasControl, flags)
	return _in(0x8D32347D6D4C40A2, player, bHasControl, flags)
end

function SetPlayerFallDistance(player, distance)
	return _in(0xEFD79FA81DFBA9CB, player, distance)
end
N_0xefd79fa81dfba9cb = SetPlayerFallDistance

function SetPlayerForceSkipAimIntro(player, toggle)
	return _in(0x7651BC64AE59E128, player, toggle)
end

function SetPlayerForcedAim(player, toggle)
	return _in(0x0FEE4F80AC44A726, player, toggle)
end

function SetPlayerForcedZoom(player, toggle)
	return _in(0x75E7D505F2B15902, player, toggle)
end

function SetPlayerHasReserveParachute(player)
	return _in(0x7DDAB28D31FAC363, player)
end

function SetPlayerHealthRechargeLimit(player, limit)
	return _in(0xC388A0F065F5BC34, player, limit)
end
N_0xc388a0f065f5bc34 = SetPlayerHealthRechargeLimit

function SetPlayerHealthRechargeMultiplier(player, regenRate)
	return _in(0x5DB660B38DD98A31, player, regenRate)
end

--- NativeDB Introduced: v1180
function SetPlayerHomingRocketDisabled(player, p1)
	return _in(0xEE4EBDD2593BA844, player, p1)
end
N_0xee4ebdd2593ba844 = SetPlayerHomingRocketDisabled

--- Simply sets you as invincible (Health will not deplete).
-- Use 0x733A643B5B0C53C1 instead if you want Ragdoll enabled, which is equal to:
-- *(DWORD *)(playerPedAddress + 0x188) |= (1 << 9);
function SetPlayerInvincible(player, toggle)
	return _in(0x239528EACDC3E7DE, player, toggle)
end

function SetPlayerInvincibleKeepRagdollEnabled(player, toggle)
	return _in(0x6BC97F4F4BB3C04B, player, toggle)
end
N_0x6bc97f4f4bb3c04b = SetPlayerInvincibleKeepRagdollEnabled

function SetPlayerInvisibleLocally(player, toggle)
	return _in(0x12B37D54667DB0B8, player, toggle)
end

--- If toggle is true, the ped's head is shown in the pause menu
-- If toggle is false, the ped's head is not shown in the pause menu
function SetPlayerIsInAnimalForm(toggle)
	return _in(0x4EBB7E87AA0DBED4, toggle)
end
N_0x4ebb7e87aa0dbed4 = SetPlayerIsInAnimalForm
ShowPedInPauseMenu = SetPlayerIsInAnimalForm

--- If toggle is true, hides special ability bar / character name in the pause menu
-- If toggle is false, shows special ability bar / character name in the pause menu
-- SET_PLAYER_*
function SetPlayerIsInDirectorMode(toggle)
	return _in(0x808519373FD336A3, toggle)
end
N_0x808519373fd336a3 = SetPlayerIsInDirectorMode
SetDirectorMode = SetPlayerIsInDirectorMode

function SetPlayerLeavePedBehind(player, toggle)
	return _in(0xFF300C7649724A0B, player, toggle)
end
N_0xff300c7649724a0b = SetPlayerLeavePedBehind

--- Used to toggle the square up aim.
-- @param player The player ID to toggle the lock on for.
-- @param toggle Set to false to prevent lock on, set to true to allow for lock on.
function SetPlayerLockon(player, toggle)
	return _in(0x5C8B2F450EE4328E, player, toggle)
end

--- Affects the range of auto aim target.
function SetPlayerLockonRangeOverride(player, range)
	return _in(0x29961D490E5814FD, player, range)
end

--- Default is 100. Use player id and not ped id. For instance: PLAYER::SET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID(), 100); // main_persistent.ct4
function SetPlayerMaxArmour(player, value)
	return _in(0x77DFCCF5948B8C71, player, value)
end

function SetPlayerMaxStamina(playerId, maxStamina)
	return _in(0x35594f67, playerId, maxStamina, _r)
end

function SetPlayerMayNotEnterAnyVehicle(player)
	return _in(0x1DE37BBF9E9CC14A, player)
end

function SetPlayerMayOnlyEnterThisVehicle(player, vehicle)
	return _in(0x8026FF78F208978A, player, vehicle)
end

--- NativeDB Added Parameter 3: BOOL p2
function SetPlayerMeleeWeaponDamageModifier(player, modifier)
	return _in(0x4A3DC7ECCC321032, player, modifier)
end

--- modifier's min value is 0.1
function SetPlayerMeleeWeaponDefenseModifier(player, modifier)
	return _in(0xAE540335B4ABC4E2, player, modifier)
end

--- Set the model for a specific Player. Be aware that this will destroy the current Ped for the Player and create a new one, any reference to the old ped should be reset
-- Make sure to request the model first and wait until it has loaded.
-- @param player The player to set the model for
-- @param model The hash of the model to use
function SetPlayerModel(player, model)
	return _in(0x00A1CADD00108836, player, _ch(model))
end

function SetPlayerNoiseMultiplier(player, multiplier)
	return _in(0xDB89EF50FF25FCE9, player, multiplier)
end

--- example:
-- PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), 0x73268708);
function SetPlayerParachuteModelOverride(player, model)
	return _in(0x977DB4641F6FC3DB, player, _ch(model))
end

function SetPlayerParachutePackModelOverride(player, model)
	return _in(0xDC80A4C2F18A2B64, player, _ch(model))
end

--- tints 0- 13
-- 0 - unkown
-- 1 - unkown
-- 2 - unkown
-- 3 - unkown
-- 4 - unkown
function SetPlayerParachutePackTintIndex(player, tintIndex)
	return _in(0x93B0FB27C9A04060, player, tintIndex)
end

function SetPlayerParachuteSmokeTrailColor(player, r, g, b)
	return _in(0x8217FD371A4625CF, player, r, g, b)
end

--- Tints:
-- None = -1,
-- Rainbow = 0,
-- Red = 1,
-- SeasideStripes = 2,
-- WidowMaker = 3,
-- Patriot = 4,
-- Blue = 5,
-- Black = 6,
-- Hornet = 7,
-- AirFocce = 8,
-- Desert = 9,
-- Shadow = 10,
-- HighAltitude = 11,
-- Airbone = 12,
-- Sunrise = 13,
function SetPlayerParachuteTintIndex(player, tintIndex)
	return _in(0xA3D0E54541D9A5E5, player, tintIndex)
end

--- p1 was always 5.
-- p4 was always false.
function SetPlayerParachuteVariationOverride(player, p1, p2, p3, p4)
	return _in(0xD9284A8C0D48352C, player, p1, p2, p3, p4)
end

--- NativeDB Introduced: v2372
function SetPlayerReserveParachuteModelOverride(player, model)
	return _in(0x0764486AEDE748DB, player, _ch(model))
end

--- Tints:
-- None = -1,
-- Rainbow = 0,
-- Red = 1,
-- SeasideStripes = 2,
-- WidowMaker = 3,
-- Patriot = 4,
-- Blue = 5,
-- Black = 6,
-- Hornet = 7,
-- AirFocce = 8,
-- Desert = 9,
-- Shadow = 10,
-- HighAltitude = 11,
-- Airbone = 12,
-- Sunrise = 13,
function SetPlayerReserveParachuteTintIndex(player, index)
	return _in(0xAF04C87F5DC1DF38, player, index)
end

--- example:
-- flags: 0-6
-- PLAYER::SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS(PLAYER::PLAYER_ID(), 6);
-- wouldnt the flag be the seatIndex?
function SetPlayerResetFlagPreferRearSeats(player, flags)
	return _in(0x11D5F725F0E780E0, player, flags)
end

--- SET_PLAYER_*
function SetPlayerRockstarEditorDisabled(toggle)
	return _in(0x9D8D44ADBBA61EF2, toggle)
end
N_0x9d8d44adbba61ef2 = SetPlayerRockstarEditorDisabled

function SetPlayerShortSwitchStyle(style)
	return _in(0x5F2013F8BC24EE69, style)
end
N_0x5f2013f8bc24ee69 = SetPlayerShortSwitchStyle

function SetPlayerSimulateAiming(player, toggle)
	return _in(0xC54C95DA968EC5B5, player, toggle)
end

--- Values around 1.0f to 2.0f used in game scripts.
function SetPlayerSneakingNoiseMultiplier(player, multiplier)
	return _in(0xB2C1A29588A9F47C, player, multiplier)
end

function SetPlayerSprint(player, toggle)
	return _in(0xA01B8075D8B92DF4, player, toggle)
end

function SetPlayerStamina(playerId, stamina)
	return _in(0xa9ec16c7, playerId, stamina, _r)
end

function SetPlayerStealthPerceptionModifier(player, value)
	return _in(0x4E9021C1FCDD507A, player, value)
end

--- All names can be found in playerswitchestablishingshots.meta
function SetPlayerSwitchEstablishingShot(name)
	return _in(0x0FDE9DBFC0A6BC65, _ts(name))
end
N_0x0fde9dbfc0a6bc65 = SetPlayerSwitchEstablishingShot

function SetPlayerSwitchOutro(cameraCoordX, cameraCoordY, cameraCoordZ, camRotationX, camRotationY, camRotationZ, camFov, camFarClip, rotationOrder)
	return _in(0xC208B673CE446B61, cameraCoordX, cameraCoordY, cameraCoordZ, camRotationX, camRotationY, camRotationZ, camFov, camFarClip, rotationOrder)
end
N_0xc208b673ce446b61 = SetPlayerSwitchOutro

--- the status of default voip system. It affects on `NETWORK_IS_PLAYER_TALKING` and `mp_facial` animation.
-- This function doesn't need to be called every frame, it works like a switcher.
-- @param player The target player.
-- @param state Overriding state.
function SetPlayerTalkingOverride(player, state)
	return _in(0xfc02caf6, player, state)
end

function SetPlayerTargetLevel(targetLevel)
	return _in(0x5702B917B99DB1CD, targetLevel)
end
N_0x5702b917b99db1cd = SetPlayerTargetLevel

--- Sets your targeting mode.
-- 0 = Assisted Aim - Full
-- 1 = Assisted Aim - Partial
-- 2 = Free Aim - Assisted
-- 3 = Free Aim
function SetPlayerTargetingMode(targetMode)
	return _in(0xB1906895227793F3, targetMode)
end

function SetPlayerTcmodifierTransition(value)
	return _in(0xBDEB86F4D5809204, value)
end
N_0xbdeb86f4d5809204 = SetPlayerTcmodifierTransition

--- Set player team on deathmatch and last team standing..
function SetPlayerTeam(player, team)
	return _in(0x0299FA38396A4940, player, team)
end

--- Seems to lock the underwater timer of the specified player. Set `percentage` to `50.0` will reduce the value of [GET_PLAYER_UNDERWATER_TIME_REMAINING](#\_0xA1FCF8E6AF40B731) to 5.0.
-- If you want to increase the underwater time for ped, use [SET_PED_MAX_TIME_UNDERWATER](#\_0x6BA428C528D9E522) instead.
-- Using this native after [SET_PED_MAX_TIME_UNDERWATER](#\_0x6BA428C528D9E522) **WILL NOT** get what you want. For example, if you set the max time underwater to `100.0` seconds using [SET_PED_MAX_TIME_UNDERWATER](#\_0x6BA428C528D9E522) and then call this native and set the `percentage` to 50.0, you will not get `50.0`, instead `2.0`.
-- @param player Player id.
-- @param percentage Maximum is `100.0`. Any value above `100.0` and less than `0.0` will have no effect on [GET_PLAYER_UNDERWATER_TIME_REMAINING](#\_0xA1FCF8E6AF40B731).
function SetPlayerUnderwaterTimeRemaining(player, percentage)
	return _in(0xA0D3E4F7AAFB7E78, player, percentage, _ri)
end
N_0xa0d3e4f7aafb7e78 = SetPlayerUnderwaterTimeRemaining

--- modifier's min value is 0.1
function SetPlayerVehicleDamageModifier(player, modifier)
	return _in(0xA50E117CDDF82F0C, player, modifier)
end

--- modifier's min value is 0.1
function SetPlayerVehicleDefenseModifier(player, modifier)
	return _in(0x4C60E6EFDAFF2462, player, modifier)
end

function SetPlayerVisibleLocally(player, toggle)
	return _in(0xFAA10F1FAFB11AF2, player, toggle)
end

--- # Predominant call signatures
-- PLAYER::SET_PLAYER_WANTED_CENTRE_POSITION(PLAYER::PLAYER_ID(), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1));
-- # Parameter value ranges
-- P0: PLAYER::PLAYER_ID()
-- P1: ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)
-- P2: Not set by any call
function SetPlayerWantedCentrePosition(player, p2, p3)
	return _in(0x520E541A97A13354, player, _v, p2, p3)
end

--- Call SET_PLAYER_WANTED_LEVEL_NOW for immediate effect
-- wantedLevel is an integer value representing 0 to 5 stars even though the game supports the 6th wanted level but no police will appear since no definitions are present for it in the game files
-- disableNoMission-  Disables When Off Mission- appears to always be false
function SetPlayerWantedLevel(player, wantedLevel, disableNoMission)
	return _in(0x39FF19C64EF7DA5B, player, wantedLevel, disableNoMission)
end

--- p2 is always false in R* scripts
function SetPlayerWantedLevelNoDrop(player, wantedLevel, p2)
	return _in(0x340E61DE7F471565, player, wantedLevel, p2)
end

--- Forces any pending wanted level to be applied to the specified player immediately.
-- Call SET_PLAYER_WANTED_LEVEL with the desired wanted level, followed by SET_PLAYER_WANTED_LEVEL_NOW.
-- Second parameter is unknown (always false).
function SetPlayerWantedLevelNow(player, p1)
	return _in(0xE0A7D1E497FFCD6F, player, p1)
end

--- The native ensures the 'modifier' parameter is 0.1 or greater.
function SetPlayerWeaponDamageModifier(player, modifier)
	return _in(0xCE07B9F7817AADA3, player, modifier)
end

function SetPlayerWeaponDefenseModifier(player, modifier)
	return _in(0x2D83BC011CA14A3C, player, modifier)
end

function SetPlayerWeaponDefenseModifier_2(player, modifier)
	return _in(0xBCFDE9EDE4CF27DC, player, modifier)
end
N_0xbcfde9ede4cf27dc = SetPlayerWeaponDefenseModifier_2

function SetPlayerpadShakesWhenControllerDisabled(toggle)
	return _in(0x798FDEB5B1575088, toggle)
end

function SetPlayersLastVehicle(vehicle)
	return _in(0xBCDF8BAF56C87B6A, vehicle)
end

--- The player will be ignored by the police if toggle is set to true
function SetPoliceIgnorePlayer(player, toggle)
	return _in(0x32C62AA929C2DA6A, player, toggle)
end

--- If toggle is set to false:
-- The police won't be shown on the (mini)map
-- If toggle is set to true:
-- The police will be shown on the (mini)map
function SetPoliceRadarBlips(toggle)
	return _in(0x43286D561B72B8BF, toggle)
end

--- Min and max are usually 100.0 and 200.0
function SetPopControlSphereThisFrame(x, y, z, min, max)
	return _in(0xD8C3BE3EE94CAF2D, x, y, z, min, max)
end
N_0xd8c3be3ee94caf2d = SetPopControlSphereThisFrame

--- Found in the b617d scripts, duplicates removed:
-- AUDIO::_044DBAD7A7FA2BE5("V_CARSHOWROOM_PS_WINDOW_UNBROKEN", "V_CARSHOWROOM_PS_WINDOW_BROKEN");
-- AUDIO::_044DBAD7A7FA2BE5("V_CIA_PS_WINDOW_UNBROKEN", "V_CIA_PS_WINDOW_BROKEN");
-- AUDIO::_044DBAD7A7FA2BE5("V_DLC_HEIST_APARTMENT_DOOR_CLOSED", "V_DLC_HEIST_APARTMENT_DOOR_OPEN");
-- AUDIO::_044DBAD7A7FA2BE5("V_FINALEBANK_PS_VAULT_INTACT", "V_FINALEBANK_PS_VAULT_BLOWN");
-- AUDIO::_044DBAD7A7FA2BE5("V_MICHAEL_PS_BATHROOM_WITH_WINDOW", "V_MICHAEL_PS_BATHROOM_WITHOUT_WINDOW");
function SetPortalSettingsOverride(p0, p1)
	return _in(0x044DBAD7A7FA2BE5, _ts(p0), _ts(p1))
end
N_0x044dbad7a7fa2be5 = SetPortalSettingsOverride

function SetProfileSettingPrologueComplete()
	return _in(0xB475F27C6A994D65)
end
N_0xb475f27c6a994d65 = SetProfileSettingPrologueComplete

function SetRaceTrackRender(toggle)
	return _in(0x1EAC5F91BCBC5073, toggle)
end
N_0x1eac5f91bcbc5073 = SetRaceTrackRender

function SetRadarAsExteriorThisFrame()
	return _in(0xE81B7D2A3DAB2D81)
end

--- List of interior hashes: pastebin.com/1FUyXNqY
-- Not for every interior zoom > 0 available.
function SetRadarAsInteriorThisFrame(interior, x, y, heading, zoom)
	return _in(0x59E727A1C9D3E31A, _ch(interior), x, y, heading, zoom)
end

--- zoomLevel ranges from 0 to 200
function SetRadarZoom(zoomLevel)
	return _in(0x096EF57A0C999BBA, zoomLevel)
end

function SetRadarZoomPrecise(zoom)
	return _in(0xBD12C5EEE184C337, zoom)
end
RespondingAsTemp = SetRadarZoomPrecise

function SetRadarZoomToBlip(blip, zoom)
	return _in(0xF98E4B3E56AFC7B1, blip, zoom)
end
N_0xf98e4b3e56afc7b1 = SetRadarZoomToBlip

function SetRadarZoomToDistance(zoom)
	return _in(0xCB7CC0D58405AD41, zoom)
end
SetRadarZoomLevelThisFrame = SetRadarZoomToDistance

function SetRadioAutoUnfreeze(toggle)
	return _in(0xC1AA9F53CE982990, toggle)
end

function SetRadioFrontendFadeTime(fadeTime)
	return _in(0x2C96CDB04FCA358E, fadeTime)
end
N_0x2c96cdb04fca358e = SetRadioFrontendFadeTime

--- Doesn't have an effect in Story Mode.
-- ```
-- NativeDB Introduced: v2372
-- ```
function SetRadioStationIsVisible(radioStation, toggle)
	return _in(0x4CAFEBFA21EC188D, _ts(radioStation), toggle)
end

--- 6 calls in the b617d scripts, removed identical lines:
-- AUDIO::SET_RADIO_STATION_MUSIC_ONLY("RADIO_01_CLASS_ROCK", 1);
-- AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 0);
-- AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 1);
function SetRadioStationMusicOnly(radioStation, toggle)
	return _in(0x774BD811F656A122, _ts(radioStation), toggle)
end
N_0x774bd811f656a122 = SetRadioStationMusicOnly

--- Sets radio station by index.
function SetRadioToStationIndex(radioStation)
	return _in(0xA619B168B8A8570F, radioStation)
end

--- For a full list, see here: pastebin.com/Kj9t38KF
function SetRadioToStationName(stationName)
	return _in(0xC69EDA28699D5107, _ts(stationName))
end

--- Only found this one in the decompiled scripts:
-- AUDIO::SET_RADIO_TRACK("RADIO_03_HIPHOP_NEW", "ARM1_RADIO_STARTS");
function SetRadioTrack(radioStation, radioTrack)
	return _in(0xB39786F201FEE30B, _ts(radioStation), _ts(radioTrack))
end

--- NativeDB Introduced: v1493
function SetRadioTrackMix(radioStationName, mixName, p2)
	return _in(0x2CB0075110BE1E56, _ts(radioStationName), _ts(mixName), p2)
end

--- Enabling this on a radius blip will make it outline only. See https://cdn.discordapp.com/attachments/553235301632573459/575132227935928330/unknown.png
function SetRadiusBlipEdge(blip, toggle)
	return _in(0x25615540D894B814, blip, toggle)
end
N_0x25615540d894b814 = SetRadiusBlipEdge

--- Works for both player and peds, but some flags don't seem to work for the player (1, for example)
-- 1 - Blocks ragdolling when shot.
-- 2 - Blocks ragdolling when hit by a vehicle. The ped still might play a falling animation.
-- 4 - Blocks ragdolling when set on fire.
-- -----------------------------------------------------------------------
-- There seem to be 26 flags
function SetRagdollBlockingFlags(ped, flags)
	return _in(0x26695EC767728D84, ped, flags)
end
N_0x26695ec767728d84 = SetRagdollBlockingFlags
SetPedRagdollBlockingFlags = SetRagdollBlockingFlags

--- Controls rain, rain sounds and the creation of puddles.
-- With an `level` higher than `0.5f`, only the creation of puddles gets faster, rain and rain sound won't increase after that.
-- With an `level` of `0.0f` rain and rain sounds are disabled and there won't be any new puddles.
-- To use the rain level of the current weather, call this native with `-1f` as `level`.
-- @param level Strength of rain effects
function SetRainLevel(level)
	return _in(0x643E26EA6E024D92, level)
end
SetRainFxIntensity = SetRainLevel

function SetRandomBoats(toggle)
	return _in(0x84436EC293B1415F, toggle)
end

--- NativeDB Introduced: v2372
function SetRandomBoatsInMp(toggle)
	return _in(0xDA5E12F728DB30CA, toggle)
end

--- If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.
-- Does nothing if the mission flag is set.
function SetRandomEventFlag(toggle)
	return _in(0x971927086CFD2158, toggle)
end

function SetRandomSeed(seed)
	return _in(0x444D98F98C11F3EC, seed)
end

--- Enables spawning random trains on the preset tracks.
-- Requires [`SWITCH_TRAIN_TRACK`](#\_0xFD813BB7DB977F20) and [`SET_TRAIN_TRACK_SPAWN_FREQUENCY`](#\_0x21973BBF8D17EDFA) to be set.
-- @param toggle Whether to enable random trains.
function SetRandomTrains(toggle)
	return _in(0x80D9F74197EA47D9, toggle)
end

function SetRandomVehicleDensityMultiplierThisFrame(multiplier)
	return _in(0xB3B3359379FE77D3, multiplier)
end

function SetRandomWeatherType()
	return _in(0x8B05F884CF7E8020)
end

--- Lowers the vehicle's stance. Only works for vehicles that support this feature.
-- ```
-- NativeDB Introduced: v2372
-- ```
function SetReduceDriftVehicleSuspension(vehicle, enable)
	return _in(0x3A375167F5782A65, vehicle, enable)
end

function SetReducePedModelBudget(toggle)
	return _in(0x77B5F9A36BF96710, toggle)
end

function SetReduceVehicleModelBudget(toggle)
	return _in(0x80C527893080CCF3, toggle)
end

--- Sets the relationship between two groups. This should be called twice (once for each group).
-- Relationship types:
-- 0 = Companion
-- 1 = Respect
-- 2 = Like
-- 3 = Neutral
-- 4 = Dislike
-- 5 = Hate
-- 255 = Pedestrians
-- Example:
-- PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);
-- PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);
function SetRelationshipBetweenGroups(relationship, group1, group2)
	return _in(0xBF25EB89375A37AD, relationship, _ch(group1), _ch(group2))
end

function SetRelationshipGroupDontAffectWantedLevel(group, p1)
	return _in(0x5615E0C5EB2BC6E2, _ch(group), p1)
end
N_0x5615e0c5eb2bc6e2 = SetRelationshipGroupDontAffectWantedLevel

--- Enables ghosting between specific players. Name is between `_SET_RELATIONSHIP_GROUP_DONT_AFFECT_WANTED_LEVEL` and `SET_ROADS_BACK_TO_ORIGINAL`.
function SetRelationshipToPlayer(player, p1)
	return _in(0xA7C511FA1C5BDA38, player, p1)
end
N_0xa7c511fa1c5bda38 = SetRelationshipToPlayer

function SetRenderHdOnly(toggle)
	return _in(0x40AEFD1A244741F2, toggle)
end
N_0x40aefd1a244741f2 = SetRenderHdOnly

--- makes the train all jumbled up and derailed as it moves on the tracks (though that wont stop it from its normal operations)
function SetRenderTrainAsDerailed(train, toggle)
	return _in(0x317B11A312DF5534, train, toggle)
end

--- A setter for [GET_RESOURCE_KVP_STRING](#\_0x5240DA5A).
-- @param key The key to set
-- @param value The value to write
function SetResourceKvp(key, value)
	return _in(0x21c7a35b, _ts(key), _ts(value))
end

--- A setter for [GET_RESOURCE_KVP_FLOAT](#\_0x35BDCEEA).
-- @param key The key to set
-- @param value The value to write
function SetResourceKvpFloat(key, value)
	return _in(0x9add2938, _ts(key), value)
end

--- A setter for [GET_RESOURCE_KVP_INT](#\_0x557B586A).
-- @param key The key to set
-- @param value The value to write
function SetResourceKvpInt(key, value)
	return _in(0x6a2b1e8, _ts(key), value)
end

function SetRestartCustomPosition(x, y, z, heading)
	return _in(0x706B5EDCAA7FA663, x, y, z, heading)
end
N_0x706b5edcaa7fa663 = SetRestartCustomPosition
SetCustomRespawnPosition = SetRestartCustomPosition

--- Sets the player's rich presence detail state for social platform providers to a specified string.
-- @param presenceState The rich presence string to set.
function SetRichPresence(presenceState)
	return _in(0x7bdcbd45, _ts(presenceState))
end

--- Activates (usused?) riot mode. All NPCs are being hostile to each other (including player). Also the game will give weapons (pistols, smgs) to random NPCs.
function SetRiotModeEnabled(toggle)
	return _in(0x2587A48BC88DFADF, toggle)
end
N_0x2587a48bc88dfadf = SetRiotModeEnabled

--- missing a last parameter int p6
-- ```
-- ```
-- NativeDB Added Parameter 7: Any p6
function SetRoadsBackToOriginal(p0, p1, p2, p3, p4, p5)
	return _in(0x1EE7063B80FFC77C, p0, p1, p2, p3, p4, p5)
end

--- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- ```
-- NativeDB Added Parameter 8: Any p7
-- bool p7 - always 1
-- ```
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
function SetRoadsBackToOriginalInAngledArea(x1, y1, z1, x2, y2, z2, width)
	return _in(0x0027501B9F3B407E, x1, y1, z1, x2, y2, z2, width)
end

--- unknown3 is related to `SEND_SCRIPT_WORLD_STATE_EVENT > CNetworkRoadNodeWorldStateData` in networked environments.
-- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- @param x1 X dimension of the angled area 'origin'
-- @param y1 Y dimension of the angled area 'origin'
-- @param z1 Z dimension of the angled area 'origin'
-- @param x2 X dimension of the angled area 'extent'
-- @param y2 Y dimension of the angled area 'extent'
-- @param z2 Z dimension of the angled area 'extent'
-- @param width Width of the angled area
function SetRoadsInAngledArea(x1, y1, z1, x2, y2, z2, width, unknown1, unknown2, unknown3)
	return _in(0x1A5AA1208AF5DB59, x1, y1, z1, x2, y2, z2, width, unknown1, unknown2, unknown3)
end

--- When this is set to false, all nodes in the area get disabled.
-- `GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns true afterwards.
-- If it's true,
-- `GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns false.
function SetRoadsInArea(x1, y1, z1, x2, y2, z2, nodeEnabled, unknown2)
	return _in(0xBF1A602B5BA52FEE, x1, y1, z1, x2, y2, z2, nodeEnabled, unknown2)
end

--- Set's the ropes length change rate, which is the speed that rope should wind if started.
-- @param rope The rope to set the length change rate for.
-- @param lengthChangeRate The rope's new length change rate.
function SetRopeLengthChangeRate(rope, lengthChangeRate)
	return _in(0x69b680a7, rope, lengthChangeRate)
end

--- Toggles whether the usage of [ADD_ROPE](#\_0xE832D760399EB220) should create an underlying CNetworkRopeWorldStateData. By default this is set to false.
-- @param shouldCreate Whether to create an underlying network world state
function SetRopesCreateNetworkWorldState(shouldCreate)
	return _in(0xe62fc73, shouldCreate)
end

--- Multiplier goes up to 1.49 any value above will be completely overruled by the game and the multiplier will not take effect, this can be edited in memory however.
-- Just call it one time, it is not required to be called once every tick.
-- Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and SWIM above. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.
-- It is not possible to "decrease" speed. Anything below 1 will be ignored.
function SetRunSprintMultiplierForPlayer(player, multiplier)
	return _in(0x6DB47AA77FD94E09, player, multiplier)
end

function SetRuntimeTextureArgbData(tex, buffer, length)
	return _in(0x3963d527, tex, _ts(buffer), length, _r)
end

--- Sets a pixel in the specified runtime texture. This will have to be committed using `COMMIT_RUNTIME_TEXTURE` to have any effect.
-- @param tex A handle to the runtime texture.
-- @param x The X position of the pixel to change.
-- @param y The Y position of the pixel to change.
-- @param r The new R value (0-255).
-- @param g The new G value (0-255).
-- @param b The new B value (0-255).
-- @param a The new A value (0-255).
function SetRuntimeTexturePixel(tex, x, y, r, g, b, a)
	return _in(0xab65acee, tex, x, y, r, g, b, a)
end

function SetSaveHouse(p0, p1, p2)
	return _in(0x4F548CABEAE553BC, p0, p1, p2)
end

--- ignoreVehicle - bypasses vehicle check of the local player (it will not open if you are in a vehicle and this is set to false)
function SetSaveMenuActive(ignoreVehicle)
	return _in(0xC9BF75D28165FF77, ignoreVehicle)
end

--- Sets profile setting 501
function SetSaveMigrationTransactionId(transactionId)
	return _in(0xF6792800AC95350D, transactionId)
end
N_0xf6792800ac95350d = SetSaveMigrationTransactionId

--- This native is used in some casino scripts to fit the scaleform in the rendertarget.
function SetScaleformFitRendertarget(scaleformHandle, toggle)
	return _in(0xE6A9F00D4240B519, scaleformHandle, toggle)
end
N_0xe6a9f00d4240b519 = SetScaleformFitRendertarget

function SetScaleformMovieAsNoLongerNeeded(scaleformHandle)
	return _in(0x1D132D614DD86811, _ii(scaleformHandle) --[[ may be optional ]])
end

function SetScaleformMovieToUseSystemTime(scaleform, toggle)
	return _in(0x6D8EB211944DCE08, scaleform, toggle)
end

--- Occurrences in the b617d scripts: pastebin.com/Tvg2PRHU
function SetScenarioGroupEnabled(scenarioGroup, p1)
	return _in(0x02C8E5B49848664E, _ts(scenarioGroup), p1)
end

function SetScenarioPedDensityMultiplierThisFrame(p0, p1)
	return _in(0x7A556143A1C03898, p0, p1)
end

function SetScenarioPedsSpawnInSphereArea(x, y, z, range, p4)
	return _in(0x28157D43CF600981, x, y, z, range, p4)
end

--- Sets a value indicating whether scenario peds should be returned by the next call to a command that returns peds. Eg. GET_CLOSEST_PED.
function SetScenarioPedsToBeReturnedByNextCommand(value)
	return _in(0x14F19A8782C8071E, value)
end

--- seems to enable/disable specific scenario-types from happening in the game world.
-- Here are some scenario types from the scripts:
-- "WORLD_MOUNTAIN_LION_REST"
-- "WORLD_MOUNTAIN_LION_WANDER"
-- "DRIVE"
-- "WORLD_VEHICLE_POLICE_BIKE"
-- "WORLD_VEHICLE_POLICE_CAR"
-- "WORLD_VEHICLE_POLICE_NEXT_TO_CAR"
-- "WORLD_VEHICLE_DRIVE_SOLO"
-- "WORLD_VEHICLE_BIKER"
-- "WORLD_VEHICLE_DRIVE_PASSENGERS"
-- "WORLD_VEHICLE_SALTON_DIRT_BIKE"
-- "WORLD_VEHICLE_BICYCLE_MOUNTAIN"
-- "PROP_HUMAN_SEAT_CHAIR"
-- "WORLD_VEHICLE_ATTRACTOR"
-- "WORLD_HUMAN_LEANING"
-- "WORLD_HUMAN_HANG_OUT_STREET"
-- "WORLD_HUMAN_DRINKING"
-- "WORLD_HUMAN_SMOKING"
-- "WORLD_HUMAN_GUARD_STAND"
-- "WORLD_HUMAN_CLIPBOARD"
-- "WORLD_HUMAN_HIKER"
-- "WORLD_VEHICLE_EMPTY"
-- "WORLD_VEHICLE_BIKE_OFF_ROAD_RACE"
-- "WORLD_HUMAN_PAPARAZZI"
-- "WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN"
-- "WORLD_VEHICLE_PARK_PARALLEL"
-- "WORLD_VEHICLE_CONSTRUCTION_SOLO"
-- "WORLD_VEHICLE_CONSTRUCTION_PASSENGERS"
-- "WORLD_VEHICLE_TRUCK_LOGS"
-- scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.
function SetScenarioTypeEnabled(scenarioType, toggle)
	return _in(0xEB47EC4E34FB7EE1, _ts(scenarioType), toggle)
end

function SetScriptAsNoLongerNeeded(scriptName)
	return _in(0xC90D2DCACD56184C, _ts(scriptName))
end

--- This function anchors script draws to a side of the safe zone. This needs to be called to make the interface
-- independent of the player's safe zone configuration.
-- These values are equivalent to `alignX` and `alignY` in `common:/data/ui/frontend.xml`, which can be used as a baseline
-- for default alignment.
-- Valid values for `horizontalAlign`, from original documentation:
-- *   **C (67)** - Center: DRAW_TEXT starts in the middle of the screen, while DRAW_RECT starts on the right; both move with
-- the right side of the screen.
-- *   **L (76)** - Left: Anchors to the left side, DRAW_RECT starts on the left side of the screen, same as DRAW_TEXT when
-- centered.
-- *   **R (82)** - Right: DRAW_TEXT starts on the left side (normal 0,0), while DRAW_RECT starts some short distance away
-- from the right side of the screen, both move with the right side of the screen.
-- Valid values for `verticalAlign`, from original documentation:
-- *   **B (66)** - Bottom: DRAW_RECT starts about as far as the middle of the map from the bottom, while DRAW_TEXT is about
-- rather centered.
-- *   **C (67)** - Center: It starts at a certain distance from the bottom, but the distance is fixed, the distance is
-- different from 66.
-- *   **T (84)** - Top: Anchors to the top, DRAW_RECT starts on the top of the screen, DRAW_TEXT just below it.
-- Using any other value (including 0) will result in the safe zone not being taken into account for this draw. The
-- canonical value for this is 'I' (73).
-- For example, you can use `SET_SCRIPT_GFX_ALIGN(0, 84)` to only scale on the Y axis (to the top), but not change the X
-- axis.
-- To reset the value, use `RESET_SCRIPT_GFX_ALIGN`.
-- @param horizontalAlign The horizontal alignment. This can be 67 ('C'), 76 ('L'), or 82 ('R').
-- @param verticalAlign The vertical alignment. This can be 67 ('C'), 66 ('B'), or 84 ('T').
function SetScriptGfxAlign(horizontalAlign, verticalAlign)
	return _in(0xB8A850F20A067EB6, horizontalAlign, verticalAlign)
end
SetScreenDrawPosition = SetScriptGfxAlign
ScreenDrawPositionBegin = SetScriptGfxAlign

--- Sets the draw offset/calculated size for `SET_SCRIPT_GFX_ALIGN`. If using any alignment other than left/top, the game
-- expects the width/height to be configured using this native in order to get a proper starting position for the draw
-- command.
-- @param x The X offset for the item to be drawn.
-- @param y The Y offset for the item to be drawn.
-- @param w The width of the item to be drawn.
-- @param h The height of the item to be drawn.
function SetScriptGfxAlignParams(x, y, w, h)
	return _in(0xF5A2C681787E579D, x, y, w, h)
end
N_0xf5a2c681787e579d = SetScriptGfxAlignParams
ScreenDrawPositionRatio = SetScriptGfxAlignParams

--- Sets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for TV channels and other draw commands that are used with a world render target.
-- @param flag A boolean value.
function SetScriptGfxDrawBehindPausemenu(flag)
	return _in(0xC6372ECD45D73BCD, flag)
end
N_0xc6372ecd45d73bcd = SetScriptGfxDrawBehindPausemenu

--- Sets the draw order for script draw commands.
-- Examples from decompiled scripts:
-- GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7);
-- GRAPHICS::DRAW_RECT(0.5, 0.5, 3.0, 3.0, v\_4, v\_5, v\_6, a\_0.\_f172, 0);
-- GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1);
-- GRAPHICS::DRAW_RECT(0.5, 0.5, 1.5, 1.5, 0, 0, 0, 255, 0);
-- @param order The intended draw order/layer.
function SetScriptGfxDrawOrder(order)
	return _in(0x61BB1D9B3A95D802, order)
end
N_0x61bb1d9b3a95d802 = SetScriptGfxDrawOrder
Set_2dLayer = SetScriptGfxDrawOrder
SetUiLayer = SetScriptGfxDrawOrder

function SetScriptUpdateDoorAudio(doorHash, toggle)
	return _in(0x06C0023BED16DD6B, _ch(doorHash), toggle)
end
N_0x06c0023bed16dd6b = SetScriptUpdateDoorAudio

--- Sets the color of HUD_COLOUR_SCRIPT_VARIABLE
function SetScriptVariableHudColour(r, g, b, a)
	return _in(0xD68A5FF8A3A89874, r, g, b, a)
end
N_0xd68a5ff8a3a89874 = SetScriptVariableHudColour

--- Sets the color of HUD_COLOUR_SCRIPT_VARIABLE_2
function SetScriptVariable_2HudColour(r, g, b, a)
	return _in(0x16A304E6CB2BFAB9, r, g, b, a)
end
N_0x16a304e6cb2bfab9 = SetScriptVariable_2HudColour

--- Only called once in the decompiled scripts. Presumably activates the specified generator.
function SetScriptVehicleGenerator(vehicleGenerator, enabled)
	return _in(0xD9D620E0AC6DC4B0, vehicleGenerator, enabled)
end

function SetScriptWithNameHashAsNoLongerNeeded(scriptHash)
	return _in(0xC5BC038960E9DB27, _ch(scriptHash))
end
SetStreamedScriptAsNoLongerNeeded = SetScriptWithNameHashAsNoLongerNeeded

function SetScriptedAnimSeatOffset(ped, p1)
	return _in(0x5917BBA32D06C230, ped, p1)
end

function SetScriptedConversionCoordThisFrame(x, y, z)
	return _in(0x5086C7843552CF85, x, y, z)
end

--- Toggles Heatvision on/off.
function SetSeethrough(toggle)
	return _in(0x7E08924259E08CE0, toggle)
end

function SetSequenceToRepeat(taskSequenceId, repeat_)
	return _in(0x58C70CF3A41E4AE7, taskSequenceId, repeat_)
end

--- NativeDB Introduced: v2372
function SetSirenKeepOn(vehicle, toggle)
	return _in(0xF584CF8529B51434, vehicle, toggle)
end
N_0xf584cf8529b51434 = SetSirenKeepOn

function SetSirenWithNoDriver(vehicle, toggle)
	return _in(0x1FEF0683B96EBCF2, vehicle, toggle)
end

function SetSnakeoilForEntry(name, path, data)
	return _in(0xa7dd3209, _ts(name), _ts(path), _ts(data))
end

--- NativeDB Introduced: v1868
function SetSnowLevel(level)
	return _in(0x7F06937B0CDCBC1A, level)
end

--- HUD::SET_SOCIAL_CLUB_TOUR("Gallery");
-- HUD::SET_SOCIAL_CLUB_TOUR("Missions");
-- HUD::SET_SOCIAL_CLUB_TOUR("General");
-- HUD::SET_SOCIAL_CLUB_TOUR("Playlists");
function SetSocialClubTour(name)
	return _in(0x9E778248D6685FE0, _ts(name))
end
N_0x9e778248d6685fe0 = SetSocialClubTour

--- NativeDB Added Parameter 3: Any p2
function SetSpecialAbility(player, p1)
	return _in(0xB214D570EAD7F81A, player, p1)
end
N_0xb214d570ead7f81a = SetSpecialAbility

function SetSpecialAbilityMultiplier(multiplier)
	return _in(0xA49C426ED0CA4AB7, multiplier)
end

--- NativeDB Introduced: v1365
function SetSpecialflightWingRatio(vehicle, ratio)
	return _in(0x70A252F60A3E036B, vehicle, ratio)
end

function SetSrlTime(p0)
	return _in(0xA74A541C6884E7B8, p0)
end

--- Internal function for setting a state bag value.
function SetStateBagValue(bagName, keyName, valueData, valueLength, replicated)
	return _in(0x8d50e33a, _ts(bagName), _ts(keyName), _ts(valueData), valueLength, replicated)
end

--- Hardcoded to not work in multiplayer.
-- Used to lock/unlock doors to interior areas of the game.
-- (Possible) Door Types:
-- pastebin.com/9S2m3qA4
-- Heading is either 1, 0 or -1 in the scripts. Means default closed(0) or opened either into(1) or out(-1) of the interior.
-- Locked means that the heading is locked.
-- p6 is always 0.
-- 225 door types, model names and coords found in stripclub.c4:
-- pastebin.com/gywnbzsH
-- get door info: pastebin.com/i14rbekD
function SetStateOfClosestDoorOfType(type, x, y, z, locked, heading, p6)
	return _in(0xF82D8F1926A02C3D, _ch(type), x, y, z, locked, heading, p6)
end

--- Defines the state of a destructible object.
-- Use the GET_RAYFIRE_MAP_OBJECT native to find an object's handle with its name / coords.
-- State 2 == object just spawned
-- State 4 == Beginning of the animation
-- State 6 == Start animation
-- State 9 == End of the animation
function SetStateOfRayfireMapObject(object, state)
	return _in(0x5C29F698D404C5E1, object, state)
end
N_0x5c29f698d404c5e1 = SetStateOfRayfireMapObject
SetDesObjectState = SetStateOfRayfireMapObject

--- Example:
-- AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_01_STAGE", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_02_MAIN_ROOM", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_03_BACK_ROOM", false);
-- This turns off surrounding sounds not connected directly to peds.
function SetStaticEmitterEnabled(emitterName, toggle)
	return _in(0x399D2D3B33F1B8EB, _ts(emitterName), toggle)
end

--- Access to the store for shark cards etc...
function SetStoreEnabled(toggle)
	return _in(0x9641A9FF718E9C5E, toggle)
end

function SetStreamedTextureDictAsNoLongerNeeded(textureDict)
	return _in(0xBE2CACCF5A8AA805, _ts(textureDict))
end

function SetStreaming(toggle)
	return _in(0x6E0C692677008888, toggle)
end

function SetStuntJumpsCanTrigger(toggle)
	return _in(0xD79185689F8FD5DF, toggle)
end
N_0xd79185689f8fd5df = SetStuntJumpsCanTrigger

function SetSubmarineCrushDepths(vehicle, toggle, depth1, depth2, depth3)
	return _in(0xC59872A5134879C7, vehicle, toggle, depth1, depth2, depth3)
end
JitterVehicle = SetSubmarineCrushDepths

function SetSuperJumpThisFrame(player)
	return _in(0x57FFF03E423A4C0B, player)
end

--- Swim speed multiplier.
-- Multiplier goes up to 1.49
-- Just call it one time, it is not required to be called once every tick. - Note copied from below native.
-- Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and RUN_SPRINT below. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.
function SetSwimMultiplierForPlayer(player, multiplier)
	return _in(0xA91C6F0FF7D16A13, player, multiplier)
end

--- Sets the position of the audio event to the entity's position for one frame(?)
-- if (l_8C3 == 0) {
-- sub_27fd1(0, -1, 1);
-- if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(l_87D)) {
-- AUDIO::STOP_SYNCHRONIZED_AUDIO_EVENT(l_87D);
-- }
-- if (sub_7dd(l_A00)) {
-- AUDIO::_950A154B8DAB6185("PAP2_IG1_POPPYSEX", l_A00);
-- }
-- sub_91c("TK************ SETTING SYNCH SCENE AUDIO POSITION THIS FRAME ************TK");
-- l_8C3 = 1;
-- }
-- --
-- Found in the b617d scripts, duplicates removed:
-- AUDIO::_950A154B8DAB6185("CAR_5_IG_6", l_7FE[1/*1*/]);
-- AUDIO::_950A154B8DAB6185("EX03_TRAIN_BIKE_LAND",   PLAYER::PLAYER_PED_ID());
-- AUDIO::_950A154B8DAB6185("FBI_2_MCS_1_LeadIn", l_40[2/*1*/]);
-- AUDIO::_950A154B8DAB6185("FIN_C2_MCS_1", l_24C[0/*1*/]);
-- AUDIO::_950A154B8DAB6185("MNT_DNC", l_5F);
-- AUDIO::_950A154B8DAB6185("PAP2_IG1_POPPYSEX", l_A00);
function SetSynchronizedAudioEventPositionThisFrame(p0, p1)
	return _in(0x950A154B8DAB6185, _ts(p0), p1)
end
N_0x950a154b8dab6185 = SetSynchronizedAudioEventPositionThisFrame

function SetSynchronizedSceneHoldLastFrame(sceneID, toggle)
	return _in(0x394B9CD12435C981, sceneID, toggle)
end
N_0x394b9cd12435c981 = SetSynchronizedSceneHoldLastFrame
SetSynchronizedSceneOcclusionPortal = SetSynchronizedSceneHoldLastFrame

function SetSynchronizedSceneLooped(sceneID, toggle)
	return _in(0xD9A897A4C6C2974F, sceneID, toggle)
end

function SetSynchronizedSceneOrigin(sceneID, x, y, z, roll, pitch, yaw, p7)
	return _in(0x6ACF6B7225801CD7, sceneID, x, y, z, roll, pitch, yaw, p7)
end

function SetSynchronizedScenePhase(sceneID, phase)
	return _in(0x734292F4F0ABF6D0, sceneID, phase)
end

function SetSynchronizedSceneRate(sceneID, rate)
	return _in(0xB6C49F8A5E295A5D, sceneID, rate)
end

function SetTaskMoveNetworkSignalBool(ped, signalName, value)
	return _in(0xB0A6CFD2C69C1088, ped, _ts(signalName), value)
end
N_0xb0a6cfd2c69c1088 = SetTaskMoveNetworkSignalBool
SetTaskPropertyBool = SetTaskMoveNetworkSignalBool

--- p0 - PLAYER::PLAYER_PED_ID();
-- p1 - "Phase", "Wobble", "x_axis","y_axis","introphase","speed".
-- p2 - From what i can see it goes up to 1f (maybe).
-- -LcGamingHD
-- Example: TASK::_D5BB4025AE449A4E(PLAYER::PLAYER_PED_ID(), "Phase", 0.5);
-- @param ped The ped on which the task is playing.
-- @param signalName The property name.
-- @param value The property value to set.
function SetTaskMoveNetworkSignalFloat(ped, signalName, value)
	return _in(0xD5BB4025AE449A4E, ped, _ts(signalName), value)
end
N_0xd5bb4025ae449a4e = SetTaskMoveNetworkSignalFloat
SetTaskPropertyFloat = SetTaskMoveNetworkSignalFloat

--- NativeDB Introduced: v1493
function SetTaskMoveNetworkSignalFloat_2(ped, signalName, value)
	return _in(0x373EF409B82697A3, ped, _ts(signalName), value)
end

--- * Flag 1: Aggressive ramming of suspect
-- * Flag 2: Ram attempts
-- * Flag 8: Medium-aggressive boxing tactic with a bit of PIT
-- * Flag 16: Ramming, seems to be slightly less aggressive than 1-2.
-- * Flag 32: Stay back from suspect, no tactical contact. Convoy-like.
function SetTaskVehicleChaseBehaviorFlag(ped, flag, set)
	return _in(0xCC665AAC360D31E7, ped, flag, set)
end

function SetTaskVehicleChaseIdealPursuitDistance(ped, distance)
	return _in(0x639B642FACBE4EDD, ped, distance)
end

function SetTaskVehicleGotoPlaneMinHeightAboveTerrain(plane, height)
	return _in(0xB893215D8D4C015B, plane, height)
end
N_0xb893215d8d4c015b = SetTaskVehicleGotoPlaneMinHeightAboveTerrain
SetPlaneMinHeightAboveGround = SetTaskVehicleGotoPlaneMinHeightAboveTerrain
SetPlaneMinHeightAboveTerrain = SetTaskVehicleGotoPlaneMinHeightAboveTerrain

--- This is not tested - it's just an assumption.
-- Doesn't seem to work.  I'll try with an int instead. --JT
-- Read the scripts, im dumpass.
-- Doesn't work at all, wether with an bool neither an int
-- if (!VEHICLE::IS_TAXI_LIGHT_ON(l_115)) {
-- VEHICLE::SET_TAXI_LIGHTS(l_115, 1);
-- }
function SetTaxiLights(vehicle, state)
	return _in(0x598803E85E8448D9, vehicle, state)
end

function SetTeamPickupObject(object, p1, p2)
	return _in(0x53E0DF1A2A3CF0CA, object, p1, p2)
end

function SetTextCentre(align)
	return _in(0xC02F4DBFB51D988B, align)
end

function SetTextChatEnabled(enabled)
	return _in(0x97b2f9f8, enabled, _r)
end

--- colors you input not same as you think?
-- A: for some reason its R B G A
function SetTextColour(red, green, blue, alpha)
	return _in(0xBE6B23FFA53FB442, red, green, blue, alpha)
end

function SetTextDropShadow()
	return _in(0x1CA3E9EAC9D93E5E)
end

--- distance - shadow distance in pixels, both horizontal and vertical
-- r, g, b, a - color
-- @param distance Shadow distance in pixels, both horizontal and vertical.
-- @param r Red color.
-- @param g Green color.
-- @param b Blue color.
-- @param a Alpha.
function SetTextDropshadow(distance, r, g, b, a)
	return _in(0x465C84BC39F1C351, distance, r, g, b, a)
end

--- **This native does absolutely nothing, just a nullsub**
function SetTextEdge(p0, r, g, b, a)
	return _in(0x441603240D202FA6, p0, r, g, b, a)
end

--- fonts that mess up your text where made for number values/misc stuff
function SetTextFont(fontType)
	return _in(0x66E0276CC5F6B9DA, fontType)
end

--- Types -
-- 0: Center-Justify
-- 1: Left-Justify
-- 2: Right-Justify
-- Right-Justify requires SET_TEXT_WRAP, otherwise it will draw to the far right of the screen
function SetTextJustification(justifyType)
	return _in(0x4E096588B13FFECA, justifyType)
end
N_0x4e096588b13ffeca = SetTextJustification

function SetTextLeading(p0)
	return _in(0xA50ABC31E3CDFAFF, p0)
end

function SetTextOutline()
	return _in(0x2513DFB0FB8400FE)
end

--- **This native does absolutely nothing, just a nullsub**
function SetTextProportional(p0)
	return _in(0x038C1F517D7FDCF8, p0)
end

function SetTextRenderId(renderId)
	return _in(0x5F15302936E07111, renderId)
end

function SetTextRightJustify(toggle)
	return _in(0x6B3C4650BC8BEE47, toggle)
end

--- Size range : 0F to 1.0F
-- p0 is unknown and doesn't seem to have an effect, yet in the game scripts it changes to 1.0F sometimes.
function SetTextScale(scale, size)
	return _in(0x07C837F9A01C34C9, scale, size)
end

--- It sets the text in a specified box and wraps the text if it exceeds the boundries. Both values are for X axis. Useful when positioning text set to center or aligned to the right.
-- start - left boundry on screen position (0.0 - 1.0)
-- end - right boundry on screen position (0.0 - 1.0)
function SetTextWrap(start, end_)
	return _in(0x63145D9C883A1A70, start, end_)
end

function SetTextureVariationOfClosestObjectOfType(x, y, z, radius, modelHash, textureVariation)
	return _in(0xF12E33034D887F66, x, y, z, radius, _ch(modelHash), textureVariation, _r)
end
N_0xf12e33034d887f66 = SetTextureVariationOfClosestObjectOfType

function SetThirdPersonAimCamNearClipThisUpdate(distance)
	return _in(0x42156508606DE65E, distance)
end
N_0x42156508606de65e = SetThirdPersonAimCamNearClipThisUpdate
SetThirdPersonAimCamNearClip = SetThirdPersonAimCamNearClipThisUpdate

function SetThisScriptCanBePaused(toggle)
	return _in(0xAA391C728106F7AF, toggle)
end

function SetThisScriptCanRemoveBlipsCreatedByAnyScript(toggle)
	return _in(0xB98236CAAECEF897, toggle)
end

--- 0 = high
-- 1 = normal
-- 2 = low
function SetThreadPriority(priority)
	return _in(0x42B65DEEF2EDF2A1, priority)
end
N_0x42b65deef2edf2a1 = SetThreadPriority

--- Maximum value is 1.
-- At a value of 0 the game will still run at a minimum time scale.
-- Slow Motion 1: 0.6
-- Slow Motion 2: 0.4
-- Slow Motion 3: 0.2
function SetTimeScale(timeScale)
	return _in(0x1D408577D440E81E, timeScale)
end

--- Loads the specified timecycle modifier. Modifiers are defined separately in another file (e.g. "timecycle_mods_1.xml")
-- Parameters:
-- modifierName - The modifier to load (e.g. "V_FIB_IT3", "scanline_cam", etc.)
function SetTimecycleModifier(modifierName)
	return _in(0x2C933ABF17A1DF41, _ts(modifierName))
end

function SetTimecycleModifierStrength(strength)
	return _in(0x82E7FFCD5B2326B3, strength)
end

--- Toggles the Cayo Perico map.
-- ```
-- NativeDB Introduced: v2189
-- ```
function SetToggleMinimapHeistIsland(toggle)
	return _in(0x5E1460624D194A38, toggle)
end

function SetTrackedPointInfo(point, x, y, z, radius)
	return _in(0x164ECBB3CF750CB0, point, x, y, z, radius)
end

function SetTrailerInverseMassScale(vehicle, p1)
	return _in(0x2A8F319B392E7B3F, vehicle, p1)
end
N_0x2a8f319b392e7b3f = SetTrailerInverseMassScale

--- Inverse of 0x95CF53B3D687F9FA
-- ```
-- ```
-- NativeDB Added Parameter 1: Vehicle vehicle
function SetTrailerLegsLowered()
	return _in(0x878C75C09FBDB942)
end
N_0x878c75c09fbdb942 = SetTrailerLegsLowered

--- in the decompiled scripts, seems to be always called on the vehicle right after being attached to a trailer.
function SetTrailerLegsRaised(vehicle)
	return _in(0x95CF53B3D687F9FA, vehicle)
end
N_0x95cf53b3d687f9fa = SetTrailerLegsRaised

function SetTrainCruiseSpeed(train, speed)
	return _in(0x16469284DB8C62B5, train, speed)
end

--- Sets the ratio that a door is open for on a train.
-- @param train The train to set the door ratio for.
-- @param doorIndex Zero-based door index.
-- @param ratio A value between 0.0 (fully closed) and 1.0 (fully open).
function SetTrainDoorOpenRatio(train, doorIndex, ratio)
	return _in(0x2468dbe8, train, doorIndex, ratio)
end

function SetTrainSpeed(train, speed)
	return _in(0xAA0BC91BE0B796E3, train, speed)
end

--- Only called once inside main_persitant with the parameters, 0
function SetTrainTrackSpawnFrequency(trackIndex, frequency)
	return _in(0x21973BBF8D17EDFA, trackIndex, frequency)
end
N_0x21973bbf8d17edfa = SetTrainTrackSpawnFrequency

--- Enables or disables whether train doors should be forced open whilst a player is inside the train. This is enabled by default in multiplayer.
-- @param forceOpen Should force open.
function SetTrainsForceDoorsOpen(forceOpen)
	return _in(0xd4d1ba63, forceOpen)
end

--- This native doesn't work like [`SetWeatherTypeTransition`](#\_0x578C752848ECFA0C).
-- @param modifierName The name of a timecycle
-- @param transition The speed to transition to `modifierName`. Appears to be half-seconds (?)
function SetTransitionTimecycleModifier(modifierName, transition)
	return _in(0x3BCF567485E1971C, _ts(modifierName), transition)
end

--- Probably changes tvs from being a 3d audio to being "global" audio
function SetTvAudioFrontend(toggle)
	return _in(0x113D2C5DC57E1774, toggle)
end

function SetTvChannel(channel)
	return _in(0xBAABBB23EB6E484E, channel)
end

--- Loads specified video sequence into the TV Channel
-- TV_Channel ranges from 0-2
-- VideoSequence can be any of the following:
-- "PL_STD_CNT" CNT Standard Channel
-- "PL_STD_WZL" Weazel Standard Channel
-- "PL_LO_CNT"
-- "PL_LO_WZL"
-- "PL_SP_WORKOUT"
-- "PL_SP_INV" - Jay Norris Assassination Mission Fail
-- "PL_SP_INV_EXP" - Jay Norris Assassination Mission Success
-- "PL_LO_RS" - Righteous Slaughter Ad
-- "PL_LO_RS_CUTSCENE" - Righteous Slaughter Cut-scene
-- "PL_SP_PLSH1\_INTRO"
-- "PL_LES1\_FAME_OR_SHAME"
-- "PL_STD_WZL_FOS_EP2"
-- "PL_MP_WEAZEL" - Weazel Logo on loop
-- "PL_MP_CCTV" - Generic CCTV loop
-- Restart:
-- 0=video sequence continues as normal
-- 1=sequence restarts from beginning every time that channel is selected
-- The above playlists work as intended, and are commonly used, but there are many more playlists, as seen in `tvplaylists.xml`. A pastebin below outlines all playlists, they will be surronded by the name tag I.E. (<Name>PL_STD_CNT</Name> = PL_STD_CNT).
-- https://pastebin.com/zUzGB6h7
function SetTvChannelPlaylist(tvChannel, playlistName, restart)
	return _in(0xF7B38B8305F1FE8B, tvChannel, _ts(playlistName), restart)
end
N_0xf7b38b8305f1fe8b = SetTvChannelPlaylist
LoadTvChannelSequence = SetTvChannelPlaylist

function SetTvChannelPlaylistAtHour(tvChannel, playlistName, hour)
	return _in(0x2201C576FACAEBE8, tvChannel, _ts(playlistName), hour)
end
N_0x2201c576facaebe8 = SetTvChannelPlaylistAtHour

function SetTvVolume(volume)
	return _in(0x2982BF73F66E9DDC, volume)
end

--- NativeDB Introduced: v1868
function SetTyreHealth(vehicle, wheelIndex, health)
	return _in(0x74C68EF97645E79D, vehicle, wheelIndex, health)
end

--- Controls how fast the tires wear out.
-- Default values from Rockstar's Open Wheel Race JSON's:
-- "owrtss" (Soft): 2.2
-- "owrtsm" (Medium): 1.7
-- "owrtsh" (Hard): 1.2
-- Usable wheels:
-- 0: wheel_lf
-- 1: wheel_rf
-- 2: wheel_lm1
-- 3: wheel_rm1
-- 4: wheel_lr
-- 5: wheel_rr
-- ```
-- ```
-- NativeDB Introduced: v2060
function SetTyreSoftnessMultiplier(vehicle, wheelIndex, multiplier)
	return _in(0x392183BB9EA57697, vehicle, wheelIndex, multiplier)
end
N_0x392183bb9ea57697 = SetTyreSoftnessMultiplier

--- Controls how much traction the wheel loses.
-- Default values from Rockstar's Open Wheel Race JSON's:
-- "owrtds" (Soft): 0.05
-- "owrtdm" (Medium): 0.45
-- "owrtdh" (Hard): 0.8
-- Usable wheels:
-- 0: wheel_lf
-- 1: wheel_rf
-- 2: wheel_lm1
-- 3: wheel_rm1
-- 4: wheel_lr
-- 5: wheel_rr
-- ```
-- ```
-- NativeDB Introduced: v2060
function SetTyreTractionLossMultiplier(vehicle, wheelIndex, multiplier)
	return _in(0xC970D0E0FC31D768, vehicle, wheelIndex, multiplier)
end
N_0xc970d0e0fc31d768 = SetTyreTractionLossMultiplier

--- NativeDB Introduced: v1868
function SetTyreWearMultiplier(vehicle, wheelIndex, multiplier)
	return _in(0x01894E2EDE923CA2, vehicle, wheelIndex, multiplier)
end

--- NativeDB Introduced: v1365
function SetUnkBoolN_0x102ForSubmarineVehicleTask(vehicle, value)
	return _in(0x41B9FB92EDED32A6, vehicle, value)
end

--- NativeDB Introduced: v1365
function SetUnkFloatN_0x104ForSubmarineVehicleTask(vehicle, value)
	return _in(0x498218259FB7C72D, vehicle, value)
end

--- NativeDB Introduced: v1365
function SetUnkGlobalBoolRelatedToDamage(value)
	return _in(0xABDABF4E1EDECBFA, value)
end

function SetUseHiDof()
	return _in(0xA13B0222F3D94A94)
end

--- Allows vehicles with the FLAG_JUMPING_CAR flag to jump higher (i.e. Ruiner 2000).
function SetUseHigherVehicleJumpForce(vehicle, toggle)
	return _in(0xF06A16CA55D138D8, vehicle, toggle)
end
N_0xf06a16ca55d138d8 = SetUseHigherVehicleJumpForce

--- Sets a global mode which makes the pause menu map show 'Destination' instead of 'Waypoint' in the key legend on the
-- bottom of the screen.
-- <!--
-- Name guess:
-- - alphabetical function order, below [SET_USER_RADIO_CONTROL_ENABLED, SET_USE_HI_DOF], above SET_VARIABLE_ON_SOUND.
-- -->
-- @param toggle `true` to show 'Destination', `false` to show 'Waypoint' (the default)
function SetUseWaypointAsDestination(toggle)
	return _in(0x6CDD58146A436083, toggle)
end
N_0x6cdd58146a436083 = SetUseWaypointAsDestination

function SetUserRadioControlEnabled(toggle)
	return _in(0x19F21E63AE6EAE4E, toggle)
end

--- SET_VARIABLE_ON_*
function SetVariableOnCutsceneAudio(variableName, value)
	return _in(0xBCC29F935ED07688, _ts(variableName), value)
end
GetPlayerHeadsetSoundAlternate = SetVariableOnCutsceneAudio

function SetVariableOnSound(soundId, variableName, value)
	return _in(0xAD6B3148A78AE9B6, soundId, _ts(variableName), value)
end

--- From the scripts, p0:
-- "ArmWrestlingIntensity",
-- "INOUT",
-- "Monkey_Stream",
-- "ZoomLevel"
function SetVariableOnStream(p0, p1)
	return _in(0x2F9D3834AEB9EF79, _ts(p0), p1)
end

--- AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 1.0);
-- AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 0.0);
function SetVariableOnUnderWaterStream(variableName, value)
	return _in(0x733ADF241531E5C2, _ts(variableName), value)
end
N_0x733adf241531e5c2 = SetVariableOnUnderWaterStream

--- NativeDB Introduced: v2372
function SetVehHasRadioOverride(vehicle)
	return _in(0x3E45765F3FBB582F, vehicle)
end
N_0x3e45765f3fbb582f = SetVehHasRadioOverride

--- For a full list, see here: pastebin.com/Kj9t38KF
function SetVehRadioStation(vehicle, radioStation)
	return _in(0x1B9C0099CB942AC6, vehicle, _ts(radioStation))
end

function SetVehicleActiveDuringPlayback(vehicle, toggle)
	return _in(0xDFFCEF48E511DB48, vehicle, toggle)
end
N_0xdffcef48e511db48 = SetVehicleActiveDuringPlayback

function SetVehicleActiveForPedNavigation(vehicle, toggle)
	return _in(0x21115BCD6E44656A, vehicle, toggle)
end
N_0x21115bcd6e44656a = SetVehicleActiveForPedNavigation
SetVehicleCloseDoorDeferedAction = SetVehicleActiveForPedNavigation

function SetVehicleAlarm(vehicle, state)
	return _in(0xCDE5E70C1DDB954C, vehicle, state)
end

function SetVehicleAlarmTimeLeft(vehicle, time)
	return _in(0xc108ee6f, vehicle, time)
end

--- Makes the vehicle accept no passengers.
function SetVehicleAllowNoPassengersLockon(veh, toggle)
	return _in(0x5D14D4154BFE7B2C, veh, toggle)
end

--- This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
function SetVehicleAsNoLongerNeeded(vehicle)
	return _in(0x629BFA74418D6239, _ii(vehicle) --[[ may be optional ]])
end

--- Vehicle will make a 'rattling' noise when decelerating
-- @param vehicle Vehicle to modify
-- @param intensity A value 0.0 - 1.0. Higher the value, the more likely the vehicle is to make the sound while decelerating
function SetVehicleAudioBodyDamageFactor(vehicle, intensity)
	return _in(0x01BB4D577D38BD9E, vehicle, intensity)
end
N_0x01bb4d577d38bd9e = SetVehicleAudioBodyDamageFactor

function SetVehicleAudioEngineDamageFactor(vehicle, damageFactor)
	return _in(0x59E7B488451F4D3A, vehicle, damageFactor)
end
N_0x59e7b488451f4d3a = SetVehicleAudioEngineDamageFactor

--- Disables the vehicle from being repaired when a vehicle extra is enabled.
-- @param vehicle The vehicle to set disable auto vehicle repair.
-- @param value Setting the value to  true prevents the vehicle from being repaired when a extra is enabled. Setting the value to false allows the vehicle from being repaired when a extra is enabled.
function SetVehicleAutoRepairDisabled(vehicle, value)
	return _in(0x5f3a3574, vehicle, value)
end

function SetVehicleAutomaticallyAttaches(vehicle, p1, p2)
	return _in(0x8BA6F76BC53A1493, vehicle, p1, p2, _ri)
end

--- p2 often set to 1000.0 in the decompiled scripts.
function SetVehicleBodyHealth(vehicle, value)
	return _in(0xB77D05AC8C78AADB, vehicle, value)
end

--- Sets the amount of bombs that this vehicle has. As far as I know, this does *not* impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
-- In decompiled scripts this is used to deduct from or add to the count whenever bombs are dropped or purchased/restocked.
-- Use [`_GET_AIRCRAFT_BOMB_COUNT`](#\_0xEA12BD130D7569A1) to get the amount of bombs on that vehicle.
-- @param aircraft The vehicle to set the bombCount on.
-- @param bombCount The amount of bombs to set for this vehicle.
function SetVehicleBombCount(aircraft, bombCount)
	return _in(0xF4B2ED59DEB5D774, aircraft, bombCount)
end
N_0xf4b2ed59deb5d774 = SetVehicleBombCount
SetVehicleBombs = SetVehicleBombCount
SetAircraftBombCount = SetVehicleBombCount

--- SET_VEHICLE_BOOST_ACTIVE(vehicle, 1, 0);
-- SET_VEHICLE_BOOST_ACTIVE(vehicle, 0, 0);
-- Will give a boost-soundeffect.
function SetVehicleBoostActive(vehicle, toggle)
	return _in(0x4A04DE7CAB2739A1, vehicle, toggle)
end

function SetVehicleBrake(vehicle, toggle)
	return _in(0xE4E2FD323574965C, vehicle, toggle)
end
N_0xe4e2fd323574965c = SetVehicleBrake

function SetVehicleBrakeLights(vehicle, toggle)
	return _in(0x92B35082E0B42F66, vehicle, toggle)
end

--- Sets the arm position of a bulldozer. Position must be a value between 0.0 and 1.0. Ignored when `p2` is set to false, instead incrementing arm position by 0.1 (or 10%).
function SetVehicleBulldozerArmPosition(vehicle, position, p2)
	return _in(0xF8EBCCC96ADB9FB7, vehicle, position, p2)
end
N_0xf8ebccc96adb9fb7 = SetVehicleBulldozerArmPosition

--- On accelerating, spins the driven wheels with the others braked, so you don't go anywhere.
function SetVehicleBurnout(vehicle, toggle)
	return _in(0xFB8794444A7D60FB, vehicle, toggle)
end

--- SET_VEHICLE_AL*
function SetVehicleCanBeLockedOn(vehicle, canBeLockedOn, unk)
	return _in(0x1DDA078D12879EEE, vehicle, canBeLockedOn, unk)
end
N_0x1dda078d12879eee = SetVehicleCanBeLockedOn

--- This has not yet been tested - it's just an assumption of what the types could be.
function SetVehicleCanBeTargetted(vehicle, state)
	return _in(0x3750146A28097A82, vehicle, state)
end

function SetVehicleCanBeUsedByFleeingPeds(vehicle, toggle)
	return _in(0x300504B23BD3B711, vehicle, toggle)
end
N_0x300504b23bd3b711 = SetVehicleCanBeUsedByFleeingPeds

function SetVehicleCanBeVisiblyDamaged(vehicle, state)
	return _in(0x4C7028F78FFD3681, vehicle, state)
end

function SetVehicleCanBreak(vehicle, toggle)
	return _in(0x59BF8C3D52C92F66, vehicle, toggle)
end

function SetVehicleCanDeformWheels(vehicle, toggle)
	return _in(0x0CDDA42F9E360CA6, vehicle, toggle)
end
N_0x0cdda42f9e360ca6 = SetVehicleCanDeformWheels

function SetVehicleCanEngineOperateOnFire(vehicle, toggle)
	return _in(0x206BC5DC9D1AC70A, vehicle, toggle)
end
N_0x206bc5dc9d1ac70a = SetVehicleCanEngineOperateOnFire

function SetVehicleCanLeakOil(vehicle, toggle)
	return _in(0x51BB2D88D31A914B, vehicle, toggle)
end
N_0x51bb2d88d31a914b = SetVehicleCanLeakOil

function SetVehicleCanLeakPetrol(vehicle, toggle)
	return _in(0x192547247864DFDD, vehicle, toggle)
end
N_0x192547247864dfdd = SetVehicleCanLeakPetrol

function SetVehicleCanSaveInGarage(vehicle, toggle)
	return _in(0x428BACCDF5E26EAD, vehicle, toggle)
end
N_0x428baccdf5e26ead = SetVehicleCanSaveInGarage

--- Previously named GET_VEHICLE_DEFORMATION_GET_TREE (hash collision)
-- from Decrypted Scripts I found
-- VEHICLE::SET_VEHICLE_CEILING_HEIGHT(l_BD9[2/*2*/], 420.0);
function SetVehicleCeilingHeight(vehicle, height)
	return _in(0xA46413066687A328, vehicle, height)
end
GetVehicleDeformationGetTree = SetVehicleCeilingHeight

--- <1.0 - Decreased torque
-- =1.0 - Default torque
-- >1.0 - Increased torque
-- Negative values will cause the vehicle to go backwards instead of forwards while accelerating.
-- value - is between 0.2 and 1.8 in the decompiled scripts.
-- This needs to be called every frame to take effect.
function SetVehicleCheatPowerIncrease(vehicle, value)
	return _in(0xB59E4BD37AE292DB, vehicle, value)
end
SetVehicleEngineTorqueMultiplier = SetVehicleCheatPowerIncrease

function SetVehicleClutch(vehicle, clutch)
	return _in(0x2f70aced, vehicle, clutch)
end

--- Sets the selected vehicle's colors to their default value (specific variant specified using the colorCombination parameter).
-- Range of possible values for colorCombination is currently unknown, I couldn't find where these values are stored either (Disquse's guess was vehicles.meta but I haven't seen it in there.)
-- @param vehicle The vehicle to modify.
-- @param colorCombination One of the default color values of the vehicle.
function SetVehicleColourCombination(vehicle, colorCombination)
	return _in(0x33E8CD3322E2FE31, vehicle, colorCombination)
end

--- colorPrimary & colorSecondary are the paint indexes for the vehicle.
-- For a list of valid paint indexes, view: pastebin.com/pwHci0xK
function SetVehicleColours(vehicle, colorPrimary, colorSecondary)
	return _in(0x4F1D4BE3A7F24601, vehicle, colorPrimary, colorSecondary)
end

--- Inverts vehicle's controls. So INPUT_VEH_ACCELERATE will be INPUT_VEH_BRAKE and vise versa (same for A/D controls)
-- Doesn't work for planes/helis.
function SetVehicleControlsInverted(vehicle, state)
	return _in(0x5B91B229243351A8, vehicle, state)
end
N_0x5b91b229243351a8 = SetVehicleControlsInverted

--- Similar to [`_SET_AIRCRAFT_BOMB_COUNT`](#\_0xF4B2ED59DEB5D774), this sets the amount of countermeasures that are present on this vehicle.
-- Use [`_GET_AIRCRAFT_COUNTERMEASURE_COUNT`](#\_0xF846AA63DF56B804) to get the current amount.
-- @param aircraft The vehicle to set the amount of countermeasures on.
-- @param count The amount of countermeasures to set on this vehicle.
function SetVehicleCountermeasureCount(aircraft, count)
	return _in(0x9BDA23BF666F0855, aircraft, count)
end
N_0x9bda23bf666f0855 = SetVehicleCountermeasureCount
SetAircraftCountermeasureCount = SetVehicleCountermeasureCount

function SetVehicleCurrentRpm(vehicle, rpm)
	return _in(0x2a01a8fc, vehicle, rpm)
end

--- p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
function SetVehicleCustomPrimaryColour(vehicle, r, g, b)
	return _in(0x7141766F91D15BEA, vehicle, r, g, b)
end

--- p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
function SetVehicleCustomSecondaryColour(vehicle, r, g, b)
	return _in(0x36CED73BFED89754, vehicle, r, g, b)
end

--- Apply damage to vehicle at a location. Location is relative to vehicle model (not world).
-- Radius of effect damage applied in a sphere at impact location
-- When `focusOnModel` set to `true`, the damage sphere will travel towards the vehicle from the given point, thus guaranteeing an impact
-- @param radius the size of the damage sphere to apply
-- @param focusOnModel when set to `true`, the damage sphere will travel towards the vehicle from the given point, thus guaranteeing an impact
function SetVehicleDamage(vehicle, xOffset, yOffset, zOffset, damage, radius, focusOnModel)
	return _in(0xA1DD317EA8FD4F29, vehicle, xOffset, yOffset, zOffset, damage, radius, focusOnModel)
end

--- SET_VEHICLE_D*
function SetVehicleDamageModifier(vehicle, p1)
	return _in(0x4E20D2A627011E8E, vehicle, p1, _ri)
end
N_0x4e20d2a627011e8e = SetVehicleDamageModifier

function SetVehicleDashboardColor(vehicle, color)
	return _in(0x6089CDF6A57F326C, vehicle, color)
end
SetVehicleDashboardColour = SetVehicleDashboardColor

--- This fixes the deformation of a vehicle but the vehicle health doesn't improve
function SetVehicleDeformationFixed(vehicle)
	return _in(0x953DA1E1B12C0491, vehicle)
end

--- **Usage:**
-- *   Use this native inside a looped function.
-- *   Values:
-- *   `0.0` = no vehicles on streets
-- *   `1.0` = normal vehicles on streets
-- `1.0` Seems to be the maximum.
function SetVehicleDensityMultiplierThisFrame(multiplier)
	return _in(0x245A6883D966D537, multiplier)
end

--- Sets the dirt level of the passed vehicle.
-- @param vehicle The vehicle to set.
-- @param dirtLevel A number between 0.0 and 15.0 representing the vehicles dirt level.
function SetVehicleDirtLevel(vehicle, dirtLevel)
	return _in(0x79D3B596FE44EE8B, vehicle, dirtLevel)
end

function SetVehicleDisableTowing(vehicle, toggle)
	return _in(0x2B6747FAA9DB9D6B, vehicle, toggle)
end
N_0x2b6747faa9db9d6b = SetVehicleDisableTowing

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
function SetVehicleDoorBroken(vehicle, doorIndex, deleteDoor)
	return _in(0xD4D4F6A4AB575A33, vehicle, doorIndex, deleteDoor)
end

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
function SetVehicleDoorCanBreak(vehicle, doorIndex, isBreakable)
	return _in(0x2FA133A4A9D37ED8, vehicle, doorIndex, isBreakable)
end
SetVehicleDoorBreakable = SetVehicleDoorCanBreak

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param speed 5 is fast, 1 is slow 3 is medium
function SetVehicleDoorControl(vehicle, doorIndex, speed, angle)
	return _in(0xF2BFA0430F0A0FCB, vehicle, doorIndex, speed, angle)
end

--- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
function SetVehicleDoorLatched(vehicle, doorIndex, forceClose, lock, p4)
	return _in(0xA5A9653A8D2CAF48, vehicle, doorIndex, forceClose, lock, p4)
end

--- Sets the specified door index open on the passed vehicle. See [`IS_VEHICLE_DOOR_FULLY_OPEN`](#\_0x3E933CFF7B111C22).
-- @param vehicle Vehicle.
-- @param doorIndex Index of the door you want to open (0-7)
-- @param loose Whether the door is "loose" (if true the doors have no "spring" and can be closed easily.)
-- @param openInstantly Whether the doors open instantly (if true this native seems to ignore loose)
function SetVehicleDoorOpen(vehicle, doorIndex, loose, openInstantly)
	return _in(0x7C65DAC73C35C862, vehicle, doorIndex, loose, openInstantly)
end

--- Sets the specified door index shut on the passed vehicle.
-- ```cpp
-- enum eDoorId
-- {
-- VEH_EXT_DOOR_DSIDE_F = 0,
-- VEH_EXT_DOOR_DSIDE_R = 1,
-- VEH_EXT_DOOR_PSIDE_F = 2,
-- VEH_EXT_DOOR_PSIDE_R = 3,
-- VEH_EXT_BONNET = 4,
-- VEH_EXT_BOOT = 5,
-- // 0x872E72B8 = 0xFFFFFFFF,
-- }
-- ```
-- @param vehicle Vehicle.
-- @param doorIndex Index of the door you want to close.
-- @param closeInstantly Whether the doors close instantly.
function SetVehicleDoorShut(vehicle, doorIndex, closeInstantly)
	return _in(0x93D9BD300D7789E5, vehicle, doorIndex, closeInstantly)
end

--- // Source GTA VC miss2 leak, matching constants for 0/2/4, testing
-- // They use 10 in am_mp_property_int, don't know what it does atm.
-- enum eCarLock {
-- CARLOCK_NONE = 0,
-- CARLOCK_UNLOCKED = 1,
-- CARLOCK_LOCKED = 2,
-- CARLOCK_LOCKOUT_PLAYER_ONLY = 3,
-- CARLOCK_LOCKED_PLAYER_INSIDE = 4,
-- CARLOCK_LOCKED_INITIALLY = 5,
-- CARLOCK_FORCE_SHUT_DOORS = 6,
-- CARLOCK_LOCKED_BUT_CAN_BE_DAMAGED = 7
-- };
function SetVehicleDoorsLocked(vehicle, doorLockStatus)
	return _in(0xB664292EAECF7FA6, vehicle, doorLockStatus)
end

function SetVehicleDoorsLockedForAllPlayers(vehicle, toggle)
	return _in(0xA2F80B8D040727CC, vehicle, toggle)
end

function SetVehicleDoorsLockedForNonScriptPlayers(vehicle, toggle)
	return _in(0x9737A37136F07E75, vehicle, toggle)
end
N_0x9737a37136f07e75 = SetVehicleDoorsLockedForNonScriptPlayers

function SetVehicleDoorsLockedForPlayer(vehicle, player, toggle)
	return _in(0x517AAF684BB50CD1, vehicle, player, toggle)
end

function SetVehicleDoorsLockedForTeam(vehicle, team, toggle)
	return _in(0xB81F6D4A8F5EEBA8, vehicle, team, toggle)
end

--- NativeDB Introduced: v1365
function SetVehicleDoorsLockedForUnk(vehicle, toggle)
	return _in(0x203B527D1B77904C, vehicle, toggle)
end

--- Closes all doors of a vehicle:
function SetVehicleDoorsShut(vehicle, closeInstantly)
	return _in(0x781B3D62BB013EF5, vehicle, closeInstantly)
end

--- Money pickups are created around cars when they explode. Only works when the vehicle model is a car. A single pickup is between 1 and 18 dollars in size. All car models seem to give the same amount of money.
-- youtu.be/3arlUxzHl5Y
-- i.imgur.com/WrNpYFs.jpg
function SetVehicleDropsMoneyWhenBlownUp(vehicle, toggle)
	return _in(0x068F64F2470F9656, vehicle, toggle)
end
N_0x068f64f2470f9656 = SetVehicleDropsMoneyWhenBlownUp
SetVehicleCreatesMoneyPickupsWhenExploded = SetVehicleDropsMoneyWhenBlownUp

function SetVehicleEngineCanDegrade(vehicle, toggle)
	return _in(0x983765856F2564F9, vehicle, toggle)
end

--- 1000 is max health
-- Begins leaking gas at around 650 health
-- -999.90002441406 appears to be minimum health, although nothing special occurs <- false statement
-- -------------------------
-- Minimum: -4000
-- Maximum: 1000
-- -4000: Engine is destroyed
-- 0 and below: Engine catches fire and health rapidly declines
-- 300: Engine is smoking and losing functionality
-- 1000: Engine is perfect
function SetVehicleEngineHealth(vehicle, health)
	return _in(0x45F6D8EEF34ABEF1, vehicle, health)
end

--- Starts or stops the engine on the specified vehicle.
-- From what I've tested when I do this to a helicopter the propellers turn off after the engine has started.
-- @param vehicle The vehicle to start or stop the engine on.
-- @param value true to turn the vehicle on; false to turn it off.
-- @param instantly if true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.
-- @param disableAutoStart If true, the system will prevent the engine from starting when the player got into it.
function SetVehicleEngineOn(vehicle, value, instantly, disableAutoStart)
	return _in(0x2497C4717C8B881E, vehicle, value, instantly, disableAutoStart)
end

function SetVehicleEngineTemperature(vehicle, temperature)
	return _in(0x6c93c4a9, vehicle, temperature)
end

--- Examples with a besra:
-- *   [fade value `0.0`](https://i.imgur.com/DXNk63e.jpg)
-- *   [fade value `0.5`](https://i.imgur.com/2Vb35fq.jpg)
-- *   [fade value `1.0`](https://i.imgur.com/aa8cxaD.jpg)
-- The parameter fade is a value from 0-1, where 0 is fresh paint.
-- @param vehicle Target vehicle
-- @param fade The paint fade effect strength
function SetVehicleEnveffScale(vehicle, fade)
	return _in(0x3AFDC536C3D01674, vehicle, fade)
end
SetVehiclePaintFade = SetVehicleEnveffScale

--- Incorrectly named `SET_VEHICLE_EXCLUSIVE_DRIVER`; likely `SET_VEHICLE_ALLOW_*`.
-- Toggles a flag related to `SET_VEHICLE_EXCLUSIVE_DRIVER`, however, doesn't enable that feature (or trigger script events related to it).
-- See [`_SET_VEHICLE_EXCLUSIVE_DRIVER_2`](#\_0xB5C51B5502E85E83).
-- ```
-- NativeDB Removed Parameter 2: int index
-- ```
function SetVehicleExclusiveDriver(vehicle, toggle)
	return _in(0x41062318F23ED854, vehicle, toggle)
end
N_0x41062318f23ed854 = SetVehicleExclusiveDriver

--- The **actual** [`SET_VEHICLE_EXCLUSIVE_DRIVER`](#\_0x41062318F23ED854) native.
function SetVehicleExclusiveDriver_2(vehicle, ped, index)
	return _in(0xB5C51B5502E85E83, vehicle, ped, index)
end
N_0xb5c51b5502e85e83 = SetVehicleExclusiveDriver_2

--- Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.
function SetVehicleExplodesOnHighExplosionDamage(vehicle, toggle)
	return _in(0x71B0892EC081D60A, vehicle, toggle)
end

--- Max value is 32767
function SetVehicleExtendedRemovalRange(vehicle, range)
	return _in(0x79DF7E806202CE01, vehicle, range)
end
N_0x79df7e806202ce01 = SetVehicleExtendedRemovalRange

--- Note: only some vehicle have extras
-- extra ids are from 1 - 9 depending on the vehicle
-- -------------------------------------------------
-- ^ not sure if outdated or simply wrong. Max extra ID for b944 is 14
-- -------------------------------------------------
-- p2 is not a on/off toggle. mostly 0 means on and 1 means off.
-- not sure if it really should be a BOOL.
-- -------------------------------------------------
-- Confirmed p2 does not work as a bool. Changed to int. [0=on, 1=off]
function SetVehicleExtra(vehicle, extraId, disable)
	return _in(0x7EE3A3C5E4A40CC9, vehicle, extraId, disable)
end

--- They use the same color indexs as SET_VEHICLE_COLOURS.
function SetVehicleExtraColours(vehicle, pearlescentColor, wheelColor)
	return _in(0x2036F561ADD12E33, vehicle, pearlescentColor, wheelColor)
end

--- Fix a given vehicle.
-- If the vehicle's engine's broken then you cannot fix it with this native.
-- @param vehicle The vehicle that will be fixed
function SetVehicleFixed(vehicle)
	return _in(0x115722B1B9C14C1C, vehicle)
end

function SetVehicleFlightNozzlePosition(vehicle, angleRatio)
	return _in(0x30D779DE7C4F6DD3, vehicle, angleRatio)
end
N_0x30d779de7c4f6dd3 = SetVehicleFlightNozzlePosition
SetDesiredVerticalFlightPhase = SetVehicleFlightNozzlePosition
SetPlaneVtolDesiredDirection = SetVehicleFlightNozzlePosition

function SetVehicleFlightNozzlePositionImmediate(vehicle, angle)
	return _in(0x9AA47FFF660CB932, vehicle, angle)
end
N_0x9aa47fff660cb932 = SetVehicleFlightNozzlePositionImmediate
SetVerticalFlightPhase = SetVehicleFlightNozzlePositionImmediate
SetPlaneVtolDirection = SetVehicleFlightNozzlePositionImmediate

function SetVehicleForceAfterburner(vehicle, toggle)
	return _in(0xB055A34527CB8FD7, vehicle, toggle)
end
N_0xb055a34527cb8fd7 = SetVehicleForceAfterburner

--- SCALE: Setting the speed to 30 would result in a speed of roughly 60mph, according to speedometer.
-- Speed is in meters per second
-- You can convert meters/s to mph here:
-- http://www.calculateme.com/Speed/MetersperSecond/ToMilesperHour.htm
function SetVehicleForwardSpeed(vehicle, speed)
	return _in(0xAB54A438726D25D5, vehicle, speed)
end

--- Seems to be related to the metal parts, not tyres (like i was expecting lol)
-- Must be called every tick.
function SetVehicleFrictionOverride(vehicle, friction)
	return _in(0x1837AF7C627009BA, vehicle, friction)
end

function SetVehicleFuelLevel(vehicle, level)
	return _in(0xba970511, vehicle, level)
end

--- It switch to highbeam when p1 is set to true.
function SetVehicleFullbeam(vehicle, toggle)
	return _in(0x8B7FD87F0DDB421E, vehicle, toggle)
end

--- Allows creation of CEventShockingPlaneFlyby, CEventShockingHelicopterOverhead, and other(?) Shocking events
function SetVehicleGeneratesEngineShockingEvents(vehicle, toggle)
	return _in(0x279D50DE5652D935, vehicle, toggle)
end
N_0x279d50de5652d935 = SetVehicleGeneratesEngineShockingEvents

function SetVehicleGravity(vehicle, toggle)
	return _in(0x89F149B6131E57DA, vehicle, toggle)
end

function SetVehicleGravityAmount(vehicle, gravity)
	return _in(0x1a963e58, vehicle, gravity)
end

function SetVehicleHandbrake(vehicle, toggle)
	return _in(0x684785568EF26A22, vehicle, toggle)
end

--- Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_FIELD`, this might require some experimentation.
-- Example: `SetVehicleHandlingField(vehicle, 'CHandlingData', 'fSteeringLock', 360.0)`
-- @param vehicle The vehicle to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The value to set.
function SetVehicleHandlingField(vehicle, class_, fieldName, value)
	return _in(0x2ba40795, vehicle, _ts(class_), _ts(fieldName), value)
end

--- Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_FLOAT`, this might require some experimentation.
-- Example: `SetVehicleHandlingFloat(vehicle, 'CHandlingData', 'fSteeringLock', 360.0)`
-- @param vehicle The vehicle to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The floating-point value to set.
function SetVehicleHandlingFloat(vehicle, class_, fieldName, value)
	return _in(0x488c86d2, vehicle, _ts(class_), _ts(fieldName), value)
end

function SetVehicleHandlingHashForAi(vehicle, hash)
	return _in(0x10655FAB9915623D, vehicle, _ch(hash))
end
N_0x10655fab9915623d = SetVehicleHandlingHashForAi

--- Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_INT`, this might require some experimentation.
-- @param vehicle The vehicle to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The integer value to set.
function SetVehicleHandlingInt(vehicle, class_, fieldName, value)
	return _in(0xc37f4cf9, vehicle, _ts(class_), _ts(fieldName), value)
end

--- Sets a handling override for a specific vehicle. Certain handling flags can only be set globally using `SET_HANDLING_VECTOR`, this might require some experimentation.
-- @param vehicle The vehicle to set data for.
-- @param class_ The handling class to set. Only "CHandlingData" is supported at this time.
-- @param fieldName The field name to set. These match the keys in `handling.meta`.
-- @param value The Vector3 value to set.
function SetVehicleHandlingVector(vehicle, class_, fieldName, value)
	return _in(0x12497890, vehicle, _ts(class_), _ts(fieldName), value)
end

function SetVehicleHasBeenDrivenFlag(vehicle, toggle)
	return _in(0x02398B627547189C, vehicle, toggle)
end
N_0x02398b627547189c = SetVehicleHasBeenDrivenFlag

function SetVehicleHasBeenOwnedByPlayer(vehicle, owned)
	return _in(0x2B5F9D2AF1F1722D, vehicle, owned)
end

function SetVehicleHasMutedSirens(vehicle, toggle)
	return _in(0xD8050E0EB60CF274, vehicle, toggle)
end
DisableVehicleImpactExplosionActivation = SetVehicleHasMutedSirens
SetDisableVehicleSirenSound = SetVehicleHasMutedSirens

--- if true, axles won't bend.
function SetVehicleHasStrongAxles(vehicle, toggle)
	return _in(0x92F0CF722BC4202F, vehicle, toggle)
end

function SetVehicleHasUnbreakableLights(vehicle, p1)
	return _in(0x1AA8A837D2169D94, vehicle, p1)
end
N_0x1aa8a837d2169d94 = SetVehicleHasUnbreakableLights
SetVehicleLightsCanBeVisiblyDamaged = SetVehicleHasUnbreakableLights

function SetVehicleHighGear(vehicle, gear)
	return _in(0x20b1b3e6, vehicle, gear)
end

--- NativeDB Introduced: v1365
function SetVehicleHornVariation(vehicle, value)
	return _in(0x0350E7E17BA767D0, vehicle, value)
end
N_0x0350e7e17ba767d0 = SetVehicleHornVariation
N_0xcda42c4bb9bde779 = SetVehicleHornVariation

--- NativeDB Introduced: v1290
function SetVehicleHoverTransformActive(vehicle, toggle)
	return _in(0x2D55FE374D5FDB91, vehicle, toggle)
end

--- If false, anything related to INPUT_VEH_TRANSFORM are ignored (changing hover state through script natives still possible).
-- ```
-- ```
-- NativeDB Introduced: v1290
function SetVehicleHoverTransformEnabled(vehicle, toggle)
	return _in(0xF1211889DF15A763, vehicle, toggle)
end
N_0xf1211889df15a763 = SetVehicleHoverTransformEnabled

--- According to decompiled scripts this should work with the `deluxo` and `oppressor2` vehicles.
-- I've only seen this work for `deluxo` though, can't figure out what it's supposed to do on `oppressor2`.
-- For the deluxo:
-- *   Set `state` to `0.0`: Fully transform to a 'road' vehicle (non-hover mode).
-- *   Set `state` to `1.0`: Fully transform to a 'flying' vehicle (hover mode).
-- If you set it to something like 0.5, then something [weird happens](https://streamable.com/p6wmr), you end up in some 50% hover mode, 50% not hover mode.
-- This doesn't need to be called every tick, just once and the vehicle will transform to that state at the usual transform speed. It'll just stop transforming when it reaches the state you provided.
-- Once this native is used then players will just be able to hit the vehicle transform key to toggle the transformation cycle; it won't block users from using the key.
-- @param vehicle The vehicle (a deluxo or oppressor2).
-- @param state The transform state (value between 0.0 and 1.0).
function SetVehicleHoverTransformPercentage(vehicle, state)
	return _in(0x438B3D7CA026FE91, vehicle, state)
end
N_0x438b3d7ca026fe91 = SetVehicleHoverTransformPercentage
SetVehicleTransformState = SetVehicleHoverTransformPercentage

--- NativeDB Introduced: v1290
function SetVehicleHoverTransformRatio(vehicle, ratio)
	return _in(0xD138FA15C9776837, vehicle, ratio)
end

function SetVehicleInactiveDuringPlayback(vehicle, toggle)
	return _in(0x06582AFF74894C75, vehicle, toggle)
end
N_0x06582aff74894c75 = SetVehicleInactiveDuringPlayback

--- Sets the turn signal enabled for a vehicle.
-- Set turnSignal to 1 for left light, 0 for right light.
function SetVehicleIndicatorLights(vehicle, turnSignal, toggle)
	return _in(0xB5D45264751B7DF0, vehicle, turnSignal, toggle)
end

function SetVehicleIndividualDoorsLocked(vehicle, doorIndex, doorLockStatus)
	return _in(0xBE70724027F85BCD, vehicle, doorIndex, doorLockStatus)
end
SetPedTargettableVehicleDestroy = SetVehicleIndividualDoorsLocked
SetVehicleDoorDestroyType = SetVehicleIndividualDoorsLocked

function SetVehicleInteriorColor(vehicle, color)
	return _in(0xF40DD601A65F7F19, vehicle, color)
end
SetVehicleInteriorColour = SetVehicleInteriorColor

function SetVehicleInteriorlight(vehicle, toggle)
	return _in(0xBC2042F090AF6AD3, vehicle, toggle)
end

--- Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored.
function SetVehicleIsConsideredByPlayer(vehicle, toggle)
	return _in(0x31B927BBC44156CD, vehicle, toggle)
end

--- p1 (toggle) was always 1 (true) except in one case in the b678 scripts.
function SetVehicleIsRacing(vehicle, toggle)
	return _in(0x07116E24E9D1929D, vehicle, toggle)
end
SteerUnlockBias = SetVehicleIsRacing

function SetVehicleIsStolen(vehicle, isStolen)
	return _in(0x67B2C79AA7FF5738, vehicle, isStolen)
end

--- Sets the wanted state of this vehicle.
function SetVehicleIsWanted(vehicle, state)
	return _in(0xF7EC25A3EBEEC726, vehicle, state)
end

function SetVehicleJetEngineOn(vehicle, toggle)
	return _in(0xB8FBC8B1330CA9B4, vehicle, toggle)
end
N_0xb8fbc8b1330ca9b4 = SetVehicleJetEngineOn

function SetVehicleKersAllowed(vehicle, toggle)
	return _in(0x99C82F8A139F3E4E, vehicle, toggle)
end
N_0x99c82f8a139f3e4e = SetVehicleKersAllowed
SetVehicleHudSpecialAbilityBarActive = SetVehicleKersAllowed

--- multiplier = brightness of head lights.
-- this value isn't capped afaik.
-- multiplier = 0.0 no lights
-- multiplier = 1.0 default game value
function SetVehicleLightMultiplier(vehicle, multiplier)
	return _in(0xB385454F8791F57C, vehicle, multiplier)
end

--- set's if the vehicle has lights or not.
-- not an on off toggle.
-- p1 = 0 ;vehicle normal lights, off then lowbeams, then highbeams
-- p1 = 1 ;vehicle doesn't have lights, always off
-- p1 = 2 ;vehicle has always on lights
-- p1 = 3 ;or even larger like 4,5,... normal lights like =1
-- note1: when using =2 on day it's lowbeam,highbeam
-- but at night it's lowbeam,lowbeam,highbeam
-- note2: when using =0 it's affected by day or night for highbeams don't exist in daytime.
function SetVehicleLights(vehicle, state)
	return _in(0x34E710FF01247C5A, vehicle, state)
end

--- p1 can be either 0, 1 or 2.
-- Determines how vehicle lights behave when toggled.
-- 0 = Default (Lights can be toggled between off, normal and high beams)
-- 1 = Lights Disabled (Lights are fully disabled, cannot be toggled)
-- 2 = Always On (Lights can be toggled between normal and high beams)
function SetVehicleLightsMode(vehicle, p1)
	return _in(0x1FD09E7390A74D54, vehicle, p1)
end
N_0x1fd09e7390a74d54 = SetVehicleLightsMode

function SetVehicleLivery(vehicle, livery)
	return _in(0x60BF608F1B8CD1B6, vehicle, livery)
end

function SetVehicleLodMultiplier(vehicle, multiplier)
	return _in(0x93AE6A61BE015BF1, vehicle, multiplier)
end

--- To reset the max speed, set the `speed` value to `0.0` or lower.
-- @param vehicle The vehicle handle.
-- @param speed The speed limit in meters per second.
function SetVehicleMaxSpeed(vehicle, speed)
	return _in(0xBAA045B4E42F3C06, vehicle, speed)
end
N_0xbaa045b4e42f3c06 = SetVehicleMaxSpeed

--- cpp
-- // eVehicleModType values modified to conform to script native reorganization (see 0x140D25327 in 1604).
-- enum eVehicleModType
-- {
-- VMT_SPOILER = 0,
-- VMT_BUMPER_F = 1,
-- VMT_BUMPER_R = 2,
-- VMT_SKIRT = 3,
-- VMT_EXHAUST = 4,
-- VMT_CHASSIS = 5,
-- VMT_GRILL = 6,
-- VMT_BONNET = 7,
-- VMT_WING_L = 8,
-- VMT_WING_R = 9,
-- VMT_ROOF = 10,
-- VMT_ENGINE = 11,
-- VMT_BRAKES = 12,
-- VMT_GEARBOX = 13,
-- VMT_HORN = 14,
-- VMT_SUSPENSION = 15,
-- VMT_ARMOUR = 16,
-- VMT_NITROUS = 17,
-- VMT_TURBO = 18,
-- VMT_SUBWOOFER = 19,
-- VMT_TYRE_SMOKE = 20,
-- VMT_HYDRAULICS = 21,
-- VMT_XENON_LIGHTS = 22,
-- VMT_WHEELS = 23,
-- VMT_WHEELS_REAR_OR_HYDRAULICS = 24,
-- VMT_PLTHOLDER = 25,
-- VMT_PLTVANITY = 26,
-- VMT_INTERIOR1 = 27,
-- VMT_INTERIOR2 = 28,
-- VMT_INTERIOR3 = 29,
-- VMT_INTERIOR4 = 30,
-- VMT_INTERIOR5 = 31,
-- VMT_SEATS = 32,
-- VMT_STEERING = 33,
-- VMT_KNOB = 34,
-- VMT_PLAQUE = 35,
-- VMT_ICE = 36,
-- VMT_TRUNK = 37,
-- VMT_HYDRO = 38,
-- VMT_ENGINEBAY1 = 39,
-- VMT_ENGINEBAY2 = 40,
-- VMT_ENGINEBAY3 = 41,
-- VMT_CHASSIS2 = 42,
-- VMT_CHASSIS3 = 43,
-- VMT_CHASSIS4 = 44,
-- VMT_CHASSIS5 = 45,
-- VMT_DOOR_L = 46,
-- VMT_DOOR_R = 47,
-- VMT_LIVERY_MOD = 48,
-- VMT_LIGHTBAR = 49,
-- };
function SetVehicleMod(vehicle, modType, modIndex, customTires)
	return _in(0x6AF0636DDEDCB6DD, vehicle, modType, modIndex, customTires)
end

--- paintType:
-- 0: Normal
-- 1: Metallic
-- 2: Pearl
-- 3: Matte
-- 4: Metal
-- 5: Chrome
-- color: number of the color.
-- p3 seems to always be 0.
function SetVehicleModColor_1(vehicle, paintType, color, pearlescentColor)
	return _in(0x43FEB945EE7F85B8, vehicle, paintType, color, pearlescentColor)
end

--- Changes the secondary paint type and color
-- paintType:
-- 0: Normal
-- 1: Metallic
-- 2: Pearl
-- 3: Matte
-- 4: Metal
-- 5: Chrome
-- color: number of the color
function SetVehicleModColor_2(vehicle, paintType, color)
	return _in(0x816562BADFDEC83E, vehicle, paintType, color)
end

--- Set modKit to 0 if you plan to call SET_VEHICLE_MOD. That's what the game does. Most body modifications through SET_VEHICLE_MOD will not take effect until this is set to 0.
function SetVehicleModKit(vehicle, modKit)
	return _in(0x1F2AA07F00B3217A, vehicle, modKit)
end

--- seems to make the vehicle stop spawning naturally in traffic. Here's an essential example:
-- VEHICLE::SET_VEHICLE_MODEL_IS_SUPPRESSED(GAMEPLAY::GET_HASH_KEY("taco"), true);
function SetVehicleModelIsSuppressed(model, suppressed)
	return _in(0x0FC2D89AC25A5814, _ch(model), suppressed)
end

--- NOTE: Debugging functions are not present in the retail version of the game.
function SetVehicleNameDebug(vehicle, name)
	return _in(0xBFDF984E2C22B94F, vehicle, _ts(name))
end

function SetVehicleNeedsToBeHotwired(vehicle, toggle)
	return _in(0xFBA550EA44404EE6, vehicle, toggle)
end

--- Sets the neon lights of the specified vehicle on/off.
-- Indices:
-- 0 = Left
-- 1 = Right
-- 2 = Front
-- 3 = Back
function SetVehicleNeonLightEnabled(vehicle, index, toggle)
	return _in(0x2AA720E4287BF269, vehicle, index, toggle)
end

--- NativeDB Introduced: v1493
function SetVehicleNeonLightsColor_2(vehicle, color)
	return _in(0xB93B2867F7B479D1, vehicle, color)
end

--- Sets the color of the neon lights on the specified vehicle.
-- RGB values and colour names taken from the decompiled scripts:
-- | Colour         |  R  |  G  |  B  |
-- |---------------|:---:|:---:|:---:|
-- | White         | 222 | 222 | 255 |
-- | Blue          | 2   | 21  | 255 |
-- | Electric Blue | 3   | 83  | 255 |
-- | Mint Green    | 0   | 255 | 140 |
-- | Lime Green    | 94  | 255 | 1   |
-- | Yellow        | 255 | 255 | 0   |
-- | Golden Shower | 255 | 150 | 0   |
-- | Orange        | 255 | 62  | 0   |
-- | Red           | 255 | 1   | 1   |
-- | Pony Pink     | 255 | 50  | 100 |
-- | Hot Pink      | 255 | 5   | 190 |
-- | Purple        | 35  | 1   | 255 |
-- | Blacklight    | 15  | 3   | 255 |
function SetVehicleNeonLightsColour(vehicle, r, g, b)
	return _in(0x8E0A582209A62695, vehicle, r, g, b)
end

--- NativeDB Introduced: v1604
-- NativeDB Added Parameter 2 (2060): float level
-- NativeDB Added Parameter 3 (2060): float power
-- NativeDB Added Parameter 4 (2060): float rechargeTime
-- NativeDB Added Parameter 5 (2060): BOOL disableSound
function SetVehicleNitroEnabled(vehicle, toggle)
	return _in(0xC8E9B6B71B8E660D, vehicle, toggle)
end

function SetVehicleNumberPlateText(vehicle, plateText)
	return _in(0x95A88F0B409CDA47, vehicle, _ts(plateText))
end

--- Plates:
-- Blue/White - 0
-- Yellow/black - 1
-- Yellow/Blue - 2
-- Blue/White2 - 3
-- Blue/White3 - 4
-- Yankton - 5
function SetVehicleNumberPlateTextIndex(vehicle, plateIndex)
	return _in(0x9088EB5A43FFB0A1, vehicle, plateIndex)
end

function SetVehicleOilLevel(vehicle, level)
	return _in(0x90d1cad1, vehicle, level)
end

--- Sets a vehicle on the ground on all wheels.  Returns whether or not the operation was successful.
-- ```
-- ```
-- NativeDB Added Parameter 2: float p1
function SetVehicleOnGroundProperly(vehicle)
	return _in(0x49733E92263139D1, vehicle, _r)
end

--- Tested on the player's current vehicle. Unless you kill the driver, the vehicle doesn't loose control, however, if enabled, explodeOnImpact is still active. The moment you crash, boom.
function SetVehicleOutOfControl(vehicle, killDriver, explodeOnImpact)
	return _in(0xF19D095E42D430CC, vehicle, killDriver, explodeOnImpact)
end

function SetVehicleParachuteActive(vehicle, active)
	return _in(0x0BFFB028B3DD0A97, vehicle, active)
end

--- parachuteModel = 230075693
function SetVehicleParachuteModel(vehicle, modelHash)
	return _in(0x4D610C6B56031351, vehicle, _ch(modelHash))
end
VehicleSetCustomParachuteModel = SetVehicleParachuteModel

--- colorIndex = 0 - 7
function SetVehicleParachuteTextureVariation(vehicle, textureVariation)
	return _in(0xA74AD2439468C883, vehicle, textureVariation)
end
VehicleSetCustomParachuteTexture = SetVehicleParachuteTextureVariation
SetVehicleParachuteTextureVariatiion = SetVehicleParachuteTextureVariation

--- 1000 is max health
-- Begins leaking gas at around 650 health
function SetVehiclePetrolTankHealth(vehicle, health)
	return _in(0x70DB57649FA8D0D8, vehicle, health)
end

function SetVehiclePopulationBudget(p0)
	return _in(0xCB9E1EB3BE2AF4E9, p0)
end

function SetVehicleProvidesCover(vehicle, toggle)
	return _in(0x5AFEEDD9BB2899D7, vehicle, toggle)
end

--- can't seem to enable radio on cop cars etc
function SetVehicleRadioEnabled(vehicle, toggle)
	return _in(0x3B988190C0AA6C0B, vehicle, toggle)
end

function SetVehicleRadioLoud(vehicle, toggle)
	return _in(0xBB6F1CAEC68B0BCE, vehicle, toggle)
end

function SetVehicleRampLaunchModifier(vehicle, p1)
	return _in(0xEFC13B1CE30D755D, vehicle, p1)
end
N_0xefc13b1ce30d755d = SetVehicleRampLaunchModifier

function SetVehicleRampSidewaysLaunchMotion(vehicle, toggle)
	return _in(0x1BBAC99C0BC53656, vehicle, toggle)
end
N_0x1bbac99c0bc53656 = SetVehicleRampSidewaysLaunchMotion

function SetVehicleRampUpwardsLaunchMotion(vehicle, toggle)
	return _in(0x756AE6E962168A04, vehicle, toggle)
end
N_0x756ae6e962168a04 = SetVehicleRampUpwardsLaunchMotion

function SetVehicleReceivesRampDamage(vehicle, toggle)
	return _in(0x28D034A93FE31BF5, vehicle, toggle)
end
SetRampVehicleReceivesRampDamage = SetVehicleReceivesRampDamage

--- Reduces grip significantly so it's hard to go anywhere.
function SetVehicleReduceGrip(vehicle, toggle)
	return _in(0x222FF6A823D122E2, vehicle, toggle)
end

--- Often used in conjunction with: [SET_VEHICLE_REDUCE_GRIP](#\_0x222FF6A823D122E2).
-- ```
-- NativeDB Introduced: v1604
-- ```
function SetVehicleReduceTraction(vehicle, val)
	return _in(0x6DEE944E1EE90CFB, vehicle, val)
end
N_0x6dee944e1ee90cfb = SetVehicleReduceTraction

function SetVehicleRocketBoostActive(vehicle, active)
	return _in(0x81E1552E35DC3839, vehicle, active)
end

function SetVehicleRocketBoostPercentage(vehicle, percentage)
	return _in(0xFEB2DDED3509562E, vehicle, percentage)
end

function SetVehicleRocketBoostRefillTime(vehicle, time)
	return _in(0xE00F2AB100B76E89, vehicle, time)
end

--- Used to set the tornado custom (convertible) rooftop livery.
-- Livery value that works for tornado custom is between 0 and 9 from what i can tell. Maybe 0-8 even.
-- Might work on other custom vehicles but im not sure what those might be, only confirmed it working with the tornado custom.
-- @param vehicle The vehicle handle.
-- @param livery Livery index.
function SetVehicleRoofLivery(vehicle, livery)
	return _in(0xA6D3A8750DC73270, vehicle, livery)
end
N_0xa6d3a8750dc73270 = SetVehicleRoofLivery

function SetVehicleRudderBroken(vehicle, toggle)
	return _in(0x09606148B6C71DEF, vehicle, toggle)
end

--- Only works during nighttime.
function SetVehicleSearchlight(heli, toggle, canBeUsedByAI)
	return _in(0x14E85C5EE7A4D542, heli, toggle, canBeUsedByAI)
end

--- Adds some kind of shadow to the vehicle.
-- -1 disables the effect.
-- DISABLE_*
function SetVehicleShadowEffect(vehicle, p1, p2)
	return _in(0xF0E4BA16D1DB546C, vehicle, p1, p2)
end
N_0xf0e4ba16d1db546c = SetVehicleShadowEffect

--- Commands the driver of an armed vehicle (p0) to shoot its weapon at a target (p1). p3, p4 and p5 are the coordinates of the target. Example:
-- WEAPON::SET_CURRENT_PED_VEHICLE_WEAPON(pilot,GAMEPLAY::GET_HASH_KEY("VEHICLE_WEAPON_PLANE_ROCKET"));VEHICLE::SET_VEHICLE_SHOOT_AT_TARGET(pilot, target, targPos.x, targPos.y, targPos.z);
function SetVehicleShootAtTarget(driver, entity, xTarget, yTarget, zTarget)
	return _in(0x74CD9A9327A282EA, driver, entity, xTarget, yTarget, zTarget)
end

--- If set to TRUE, it seems to suppress door noises and doesn't allow the horn to be continuous.
function SetVehicleSilent(vehicle, toggle)
	return _in(0x9D44FCCE98450843, vehicle, toggle)
end
N_0x9d44fcce98450843 = SetVehicleSilent

--- Activate siren on vehicle (Only works if the vehicle has a siren).
function SetVehicleSiren(vehicle, toggle)
	return _in(0xF4924635A19EB37D, vehicle, toggle)
end

--- Has something to do with trains. Always precedes SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED.
-- ============================================
-- May be true that it can be used with trains not sure, but not specifically for trains. Go find Xbox360 decompiled scripts and search for 'func_1333' in freemode.c it isn't used just for trains. Thanks for the info tho.
-- Btw, func_1333 ends up calling this func which uses this native,
-- void func_1338(int iParam0)//Position
-- {
-- ENTITY::FREEZE_ENTITY_POSITION(iParam0, true);
-- ENTITY::SET_ENTITY_COLLISION(iParam0, false, 0);
-- ENTITY::SET_ENTITY_INVINCIBLE(iParam0, true);
-- VEHICLE::_0xDF594D8D(iParam0, true);
-- }
function SetVehicleSt(vehicle, toggle)
	return _in(0x1CF38D529D7441D9, vehicle, toggle)
end
N_0x1cf38d529d7441d9 = SetVehicleSt

--- Overrides the vehicle's startup engine rev sound.
-- 2 calls found in the b617d scripts:
-- ```cpp
-- AUDIO::SET_VEHICLE_STARTUP_REV_SOUND(l_A42, "Franklin_Bike_Rev", "BIG_SCORE_3A_SOUNDS");
-- AUDIO::SET_VEHICLE_STARTUP_REV_SOUND(l_166, "Trevor_Revs_Off", "PALETO_SCORE_SETUP_SOUNDS");
-- ```
function SetVehicleStartupRevSound(vehicle, p1, p2)
	return _in(0xF1F8157B8C3F171C, vehicle, _ts(p1), _ts(p2))
end
N_0xf1f8157b8c3f171c = SetVehicleStartupRevSound

--- Locks the vehicle's steering to the desired angle, explained below.
-- Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.
-- Steer bias:
-- -1.0 = full right
-- 0.0 = centered steering
-- 1.0 = full left
function SetVehicleSteerBias(vehicle, value)
	return _in(0x42A8EC77D5150CBE, vehicle, value)
end

function SetVehicleSteeringAngle(vehicle, angle)
	return _in(0xffccc2ea, vehicle, angle)
end

function SetVehicleSteeringBiasScalar(vehicle, scalar)
	return _in(0x9007A2F21DC108D4, vehicle, scalar)
end
N_0x9007a2f21dc108d4 = SetVehicleSteeringBiasScalar

function SetVehicleSteeringScale(vehicle, scale)
	return _in(0xeb46596f, vehicle, scale)
end

--- If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives
function SetVehicleStrong(vehicle, toggle)
	return _in(0x3E8C8727991A8A0B, vehicle, toggle)
end

--- Sets the height of the vehicle's suspension.
-- This changes the same value set by Suspension in the mod shop.
-- Negatives values raise the car. Positive values lower the car.
-- This is change is visual only. The collision of the vehicle will not move.
function SetVehicleSuspensionHeight(vehicle, newHeight)
	return _in(0xb3439a01, vehicle, newHeight)
end

function SetVehicleTankTurretPosition(vehicle, position, p2)
	return _in(0x56B94C6D7127DFBA, vehicle, position, p2)
end
N_0x56b94c6d7127dfba = SetVehicleTankTurretPosition

function SetVehicleTimedExplosion(vehicle, ped, toggle)
	return _in(0x2E0A74E1002380B1, vehicle, ped, toggle)
end

--- Sets how much the crane on the tow truck is raised, where 0.0 is fully lowered and 1.0 is fully raised.
function SetVehicleTowTruckArmPosition(vehicle, position)
	return _in(0xFE54B92A344583CA, vehicle, position)
end
SetTowTruckCraneRaised = SetVehicleTowTruckArmPosition
SetTowTruckCraneHeight = SetVehicleTowTruckArmPosition

function SetVehicleTurboPressure(vehicle, pressure)
	return _in(0x6485615e, vehicle, pressure)
end

function SetVehicleTurretSpeedThisFrame(vehicle, speed)
	return _in(0x1093408B4B9D1146, vehicle, speed)
end
N_0x1093408b4b9d1146 = SetVehicleTurretSpeedThisFrame

--- Toggles specific flag on turret
-- ```
-- ```
-- NativeDB Introduced: v1290
function SetVehicleTurretUnk(vehicle, index, toggle)
	return _in(0xC60060EB0D8AC7B1, vehicle, index, toggle)
end
N_0xc60060eb0d8ac7b1 = SetVehicleTurretUnk

--- "To burst tyres VEHICLE::SET_VEHICLE_TYRE_BURST(vehicle, 0, true, 1000.0)
-- to burst all tyres type it 8 times where p1 = 0 to 7.
-- p3 seems to be how much damage it has taken. 0 doesn't deflate them, 1000 completely deflates them.
-- '0 = wheel_lf / bike, plane or jet front
-- '1 = wheel_rf
-- '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
-- '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
-- '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
-- '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
-- '45 = 6 wheels trailer mid wheel left
-- '47 = 6 wheels trailer mid wheel right
function SetVehicleTyreBurst(vehicle, index, onRim, p3)
	return _in(0xEC6A202EE4960385, vehicle, index, onRim, p3)
end

--- tyreIndex = 0 to 4 on normal vehicles
-- '0 = wheel_lf / bike, plane or jet front
-- '1 = wheel_rf
-- '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
-- '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
-- '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
-- '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
-- '45 = 6 wheels trailer mid wheel left
-- '47 = 6 wheels trailer mid wheel right
function SetVehicleTyreFixed(vehicle, tyreIndex)
	return _in(0x6E13FC662B882D1D, vehicle, tyreIndex)
end

--- Sets the tire smoke's color of this vehicle.
-- vehicle: The vehicle that is the target of this method.
-- r: The red level in the RGB color code.
-- g: The green level in the RGB color code.
-- b: The blue level in the RGB color code.
-- Note:
-- setting r,g,b to 0 will give the car independance day tyre smoke
function SetVehicleTyreSmokeColor(vehicle, r, g, b)
	return _in(0xB5BA80F839791C0F, vehicle, r, g, b)
end

--- Allows you to toggle bulletproof tires.
function SetVehicleTyresCanBurst(vehicle, toggle)
	return _in(0xEB9DC3C7D8596C46, vehicle, toggle)
end

function SetVehicleUndriveable(vehicle, toggle)
	return _in(0x8ABA6AF54B942B95, vehicle, toggle)
end

function SetVehicleUnkDamageMultiplier(vehicle, multiplier)
	return _in(0x45A561A9421AB6AD, vehicle, multiplier)
end
N_0x45a561a9421ab6ad = SetVehicleUnkDamageMultiplier

function SetVehicleUseAlternateHandling(vehicle, toggle)
	return _in(0x1D97D1E3A70A649F, vehicle, toggle)
end
N_0x1d97d1e3a70a649f = SetVehicleUseAlternateHandling

function SetVehicleUseCutsceneWheelCompression(p0, p1, p2, p3)
	return _in(0xE023E8AC4EF7C117, p0, p1, p2, p3, _ri)
end
SetAllVehiclesSpawn = SetVehicleUseCutsceneWheelCompression
N_0xe023e8ac4ef7c117 = SetVehicleUseCutsceneWheelCompression

function SetVehicleUsePlayerLightSettings(vehicle, toggle)
	return _in(0xC45C27EF50F36ADC, vehicle, toggle)
end
N_0xc45c27ef50f36adc = SetVehicleUsePlayerLightSettings
SetVehicleUsePlayerLightSettings = SetVehicleUsePlayerLightSettings

--- vehicle must be a plane
function SetVehicleUsesLargeRearRamp(vehicle, toggle)
	return _in(0xCAC66558B944DA67, vehicle, toggle)
end
N_0xcac66558b944da67 = SetVehicleUsesLargeRearRamp

function SetVehicleWeaponCapacity(vehicle, weaponIndex, capacity)
	return _in(0x44CD1F493DB2A0A6, vehicle, weaponIndex, capacity)
end
N_0x44cd1f493db2a0a6 = SetVehicleWeaponCapacity

function SetVehicleWeaponsDisabled(vehicle, weaponSlot)
	return _in(0x86B4B6212CB8B627, vehicle, weaponSlot)
end
N_0x86b4b6212cb8b627 = SetVehicleWeaponsDisabled

--- Sets brake pressure of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- Normal values around 1.0f
function SetVehicleWheelBrakePressure(vehicle, wheelIndex, pressure)
	return _in(0xe80f4e31, vehicle, wheelIndex, pressure)
end

--- Sets the flags of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- @param flags bit flags
function SetVehicleWheelFlags(vehicle, wheelIndex, flags)
	return _in(0xd2b9e90d, vehicle, wheelIndex, flags)
end

function SetVehicleWheelHealth(vehicle, wheelIndex, health)
	return _in(0xb22ecefd, vehicle, wheelIndex, health)
end

--- Sets whether the wheel is powered.
-- On all wheel drive cars this works to change which wheels receive power, but if a car's fDriveBiasFront doesn't send power to that wheel, it won't get power anyway. This can be fixed by changing the fDriveBiasFront with SET_VEHICLE_HANDLING_FLOAT.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
-- This is a shortcut to a flag in SET_VEHICLE_WHEEL_FLAGS.
function SetVehicleWheelIsPowered(vehicle, wheelIndex, powered)
	return _in(0xbd5291a0, vehicle, wheelIndex, powered)
end

--- Sets power being sent to a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
function SetVehicleWheelPower(vehicle, wheelIndex, power)
	return _in(0xc6146043, vehicle, wheelIndex, power)
end

--- Not sure what this changes, probably determines physical rim size in case the tire is blown.
-- @param vehicle The vehicle to obtain data for.
-- @param wheelIndex Index of wheel, 0-3.
-- @param value Size of rim collider.
function SetVehicleWheelRimColliderSize(vehicle, wheelIndex, value)
	return _in(0xf380e184, vehicle, wheelIndex, value)
end

--- Sets the rotation speed of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
function SetVehicleWheelRotationSpeed(vehicle, wheelIndex, speed)
	return _in(0x35ed100d, vehicle, wheelIndex, speed)
end

--- Sets vehicle's wheels' size (size is the same for all the wheels, cannot get/set specific wheel of vehicle).
-- Only works on non-default wheels.
-- Returns whether change was successful (can be false if trying to set size for non-default wheels).
-- @param vehicle The vehicle to set data for.
-- @param size Size of the wheels (usually between 0.5 and 1.5 is reasonable).
-- @return Bool - whether change was successful or not
function SetVehicleWheelSize(vehicle, size)
	return _in(0x53ab5c35, vehicle, size, _r)
end

--- Use along with SetVehicleWheelSize to resize the wheels (this native sets the collider size affecting physics while SetVehicleWheelSize will change visual size).
-- @param vehicle The vehicle to obtain data for.
-- @param wheelIndex Index of wheel, 0-3.
-- @param value Radius of tire collider.
function SetVehicleWheelTireColliderSize(vehicle, wheelIndex, value)
	return _in(0xb962d05c, vehicle, wheelIndex, value)
end

--- Use along with SetVehicleWheelWidth to resize the wheels (this native sets the collider width affecting physics while SetVehicleWheelWidth will change visual width).
-- @param vehicle The vehicle to obtain data for.
-- @param wheelIndex Index of wheel, 0-3.
-- @param value Width of tire collider.
function SetVehicleWheelTireColliderWidth(vehicle, wheelIndex, value)
	return _in(0x47bd0270, vehicle, wheelIndex, value)
end

--- Sets the traction vector length of a wheel.
-- Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.
function SetVehicleWheelTractionVectorLength(vehicle, wheelIndex, length)
	return _in(0x85c85a3a, vehicle, wheelIndex, length)
end

--- Refer to [GET_VEHICLE_WHEEL_TYPE](#\_0xB3ED1BFB4BE636DC) for wheel types.
function SetVehicleWheelType(vehicle, wheelType)
	return _in(0x487EB21CC7295BA1, vehicle, wheelType)
end

--- Sets vehicle's wheels' width (width is the same for all the wheels, cannot get/set specific wheel of vehicle).
-- Only works on non-default wheels.
-- Returns whether change was successful (can be false if trying to set width for non-default wheels).
-- @param vehicle The vehicle to set data for.
-- @param width Width of the wheels (usually between 0.1 and 1.5 is reasonable).
-- @return Bool - whether change was successful or not
function SetVehicleWheelWidth(vehicle, width)
	return _in(0x64c3f1c0, vehicle, width, _r)
end

--- Adjusts the offset of the specified wheel relative to the wheel's axle center.
-- Needs to be called every frame in order to function properly, as GTA will reset the offset otherwise.
-- This function can be especially useful to set the track width of a vehicle, for example:
-- ```
-- function SetVehicleFrontTrackWidth(vehicle, width)
-- SetVehicleWheelXOffset(vehicle, 0, -width/2)
-- SetVehicleWheelXOffset(vehicle, 1, width/2)
-- end
-- ```
function SetVehicleWheelXOffset(vehicle, wheelIndex, offset)
	return _in(0xbd6357d, vehicle, wheelIndex, offset)
end

function SetVehicleWheelYRotation(vehicle, wheelIndex, value)
	return _in(0xc6c2171f, vehicle, wheelIndex, value)
end
SetVehicleWheelXrot = SetVehicleWheelYRotation

--- Example script: https://pastebin.com/J6XGbkCW
-- List of known states:
-- ```
-- 1: Not wheeling.
-- 65: Vehicle is ready to do wheelie (burnouting).
-- 129: Vehicle is doing wheelie.
-- ```
-- @param vehicle Vehicle
-- @param state Wheelie state
function SetVehicleWheelieState(vehicle, state)
	return _in(0xeab8db65, vehicle, state)
end

function SetVehicleWheelsCanBreak(vehicle, enabled)
	return _in(0x29B18B4FD460CA8F, vehicle, enabled)
end

function SetVehicleWheelsCanBreakOffWhenBlowUp(vehicle, toggle)
	return _in(0xA37B9A517B133349, vehicle, toggle)
end
SetVehicleMaxStrTrap = SetVehicleWheelsCanBreakOffWhenBlowUp

--- Related to monster trucks in native scripts.
-- ```
-- ```
-- NativeDB Introduced: v1604
function SetVehicleWheelsDealDamage(vehicle, toggle)
	return _in(0x2970EAA18FD5E42F, vehicle, toggle)
end
N_0x2970eaa18fd5e42f = SetVehicleWheelsDealDamage

--- enum WindowTints
-- {
-- WINDOWTINT_NONE,
-- WINDOWTINT_PURE_BLACK,
-- WINDOWTINT_DARKSMOKE,
-- WINDOWTINT_LIGHTSMOKE,
-- WINDOWTINT_STOCK,
-- WINDOWTINT_LIMO,
-- WINDOWTINT_GREEN
-- };
function SetVehicleWindowTint(vehicle, tint)
	return _in(0x57C51E6BAD752696, vehicle, tint)
end

--- Paint index goes from 0 to 12.
-- You can find the list of colors and ids here: [\_GET_VEHICLE_HEADLIGHTS_COLOUR](#\_0x3DFF319A831E0CDB)
-- @param vehicle The vehicle handle.
-- @param color The paint index.
function SetVehicleXenonLightsColor(vehicle, color)
	return _in(0xE41033B25D003A07, vehicle, color)
end
N_0xe41033b25d003a07 = SetVehicleXenonLightsColor
SetVehicleHeadlightsColour = SetVehicleXenonLightsColor
SetVehicleXenonLightsColour = SetVehicleXenonLightsColor

--- Overrides a floating point value from `visualsettings.dat` temporarily.
-- @param name The name of the value to set, such as `pedLight.color.red`.
-- @param value The value to write.
function SetVisualSettingFloat(name, value)
	return _in(0xd1d31681, _ts(name), value)
end

--- Max value is 1.0
function SetWantedLevelDifficulty(player, difficulty)
	return _in(0x9B0BB33B04405E7A, player, difficulty)
end

--- NativeDB Introduced: v2060
function SetWantedLevelHiddenEvasionTime(player, wantedLevel, lossTime)
	return _in(0x49B856B1360C47C7, player, wantedLevel, lossTime)
end
N_0x49b856b1360c47c7 = SetWantedLevelHiddenEvasionTime

function SetWantedLevelMultiplier(multiplier)
	return _in(0x020E5F00CDA207BA, multiplier)
end

--- **instructionalKey enum list**:
-- ```
-- enum INSTRUCTIONAL_BUTTON_TYPES
-- {
-- NONE = 0,
-- SELECT = 1,
-- OK = 2,
-- YES = 4,
-- BACK = 8,
-- BACK_SELECT = 9,
-- BACK_OK = 10,
-- BACK_YES = 12,
-- CANCEL = 16,
-- CANCEL_SELECT = 17,
-- CANCEL_OK = 18,
-- CANCEL_YES = 20,
-- NO = 32,
-- NO_SELECT = 33,
-- NO_OK = 34,
-- YES_NO = 36,
-- RETRY = 64,
-- RETRY_SELECT = 65,
-- RETRY_OK = 66,
-- RETRY_YES = 68,
-- RETRY_BACK = 72,
-- RETRY_BACK_SELECT = 73,
-- RETRY_BACK_OK = 74,
-- RETRY_BACK_YES = 76,
-- RETRY_CANCEL = 80,
-- RETRY_CANCEL_SELECT = 81,
-- RETRY_CANCEL_OK = 82,
-- RETRY_CANCEL_YES = 84,
-- SKIP = 256,
-- SKIP_SELECT = 257,
-- SKIP_OK = 258,
-- SKIP_YES = 260,
-- SKIP_BACK = 264,
-- SKIP_BACK_SELECT = 265,
-- SKIP_BACK_OK = 266,
-- SKIP_BACK_YES = 268,
-- SKIP_CANCEL = 272,
-- SKIP_CANCEL_SELECT = 273,
-- SKIP_CANCEL_OK = 274,
-- SKIP_CANCEL_YES = 276,
-- CONTINUE = 16384,
-- BACK_CONTINUE = 16392,
-- CANCEL_CONTINUE = 16400,
-- LOADING_SPINNER = 134217728,
-- SELECT_LOADING_SPINNER = 134217729,
-- OK_LOADING_SPINNER = 134217730,
-- YES_LOADING_SPINNER = 134217732,
-- BACK_LOADING_SPINNER = 134217736,
-- BACK_SELECT_LOADING_SPINNER = 134217737,
-- BACK_OK_LOADING_SPINNER = 134217738,
-- BACK_YES_LOADING_SPINNER = 134217740,
-- CANCEL_LOADING_SPINNER = 134217744,
-- CANCEL_SELECT_LOADING_SPINNER = 134217745,
-- CANCEL_OK_LOADING_SPINNER = 134217746,
-- CANCEL_YES_LOADING_SPINNER = 134217748
-- }
-- ```
-- Note: this list is definitely NOT complete, but these are the ones I've been able to find before giving up because it's such a boring thing to look for 'good' combinations.
-- **Result of the example code:**
-- <https://i.imgur.com/imwoimm.png>
-- @param entryLine1 The text label to display as the first line of the warning message.
-- @param instructionalKey This is an enum, check the description for a list.
-- @param entryLine2 The text label to display as the second line of the warning message.
-- @param p3 Purpose unknown.
-- @param p4 Purpose unknown.
-- @param background Set to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.
-- @param p6 Purpose unknown.
-- @param showBg Purpose unknown.
-- @param errorCode When not 0, adds a field displaying the value as 'error code' to the warning message.
function SetWarningMessage(entryLine1, instructionalKey, entryLine2, p3, p4, background, p6, showBg, errorCode)
	return _in(0x7B1776B3B53F8D74, _ts(entryLine1), instructionalKey, _ts(entryLine2), p3, p4, _ts(background), _ts(p6), showBg, errorCode)
end

--- Param names copied from the corresponding scaleform function "SET_LIST_ROW"
function SetWarningMessageListRow(index, name, cash, rp, lvl, colour)
	return _in(0x0C5A80A9E096D529, index, _ts(name), cash, rp, lvl, colour, _r)
end
N_0x0c5a80a9e096d529 = SetWarningMessageListRow

--- instructionalKey enum list:
-- ```
-- Buttons = {
-- Empty = 0,
-- Select = 1, -- (RETURN)
-- Ok = 2, -- (RETURN)
-- Yes = 4, -- (RETURN)
-- Back = 8, -- (ESC)
-- Cancel = 16, -- (ESC)
-- No = 32, -- (ESC)
-- RetrySpace = 64, -- (SPACE)
-- Restart = 128, -- (SPACE)
-- Skip = 256, -- (SPACE)
-- Quit = 512, -- (ESC)
-- Adjust = 1024, -- (ARROWS)
-- SpaceKey = 2048, -- (SPACE)
-- Share = 4096, -- (SPACE)
-- SignIn = 8192, -- (SPACE)
-- Continue = 16384, -- (RETURN)
-- AdjustLeftRight = 32768, -- (SCROLL L/R)
-- AdjustUpDown = 65536, -- (SCROLL U/D)
-- Overwrite = 131072, -- (SPACE)
-- SocialClubSignup = 262144, -- (RETURN)
-- Confirm = 524288, -- (RETURN)
-- Queue = 1048576, -- (RETURN)
-- RetryReturn = 2097152, -- (RETURN)
-- BackEsc = 4194304, -- (ESC)
-- SocialClub = 8388608, -- (RETURN)
-- Spectate = 16777216, -- (SPACE)
-- OkEsc = 33554432, -- (ESC)
-- CancelTransfer = 67108864, -- (ESC)
-- LoadingSpinner = 134217728,
-- NoReturnToGTA = 268435456, -- (ESC)
-- CancelEsc = 536870912, -- (ESC)
-- }
-- Alt = {
-- Empty = 0,
-- No = 1, -- (SPACE)
-- Host = 2, -- (ESC)
-- SearchForJob = 4, -- (RETURN)
-- ReturnKey = 8, -- (TURN)
-- Freemode = 16, -- (ESC)
-- }
-- ```
-- **Result of the example code:** <https://i.imgur.com/TvmNF4k.png>
-- @param labelTitle Label of the alert's title.
-- @param labelMsg Label of the alert's message.
-- @param p2 This is an enum, check the description for a list.
-- @param p3 This is an enum, check the description for a list.
-- @param labelMsg2 Label of another message line
-- @param p5 usually 0
-- @param p6 usually -1
-- @param p7 usually 0
-- @param p8 unknown label
-- @param p9 unknown label
-- @param background Set to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.
-- @param errorCode Error code, shown at the bottom left if set to value other than 0.
function SetWarningMessageWithAlert(labelTitle, labelMsg, p2, p3, labelMsg2, p5, p6, p7, p8, p9, background, errorCode)
	return _in(0x15803FEC3B9A872B, _ts(labelTitle), _ts(labelMsg), p2, p3, _ts(labelMsg2), p5, p6, p7, _ts(p8), _ts(p9), background, errorCode)
end
N_0x15803fec3b9a872b = SetWarningMessageWithAlert
DrawFrontendAlert = SetWarningMessageWithAlert

--- You can only use text entries. No custom text.
-- C# Example :
-- Function.Call(Hash._SET_WARNING_MESSAGE_2, "HUD_QUIT", "HUD_CGIGNORE", 2, "HUD_CGINVITE", 0, -1, 0, 0, 1);
-- you can recreate this easily with scaleforms
-- ---------------
-- Fixed native name, from before nativedb restoration.
-- ```
-- ```
-- NativeDB Added Parameter 10: Any p9
function SetWarningMessageWithHeader(titleMsg, entryLine1, flags, promptMsg, p4, p5, background, showBg)
	return _in(0xDC38CC1E35B6A5D7, _ts(titleMsg), _ts(entryLine1), flags, _ts(promptMsg), p4, p5, background, _i, showBg)
end
SetWarningMessage_2 = SetWarningMessageWithHeader

--- You can only use text entries. No custom text.
-- ```
-- ```
-- NativeDB Added Parameter 11: Any p10
function SetWarningMessageWithHeaderAndSubstringFlags(entryHeader, entryLine1, instructionalKey, entryLine2, p4, p5, p6, p9)
	return _in(0x701919482C74B5AB, _ts(entryHeader), _ts(entryLine1), instructionalKey, _ts(entryLine2), p4, p5, p6, _i, _i, p9)
end
SetWarningMessage_3 = SetWarningMessageWithHeaderAndSubstringFlags

--- NativeDB Introduced: v1493
function SetWarningMessageWithHeaderUnk(entryHeader, entryLine1, flags, entryLine2, p4, p5, showBg, p9, p10)
	return _in(0x38B55259C2E078ED, _ts(entryHeader), _ts(entryLine1), flags, _ts(entryLine2), p4, p5, _i, _i, showBg, p9, p10)
end

--- This native removes the current waypoint from the map.
-- Example:
-- C#:
-- Function.Call(Hash.SET_WAYPOINT_OFF);
-- C++:
-- HUD::SET_WAYPOINT_OFF();
function SetWaypointOff()
	return _in(0xA7E4E2D361C2627F)
end

--- Changes the selected ped aiming animation style.
-- Note : You must use GET_HASH_KEY!
-- Strings to use with GET_HASH_KEY :
-- "Ballistic",
-- "Default",
-- "Fat",
-- "Female",
-- "FirstPerson",
-- "FirstPersonAiming",
-- "FirstPersonFranklin",
-- "FirstPersonFranklinAiming",
-- "FirstPersonFranklinRNG",
-- "FirstPersonFranklinScope",
-- "FirstPersonMPFemale",
-- "FirstPersonMichael",
-- "FirstPersonMichaelAiming",
-- "FirstPersonMichaelRNG",
-- "FirstPersonMichaelScope",
-- "FirstPersonRNG",
-- "FirstPersonScope",
-- "FirstPersonTrevor",
-- "FirstPersonTrevorAiming",
-- "FirstPersonTrevorRNG",
-- "FirstPersonTrevorScope",
-- "Franklin",
-- "Gang",
-- "Gang1H",
-- "GangFemale",
-- "Hillbilly",
-- "MP_F_Freemode",
-- "Michael",
-- "SuperFat",
-- "Trevor"
function SetWeaponAnimationOverride(ped, animStyle)
	return _in(0x1055AC3A667F09D9, ped, _ch(animStyle))
end

--- Changes the weapon damage output by the given multiplier value.
-- Does NOT need to be called every frame.
-- @param weaponHash Hash of the weapon
-- @param damageMultiplier Damage Multiplier
function SetWeaponDamageModifier(weaponHash, damageMultiplier)
	return _in(0x4757F00BC6323CFE, _ch(weaponHash), damageMultiplier)
end
N_0x4757f00bc6323cfe = SetWeaponDamageModifier
SetWeaponDamageModifierThisFrame = SetWeaponDamageModifier

--- NativeDB Introduced: v2372
function SetWeaponExplosionRadiusMultiplier(weaponHash, multiplier)
	return _in(0x4AE5AC8B852D642C, _ch(weaponHash), multiplier)
end

function SetWeaponObjectLiveryColor(weaponObject, camoComponentHash, colorIndex)
	return _in(0x5DA825A85D0EA6E6, weaponObject, _ch(camoComponentHash), colorIndex)
end
N_0x5da825a85d0ea6e6 = SetWeaponObjectLiveryColor

function SetWeaponObjectTintIndex(weapon, tintIndex)
	return _in(0xF827589017D4E4A9, weapon, tintIndex)
end

--- Disables the game's built-in auto-reloading.
-- @param state On/Off
function SetWeaponsNoAutoreload(state)
	return _in(0x311150e5, state)
end

--- Disables autoswapping to another weapon when the current weapon runs out of ammo.
-- @param state On/Off
function SetWeaponsNoAutoswap(state)
	return _in(0x2a7b50e, state)
end

--- Sets whether or not the weather should be owned by the network subsystem.
-- To be able to use [\_SET_WEATHER_TYPE_TRANSITION](#\_0x578C752848ECFA0C), this has to be set to false.
-- @param network true to let the network control weather, false to not use network weather behavior.
function SetWeatherOwnedByNetwork(network)
	return _in(0x2703d582, network)
end

--- // timecycle_keyframe_data
-- BLIZZARD = 0x27EA2814
-- CLEAR = 0x36A83D84
-- CLEARING = 0x6DB1A50D
-- CLOUDS = 0x30FDAF5C
-- EXTRASUNNY = 0x97AA0A79
-- FOGGY = 0xAE737644
-- HALLOWEEN = 0xC91A3202
-- NEUTRAL = 0xA4CA1326
-- OVERCAST = 0xBB898D2D
-- RAIN = 0x54A69840
-- SMOG = 0x10DCF4B5
-- SNOW = 0xEFB6EFF6
-- SNOWLIGHT = 0x23FB812B
-- THUNDER = 0xB677829F
-- XMAS = 0xAAC9C895
function SetWeatherTypeNow(weatherType)
	return _in(0x29B487C359E19889, _ts(weatherType))
end

--- Refer to [`SET_WEATHER_TYPE_NOW`](#0x29B487C359E19889) for weather types.
function SetWeatherTypeNowPersist(weatherType)
	return _in(0xED712CA327900C8A, _ts(weatherType))
end

--- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
-- @param weatherType The weather type to override to.
-- @param time A float on how long to take to transition (in seconds).
function SetWeatherTypeOvertimePersist(weatherType, time)
	return _in(0xFB5045B7C42B75BF, _ts(weatherType), time)
end
SetWeatherTypeOverTime = SetWeatherTypeOvertimePersist

--- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
function SetWeatherTypePersist(weatherType)
	return _in(0x704983DF373B198F, _ts(weatherType))
end

--- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
-- ```
-- Mixes two weather types. If percentWeather2 is set to 0.0f, then the weather will be entirely of weatherType1, if it is set to 1.0f it will be entirely of weatherType2. If it's set somewhere in between, there will be a mixture of weather behaviors. To test, try this in the RPH console, and change the float to different values between 0 and 1:
-- execute "NativeFunction.Natives.x578C752848ECFA0C(Game.GetHashKey(""RAIN""), Game.GetHashKey(""SMOG""), 0.50f);
-- ```
function SetWeatherTypeTransition(weatherType1, weatherType2, percentWeather2)
	return _in(0x578C752848ECFA0C, _ch(weatherType1), _ch(weatherType2), percentWeather2)
end

function SetWidescreenBorders(p0, p1)
	return _in(0xDCD4EA924F42D01A, p0, p1)
end

function SetWidescreenFormat(p0)
	return _in(0xC3B07BA00A83B0F1, p0)
end

--- Sets the the raw wind speed value.
function SetWind(speed)
	return _in(0xAC3A74E8384A9919, speed)
end

--- Sets the wind direction.
-- @param direction the [wind direction](https://en.wikipedia.org/wiki/Wind_direction) in radians
function SetWindDirection(direction)
	return _in(0xEB0F4468467B4528, direction)
end

--- Using this native will clamp the wind speed value to a range of 0.0- 12.0. Using SET_WIND sets the same value but without the restriction.
function SetWindSpeed(speed)
	return _in(0xEE09ECEDBABE47FC, speed)
end

function SetZoneEnabled(zoneId, toggle)
	return _in(0xBA5ECEEA120E5611, zoneId, toggle)
end

function Settimera(value)
	return _in(0xC1B1E9A034A63A62, value)
end

function Settimerb(value)
	return _in(0x5AE11BC36633DE4E, value)
end

function SetupShopPedApparelQuery(p0, p1, p2, p3)
	return _in(0x50F457823CE6EB5F, p0, p1, p2, p3, _ri)
end
N_0x50f457823ce6eb5f = SetupShopPedApparelQuery

--- character is 0 for Michael, 1 for Franklin, 2 for Trevor, 3 for freemode male, and 4 for freemode female.
-- componentId is between 0 and 11 and corresponds to the usual component slots.
-- p1 could be the outfit number; unsure.
-- p2 is usually -1; unknown function.
-- p3 appears to be for selecting between clothes and props; false is used with components/clothes, true is used with props.
-- p4 is usually -1; unknown function.
-- componentId is -1 when p3 is true in decompiled scripts.
function SetupShopPedApparelQueryTu(character, p1, p2, p3, p4, componentId)
	return _in(0x9BDF59818B1E38C1, character, p1, p2, p3, p4, componentId, _ri)
end
GetNumPropsFromOutfit = SetupShopPedApparelQueryTu

--- characters
-- 0: Michael
-- 1: Franklin
-- 2: Trevor
-- 3: MPMale
-- 4: MPFemale
function SetupShopPedOutfitQuery(character, p1)
	return _in(0xF3FBE2D50A6A8C28, character, p1, _ri)
end
N_0xf3fbe2d50a6a8c28 = SetupShopPedOutfitQuery

--- Possible shake types (updated b617d):
-- DEATH_FAIL_IN_EFFECT_SHAKE
-- DRUNK_SHAKE
-- FAMILY5_DRUG_TRIP_SHAKE
-- HAND_SHAKE
-- JOLT_SHAKE
-- LARGE_EXPLOSION_SHAKE
-- MEDIUM_EXPLOSION_SHAKE
-- SMALL_EXPLOSION_SHAKE
-- ROAD_VIBRATION_SHAKE
-- SKY_DIVING_SHAKE
-- VIBRATE_SHAKE
function ShakeCam(cam, type, amplitude)
	return _in(0x6A25241C340D3822, cam, _ts(type), amplitude)
end

--- p0 argument found in the b617d scripts: "DRUNK_SHAKE"
function ShakeCinematicCam(p0, p1)
	return _in(0xDCE214D9ED58F3CF, _ts(p0), p1)
end

--- Possible shake types (updated b617d):
-- DEATH_FAIL_IN_EFFECT_SHAKE
-- DRUNK_SHAKE
-- FAMILY5_DRUG_TRIP_SHAKE
-- HAND_SHAKE
-- JOLT_SHAKE
-- LARGE_EXPLOSION_SHAKE
-- MEDIUM_EXPLOSION_SHAKE
-- SMALL_EXPLOSION_SHAKE
-- ROAD_VIBRATION_SHAKE
-- SKY_DIVING_SHAKE
-- VIBRATE_SHAKE
function ShakeGameplayCam(shakeName, intensity)
	return _in(0xFD55E49555E017CF, _ts(shakeName), intensity)
end

--- CAM::SHAKE_SCRIPT_GLOBAL("HAND_SHAKE", 0.2);
function ShakeScriptGlobal(p0, p1)
	return _in(0xF4C8CF9E353AFECA, _ts(p0), p1)
end
N_0xf4c8cf9e353afeca = ShakeScriptGlobal

function ShiftLeft(value, bitShift)
	return _in(0xEDD95A39E5544DE8, value, bitShift, _ri)
end

function ShiftRight(value, bitShift)
	return _in(0x97EF1E5BCE9DC075, value, bitShift, _ri)
end

--- Shoots a bullet from the first vector to the second vector. The weapon used as weaponHash should already be loaded via REQUEST_WEAPON_ASSET, otherwise the bullet may fail to materialise.
-- @param x1 The X coordinate to start the shot at.
-- @param y1 The Y coordinate to start the shot at.
-- @param z1 The Z coordinate to start the shot at.
-- @param x2 The X coordinate the shot should end up at.
-- @param y2 The Y coordinate the shot should end up at.
-- @param z2 The Z coordinate the shot should end up at.
-- @param damage The amount of damage the bullet carries.
-- @param pureAccuracy Whether the bullet should have pinpoint accuracy.
-- @param weaponHash Hash of the weapon the bullet is used as ammunition for.
-- @param ownerPed Owner of the bullet, e.g. if the bullet kills someone the kill feed shows 'X was shot by ownerPed.'
-- @param isAudible Whether the bullet should be audible. Optional, defaults to true
-- @param isInvisible Whether the bullet should be invisible. Optional, defaults to false
-- @param speed Speed the bullet should fly at. Optional
function ShootSingleBulletBetweenCoords(x1, y1, z1, x2, y2, z2, damage, pureAccuracy, weaponHash, ownerPed, isAudible, isInvisible, speed)
	return _in(0x867654CBC7606F2C, x1, y1, z1, x2, y2, z2, damage, pureAccuracy, _ch(weaponHash), ownerPed, isAudible, isInvisible, speed)
end

--- entity - entity to ignore
-- ```
-- ```
-- NativeDB Added Parameter 15: Any p14
function ShootSingleBulletBetweenCoordsIgnoreEntity(x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed, entity)
	return _in(0xE3A7742E0B7A2F8B, x1, y1, z1, x2, y2, z2, damage, p7, _ch(weaponHash), ownerPed, isAudible, isInvisible, speed, entity)
end
N_0xe3a7742e0b7a2f8b = ShootSingleBulletBetweenCoordsIgnoreEntity
ShootSingleBulletBetweenCoordsPresetParams = ShootSingleBulletBetweenCoordsIgnoreEntity

--- NativeDB Added Parameter 19: Any p18
-- NativeDB Added Parameter 20: Any p19
-- NativeDB Added Parameter 21: Any p20
function ShootSingleBulletBetweenCoordsIgnoreEntityNew(x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed, entity, p14, p15, p16, p17)
	return _in(0xBFE5756E7407064A, x1, y1, z1, x2, y2, z2, damage, p7, _ch(weaponHash), ownerPed, isAudible, isInvisible, speed, entity, p14, p15, p16, p17)
end
N_0xbfe5756e7407064a = ShootSingleBulletBetweenCoordsIgnoreEntityNew
ShootSingleBulletBetweenCoordsWithExtraParams = ShootSingleBulletBetweenCoordsIgnoreEntityNew

--- Returns true if the game is using the metric measurement system (profile setting 227), false if imperial is used.
-- @return Returns true if the game is using the metric measurement system, false if imperial is used.
function ShouldUseMetricMeasurements()
	return _in(0xD3D15555431AB793, _r)
end
N_0xd3d15555431ab793 = ShouldUseMetricMeasurements
IsGameUsingMetricMeasurementSystem = ShouldUseMetricMeasurements

--- Enables or disables the blue half circle ![](https://i.imgur.com/iZes9Ec.png) around the specified blip on the left side of the blip. This is used to indicate that the player is in your crew in GTA:O. Color is changeable by using [`SET_BLIP_SECONDARY_COLOUR`](#\_0x14892474891E09EB).
-- To toggle the right side of the circle use: [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#\_0x23C3EB807312F01A).
-- Example code result:
-- ![](https://i.imgur.com/iZ9tNWl.png)
-- @param blip The blip to toggle the half blue circle around the blip on.
-- @param toggle Enables or disables the half blue circle around the blip (on the left side).
function ShowCrewIndicatorOnBlip(blip, toggle)
	return _in(0xDCFB5D4DB8BF367E, blip, toggle)
end
N_0xdcfb5d4db8bf367e = ShowCrewIndicatorOnBlip
SetBlipCrew = ShowCrewIndicatorOnBlip

--- Highlights a blip by a half cyan circle on the right side of the blip. ![](https://i.imgur.com/FrV9M4e.png) Indicating that that player is a friend (in GTA:O). This color can not be changed.
-- To toggle the left side (crew member indicator) of the half circle around the blip, use: [`SHOW_CREW_INDICATOR_ON_BLIP`](#\_0xDCFB5D4DB8BF367E).
-- @param blip The blip to toggle the half circle on.
-- @param toggle Enables or disables the half circle around the blip (on the right side of the blip).
function ShowFriendIndicatorOnBlip(blip, toggle)
	return _in(0x23C3EB807312F01A, blip, toggle)
end
N_0x23c3eb807312f01a = ShowFriendIndicatorOnBlip
SetBlipFriend = ShowFriendIndicatorOnBlip

--- Adds the GTA: Online player heading indicator to a blip.
function ShowHeadingIndicatorOnBlip(blip, toggle)
	return _in(0x5FBCA48327B914DF, blip, toggle)
end
N_0x5fbca48327b914df = ShowHeadingIndicatorOnBlip

function ShowHeightOnBlip(blip, toggle)
	return _in(0x75A16C3DA34F1245, blip, toggle)
end
N_0x75a16c3da34f1245 = ShowHeightOnBlip

--- This function shows various HUD (Heads-up Display) components.
-- Listed below are the integers and the corresponding HUD component.
-- *   1 : WANTED_STARS
-- *   2 : WEAPON_ICON
-- *   3 : CASH
-- *   4 : MP_CASH
-- *   5 : MP_MESSAGE
-- *   6 : VEHICLE_NAME
-- *   7 : AREA_NAME
-- *   8 : VEHICLE_CLASS
-- *   9 : STREET_NAME
-- *   10 : HELP_TEXT
-- *   11 : FLOATING_HELP_TEXT\_1
-- *   12 : FLOATING_HELP_TEXT\_2
-- *   13 : CASH_CHANGE
-- *   14 : RETICLE
-- *   15 : SUBTITLE_TEXT
-- *   16 : RADIO_STATIONS
-- *   17 : SAVING_GAME
-- *   18 : GAME_STREAM
-- *   19 : WEAPON_WHEEL
-- *   20 : WEAPON_WHEEL_STATS
-- *   21 : HUD_COMPONENTS
-- *   22 : HUD_WEAPONS
-- These integers also work for the [`HIDE_HUD_COMPONENT_THIS_FRAME`](#\_0x6806C51AD12B83B8) native, but instead hides the HUD component.
function ShowHudComponentThisFrame(id)
	return _in(0x0B4DF1FA60C0E664, id)
end

function ShowNumberOnBlip(blip, number)
	return _in(0xA3C0B359DCB848B6, blip, number)
end

--- Toggles a cyan outline around the blip.
-- Color can be changed with [`SET_BLIP_SECONDARY_COLOUR`](#\_0x14892474891E09EB). Enabling this circle will override the "crew" and "friend" half-circles (see [`SHOW_CREW_INDICATOR_ON_BLIP`](#\_0xDCFB5D4DB8BF367E) and [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#\_0x23C3EB807312F01A)).
-- @param blip The blip to toggle the outline on.
-- @param toggle Enables or disables the outline.
function ShowOutlineIndicatorOnBlip(blip, toggle)
	return _in(0xB81656BC81FE24D1, blip, toggle)
end
N_0xb81656bc81fe24d1 = ShowOutlineIndicatorOnBlip
SetBlipFriendly = ShowOutlineIndicatorOnBlip

--- SHOW_\*
-- ```
-- NativeDB Introduced: v1734
-- ```
function ShowScriptedHudComponentThisFrame(id)
	return _in(0x4F38DCA127DAAEA2, id)
end

function ShowSigninUi()
	return _in(0x60E892BA4F5BDCA4)
end
N_0x60e892ba4f5bdca4 = ShowSigninUi

function ShowStartMissionInstructionalButton(p0)
	return _in(0xF1A6C18B35BCADE6, p0)
end
N_0xf1a6c18b35bcade6 = ShowStartMissionInstructionalButton

--- Adds a green checkmark on top of a blip.
function ShowTickOnBlip(blip, toggle)
	return _in(0x74513EA3E505181E, blip, toggle)
end
N_0x74513ea3e505181e = ShowTickOnBlip
SetBlipChecked = ShowTickOnBlip

--- Starts a new singleplayer game (at the prologue).
function ShutdownAndLaunchSinglePlayerGame()
	return _in(0x593850C16A36B692)
end

--- Disconnects you from the session, and starts loading single player, however you still remain connected to the server (only if you're the host, if you're not then you also (most likely) get disconnected from the server) and other players will not be able to join until you exit the game.
-- If you're already in SP then it'll re-load singleplayer.
-- You might need to DoScreenFadeIn and ShutdownLoadingScreen otherwise you probably won't end up loading into SP at all.
-- Somewhat related note: opening the pause menu after loading into this 'singleplayer' mode crashes the game.
-- @return always seems to be 1
function ShutdownAndLoadMostRecentSave()
	return _in(0x9ECA15ADFE141431, _r)
end
N_0x9eca15adfe141431 = ShutdownAndLoadMostRecentSave

function ShutdownCreatorBudget()
	return _in(0xCCE26000E9A6FAD7)
end
N_0xcce26000e9a6fad7 = ShutdownCreatorBudget

function ShutdownLoadingScreen()
	return _in(0x078EBE9809CCD637)
end

--- Shuts down the `loadingScreen` NUI frame, similarly to `SHUTDOWN_LOADING_SCREEN`.
function ShutdownLoadingScreenNui()
	return _in(0xb9234afb)
end

--- This is to make the player walk without accepting input.
-- Call this native every frame so you can control the direction of your ped.
-- @param player The player to target (always your local player id).
-- @param amount For game pads, using anything less than 1.0 will make it partially press analog controls (like sticks/triggers).
-- @param gaitType Value in increments of 100's. 2000, 500, 300, 200, etc. Set to -1 if you want your ped to walk forever.
-- @param rotationSpeed Determines the counterclockwise rotation angle when walking.
-- @param p4 Always true
-- @param p5 Always false
function SimulatePlayerInputGait(player, amount, gaitType, rotationSpeed, p4, p5)
	return _in(0x477D5D63E63ECA5D, player, amount, gaitType, rotationSpeed, p4, p5)
end

--- Returns the sine of the given number.
-- @param value The number of degrees (in degrees, not radians)
-- @return The sine of the given number
function Sin(value)
	return _in(0x0BADBFA3B172435F, value, _rf)
end

function SkipRadioForward()
	return _in(0x6DDBBDD98E2E9C25)
end

--- SET_TIME_POSITION_IN_RECORDING can be emulated by: desired_time - GET_TIME_POSITION_IN_RECORDING(vehicle)
function SkipTimeInPlaybackRecordedVehicle(vehicle, time)
	return _in(0x9438F7AD68771A20, vehicle, time)
end

function SkipToEndAndStopPlaybackRecordedVehicle(vehicle)
	return _in(0xAB8E2EDA0C0A5883, vehicle)
end

function SkipToNextScriptedConversationLine()
	return _in(0x9663FE6B7A61EB00)
end

--- This native always come right before SET_ENTITY_QUATERNION where its final 4 parameters are SLERP_NEAR_QUATERNION p9 to p12
-- @param t acceleration differenzial (am_rollercoaster.c func\_134)
-- @param x rotation parameter (maybe X axys)
-- @param y rotation parameter (maybe X axys)
-- @param z rotation parameter (maybe X axys)
-- @param w rotation parameter (maybe X axys)
-- @param x1 rotation parameter (maybe Y axys)
-- @param y1 rotation parameter (maybe Y axys)
-- @param z1 rotation parameter (maybe Y axys)
-- @param w1 rotation parameter (maybe Y axys)
-- @param outX output value calculated (X)
-- @param outY output value calculated (Y)
-- @param outZ output value calculated (Z)
-- @param outW output value calculated (W)
function SlerpNearQuaternion(t, x, y, z, w, x1, y1, z1, w1)
	return _in(0xF2F6A2FA49278625, t, x, y, z, w, x1, y1, z1, w1, _f, _f, _f, _f)
end
N_0xf2f6a2fa49278625 = SlerpNearQuaternion

--- Returns true if the object has finished moving.
-- If false, moves the object towards the specified X, Y and Z coordinates with the specified X, Y and Z speed.
-- See also: https://gtagmodding.com/opcode-database/opcode/034E/
-- Has to be looped until it returns true.
function SlideObject(object, toX, toY, toZ, speedX, speedY, speedZ, collision)
	return _in(0x2FDFF4107B8C1147, object, toX, toY, toZ, speedX, speedY, speedZ, collision, _r)
end

--- See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
function SmashVehicleWindow(vehicle, windowIndex)
	return _in(0x9E5B5E4D2CCD2259, vehicle, windowIndex)
end

--- SET_*
function SoundVehicleHornThisFrame(vehicle)
	return _in(0x9C11908013EA4715, vehicle)
end
N_0x9c11908013ea4715 = SoundVehicleHornThisFrame

function SpawnpointsCancelSearch()
	return _in(0xFEE4A5459472A9F8)
end
N_0xfee4a5459472a9f8 = SpawnpointsCancelSearch

function SpawnpointsGetNumSearchResults()
	return _in(0xA635C11B8C44AFC2, _ri)
end
N_0xa635c11b8c44afc2 = SpawnpointsGetNumSearchResults

function SpawnpointsGetSearchResult(randomInt)
	return _in(0x280C7E3AC7F56E90, randomInt, _f, _f, _f)
end
N_0x280c7e3ac7f56e90 = SpawnpointsGetSearchResult

function SpawnpointsGetSearchResultFlags(p0, p1)
	return _in(0xB782F8238512BAD5, p0, _ii(p1) --[[ may be optional ]])
end
N_0xb782f8238512bad5 = SpawnpointsGetSearchResultFlags

function SpawnpointsIsSearchActive()
	return _in(0x3C67506996001F5E, _r)
end
N_0x3c67506996001f5e = SpawnpointsIsSearchActive

function SpawnpointsIsSearchComplete()
	return _in(0xA586FBEB32A53DBB, _r)
end
N_0xa586fbeb32a53dbb = SpawnpointsIsSearchComplete

function SpawnpointsIsSearchFailed()
	return _in(0xF445DE8DA80A1792, _r)
end
N_0xf445de8da80a1792 = SpawnpointsIsSearchFailed

function SpawnpointsStartSearch(p0, p1, p2, p3, p4, interiorFlags, scale, duration)
	return _in(0x2DF9038C90AD5264, p0, p1, p2, p3, p4, interiorFlags, scale, duration)
end
N_0x2df9038c90ad5264 = SpawnpointsStartSearch

function SpawnpointsStartSearchInAngledArea(x, y, z, p3, p4, p5, p6, interiorFlags, scale, duration)
	return _in(0xB2AFF10216DEFA2F, x, y, z, p3, p4, p5, p6, interiorFlags, scale, duration)
end
N_0xb2aff10216defa2f = SpawnpointsStartSearchInAngledArea

--- NativeDB Added Parameter 2: Any p1
function SpecialAbilityActivate(player)
	return _in(0x821FDC827D6F4090, player)
end
N_0x821fdc827d6f4090 = SpecialAbilityActivate

--- p1 appears as 5, 10, 15, 25, or 30. p2 is always true.
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function SpecialAbilityChargeAbsolute(player, p1, p2)
	return _in(0xB7B0870EB531D08D, player, p1, p2)
end

--- p1 appears to always be 1 (only comes up twice)
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function SpecialAbilityChargeContinuous(player, p2)
	return _in(0xED481732DFF7E997, player, p2)
end

--- 2 matches. p1 was always true.
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function SpecialAbilityChargeLarge(player, p1, p2)
	return _in(0xF733F45FA4497D93, player, p1, p2)
end

--- Only 1 match. Both p1 & p2 were true.
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function SpecialAbilityChargeMedium(player, p1, p2)
	return _in(0xF113E3AA9BC54613, player, p1, p2)
end

--- normalizedValue is from 0.0 - 1.0
-- p2 is always 1
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function SpecialAbilityChargeNormalized(player, normalizedValue, p2)
	return _in(0xA0696A65F009EE18, player, normalizedValue, p2)
end
ResetSpecialAbilityControlsCinematic = SpecialAbilityChargeNormalized

--- NativeDB Added Parameter 2: Any p1
function SpecialAbilityChargeOnMissionFailed(player)
	return _in(0xC9A763D8FE87436A, player)
end
N_0xc9a763d8fe87436a = SpecialAbilityChargeOnMissionFailed

--- Every occurrence of p1 & p2 were both true.
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function SpecialAbilityChargeSmall(player, p1, p2)
	return _in(0x2E7B9B683481687D, player, p1, p2)
end

--- NativeDB Added Parameter 2: Any p1
function SpecialAbilityDeactivate(player)
	return _in(0xD6A953C6D1492057, player)
end

--- NativeDB Added Parameter 2: Any p1
function SpecialAbilityDeactivateFast(player)
	return _in(0x9CB5CE07A3968D5A, player)
end

--- NativeDB Added Parameter 2: Any p1
function SpecialAbilityDeplete(p0)
	return _in(0x17F7471EACA78290, p0)
end
N_0x17f7471eaca78290 = SpecialAbilityDeplete

--- p1 was always true.
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function SpecialAbilityDepleteMeter(player, p1)
	return _in(0x1D506DBBBC51E64B, player, p1)
end

--- Also known as _RECHARGE_SPECIAL_ABILITY
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function SpecialAbilityFillMeter(player, p1)
	return _in(0x3DACA8DDC6FD4980, player, p1)
end

--- NativeDB Added Parameter 2: Any p1
function SpecialAbilityLock(playerModel)
	return _in(0x6A09D0D590A47D13, _ch(playerModel))
end

--- NativeDB Added Parameter 2: Any p1
function SpecialAbilityReset(player)
	return _in(0x375F0E738F861A94, player)
end

--- NativeDB Added Parameter 2: Any p1
function SpecialAbilityUnlock(playerModel)
	return _in(0xF145F3BE2EFA9A3B, _ch(playerModel))
end

function Sqrt(value)
	return _in(0x71D93B57D07F9804, value, _rf)
end

function StabiliseEntityAttachedToHeli(vehicle, entity, p2)
	return _in(0x374706271354CB18, vehicle, entity, p2)
end
N_0x374706271354cb18 = StabiliseEntityAttachedToHeli

--- Example:
-- This will start the alarm at Fort Zancudo.
-- AUDIO::START_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);
-- First parameter (char) is the name of the alarm.
-- Second parameter (bool) is unknown, it does not seem to make a difference if this one is 0 or 1.
-- ----------
-- It DOES make a difference but it has to do with the duration or something I dunno yet
-- ----------
-- Found in the b617d scripts:
-- AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS", 0);
-- AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS_UPPER", 1);
-- AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS_UPPER_B", 0);
-- AUDIO::START_ALARM("BIG_SCORE_HEIST_VAULT_ALARMS", a_0);
-- AUDIO::START_ALARM("FBI_01_MORGUE_ALARMS", 1);
-- AUDIO::START_ALARM("FIB_05_BIOTECH_LAB_ALARMS", 0);
-- AUDIO::START_ALARM("JEWEL_STORE_HEIST_ALARMS", 0);
-- AUDIO::START_ALARM("PALETO_BAY_SCORE_ALARM", 1);
-- AUDIO::START_ALARM("PALETO_BAY_SCORE_CHICKEN_FACTORY_ALARM", 0);
-- AUDIO::START_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);
-- AUDIO::START_ALARM("PORT_OF_LS_HEIST_SHIP_ALARMS", 0);
-- AUDIO::START_ALARM("PRISON_ALARMS", 0);
-- AUDIO::START_ALARM("PROLOGUE_VAULT_ALARMS", 0);
function StartAlarm(alarmName, p2)
	return _in(0x0355EF116C4C97B2, _ts(alarmName), p2)
end

--- Used to prepare a scene where the surrounding sound is muted or a bit changed. This does not play any sound.
-- List of all usable scene names found in b617d. Sorted alphabetically and identical names removed: pastebin.com/MtM9N9CC
function StartAudioScene(scene)
	return _in(0x013A80FC08F6E4F2, _ts(scene), _r)
end

--- Begins with START_*. Next character in the name is either D or E.
function StartBenchmarkRecording()
	return _in(0x92790862E36C2ADA)
end
N_0x92790862e36c2ada = StartBenchmarkRecording

--- flags: Usually 0.
function StartCutscene(flags)
	return _in(0x186D5CB5E7B0FF7B, flags)
end

--- flags: Usually 0.
function StartCutsceneAtCoords(x, y, z, flags)
	return _in(0x1C9ADDA3244A1FBF, x, y, z, flags)
end

function StartEntityFire(entity)
	return _in(0xF6A9D9708F6F23DF, entity, _ri)
end

--- Does the same as [START_SHAPE_TEST_LOS_PROBE](#\_0x7EE9F5D83DD4F90E), except blocking until the shape test completes.
-- Use [START_SHAPE_TEST_LOS_PROBE](#\_0x7EE9F5D83DD4F90E) instead. Literally. Rockstar named this correctly: it's expensive, and it's synchronous.
-- @param x1 Starting X coordinate.
-- @param y1 Starting Y coordinate.
-- @param z1 Starting Z coordinate.
-- @param x2 Ending X coordinate.
-- @param y2 Ending Y coordinate.
-- @param z2 Ending Z coordinate.
-- @param flags See [START_SHAPE_TEST_LOS_PROBE](#\_0x7EE9F5D83DD4F90E).
-- @param entity An entity to ignore, or 0.
-- @param p8 A bit mask with bits 1, 2 and/or 4, relating to collider types. 4 should usually be used.
-- @return A shape test handle.
function StartExpensiveSynchronousShapeTestLosProbe(x1, y1, z1, x2, y2, z2, flags, entity, p8)
	return _in(0x377906D8A31E5586, x1, y1, z1, x2, y2, z2, flags, entity, p8, _ri)
end
CastRayPointToPoint = StartExpensiveSynchronousShapeTestLosProbe
StartShapeTestRay = StartExpensiveSynchronousShapeTestLosProbe

--- Equivalent of [START_FIND_KVP](#\_0xDD379006), but for another resource than the current one.
-- @param resourceName The resource to try finding the key/values for
-- @param prefix A prefix match
-- @return A KVP find handle to use with [FIND_KVP](#\_0xBD7BEBC5) and close with [END_FIND_KVP](#\_0xB3210203)
function StartFindExternalKvp(resourceName, prefix)
	return _in(0x8f2eecc3, _ts(resourceName), _ts(prefix), _ri)
end

function StartFindKvp(prefix)
	return _in(0xdd379006, _ts(prefix), _ri)
end

function StartFiringAmnesty(duration)
	return _in(0xBF9BD71691857E48, duration)
end

--- Starts a new GPS custom-route, allowing you to plot lines on the map.
-- Lines are drawn directly between points.
-- The GPS custom route works like the GPS multi route, except it does not follow roads.
-- **Example result:**
-- ![](https://i.imgur.com/BDm5pzt.png)
-- @param hudColor The HUD color of the GPS path.
-- @param displayOnFoot Draws the path regardless if the player is in a vehicle or not.
-- @param followPlayer Draw the path partially between the previous and next point based on the players position between them. When false, the GPS appears to not disappear after the last leg is completed.
function StartGpsCustomRoute(hudColor, displayOnFoot, followPlayer)
	return _in(0xDB34E8D56FC13B08, hudColor, displayOnFoot, followPlayer)
end
N_0xdb34e8d56fc13b08 = StartGpsCustomRoute

--- Starts a new GPS multi-route, allowing you to create custom GPS paths.
-- GPS functions like the waypoint, except it can contain multiple points it's forced to go through.
-- Once the player has passed a point, the GPS will no longer force its path through it.
-- Works independently from the player-placed waypoint and blip routes.
-- **Example result:**
-- ![](https://i.imgur.com/ZZHQatX.png)
-- @param hudColor The HUD color of the GPS path.
-- @param routeFromPlayer Makes the GPS draw a path from the player to the next point, rather than the original path from the previous point.
-- @param displayOnFoot Draws the GPS path regardless if the player is in a vehicle or not.
function StartGpsMultiRoute(hudColor, routeFromPlayer, displayOnFoot)
	return _in(0x3D3D15AF7BCAAF83, hudColor, routeFromPlayer, displayOnFoot)
end
N_0x3d3d15af7bcaaf83 = StartGpsMultiRoute

--- network fx
-- ```
-- ```
-- NativeDB Added Parameter 13: Any p12
-- NativeDB Added Parameter 14: Any p13
-- NativeDB Added Parameter 15: Any p14
-- NativeDB Added Parameter 16: Any p15
function StartNetworkedParticleFxLoopedOnEntity(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)
	return _in(0x6F60E89A7B64EE1D, _ts(effectName), entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, _ri)
end
N_0x6f60e89a7b64ee1d = StartNetworkedParticleFxLoopedOnEntity
StartParticleFxLoopedOnEntity_2 = StartNetworkedParticleFxLoopedOnEntity

--- network fx
-- ```
-- ```
-- NativeDB Added Parameter 14: Any p13
-- NativeDB Added Parameter 15: Any p14
-- NativeDB Added Parameter 16: Any p15
-- NativeDB Added Parameter 17: Any p16
function StartNetworkedParticleFxLoopedOnEntityBone(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis)
	return _in(0xDDE23F30CC5A0F03, _ts(effectName), entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis, _ri)
end
N_0xdde23f30cc5a0f03 = StartNetworkedParticleFxLoopedOnEntityBone
StartParticleFxLoopedOnEntityBone_2 = StartNetworkedParticleFxLoopedOnEntityBone

--- NOTE: the [USE_PARTICLE_FX_ASSET](#\_0x6C38AF3693A69A91) needs to be called before EVERY StartNetworkedParticleFxNonLoopedAtCoord(....) call!
-- List with lots of particle effects: https://vespura.com/fivem/particle-list/
-- Note: Not all particles on this list are for non looped and vice versa, neither are all of them suited/meant to have SetParticleFxNonLoopedColour(....) called on them.
-- ```
-- NativeDB Added Parameter 12: BOOL p11
-- ```
function StartNetworkedParticleFxNonLoopedAtCoord(effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)
	return _in(0xF56B8137DF10135D, _ts(effectName), xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, _r)
end
StartParticleFxNonLoopedAtCoord_2 = StartNetworkedParticleFxNonLoopedAtCoord

function StartNetworkedParticleFxNonLoopedOnEntity(effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ)
	return _in(0xC95EB1DB6E92113D, _ts(effectName), entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ, _r)
end
StartParticleFxNonLoopedOnEntity_2 = StartNetworkedParticleFxNonLoopedOnEntity

--- NativeDB Introduced: v2189
function StartNetworkedParticleFxNonLoopedOnEntityBone(effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ)
	return _in(0x02B1F2A72E0F5325, _ts(effectName), entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ, _r)
end

function StartNetworkedParticleFxNonLoopedOnPedBone(effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ)
	return _in(0xA41B6A43642AC2CF, _ts(effectName), ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ, _r)
end
StartParticleFxNonLoopedOnPedBone_2 = StartNetworkedParticleFxNonLoopedOnPedBone

--- Examples:
-- g_384A = SYSTEM::START_NEW_SCRIPT("cellphone_flashhand", 1424);
-- l_10D = SYSTEM::START_NEW_SCRIPT("taxiService", 1828);
-- SYSTEM::START_NEW_SCRIPT("AM_MP_YACHT", 5000);
-- SYSTEM::START_NEW_SCRIPT("emergencycall", 512);
-- SYSTEM::START_NEW_SCRIPT("emergencycall", 512);
-- SYSTEM::START_NEW_SCRIPT("FM_maintain_cloud_header_data", 1424);
-- SYSTEM::START_NEW_SCRIPT("FM_Mission_Controller", 31000);
-- SYSTEM::START_NEW_SCRIPT("tennis_family", 3650);
-- SYSTEM::START_NEW_SCRIPT("Celebrations", 3650);
-- Decompiled examples of usage when starting a script:
-- SCRIPT::REQUEST_SCRIPT(a_0);
-- if (SCRIPT::HAS_SCRIPT_LOADED(a_0)) {
-- SYSTEM::START_NEW_SCRIPT(a_0, v_3);
-- SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(a_0);
-- return 1;
-- }
-- or:
-- v_2 = "MrsPhilips2";
-- SCRIPT::REQUEST_SCRIPT(v_2);
-- while (!SCRIPT::HAS_SCRIPT_LOADED(v_2)) {
-- SCRIPT::REQUEST_SCRIPT(v_2);
-- SYSTEM::WAIT(0);
-- }
-- sub_8792(36);
-- SYSTEM::START_NEW_SCRIPT(v_2, 17000);
-- SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(v_2);
-- All native script names: pastebin.com/K9adDsu4 and pastebin.com/yLNWicUi
function StartNewScript(scriptName, stackSize)
	return _in(0xE81651AD79516E48, _ts(scriptName), stackSize, _ri)
end

--- return : script thread id, 0 if failed
-- Pass pointer to struct of args in p1, size of struct goes into p2
function StartNewScriptWithArgs(scriptName, argCount, stackSize)
	return _in(0xB8BA7F44DF1575E1, _ts(scriptName), _i, argCount, stackSize, _ri)
end

function StartNewScriptWithNameHash(scriptHash, stackSize)
	return _in(0xEB1C67C3A5333A92, _ch(scriptHash), stackSize, _ri)
end
StartNewStreamedScript = StartNewScriptWithNameHash

function StartNewScriptWithNameHashAndArgs(scriptHash, argCount, stackSize)
	return _in(0xC4BB298BD441BE78, _ch(scriptHash), _i, argCount, stackSize, _ri)
end
StartNewStreamedScriptWithArgs = StartNewScriptWithNameHashAndArgs

--- GRAPHICS::START_PARTICLE_FX_LOOPED_AT_COORD("scr_fbi_falling_debris", 93.7743f, -749.4572f, 70.86904f, 0f, 0f, 0f, 0x3F800000, 0, 0, 0, 0)
-- p11 seems to be always 0
function StartParticleFxLoopedAtCoord(effectName, x, y, z, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, p11)
	return _in(0xE184F4F0DC5910E7, _ts(effectName), x, y, z, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, p11, _ri)
end

function StartParticleFxLoopedOnEntity(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)
	return _in(0x1AE42C1660FD6517, _ts(effectName), entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, _ri)
end

function StartParticleFxLoopedOnEntityBone(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis)
	return _in(0xC6EB449E33977F0B, _ts(effectName), entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis, _ri)
end

function StartParticleFxLoopedOnPedBone(effectName, ped, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis)
	return _in(0xF28DA9F38CD1787C, _ts(effectName), ped, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis, _ri)
end

--- GRAPHICS::START_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_paleto_roof_impact", -140.8576f, 6420.789f, 41.1391f, 0f, 0f, 267.3957f, 0x3F800000, 0, 0, 0);
-- Axis - Invert Axis Flags
-- list: pastebin.com/N9unUFWY
-- -------------------------------------------------------------------
-- C#
-- Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, = you are calling this function.
-- char *effectname = This is an in-game effect name, for e.g. "scr_fbi4_trucks_crash" is used to give the effects when truck crashes etc
-- float x, y, z pos = this one is Simple, you just have to declare, where do you want this effect to take place at, so declare the ordinates
-- float xrot, yrot, zrot = Again simple? just mention the value in case if you want the effect to rotate.
-- float scale = is declare the scale of the effect, this may vary as per the effects for e.g 1.0f
-- bool xaxis, yaxis, zaxis = To bool the axis values.
-- example:
-- Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, "scr_fbi4_trucks_crash", GTA.Game.Player.Character.Position.X, GTA.Game.Player.Character.Position.Y, GTA.Game.Player.Character.Position.Z + 4f, 0, 0, 0, 5.5f, 0, 0, 0);
function StartParticleFxNonLoopedAtCoord(effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)
	return _in(0x25129531F77B9ED3, _ts(effectName), xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, _ri)
end

--- Starts a particle effect on an entity for example your player.
-- List: pastebin.com/N9unUFWY
-- Example:
-- C#:
-- Function.Call(Hash.REQUEST_NAMED_PTFX_ASSET, "scr_rcbarry2");                     Function.Call(Hash._SET_PTFX_ASSET_NEXT_CALL, "scr_rcbarry2");                             Function.Call(Hash.START_PARTICLE_FX_NON_LOOPED_ON_ENTITY, "scr_clown_appears", Game.Player.Character, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 1.0, false, false, false);
-- Internally this calls the same function as GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE
-- however it uses -1 for the specified bone index, so it should be possible to start a non looped fx on an entity bone using that native
function StartParticleFxNonLoopedOnEntity(effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ)
	return _in(0x0D53A3B8DA0809D2, _ts(effectName), entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ, _r)
end

--- GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE("scr_sh_bong_smoke", PLAYER::PLAYER_PED_ID(), -0.025f, 0.13f, 0f, 0f, 0f, 0f, 31086, 0x3F800000, 0, 0, 0);
-- Axis - Invert Axis Flags
-- list: pastebin.com/N9unUFWY
function StartParticleFxNonLoopedOnPedBone(effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ)
	return _in(0x0E7E72961BA18619, _ts(effectName), ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ, _r)
end

function StartPetrolTrailDecals(p0)
	return _in(0x99AC7F0D8B9C893D, p0)
end
N_0x99ac7f0d8b9c893d = StartPetrolTrailDecals

--- p3 is some flag related to 'trailers' (invokes CVehicle::GetTrailer).
-- See [`REQUEST_VEHICLE_RECORDING`](#\_0xAF514CABE74CBF15).
function StartPlaybackRecordedVehicle(vehicle, recording, script, p3)
	return _in(0x3F878F92B3A7A071, vehicle, recording, _ts(script), p3)
end

--- AI abides by the provided driving style (e.g., stopping at red lights or waiting behind traffic) while executing the specificed vehicle recording.
-- 0x1F2E4E06DEA8992B is a related native that deals with the AI physics for such recordings.
function StartPlaybackRecordedVehicleUsingAi(vehicle, recording, script, speed, drivingStyle)
	return _in(0x29DE5FA52D00428C, vehicle, recording, _ts(script), speed, drivingStyle)
end

--- flags requires further research, e.g., 0x4/0x8 are related to the AI driving task and 0x20 is internally set and interacts with dynamic entity components.
-- time, often zero and capped at 500, is related to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER
function StartPlaybackRecordedVehicleWithFlags(vehicle, recording, script, flags, time, drivingStyle)
	return _in(0x7D80FD645D4DA346, vehicle, recording, _ts(script), flags, time, drivingStyle)
end

--- // this enum comes directly from R* so don't edit this
-- enum ePlayerSwitchType
-- {
-- SWITCH_TYPE_AUTO,
-- SWITCH_TYPE_LONG,
-- SWITCH_TYPE_MEDIUM,
-- SWITCH_TYPE_SHORT
-- };
-- Use GET_IDEAL_PLAYER_SWITCH_TYPE for the best switch type. Or just auto, because it calls the same function in executable.
-- ----------------------------------------------------
-- Examples from the decompiled scripts:
-- STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 0, 3);
-- STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 2050, 3);
-- STREAMING::START_PLAYER_SWITCH(PLAYER::PLAYER_PED_ID(), l_832._f3, 1024, 3);
-- STREAMING::START_PLAYER_SWITCH(g_141F27, PLAYER::PLAYER_PED_ID(), 513, v_14);
-- Note: DO NOT, use SWITCH_TYPE_LONG with flag 513. It leaves you stuck in the clouds. You'll have to call STOP_PLAYER_SWITCH() to return to your ped.
-- Flag 8 w/ SWITCH_TYPE_LONG will zoom out 3 steps, then zoom in 2/3 steps and stop on the 3rd and just hang there.
-- Flag 8 w/ SWITCH_TYPE_MEDIUM will zoom out 1 step, and just hang there.
function StartPlayerSwitch(from, to, flags, switchType)
	return _in(0xFAA23F2CBA159D67, from, to, flags, switchType)
end

--- Teleports the player to the given coordinates.
-- If findCollisionLand is true it will try to find the Z value for you, this however has a timeout of 100 frames.
-- When trying to find the Z value the native will take longer the higher the difference from the given Z to the ground, this combined with the timeout can cause the teleport to just teleport to the given Z value, so try to estimate the z value, so don't just pass in 1000.0.
-- Also if you're in a vehicle and teleportWithVehicle is true it will not find the Z value for you.
-- @param teleportWithVehicle Teleports the player along with the vehicle they are in.
-- @param findCollisionLand Attempt to find a ground coordinate at the given XY location; overriding the Z value.
function StartPlayerTeleport(player, x, y, z, heading, teleportWithVehicle, findCollisionLand, p7)
	return _in(0xAD15F075A4DA0FDE, player, x, y, z, heading, teleportWithVehicle, findCollisionLand, p7)
end

function StartPreloadedConversation()
	return _in(0x23641AFE870AF385)
end

--- Starts recording a replay.
-- If mode is 0, turns on action replay.
-- If mode is 1, starts recording.
-- If already recording a replay, does nothing.
function StartRecording(mode)
	return _in(0xC3AC2FFF9612AC81, mode)
end
N_0xc3ac2fff9612ac81 = StartRecording

function StartRopeUnwindingFront(ropeId)
	return _in(0x538D1179EC1AA9A9, ropeId)
end

function StartRopeWinding(ropeId)
	return _in(0x1461C72C889E343E, ropeId)
end

function StartSaveArrayWithSize(size, arrayName)
	return _in(0x60FE567DF1B1AF9D, _i, size, _ts(arrayName))
end
StartSaveArray = StartSaveArrayWithSize

function StartSaveData(p1, p2)
	return _in(0xA9575F812C6A7997, _i, p1, p2)
end

function StartSaveStructWithSize(size, structName)
	return _in(0xBF737600CDDBEADD, _i, size, _ts(structName))
end
StartSaveStruct = StartSaveStructWithSize

function StartScriptConversation(p0, p1, p2, p3)
	return _in(0x6B17C62C9635D2DC, p0, p1, p2, p3)
end

--- Starts a fire:
-- xyz: Location of fire
-- maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.
-- isGasFire: Whether or not the fire is powered by gasoline.
function StartScriptFire(X, Y, Z, maxChildren, isGasFire)
	return _in(0x6B83617E04503888, X, Y, Z, maxChildren, isGasFire, _ri)
end

function StartScriptPhoneConversation(p0, p1)
	return _in(0x252E5F915EABB675, p0, p1)
end

--- See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E) for flags.
function StartShapeTestBound(entity, flags1, flags2)
	return _in(0x37181417CE7C8900, entity, flags1, flags2, _ri)
end
N_0x37181417ce7c8900 = StartShapeTestBound

--- See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E) for flags.
function StartShapeTestBoundingBox(entity, flags1, flags2)
	return _in(0x052837721A854EC7, entity, flags1, flags2, _ri)
end
N_0x052837721a854ec7 = StartShapeTestBoundingBox

--- For more information, see [`START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE`](#\_0x377906D8A31E5586) and [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E).
-- @param x Starting X coordinate.
-- @param y Starting Y coordinate.
-- @param z Starting Z coordinate.
-- @param x1 Ending X coordinate.
-- @param y1 Ending Y coordinate.
-- @param z1 Ending Z coordinate.
-- @param p9 Unknown, always 2 or 0
-- @param flags See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E)
-- @param p12 A bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used.
function StartShapeTestBox(x, y, z, x1, y1, z1, rotX, rotY, rotZ, p9, flags, entity, p12)
	return _in(0xFE466162C4401D18, x, y, z, x1, y1, z1, rotX, rotY, rotZ, p9, flags, entity, p12, _ri)
end
N_0xfe466162c4401d18 = StartShapeTestBox

--- Raycast from point to point, where the ray has a radius.
-- @param x1 Starting X coordinate.
-- @param y1 Starting Y coordinate.
-- @param z1 Starting Z coordinate.
-- @param x2 Ending X coordinate.
-- @param y2 Ending Y coordinate.
-- @param z2 Ending Z coordinate.
-- @param flags See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E)
-- @param entity Entity to ignore, or 0.
-- @param p9 A bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used.
function StartShapeTestCapsule(x1, y1, z1, x2, y2, z2, radius, flags, entity, p9)
	return _in(0x28579D1B8F8AAC80, x1, y1, z1, x2, y2, z2, radius, flags, entity, p9, _ri)
end
Cast_3dRayPointToPoint = StartShapeTestCapsule

--- Asynchronously starts a line-of-sight (raycast) world probe shape test.
-- ```cpp
-- enum TraceFlags
-- {
-- None = 0,
-- IntersectWorld = 1,
-- IntersectVehicles = 2,
-- IntersectPedsSimpleCollision = 4,
-- IntersectPeds = 8,
-- IntersectObjects = 16,
-- IntersectWater = 32,
-- Unknown = 128,
-- IntersectFoliage = 256,
-- IntersectEverything = 4294967295
-- }
-- ```
-- NOTE: Raycasts that intersect with mission_entites (flag = 2) has limited range and will not register for far away entites. The range seems to be about 30 metres.
-- Use the handle with [GET_SHAPE_TEST_RESULT](#\_0x3D87450E15D98694) or [GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL](#\_0x65287525D951F6BE) until it returns 0 or 2.
-- @param x1 Starting X coordinate.
-- @param y1 Starting Y coordinate.
-- @param z1 Starting Z coordinate.
-- @param x2 Ending X coordinate.
-- @param y2 Ending Y coordinate.
-- @param z2 Ending Z coordinate.
-- @param flags Flags.
-- @param entity An entity to ignore, or 0.
-- @param p8 A bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used.
-- @return A shape test handle.
function StartShapeTestLosProbe(x1, y1, z1, x2, y2, z2, flags, entity, p8)
	return _in(0x7EE9F5D83DD4F90E, x1, y1, z1, x2, y2, z2, flags, entity, p8, _ri)
end
N_0x7ee9f5d83dd4f90e = StartShapeTestLosProbe

--- Since it is only used in the PC version, likely some mouse-friendly shape test. Uses **in** vector arguments.
-- Asynchronous.
-- ```
-- it returns a ShapeTest handle that can be used with GET_SHAPE_TEST_RESULT.
-- In its only usage in game scripts its called with flag set to 511, entity to player_ped_id and flag2 set to 7
-- ```
-- See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E) for flags.
function StartShapeTestSurroundingCoords(flag, entity, flag2)
	return _in(0xFF6BE494C7987F34, _v, _v, flag, entity, flag2, _ri)
end
N_0xff6be494c7987f34 = StartShapeTestSurroundingCoords

--- Performs the same type of trace as START_SHAPE_TEST_CAPSULE, but with some different hardcoded parameters.
-- @param x1 Starting X coordinate.
-- @param y1 Starting Y coordinate.
-- @param z1 Starting Z coordinate.
-- @param x2 Ending X coordinate.
-- @param y2 Ending Y coordinate.
-- @param z2 Ending Z coordinate.
-- @param flags See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E)
-- @param entity An entity to ignore, or 0.
-- @param p9 A bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used.
function StartShapeTestSweptSphere(x1, y1, z1, x2, y2, z2, radius, flags, entity, p9)
	return _in(0xE6AC6C45FBE83004, x1, y1, z1, x2, y2, z2, radius, flags, entity, p9, _ri)
end
N_0xe6ac6c45fbe83004 = StartShapeTestSweptSphere
StartShapeTestCapsule_2 = StartShapeTestSweptSphere

function StartVehicleAlarm(vehicle)
	return _in(0xB8FF7AB45305C345, vehicle)
end

--- Sounds the horn for the specified vehicle.
-- vehicle: The vehicle to activate the horn for.
-- mode: The hash of "NORMAL" or "HELDDOWN". Can be 0.
-- duration: The duration to sound the horn, in milliseconds.
-- Note: If a player is in the vehicle, it will only sound briefly.
function StartVehicleHorn(vehicle, duration, mode, forever)
	return _in(0x9C8C6504B5B63D2C, vehicle, duration, _ch(mode), forever)
end

--- Example:
-- for (v_2 = 0; v_2 <= 4; v_2 += 1) {
-- STATS::STAT_CLEAR_SLOT_FOR_RELOAD(v_2);
-- }
function StatClearSlotForReload(statSlot)
	return _in(0xEB0A72181D4AA4AD, statSlot, _ri)
end

function StatDeleteSlot(p0)
	return _in(0x49A49BED12794D70, p0, _ri)
end

function StatGetBool(statHash, p2)
	return _in(0x11B5E6D2AE73F48E, _ch(statHash), _i --[[ actually bool ]], p2, _r)
end

--- p2 - Default value? Seems to be -1 most of the time.
function StatGetBoolMasked(statName, mask, p2)
	return _in(0x10FE3F1B79F9B071, _ch(statName), mask, p2, _r)
end

function StatGetCancelSaveMigrationStatus()
	return _in(0x567384DFA67029E6, _ri)
end
N_0x567384dfa67029e6 = StatGetCancelSaveMigrationStatus

function StatGetDate(statHash, p2, p3)
	return _in(0x8B0FACEFC36C824B, _ch(statHash), _i, p2, p3, _r)
end

function StatGetFloat(statHash, p2)
	return _in(0xD7AE6C9C9C6AC54C, _ch(statHash), _f, p2, _r)
end

--- p2 appears to always be -1
function StatGetInt(statHash, p2)
	return _in(0x767FBC2AC802EF3D, _ch(statHash), _i, p2, _r)
end

function StatGetLicensePlate(statName)
	return _in(0x5473D4195058B2E4, _ch(statName), _s)
end

function StatGetMaskedInt(p0, p2, p3, p4)
	return _in(0x655185A06D9EEAAB, p0, _i, p2, p3, p4, _r)
end

function StatGetNumberOfDays(statName)
	return _in(0xE0E854F5280FB769, _ch(statName), _ri)
end
N_0xe0e854f5280fb769 = StatGetNumberOfDays

function StatGetNumberOfHours(statName)
	return _in(0xF2D4B2FE415AAFC3, _ch(statName), _ri)
end
N_0xf2d4b2fe415aafc3 = StatGetNumberOfHours

function StatGetNumberOfMinutes(statName)
	return _in(0x7583B4BE4C5A41B5, _ch(statName), _ri)
end
N_0x7583b4be4c5a41b5 = StatGetNumberOfMinutes

function StatGetNumberOfSeconds(statName)
	return _in(0x2CE056FF3723F00B, _ch(statName), _ri)
end
N_0x2ce056ff3723f00b = StatGetNumberOfSeconds

--- Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_BOOL_MASKED"?
function StatGetPackedBoolMask(p0)
	return _in(0xF4D8E7AC2A27758C, p0, _ri)
end
N_0xf4d8e7ac2a27758c = StatGetPackedBoolMask

--- Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_MASKED_INT"?
function StatGetPackedIntMask(p0)
	return _in(0x94F12ABF9C79E339, p0, _ri)
end
N_0x94f12abf9c79e339 = StatGetPackedIntMask

function StatGetPos(p0, p4)
	return _in(0x350F82CCB186AA1B, p0, _i, _i, _i, p4, _r)
end

function StatGetSaveMigrationConsumeContentUnlockStatus(p0)
	return _in(0xCE5AA445ABA8DEE0, _ii(p0) --[[ may be optional ]], _ri)
end
N_0xce5aa445aba8dee0 = StatGetSaveMigrationConsumeContentUnlockStatus

function StatGetSaveMigrationStatus(data)
	return _in(0x886913BBEACA68C1, _ii(data) --[[ may be optional ]], _ri)
end
N_0x886913bbeaca68c1 = StatGetSaveMigrationStatus

--- p1 is always -1 in the script files
function StatGetString(statHash, p1)
	return _in(0xE50384ACC2C3DB74, _ch(statHash), p1, _s)
end

--- Needs more research. Seems to return "STAT_UNKNOWN" if no such user id exists.
function StatGetUserId(p0)
	return _in(0x2365C388E393BBE2, p0, _s)
end

function StatIncrement(statName, value)
	return _in(0x9B5A68C6489E9909, _ch(statName), value)
end

function StatLoad(p0)
	return _in(0xA651443F437B1CE6, p0, _r)
end

function StatLoadPending(p0)
	return _in(0xA1750FFAFA181661, p0, _r)
end

--- platformName must be one of the following: ps3, xbox360, ps4, xboxone
function StatMigrateSave(platformName)
	return _in(0xA5C80D8E768A9E66, _ts(platformName), _r)
end
N_0xa5c80d8e768a9e66 = StatMigrateSave

--- NativeDB Added Parameter 4: Any p3
function StatSave(p0, p1, p2)
	return _in(0xE07BCA305B82D2FD, p0, p1, p2, _r)
end

function StatSaveMigrationCancel()
	return _in(0x4FEF53183C3C6414, _r)
end
N_0x4fef53183c3c6414 = StatSaveMigrationCancel

function StatSaveMigrationConsumeContentUnlock(contentId, srcPlatform, srcGamerHandle)
	return _in(0x3270F67EED31FBC1, _ch(contentId), _ts(srcPlatform), _ts(srcGamerHandle), _r)
end
N_0x3270f67eed31fbc1 = StatSaveMigrationConsumeContentUnlock

function StatSaveMigrationStatusStart()
	return _in(0xC70DDCE56D0D3A99, _r)
end
N_0xc70ddce56d0d3a99 = StatSaveMigrationStatusStart

function StatSavePending()
	return _in(0x7D3A583856F2C5AC, _r)
end

function StatSavePendingOrRequested()
	return _in(0xBBB6AD006F1BBEA3, _r)
end

function StatSetBlockSaves(toggle)
	return _in(0xF434A10BA01C37D0, toggle)
end
N_0xf434a10ba01c37d0 = StatSetBlockSaves

--- Example:
-- STATS::STAT_SET_BOOL(MISC::GET_HASH_KEY("MPPLY_MELEECHLENGECOMPLETED"), trur, true);
function StatSetBool(statName, value, save)
	return _in(0x4B33C4243DE0C432, _ch(statName), value, save, _r)
end

function StatSetBoolMasked(statName, value, mask, save)
	return _in(0x5BC62EC1937B9E5B, _ch(statName), value, mask, save, _r)
end

function StatSetCheatIsActive()
	return _in(0x047CBED6F6F8B63C)
end
N_0x047cbed6f6f8b63c = StatSetCheatIsActive

--- p1 always true.
function StatSetCurrentPosixTime(statName, p1)
	return _in(0xC2F84B7F9C4D0C61, _ch(statName), p1, _r)
end

--- 'value' is a structure to a structure, 'numFields' is how many fields there are in said structure (usually 7).
-- The structure looks like this:
-- int year
-- int month
-- int day
-- int hour
-- int minute
-- int second
-- int millisecond
-- The decompiled scripts use TIME::GET_POSIX_TIME to fill this structure.
function StatSetDate(statName, numFields, save)
	return _in(0x2C29BFB64F4FCBE4, _ch(statName), _i, numFields, save, _r)
end

--- Example:
-- STATS::STAT_SET_FLOAT(MISC::GET_HASH_KEY("MP0_WEAPON_ACCURACY"), 66.6f, true);
function StatSetFloat(statName, value, save)
	return _in(0x4851997F37FE9B3C, _ch(statName), value, save, _r)
end

--- The following values have been found in the decompiled scripts:
-- "RC_ABI1"
-- "RC_ABI2"
-- "RC_BA1"
-- "RC_BA2"
-- "RC_BA3"
-- "RC_BA3A"
-- "RC_BA3C"
-- "RC_BA4"
-- "RC_DRE1"
-- "RC_EPS1"
-- "RC_EPS2"
-- "RC_EPS3"
-- "RC_EPS4"
-- "RC_EPS5"
-- "RC_EPS6"
-- "RC_EPS7"
-- "RC_EPS8"
-- "RC_EXT1"
-- "RC_EXT2"
-- "RC_EXT3"
-- "RC_EXT4"
-- "RC_FAN1"
-- "RC_FAN2"
-- "RC_FAN3"
-- "RC_HAO1"
-- "RC_HUN1"
-- "RC_HUN2"
-- "RC_JOS1"
-- "RC_JOS2"
-- "RC_JOS3"
-- "RC_JOS4"
-- "RC_MAU1"
-- "RC_MIN1"
-- "RC_MIN2"
-- "RC_MIN3"
-- "RC_MRS1"
-- "RC_MRS2"
-- "RC_NI1"
-- "RC_NI1A"
-- "RC_NI1B"
-- "RC_NI1C"
-- "RC_NI1D"
-- "RC_NI2"
-- "RC_NI3"
-- "RC_OME1"
-- "RC_OME2"
-- "RC_PA1"
-- "RC_PA2"
-- "RC_PA3"
-- "RC_PA3A"
-- "RC_PA3B"
-- "RC_PA4"
-- "RC_RAM1"
-- "RC_RAM2"
-- "RC_RAM3"
-- "RC_RAM4"
-- "RC_RAM5"
-- "RC_SAS1"
-- "RC_TON1"
-- "RC_TON2"
-- "RC_TON3"
-- "RC_TON4"
-- "RC_TON5"
function StatSetGxtLabel(statName, value, save)
	return _in(0x17695002FD8B2AE0, _ch(statName), _ts(value), save, _r)
end

function StatSetInt(statName, value, save)
	return _in(0xB3271D7AB655B441, _ch(statName), value, save, _r)
end

function StatSetLicensePlate(statName, str)
	return _in(0x69FF13266D7296DA, _ch(statName), _ts(str), _r)
end

function StatSetMaskedInt(statName, p1, p2, p3, save)
	return _in(0x7BBB1B54583ED410, _ch(statName), p1, p2, p3, save, _r)
end

function StatSetPos(statName, x, y, z, save)
	return _in(0xDB283FDE680FE72E, _ch(statName), x, y, z, save, _r)
end

--- Does not take effect immediately, unfortunately.
-- profileSetting seems to only be 936, 937 and 938 in scripts
function StatSetProfileSettingValue(profileSetting, value)
	return _in(0x68F01422BE1D838F, profileSetting, value)
end
N_0x68f01422be1d838f = StatSetProfileSettingValue
StatSetProfileSetting = StatSetProfileSettingValue

function StatSetString(statName, value, save)
	return _in(0xA87B2335D12531D7, _ch(statName), _ts(value), save, _r)
end

function StatSetUserId(statName, value, save)
	return _in(0x8CDDF1E452BABE11, _ch(statName), _ts(value), save, _r)
end

function StatSlotIsLoaded(p0)
	return _in(0x0D0A9F0E7BD91E3C, p0, _r)
end

--- Example:
-- This will stop the alarm at Fort Zancudo.
-- AUDIO::STOP_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);
-- First parameter (char) is the name of the alarm.
-- Second parameter (bool) has to be true (1) to have any effect.
function StopAlarm(alarmName, toggle)
	return _in(0xA1CADDCD98415A41, _ts(alarmName), toggle)
end

function StopAllAlarms(stop)
	return _in(0x2F794A877ADD4C92, stop)
end

function StopAllGarageActivity()
	return _in(0x0F87E938BDF29D66)
end

--- Looks like p1 may be a flag, still need to do some research, though.
function StopAnimPlayback(ped, p1, p2)
	return _in(0xEE08C992D238C5D1, ped, p1, p2)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
function StopAnimTask(ped, animDictionary, animationName, p3)
	return _in(0x97FF36A1D40EA00A, ped, _ts(animDictionary), _ts(animationName), p3)
end

function StopAnyPedModelBeingSuppressed()
	return _in(0xB47BD05FA66B40CF)
end

function StopAudioScene(scene)
	return _in(0xDFE8422B3B94E688, _ts(scene))
end

--- ??
function StopAudioScenes()
	return _in(0xBAC7FC81A75EC1A1)
end

--- Begins with STOP_*. Next character in the name is either D or E.
function StopBenchmarkRecording()
	return _in(0xC7DB36C24634F52B)
end
N_0xc7db36c24634f52b = StopBenchmarkRecording

--- NativeDB Introduced: v1290
function StopBinkMovie(binkMovie)
	return _in(0x63606A61DE68898A, binkMovie)
end

--- Stops CTaskBringVehicleToHalt
function StopBringVehicleToHalt(vehicle)
	return _in(0x7C06330BFDDA182E, vehicle)
end
N_0x7c06330bfdda182e = StopBringVehicleToHalt

function StopCamPointing(cam)
	return _in(0xF33AB75780BA57DE, cam)
end

function StopCamShaking(cam, p1)
	return _in(0xBDECF64367884AC3, cam, p1)
end

function StopCinematicCamShaking(p0)
	return _in(0x2238E588E588A6D7, p0)
end

function StopCinematicShot(p0)
	return _in(0x7660C6E75D3A078E, _ch(p0))
end

function StopCurrentPlayingAmbientSpeech(ped)
	return _in(0xB8BEC0CA6F0EDB0F, ped)
end

function StopCurrentPlayingSpeech(ped)
	return _in(0x7A73D05A607734C7, ped)
end
N_0x7a73d05a607734c7 = StopCurrentPlayingSpeech
SetPedMute = StopCurrentPlayingSpeech

function StopCutscene(p0)
	return _in(0xC7272775B4DC786E, p0)
end

function StopCutsceneAudio()
	return _in(0x806058BBDC136E06)
end
N_0x806058bbdc136e06 = StopCutsceneAudio

function StopCutsceneCamShaking()
	return _in(0xDB629FFD9285FA06)
end

function StopCutsceneImmediately()
	return _in(0xD220BDD222AC4A1E)
end

--- RAGEPluginHook list: docs.ragepluginhook.net/html/62951c37-a440-478c-b389-c471230ddfc5.htm
function StopEntityAnim(entity, animation, animGroup, p3)
	return _in(0x28004F88151E03E0, entity, _ts(animation), _ts(animGroup), p3, _ri)
end

function StopEntityFire(entity)
	return _in(0x7F0DD2EBBB651AFF, entity)
end

function StopFireInRange(x, y, z, radius)
	return _in(0x056A8A219B8E829F, x, y, z, radius)
end

function StopGameplayCamShaking(p0)
	return _in(0x0EF93E9F3D08C178, p0)
end

function StopGameplayHint(p0)
	return _in(0xF46C581C61718916, p0)
end

function StopPadShake(padIndex)
	return _in(0x38C16A305E8CDC8D, padIndex)
end

--- p1 is always 0 in the native scripts
function StopParticleFxLooped(ptfxHandle, p1)
	return _in(0x8F75998877616996, ptfxHandle, p1)
end

function StopPedRingtone(ped)
	return _in(0x6C5AE23EFA885092, ped)
end

function StopPedSpeaking(ped, shaking)
	return _in(0x9D64D7405520E3D3, ped, shaking)
end

function StopPedWeaponFiringWhenDropped(ped)
	return _in(0xC158D28142A34608, ped)
end

function StopPlaybackRecordedVehicle(vehicle)
	return _in(0x54833611C17ABDEA, vehicle)
end

function StopPlayerSwitch()
	return _in(0x95C0A5BBDC189AA1)
end

--- Disables the player's teleportation
function StopPlayerTeleport()
	return _in(0xC449EDED9D73009C)
end

--- Stops recording and discards the recorded clip.
function StopRecordingAndDiscardClip()
	return _in(0x88BB3507ED41A240)
end
N_0x88bb3507ed41a240 = StopRecordingAndDiscardClip

--- Stops recording and saves the recorded clip.
function StopRecordingAndSaveClip()
	return _in(0x071A5197D6AFC8B3)
end
StopRecording = StopRecordingAndSaveClip

--- This disable the recording feature and has to be called every frame.
function StopRecordingThisFrame()
	return _in(0xEB2D525B57F42B40)
end
N_0xeb2d525b57f42b40 = StopRecordingThisFrame

--- This native makes the gameplay camera zoom into first person/third person with a special effect.
-- ```
-- ```
-- NativeDB Added Parameter 4: Any p3
function StopRenderingScriptCamsUsingCatchUp(render, p1, p2)
	return _in(0xC819F3CBB62BF692, render, p1, p2)
end
N_0xc819f3cbb62bf692 = StopRenderingScriptCamsUsingCatchUp
RenderFirstPersonCam = StopRenderingScriptCamsUsingCatchUp

function StopRopeUnwindingFront(ropeId)
	return _in(0xFFF3A50779EFBBB3, ropeId)
end

function StopRopeWinding(ropeId)
	return _in(0xCB2D4AB84A19AA7C, ropeId)
end

function StopSaveArray()
	return _in(0x04456F95153C6BE4)
end

function StopSaveData()
	return _in(0x74E20C9145FB66FD)
end

function StopSaveStruct()
	return _in(0xEB1774DF12BB9F12)
end

--- In drunk_controller.c4, sub_309
-- if (CAM::IS_SCRIPT_GLOBAL_SHAKING()) {
-- CAM::STOP_SCRIPT_GLOBAL_SHAKING(0);
-- }
function StopScriptGlobalShaking(p0)
	return _in(0x1C9D7949FA533490, p0)
end
N_0x1c9d7949fa533490 = StopScriptGlobalShaking

function StopScriptedConversation(p0)
	return _in(0xD79DEEFB53455EBA, p0, _ri)
end

function StopSound(soundId)
	return _in(0xA3B0C41BA5CC0BB5, soundId)
end

function StopStream()
	return _in(0xA4718A1419D18151)
end

function StopSynchronizedAudioEvent(p0)
	return _in(0x92D6A88E64A94430, p0, _r)
end

--- p1 sync task id?
function StopSynchronizedEntityAnim(entity, p1, p2)
	return _in(0x43D3807C077261E3, entity, p1, p2, _r)
end

function StopSynchronizedMapEntityAnim(p0, p1, p2, p3, p4, p5)
	return _in(0x11E79CAB7183B6F5, p0, p1, p2, p3, p4, p5, _r)
end

--- Always returns zero.
function StreamvolCreateFrustum(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x1F3F018BC3AFA77C, p0, p1, p2, p3, p4, p5, p6, p7, p8, _ri)
end
N_0x1f3f018bc3afa77c = StreamvolCreateFrustum

--- Always returns zero.
function StreamvolCreateLine(p0, p1, p2, p3, p4, p5, p6)
	return _in(0x0AD9710CEE2F590F, p0, p1, p2, p3, p4, p5, p6, _ri)
end
N_0x0ad9710cee2f590f = StreamvolCreateLine

--- Always returns zero.
function StreamvolCreateSphere(x, y, z, rad, p4, p5)
	return _in(0x219C7B8D53E429FD, x, y, z, rad, p4, p5, _ri)
end
N_0x219c7b8d53e429fd = StreamvolCreateSphere
FormatFocusHeading = StreamvolCreateSphere

function StreamvolDelete(unused)
	return _in(0x1EE7D8DF4425F053, unused)
end
N_0x1ee7d8df4425f053 = StreamvolDelete

function StreamvolHasLoaded(unused)
	return _in(0x7D41E9D2D17C5B2D, unused, _r)
end
N_0x7d41e9d2d17c5b2d = StreamvolHasLoaded

function StreamvolIsValid(unused)
	return _in(0x07C313F94746702C, unused, _r)
end
N_0x07c313f94746702c = StreamvolIsValid

--- Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.
-- If all checks have passed successfully, the return value will be set to whatever strtol(string, 0i64, 10); returns.
function StringToInt(string, outInteger)
	return _in(0x5A5F40FE637EB584, _ts(string), _ii(outInteger) --[[ may be optional ]], _r)
end

function SuppressAgitationEventsNextFrame()
	return _in(0x5F3B7749C112D552)
end

function SuppressFrontendRenderingThisFrame()
	return _in(0xBA751764F0821256)
end
N_0xba751764f0821256 = SuppressFrontendRenderingThisFrame

--- eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
function SuppressShockingEventTypeNextFrame(eventType)
	return _in(0x3FD2EC8BF1F1CF30, eventType)
end

function SuppressShockingEventsNextFrame()
	return _in(0x2F9A292AD0A3BD89)
end

--- This was previously named as "RESERVE_ENTITY_EXPLODES_ON_HIGH_EXPLOSION_COMBO"
-- which is obviously incorrect.
-- Seems to only appear in scripts used in Singleplayer. p1 ranges from 2 - 46.
-- I assume this switches the crime type
function SwitchCrimeType(player, p1)
	return _in(0x9A987297ED8BD838, player, p1)
end
N_0x9a987297ed8bd838 = SwitchCrimeType

--- Use after using \_SWITCH_OUT_PLAYER to swoop the camera back down to the player's ped.
function SwitchInPlayer(ped)
	return _in(0xD8295AF639FD9CB8, ped)
end
N_0xd8295af639fd9cb8 = SwitchInPlayer

--- doesn't act normally when used on mount chilliad
-- flags:
-- 0: normal
-- 1: no transition
-- 255: switch IN
-- switchType: 0 - 3
-- 0: 1 step towards ped
-- 1: 3 steps out from ped
-- 2: 1 step out from ped
-- 3: 1 step towards ped
function SwitchOutPlayer(ped, flags, switchType)
	return _in(0xAAB3200ED59016BC, ped, flags, switchType)
end
N_0xaab3200ed59016bc = SwitchOutPlayer

--- Used in carsteal3 script with p0 = "Carsteal4_spycar".
-- S*
function SwitchToInputMappingScheme(name)
	return _in(0x3D42B92563939375, _ts(name), _r)
end
N_0x3d42b92563939375 = SwitchToInputMappingScheme

--- Same as 0x3D42B92563939375
-- S*
function SwitchToInputMappingScheme_2(name)
	return _in(0x4683149ED1DDE7A1, _ts(name), _r)
end
N_0x4683149ed1dde7a1 = SwitchToInputMappingScheme_2

--- Toggles whether ambient trains can spawn on the specified track or not.
-- | trackId | File | Description |
-- | --- | --- | --- |
-- | 0 | `trains1.dat` | Main track around SA |
-- | 1 | `trains2.dat` | Davis Quartz Quarry branch |
-- | 2 | `trains3.dat` | Second track alongside live track along Roy Lewenstein Blv. |
-- | 3 | `trains4.dat` | Metro track circuit |
-- | 4 | `trains5.dat` | Branch in Mirror Park Railyard |
-- | 5 | `trains6.dat` | Branch in Mirror Park Railyard |
-- | 6 | `trains7.dat` | LS branch to Mirror Park Railyard |
-- | 7 | `trains8.dat` | Overground part of metro track along Forum Dr. |
-- | 8 | `trains9.dat` | Branch to Mirror Park Railyard |
-- | 9 | `trains10.dat` | Yankton train |
-- | 10 | `trains11.dat` | Part of metro track near mission row |
-- | 11 | `trains12.dat` | Yankton prologue mission train |
-- Tracks IDs `0` and `3` are the main tracks you find trains on during normal gameplay, all the others are used during missions and are not complete tracks.
-- @param trackId The internal id of the train track to switch
-- @param state Whether ambient trains can spawn or not
-- @return None. The original return type is `void`, but ABI compatibility makes this impossible.
function SwitchTrainTrack(trackId, state)
	return _in(0xFD813BB7DB977F20, trackId, state)
end

--- Disables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard. Not sure about controller. Does not disable mouse controls. No need to call this every tick.
-- To enable the keys again, use [`0x14621BB1DF14E2B2`](#\_0x14621BB1DF14E2B2).
function TakeControlOfFrontend()
	return _in(0xEC9264727EEC0F28)
end
N_0xec9264727eec0f28 = TakeControlOfFrontend

function Tan(p0)
	return _in(0x632106CC96E82E91, p0, _rf)
end

--- Makes the specified ped achieve the specified heading.
-- pedHandle: The handle of the ped to assign the task to.
-- heading: The desired heading.
-- timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is cancelled, and the ped will stay at the heading it managed to reach in the time.
function TaskAchieveHeading(ped, heading, timeout)
	return _in(0x93B93A37987F1F3D, ped, heading, timeout)
end

function TaskAgitatedAction(ped, ped2)
	return _in(0x19D1B791CB3670FE, ped, ped2)
end
N_0x19d1b791cb3670fe = TaskAgitatedAction

function TaskAimGunAtCoord(ped, x, y, z, time, p5, p6)
	return _in(0x6671F3EEC681BDA1, ped, x, y, z, time, p5, p6)
end

--- duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
function TaskAimGunAtEntity(ped, entity, duration, p3)
	return _in(0x9B53BB6E8943AF53, ped, entity, duration, p3)
end

function TaskAimGunScripted(ped, scriptTask, p2, p3)
	return _in(0x7A192BE16D373D00, ped, _ch(scriptTask), p2, p3)
end

function TaskAimGunScriptedWithTarget(p0, p1, p2, p3, p4, p5, p6, p7)
	return _in(0x8605AF0DE8B3A5AC, p0, p1, p2, p3, p4, p5, p6, p7)
end

--- Example from "me_amanda1.ysc.c4":
-- TASK::TASK_ARREST_PED(l_19F /* This is a Ped */ , PLAYER::PLAYER_PED_ID());
-- Example from "armenian1.ysc.c4":
-- if (!PED::IS_PED_INJURED(l_B18[0/*1*/])) {
-- TASK::TASK_ARREST_PED(l_B18[0/*1*/], PLAYER::PLAYER_PED_ID());
-- }
-- I would love to have time to experiment to see if a player Ped can arrest another Ped. Might make for a good cop mod.
-- Looks like only the player can be arrested this way. Peds react and try to arrest you if you task them, but the player charater doesn't do anything if tasked to arrest another ped.
function TaskArrestPed(ped, target)
	return _in(0xF3B9A78A178572B1, ped, target)
end

--- You need to call PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS after TASK_BOAT_MISSION in order for the task to execute.
-- Working example
-- float vehicleMaxSpeed = VEHICLE::_GET_VEHICLE_MAX_SPEED(ENTITY::GET_ENTITY_MODEL(pedVehicle));
-- TASK::TASK_BOAT_MISSION(pedDriver, pedVehicle, 0, 0, waypointCoord.x, waypointCoord.y, waypointCoord.z, 4, vehicleMaxSpeed, 786469, -1.0, 7);
-- PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(pedDriver, 1);
-- P8 appears to be driving style flag - see gtaforums.com/topic/822314-guide-driving-styles/ for documentation
function TaskBoatMission(pedDriver, boat, p2, p3, x, y, z, p7, maxSpeed, drivingStyle, p10, p11)
	return _in(0x15C86013127CE63F, pedDriver, boat, p2, p3, x, y, z, p7, maxSpeed, drivingStyle, p10, p11)
end

--- p2 tend to be 16, 17 or 1
-- p3 to p7 tend to be 0.0
function TaskChatToPed(ped, target, p2, p3, p4, p5, p6, p7)
	return _in(0x8C338E0263E4FD19, ped, target, p2, p3, p4, p5, p6, p7)
end

function TaskClearDefensiveArea(p0)
	return _in(0x95A6C46A31D1917D, p0)
end

--- Not clear what it actually does, but here's how script uses it -
-- if (OBJECT::HAS_PICKUP_BEEN_COLLECTED(...)
-- {
-- if(ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
-- {
-- TASK::TASK_CLEAR_LOOK_AT(PLAYER::PLAYER_PED_ID());
-- }
-- ...
-- }
-- Another one where it doesn't "look" at current player -
-- TASK::TASK_PLAY_ANIM(l_3ED, "missheist_agency2aig_2", "look_at_phone_a", 1000.0, -2.0, -1, 48, v_2, 0, 0, 0);
-- PED::_2208438012482A1A(l_3ED, 0, 0);
-- TASK::TASK_CLEAR_LOOK_AT(l_3ED);
function TaskClearLookAt(ped)
	return _in(0x0F804F1DB19B9689, ped)
end

--- Climbs or vaults the nearest thing.
function TaskClimb(ped, unused)
	return _in(0x89D9FCC2435112F1, ped, unused)
end

function TaskClimbLadder(ped, p1)
	return _in(0xB6C987F9285A3814, ped, p1)
end

--- Despite its name, it only attacks ONE hated target. The one closest hated target.
-- p2 seems to be always 0
function TaskCombatHatedTargetsAroundPed(ped, radius, p2)
	return _in(0x7BF835BB9E2698C8, ped, radius, p2)
end

function TaskCombatHatedTargetsAroundPedTimed(p0, p1, p2, p3)
	return _in(0x2BBA30B854534A0C, p0, p1, p2, p3)
end

--- Despite its name, it only attacks ONE hated target. The one closest to the specified position.
function TaskCombatHatedTargetsInArea(ped, x, y, z, radius, p5)
	return _in(0x4CF5F55DAC3280A0, ped, x, y, z, radius, p5)
end

--- Makes the specified ped attack the target ped.
-- p2 should be 0
-- p3 should be 16
function TaskCombatPed(ped, targetPed, p2, p3)
	return _in(0xF166E48407BAC484, ped, targetPed, p2, p3)
end

function TaskCombatPedTimed(p0, ped, p2, p3)
	return _in(0x944F30DCB7096BDE, p0, ped, p2, p3)
end

--- The ped will act like NPC's involved in a gunfight. The ped will squat down with their heads held in place and look around.
-- @param ped Ped id.
-- @param duration Duration of the animation in ms. Set to -1 if you do not want a duration.
function TaskCower(ped, duration)
	return _in(0x3EB1FE9E8E908E15, ped, duration)
end

--- Example:
-- TASK::TASK_DRIVE_BY(l_467[1/*22*/], PLAYER::PLAYER_PED_ID(), 0, 0.0, 0.0, 2.0, 300.0, 100, 0, ${firing_pattern_burst_fire_driveby});
-- Needs working example. Doesn't seem to do anything.
-- I marked p2 as targetVehicle as all these shooting related tasks seem to have that in common.
-- I marked p6 as distanceToShoot as if you think of GTA's Logic with the native SET_VEHICLE_SHOOT natives, it won't shoot till it gets within a certain distance of the target.
-- I marked p7 as pedAccuracy as it seems it's mostly 100 (Completely Accurate), 75, 90, etc. Although this could be the ammo count within the gun, but I highly doubt it. I will change this comment once I find out if it's ammo count or not.
function TaskDriveBy(driverPed, targetPed, targetVehicle, targetX, targetY, targetZ, distanceToShoot, pedAccuracy, p8, firingPattern)
	return _in(0x2F8AF0E82773A171, driverPed, targetPed, targetVehicle, targetX, targetY, targetZ, distanceToShoot, pedAccuracy, p8, _ch(firingPattern))
end

--- speed 1.0 = walk, 2.0 = run
-- p5 1 = normal, 3 = teleport to vehicle, 8 = normal/carjack ped from seat, 16 = teleport directly into vehicle
-- p6 is always 0
-- @param seatIndex See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
function TaskEnterVehicle(ped, vehicle, timeout, seatIndex, speed, flag, p6)
	return _in(0xC20E50AA46D09CA8, ped, vehicle, timeout, seatIndex, speed, flag, p6)
end

function TaskEveryoneLeaveVehicle(vehicle)
	return _in(0x7F93691AB4B92272, vehicle)
end

function TaskExitCover(p0, p1, p2, p3, p4)
	return _in(0x79B258E397854D29, p0, p1, p2, p3, p4)
end

--- Adds a new point to the current point route; a maximum of 8 points can be added.
-- Call [TASK_FLUSH_ROUTE](#\_0x841142A1376E9006) before the first call to this. Call [TASK_FOLLOW_POINT_ROUTE](#\_0x595583281858626E) to make the Ped go the route.
function TaskExtendRoute(x, y, z)
	return _in(0x1E7889778264843A, x, y, z)
end

--- Clears the current point route. Call this before [TASK_EXTEND_ROUTE](#\_0x1E7889778264843A) and [TASK_FOLLOW_POINT_ROUTE](#\_0x595583281858626E).
function TaskFlushRoute()
	return _in(0x841142A1376E9006)
end

--- If no timeout, set timeout to -1.
function TaskFollowNavMeshToCoord(ped, x, y, z, speed, timeout, stoppingRange, persistFollowing, unk)
	return _in(0x15D3A79D4E44B913, ped, x, y, z, speed, timeout, stoppingRange, persistFollowing, unk)
end

function TaskFollowNavMeshToCoordAdvanced(ped, x, y, z, speed, timeout, unkFloat, unkInt, unkX, unkY, unkZ, unk_40000f)
	return _in(0x17F58B88D085DBAC, ped, x, y, z, speed, timeout, unkFloat, unkInt, unkX, unkY, unkZ, unk_40000f)
end

--- MulleKD19: Makes the ped go on the created point route.
-- ped: The ped to give the task to.
-- speed: The speed to move at in m/s.
-- int: Unknown. Can be 0, 1, 2 or 3.
-- Example:
-- TASK_FLUSH_ROUTE();
-- TASK_EXTEND_ROUTE(0f, 0f, 70f);
-- TASK_EXTEND_ROUTE(10f, 0f, 70f);
-- TASK_EXTEND_ROUTE(10f, 10f, 70f);
-- TASK_FOLLOW_POINT_ROUTE(GET_PLAYER_PED(), 1f, 0);
-- @param ped The ped to give the task to.
-- @param speed The speed to move at in m/s.
-- @param unknown Unknown. Can be 0, 1, 2 or 3.
function TaskFollowPointRoute(ped, speed, unknown)
	return _in(0x595583281858626E, ped, speed, unknown)
end

--- p6 always -1
-- p7 always 10.0
-- p8 always 1
function TaskFollowToOffsetOfEntity(ped, entity, offsetX, offsetY, offsetZ, movementSpeed, timeout, stoppingRange, persistFollowing)
	return _in(0x304AE42E357B8C7E, ped, entity, offsetX, offsetY, offsetZ, movementSpeed, timeout, stoppingRange, persistFollowing)
end

function TaskFollowWaypointRecording(p0, p1, p2, p3, p4)
	return _in(0x0759591819534F7B, p0, p1, p2, p3, p4)
end

--- See [`FORCE_PED_MOTION_STATE`](#\_0xF28965D04F570DCA)
function TaskForceMotionState(ped, state, p2)
	return _in(0x4F056E1AFFEF17AB, ped, _ch(state), p2)
end

function TaskGetOffBoat(ped, boat)
	return _in(0x9C00E77AF14B2DFF, ped, boat)
end
TaskGetOffBoat = TaskGetOffBoat

function TaskGoStraightToCoord(ped, x, y, z, speed, timeout, targetHeading, distanceToSlide)
	return _in(0xD76B57B44F1E6F8B, ped, x, y, z, speed, timeout, targetHeading, distanceToSlide)
end

function TaskGoStraightToCoordRelativeToEntity(entity1, entity2, p2, p3, p4, p5, p6)
	return _in(0x61E360B7E040D12E, entity1, entity2, p2, p3, p4, p5, p6)
end

--- The ped will walk or run towards goToLocation, aiming towards goToLocation or focusLocation (depending on the aimingFlag) and shooting if shootAtEnemies = true to any enemy in his path.
-- If the ped is closer than noRoadsDistance, the ped will ignore pathing/navmesh and go towards goToLocation directly. This could cause the ped to get stuck behind tall walls if the goToLocation is on the other side. To avoid this, use 0.0f and the ped will always use pathing/navmesh to reach his destination.
-- If the speed is set to 0.0f, the ped will just stand there while aiming, if set to 1.0f he will walk while aiming, 2.0f will run while aiming.
-- The ped will stop aiming when he is closer than distanceToStopAt to goToLocation.
-- I still can't figure out what unkTrue is used for. I don't notice any difference if I set it to false but in the decompiled scripts is always true.
-- I think that unkFlag, like the driving styles, could be a flag that "work as a list of 32 bits converted to a decimal integer. Each bit acts as a flag, and enables or disables a function". What leads me to this conclusion is the fact that in the decompiled scripts, unkFlag takes values like: 0, 1, 5 (101 in binary) and 4097 (4096 + 1 or 1000000000001 in binary). For now, I don't know what behavior enable or disable this possible flag so I leave it at 0.
-- Note: After some testing, using unkFlag = 16 (0x10) enables the use of sidewalks while moving towards goToLocation.
-- The aimingFlag takes 2 values: 0 to aim at the focusLocation, 1 to aim at where the ped is heading (goToLocation).
-- Example:
-- enum AimFlag
-- {
-- AimAtFocusLocation,
-- AimAtGoToLocation
-- };
-- Vector3 goToLocation1 = { 996.2867f, 0, -2143.044f, 0, 28.4763f, 0 }; // remember the padding.
-- Vector3 goToLocation2 = { 990.2867f, 0, -2140.044f, 0, 28.4763f, 0 }; // remember the padding.
-- Vector3 focusLocation = { 994.3478f, 0, -2136.118f, 0, 29.2463f, 0 }; // the coord z should be a little higher, around +1.0f to avoid aiming at the ground
-- // 1st example
-- TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation1.x, goToLocation1.y, goToLocation1.z, focusLocation.x, focusLocation.y, focusLocation.z, 2.0f /*run*/, true /*shoot*/, 3.0f /*stop at*/, 0.0f /*noRoadsDistance*/, true /*always true*/, 0 /*possible flag*/, AimFlag::AimAtGoToLocation, -957453492 /*FullAuto pattern*/);
-- // 2nd example
-- TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation2.x, goToLocation2.y, goToLocation2.z, focusLocation.x, focusLocation.y, focusLocation.z, 1.0f /*walk*/, false /*don't shoot*/, 3.0f /*stop at*/, 0.0f /*noRoadsDistance*/, true /*always true*/, 0 /*possible flag*/, AimFlag::AimAtFocusLocation, -957453492 /*FullAuto pattern*/);
-- 1st example: The ped (pedhandle) will run towards goToLocation1. While running and aiming towards goToLocation1, the ped will shoot on sight to any enemy in his path, using "FullAuto" firing pattern. The ped will stop once he is closer than distanceToStopAt to goToLocation1.
-- 2nd example: The ped will walk towards goToLocation2. This time, while walking towards goToLocation2 and aiming at focusLocation, the ped will point his weapon on sight to any enemy in his path without shooting. The ped will stop once he is closer than distanceToStopAt to goToLocation2.
function TaskGoToCoordAndAimAtHatedEntitiesNearCoord(pedHandle, goToLocationX, goToLocationY, goToLocationZ, focusLocationX, focusLocationY, focusLocationZ, speed, shootAtEnemies, distanceToStopAt, noRoadsDistance, unkTrue, unkFlag, aimingFlag, firingPattern)
	return _in(0xA55547801EB331FC, pedHandle, goToLocationX, goToLocationY, goToLocationZ, focusLocationX, focusLocationY, focusLocationZ, speed, shootAtEnemies, distanceToStopAt, noRoadsDistance, unkTrue, unkFlag, aimingFlag, _ch(firingPattern))
end

--- example from fm_mission_controller
-- TASK::TASK_GO_TO_COORD_ANY_MEANS(l_649, sub_f7e86(-1, 0), 1.0, 0, 0, 786603, 0xbf800000);
function TaskGoToCoordAnyMeans(ped, x, y, z, speed, p5, p6, walkingStyle, p8)
	return _in(0x5BC448CB78FA3E88, ped, x, y, z, speed, p5, p6, walkingStyle, p8)
end

--- NativeDB Added Parameter 13: Any p12
function TaskGoToCoordAnyMeansExtraParams(ped, x, y, z, speed, p5, p6, walkingStyle, p8, p9, p10, p11)
	return _in(0x1DD45F9ECFDB1BC9, ped, x, y, z, speed, p5, p6, walkingStyle, p8, p9, p10, p11)
end

--- NativeDB Added Parameter 14: Any p13
function TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(ped, x, y, z, speed, p5, p6, walkingStyle, p8, p9, p10, p11, p12)
	return _in(0xB8ECD61F531A7B02, ped, x, y, z, speed, p5, p6, walkingStyle, p8, p9, p10, p11, p12)
end

--- Will make the ped move to a coordinate while aiming (and optionally shooting) at given coordinates.
-- @param ped Ped to task
-- @param x Destination X position
-- @param y Destination Y position
-- @param z Destination Z position
-- @param aimAtX Aim at target x position
-- @param aimAtY Aim at target Y position
-- @param aimAtZ Aim at target Z position
-- @param moveSpeed mostly 2f, but also 1/1.2f, etc.
-- @param shoot If true ped will shoot; false - will not
-- @param p9 Usually 2.0f
-- @param p10 Usually 0.5f
-- @param p11 If true ped will stay still; false - will not
-- @param flags 0 / 512 / 513, etc
-- @param firingPattern ${firing_pattern_full_auto}, 0xC6EE6B4C
function TaskGoToCoordWhileAimingAtCoord(ped, x, y, z, aimAtX, aimAtY, aimAtZ, moveSpeed, shoot, p9, p10, p11, flags, p13, firingPattern)
	return _in(0x11315AB3385B8AC0, ped, x, y, z, aimAtX, aimAtY, aimAtZ, moveSpeed, shoot, p9, p10, p11, flags, p13, _ch(firingPattern))
end

function TaskGoToCoordWhileAimingAtEntity(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
	return _in(0xB2A16444EAD9AE47, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)
end

--- The entity will move towards the target until time is over (duration) or get in target's range (distance). p5 and p6 are unknown, but you could leave p5 = 1073741824 or 100 or even 0 (didn't see any difference but on the decompiled scripts, they use 1073741824 mostly) and p6 = 0
-- Note: I've only tested it on entity -> ped and target -> vehicle. It could work differently on other entities, didn't try it yet.
-- Example: TASK::TASK_GO_TO_ENTITY(pedHandle, vehicleHandle, 5000, 4.0, 100, 1073741824, 0)
-- Ped will run towards the vehicle for 5 seconds and stop when time is over or when he gets 4 meters(?) around the vehicle (with duration = -1, the task duration will be ignored).
function TaskGoToEntity(entity, target, duration, distance, speed, p5, p6)
	return _in(0x6A071245EB0D1882, entity, target, duration, distance, speed, p5, p6)
end

function TaskGoToEntityWhileAimingAtCoord(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
	return _in(0x04701832B739DCE5, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)
end

--- shootatEntity:
-- If true, peds will shoot at Entity till it is dead.
-- If false, peds will just walk till they reach the entity and will cease shooting.
function TaskGoToEntityWhileAimingAtEntity(ped, entityToWalkTo, entityToAimAt, speed, shootatEntity, p5, p6, p7, p8, firingPattern)
	return _in(0x97465886D35210E9, ped, entityToWalkTo, entityToAimAt, speed, shootatEntity, p5, p6, p7, p8, _ch(firingPattern))
end

--- eg
-- TASK::TASK_GOTO_ENTITY_AIMING(v_2, PLAYER::PLAYER_PED_ID(), 5.0, 25.0);
-- ped = Ped you want to perform this task.
-- target = the Entity they should aim at.
-- distanceToStopAt = distance from the target, where the ped should stop to aim.
-- StartAimingDist = distance where the ped should start to aim.
function TaskGotoEntityAiming(ped, target, distanceToStopAt, StartAimingDist)
	return _in(0xA9DA48FAB8A76C12, ped, target, distanceToStopAt, StartAimingDist)
end

function TaskGotoEntityOffset(ped, p1, p2, x, y, z, duration)
	return _in(0xE39B4FF4FDEBDE27, ped, p1, p2, x, y, z, duration)
end

function TaskGotoEntityOffsetXy(ped, entity, duration, xOffset, yOffset, zOffset, moveBlendRatio, useNavmesh)
	return _in(0x338E7EF52B6095A9, ped, entity, duration, xOffset, yOffset, zOffset, moveBlendRatio, useNavmesh)
end

function TaskGuardAssignedDefensiveArea(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xD2A207EEBDF9889B, p0, p1, p2, p3, p4, p5, p6)
end

--- From re_prisonvanbreak:
-- TASK::TASK_GUARD_CURRENT_POSITION(l_DD, 35.0, 35.0, 1);
function TaskGuardCurrentPosition(p0, p1, p2, p3)
	return _in(0x4A58A47A72E3FCB4, p0, p1, p2, p3)
end

--- p0 - Guessing PedID
-- p1, p2, p3 - XYZ?
-- p4 - ???
-- p5 - Maybe the size of sphere from XYZ?
-- p6 - ???
-- p7, p8, p9 - XYZ again?
-- p10 - Maybe the size of sphere from second XYZ?
function TaskGuardSphereDefensiveArea(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
	return _in(0xC946FE14BE0EB5E2, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)
end

--- In the scripts, p3 was always -1.
-- p3 seems to be duration or timeout of turn animation.
-- Also facingPed can be 0 or -1 so ped will just raise hands up.
function TaskHandsUp(ped, duration, facingPed, p3, p4)
	return _in(0xF2EAB31979A7F910, ped, duration, facingPed, p3, p4)
end

--- Ped pilot should be in a heli.
-- EntityToFollow can be a vehicle or Ped.
-- x,y,z appear to be how close to the EntityToFollow the heli should be. Scripts use 0.0, 0.0, 80.0. Then the heli tries to position itself 80 units above the EntityToFollow. If you reduce it to -5.0, it tries to go below (if the EntityToFollow is a heli or plane)
-- NOTE: If the pilot finds enemies, it will engage them, then remain there idle, not continuing to chase the Entity given.
function TaskHeliChase(pilot, entityToFollow, x, y, z)
	return _in(0xAC83B1DB38D0ADA0, pilot, entityToFollow, x, y, z)
end

--- NativeDB Introduced: v1290
function TaskHeliEscortHeli(pilot, heli1, heli2, p3, p4, p5)
	return _in(0xB385523325077210, pilot, heli1, heli2, p3, p4, p5)
end

--- Needs more research.
-- Default value of p13 is -1.0 or 0xBF800000.
-- Default value of p14 is 0.
-- Modified examples from "fm_mission_controller.ysc", line ~203551:
-- TASK::TASK_HELI_MISSION(ped, vehicle, 0, 0, posX, posY, posZ, 4, 1.0, -1.0, -1.0, 10, 10, 5.0, 0);
-- TASK::TASK_HELI_MISSION(ped, vehicle, 0, 0, posX, posY, posZ, 4, 1.0, -1.0, -1.0, 0, ?, 5.0, 4096);
-- int mode seams to set mission type 4 = coords target, 23 = ped target.
-- int 14 set to 32 = ped will land at destination.
-- My findings:
-- mode 4 or 7 forces heli to snap to the heading set
-- 8 makes the heli flee from the ped.
-- 9 circles around ped with angle set
-- 10, 11 normal + imitate ped heading
-- 20 makes the heli land when he's near the ped. It won't resume chasing.
-- 21 emulates an helicopter crash
-- 23 makes the heli circle erratically around ped
-- I change p2 to 'vehicleToFollow' as it seems to work like the task natives to set targets. In the heli_taxi script where as the merryweather heli takes you to your waypoint it has no need to follow a vehicle or a ped, so of course both have 0 set.
function TaskHeliMission(pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, maxSpeed, landingRadius, targetHeading, unk1, unk2, unk3, landingFlags)
	return _in(0xDAD029E187A2BEB4, pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, maxSpeed, landingRadius, targetHeading, unk1, unk2, unk3, landingFlags)
end

--- Definition is wrong. This has 4 parameters (Not sure when they were added. v350 has 2, v678 has 4).
-- v350: Ped ped, bool unused
-- v678: Ped ped, bool unused, bool flag1, bool flag2
-- flag1 = super jump, flag2 = do nothing if flag1 is false and doubles super jump height if flag1 is true.
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
-- NativeDB Added Parameter 4: Any p3
function TaskJump(ped, unused)
	return _in(0x0AE4086104E067B1, ped, unused)
end

--- Flags are the same flags used in [`TASK_LEAVE_VEHICLE`](#\_0xD3DBCE61A490BE02)
function TaskLeaveAnyVehicle(ped, p1, flags)
	return _in(0x504D54DF3F6F2247, ped, p1, flags)
end

--- Flags from decompiled scripts:
-- 0 = normal exit and closes door.
-- 1 = normal exit and closes door.
-- 16 = teleports outside, door kept closed.  (This flag does not seem to work for the front seats in buses, NPCs continue to exit normally)
-- 64 = normal exit and closes door, maybe a bit slower animation than 0.
-- 256 = normal exit but does not close the door.
-- 4160 = ped is throwing himself out, even when the vehicle is still.
-- 262144 = ped moves to passenger seat first, then exits normally
-- Others to be tried out: 320, 512, 131072.
function TaskLeaveVehicle(ped, vehicle, flags)
	return _in(0xD3DBCE61A490BE02, ped, vehicle, flags)
end

function TaskLookAtCoord(entity, x, y, z, duration, p5, p6)
	return _in(0x6FA46612594F7973, entity, x, y, z, duration, p5, p6)
end

--- param3: duration in ms, use -1 to look forever
-- param4: using 2048 is fine
-- param5: using 3 is fine
function TaskLookAtEntity(ped, lookAt, duration, unknown1, unknown2)
	return _in(0x69F4BE8C8CC4796C, ped, lookAt, duration, unknown1, unknown2)
end

--- Example:
-- TASK::TASK_MOVE_NETWORK_ADVANCED_BY_NAME(PLAYER::PLAYER_PED_ID(), "minigame_tattoo_michael_parts", 324.13f, 181.29f, 102.6f, 0.0f, 0.0f, 22.32f, 2, 0, false, 0, 0);
function TaskMoveNetworkAdvancedByName(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, animDict, flags)
	return _in(0xD5B35BEA41919ACB, ped, _ts(p1), p2, p3, p4, p5, p6, p7, p8, p9, p10, _ts(animDict), flags)
end
N_0xd5b35bea41919acb = TaskMoveNetworkAdvancedByName
TaskMoveNetworkAdvanced = TaskMoveNetworkAdvancedByName

--- Example:
-- TASK::TASK_MOVE_NETWORK_BY_NAME(PLAYER::PLAYER_PED_ID(), "arm_wrestling_sweep_paired_a_rev3", 0.0f, true, "mini@arm_wrestling", 0);
function TaskMoveNetworkByName(ped, task, multiplier, p3, animDict, flags)
	return _in(0x2D537BA194896636, ped, _ts(task), multiplier, p3, _ts(animDict), flags)
end
N_0x2d537ba194896636 = TaskMoveNetworkByName
TaskMoveNetwork = TaskMoveNetworkByName

--- Used only once in the scripts (am_mp_nightclub)
-- ```
-- ```
-- Used only once in the scripts (am_mp_nightclub)
-- NativeDB Introduced: v1493
function TaskMoveNetworkByNameWithInitParams(ped, p1, p3, p4, animDict, flags)
	return _in(0x3D45B0B355C5E0C9, ped, _ts(p1), _i, p3, p4, _ts(animDict), flags)
end
TaskMoveNetworkScripted = TaskMoveNetworkByNameWithInitParams

--- The given ped will try to open the nearest door to 'seat'.
-- Example: telling the ped to open the door for the driver seat does not necessarily mean it will open the driver door, it may choose to open the passenger door instead if that one is closer.
-- @param ped The ped to do the task
-- @param vehicle The vehicle whose doors the ped shoud open
-- @param timeOut Sets a timeout to the task; doesn't work for 0
-- @param seat The seat index - the ped will attempt to open doors to get to the specified seat
function TaskOpenVehicleDoor(ped, vehicle, timeOut, seat, speed)
	return _in(0x965791A9A488A062, ped, vehicle, timeOut, seat, speed)
end

--- This function has a third parameter as well (bool).
-- Second parameter is unused.
-- seconds parameter was for jetpack in the early stages of gta and the hard coded code is now removed
-- ```
-- ```
-- NativeDB Added Parameter 3: BOOL p2
function TaskParachute(ped, p1)
	return _in(0xD2F1C53C97EE81AB, ped, p1)
end

--- makes ped parachute to coords x y z. Works well with PATHFIND::GET_SAFE_COORD_FOR_PED
function TaskParachuteToTarget(ped, x, y, z)
	return _in(0xB33E291AFA6BD03A, ped, x, y, z)
end

--- After looking at some scripts the second parameter seems to be an id of some kind. Here are some I found from some R* scripts:
-- "miss_Tower_01" (this went from 01 - 10)
-- "miss_Ass0" (0, 4, 6, 3)
-- "MISS_PATROL_8"
-- I think they're patrol routes, but I'm not sure. And I believe the 3rd parameter is a BOOL, but I can't confirm other than only seeing 0 and 1 being passed.
-- As far as I can see the patrol routes names such as "miss_Ass0" have been defined earlier in the scripts. This leads me to believe we can defined our own new patrol routes by following the same approach.
-- From the scripts
-- TASK::OPEN_PATROL_ROUTE("miss_Ass0");
-- TASK::ADD_PATROL_ROUTE_NODE(0, "WORLD_HUMAN_GUARD_STAND", l_738[0/*3*/], -139.4076690673828, -993.4732055664062, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
-- TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_738[1/*3*/], -116.1391830444336, -987.4984130859375, 26.38541030883789, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
-- TASK::ADD_PATROL_ROUTE_NODE(2, "WORLD_HUMAN_GUARD_STAND", l_738[2/*3*/], -128.46847534179688, -979.0340576171875, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
-- TASK::ADD_PATROL_ROUTE_LINK(0, 1);
-- TASK::ADD_PATROL_ROUTE_LINK(1, 2);
-- TASK::ADD_PATROL_ROUTE_LINK(2, 0);
-- TASK::CLOSE_PATROL_ROUTE();
-- TASK::CREATE_PATROL_ROUTE();
function TaskPatrol(ped, p1, p2, p3, p4)
	return _in(0xBDA5DF49D080FE4E, ped, _ts(p1), p2, p3, p4)
end

--- This tasks the ped to do nothing for the specified amount of miliseconds.
-- This is useful if you want to add a delay between tasks when using a sequence task.
-- @param ped The ped to pause. Set to this 0 when using task sequences.
-- @param ms The amount of miliseconds to wait.
function TaskPause(ped, ms)
	return _in(0xE73A266DB0CA9042, ped, ms)
end

function TaskPedSlideToCoord(ped, x, y, z, heading, duration)
	return _in(0xD04FE6765D990A06, ped, x, y, z, heading, duration)
end

function TaskPedSlideToCoordHdgRate(ped, x, y, z, heading, p5, p6)
	return _in(0x5A4A6A6D3DC64F52, ped, x, y, z, heading, p5, p6)
end

function TaskPerformSequence(ped, taskSequenceId)
	return _in(0x5ABA3986D90D8A3B, ped, taskSequenceId)
end

function TaskPerformSequenceFromProgress(p0, p1, p2, p3)
	return _in(0x89221B16730234F0, p0, p1, p2, p3)
end

function TaskPerformSequenceLocally(ped, taskSequenceId)
	return _in(0x8C33220C8D78CA0D, ped, taskSequenceId)
end
N_0x8c33220c8d78ca0d = TaskPerformSequenceLocally

function TaskPlaneChase(pilot, entityToFollow, x, y, z)
	return _in(0x2D2386F273FF7A25, pilot, entityToFollow, x, y, z)
end

--- NativeDB Introduced: v1290
function TaskPlaneGotoPreciseVtol(ped, vehicle, p2, p3, p4, p5, p6, p7, p8, p9)
	return _in(0xF7F9DCCA89E7505B, ped, vehicle, p2, p3, p4, p5, p6, p7, p8, p9)
end

function TaskPlaneLand(pilot, plane, runwayStartX, runwayStartY, runwayStartZ, runwayEndX, runwayEndY, runwayEndZ)
	return _in(0xBF19721FA34D32C0, pilot, plane, runwayStartX, runwayStartY, runwayStartZ, runwayEndX, runwayEndY, runwayEndZ)
end

--- EDITED (7/13/2017)
-- NOTE: If you want air combat, AI::TASK_COMBAT_PED (while your pilot is in an aircraft) also does the same thing as this native.
-- DESCRIPTION:
-- Ever wish your buddy could shoot down one of your enemies for you? Ever wanted an auto-pilot? Well look no further! This is the native for you! (Ped intelligence may vary)
-- USAGE:
-- -- REQUIRED --
-- • pilot = The ped flying the aircraft.
-- • aircraft = The aircraft the pilot is flying
-- -- OPTIONAL -- [atleast 1 must be assigned]
-- • targetVehicle = The vehicle the pilot will target.
-- • targetPed = The ped the pilot will target.
-- • destinationX, destinationY, destinationZ = The location the pilot will target.
-- -- LOGIC --
-- • missionFlag = The type of mission. pastebin.com/R8x73dbv
-- • angularDrag = The higher the value, the slower the plane will rotate. Value ranges from 0 - Infinity.
-- • unk = Set to 0, and you'll be fine.
-- • targetHeading = The target angle (from world space north) that the pilot will try to acheive before executing an attack/landing.
-- • maxZ = Maximum Z coordinate height for flying.
-- • minZ = Minimum Z coordinate height for flying.
-- Z: 2,700 is the default max height a pilot will be able to fly. Anything greater and he will fly downward until reaching 2,700 again.
-- Mission Types (incase you don't like links..):
-- 0 = None
-- 1 = Unk
-- 2 = CTaskVehicleRam
-- 3 = CTaskVehicleBlock
-- 4 = CTaskVehicleGoToPlane
-- 5 = CTaskVehicleStop
-- 6 = CTaskVehicleAttack
-- 7 = CTaskVehicleFollow
-- 8 = CTaskVehicleFleeAirborne
-- 9 = CTaskVehicleCircle
-- 10 = CTaskVehicleEscort
-- 15 = CTaskVehicleFollowRecording
-- 16 = CTaskVehiclePoliceBehaviour
-- 17 = CTaskVehicleCrash
-- Example C#:
-- Function.Call(Hash.TASK_PLANE_MISSION, pilot, vehicle, 0, Game.Player.Character, 0, 0, 0, 6, 0f, 0f, 0f, 2500.0f, -1500f);
-- Example C++
-- AI::TASK_PLANE_MISSION(pilot, vehicle, 0, PLAYER::GET_PLAYER_PED(PLAYER::GET_PLAYER_INDEX()), 0, 0, 0, 6, 0.0, 0.0, 0.0, 2500.0, -1500.0);
-- [DEPRECATED] EXAMPLE USAGE:
-- pastebin.com/gx7Finsk
-- ```
-- ```
-- NativeDB Added Parameter 14: Any p13
function TaskPlaneMission(pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, angularDrag, unk, targetHeading, maxZ, minZ)
	return _in(0x23703CD154E83B88, pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, angularDrag, unk, targetHeading, maxZ, minZ)
end

function TaskPlaneTaxi(pilot, aircraft, p2, p3, p4, p5, p6)
	return _in(0x92C360B5F15D2302, pilot, aircraft, p2, p3, p4, p5, p6)
end
N_0x92c360b5f15d2302 = TaskPlaneTaxi

function TaskPlantBomb(ped, x, y, z, heading)
	return _in(0x965FEC691D55E9BF, ped, x, y, z, heading)
end

--- [Animations list](https://alexguirre.github.io/animations-list/)
-- ```
-- float blendInSpeed > normal speed is 8.0f
-- ----------------------
-- float blendOutSpeed > normal speed is 8.0f
-- ----------------------
-- int duration: time in millisecond
-- ----------------------
-- -1 _ _ _ _ _ _ _> Default (see flag)
-- 0 _ _ _ _ _ _ _ > Not play at all
-- Small value _ _ > Slow down animation speed
-- Other _ _ _ _ _ > freeze player control until specific time (ms) has
-- _ _ _ _ _ _ _ _ _ passed. (No effect if flag is set to be
-- _ _ _ _ _ _ _ _ _ controllable.)
-- int flag:
-- ----------------------
-- enum eAnimationFlags
-- {
-- ANIM_FLAG_NORMAL = 0,
-- ANIM_FLAG_REPEAT = 1,
-- ANIM_FLAG_STOP_LAST_FRAME = 2,
-- ANIM_FLAG_UPPERBODY = 16,
-- ANIM_FLAG_ENABLE_PLAYER_CONTROL = 32,
-- ANIM_FLAG_CANCELABLE = 120,
-- };
-- Odd number : loop infinitely
-- Even number : Freeze at last frame
-- Multiple of 4: Freeze at last frame but controllable
-- 01 to 15 > Full body
-- 10 to 31 > Upper body
-- 32 to 47 > Full body > Controllable
-- 48 to 63 > Upper body > Controllable
-- ...
-- 001 to 255 > Normal
-- 256 to 511 > Garbled
-- ...
-- playbackRate:
-- values are between 0.0 and 1.0
-- lockX:
-- 0 in most cases 1 for rcmepsilonism8 and rcmpaparazzo_3
-- > 1 for mini@sprunk
-- lockY:
-- 0 in most cases
-- 1 for missfam5_yoga, missfra1mcs_2_crew_react
-- lockZ:
-- 0 for single player
-- Can be 1 but only for MP
-- ```
function TaskPlayAnim(ped, animDictionary, animationName, blendInSpeed, blendOutSpeed, duration, flag, playbackRate, lockX, lockY, lockZ)
	return _in(0xEA47FE3719165B94, ped, _ts(animDictionary), _ts(animationName), blendInSpeed, blendOutSpeed, duration, flag, playbackRate, lockX, lockY, lockZ)
end

--- It's similar to the one above, except the first 6 floats let you specify the initial position and rotation of the task. (Ped gets teleported to the position).
-- [Animations list](https://alexguirre.github.io/animations-list/)
-- @param ped The target ped
-- @param animDict Name of the animation dictionary
-- @param animName Name of the animation
-- @param posX Initial X position of the task
-- @param posY Initial Y position of the task
-- @param posZ Initial Z position of the task
-- @param rotX Initial X rotation of the task, doesn't seem to have any effect
-- @param rotY Initial Y rotation of the task, doesn't seem to have any effect
-- @param rotZ Initial Z rotation of the task
-- @param animEnterSpeed Adjust character speed to fully enter animation
-- @param animExitSpeed Adjust character speed to fully exit animation (useless `ClearPedTasksImmediately()` is called)
-- @param duration Time in milliseconds
-- @param animTime Value between 0.0 and 1.0, lets you start an animation from the given point
function TaskPlayAnimAdvanced(ped, animDict, animName, posX, posY, posZ, rotX, rotY, rotZ, animEnterSpeed, animExitSpeed, duration, flag, animTime, p14, p15)
	return _in(0x83CDB10EA29B370B, ped, _ts(animDict), _ts(animName), posX, posY, posZ, rotX, rotY, rotZ, animEnterSpeed, animExitSpeed, duration, flag, animTime, p14, p15)
end

--- Example from the scripts:
-- TASK::TASK_PLAY_PHONE_GESTURE_ANIMATION(PLAYER::PLAYER_PED_ID(), v_3, v_2, v_4, 0.25, 0.25, 0, 0);
-- =========================================================
-- ^^ No offense, but Idk how that would really help anyone.
-- As for the animDict & animation, they're both store in a global in all 5 scripts. So if anyone would be so kind as to read that global and comment what strings they use. Thanks.
-- Known boneMaskTypes'
-- "BONEMASK_HEADONLY"
-- "BONEMASK_HEAD_NECK_AND_ARMS"
-- "BONEMASK_HEAD_NECK_AND_L_ARM"
-- "BONEMASK_HEAD_NECK_AND_R_ARM"
-- p4 known args - 0.0f, 0.5f, 0.25f
-- p5 known args - 0.0f, 0.25f
-- p6 known args - 1 if a global if check is passed.
-- p7 known args - 1 if a global if check is passed.
-- The values found above, I found within the 5 scripts this is ever called in. (fmmc_launcher, fm_deathmatch_controller, fm_impromptu_dm_controller, fm_mission_controller, and freemode).
-- =========================================================
function TaskPlayPhoneGestureAnimation(ped, animDict, animation, boneMaskType, p4, p5, p6, p7)
	return _in(0x8FBB6758B3B3E9EC, ped, _ts(animDict), _ts(animation), _ts(boneMaskType), p4, p5, p6, p7)
end

function TaskPutPedDirectlyIntoCover(ped, x, y, z, timeout, p5, p6, p7, p8, p9, p10)
	return _in(0x4172393E6BE1FECE, ped, x, y, z, timeout, p5, p6, p7, p8, p9, p10)
end

--- from armenian3.c4
-- TASK::TASK_PUT_PED_DIRECTLY_INTO_MELEE(PlayerPed, armenianPed, 0.0, -1.0, 0.0, 0);
function TaskPutPedDirectlyIntoMelee(ped, meleeTarget, p2, p3, p4, p5)
	return _in(0x1C6CD14A876FFE39, ped, meleeTarget, p2, p3, p4, p5)
end

--- Attaches a ped to a rope and allows player control to rappel down a wall.
-- Disables all collisions while on the rope.
-- NativeDB Introduced: v1868
-- @param ped Ped to perform the task
-- @param x1 X coord to start the task
-- @param y1 Y coord to start the task
-- @param z1 Z coord to start the task
-- @param x2 Second X coord, uses the same position as above in the scripts
-- @param y2 Second Y coord
-- @param z2 Second Z coord
-- @param minZ Minimum Z that the player can descend to
-- @param ropeId Rope to attach this task to, must be created with [ADD_ROPE](#\_0xE832D760399EB220)
-- @param clipset Clipset to use for the task
-- @param p10 Usually 1 in the scripts
function TaskRappelDownWall(ped, x1, y1, z1, x2, y2, z2, minZ, ropeId, clipset, p10)
	return _in(0xEAF66ACDDC794793, ped, x1, y1, z1, x2, y2, z2, minZ, ropeId, _ts(clipset), p10)
end
N_0xeaf66acddc794793 = TaskRappelDownWall

--- Only appears twice in the scripts.
-- TASK::TASK_RAPPEL_FROM_HELI(PLAYER::PLAYER_PED_ID(), 0x41200000);
-- TASK::TASK_RAPPEL_FROM_HELI(a_0, 0x41200000);
function TaskRappelFromHeli(ped, unused)
	return _in(0x09693B0312F91649, ped, unused)
end

function TaskReactAndFleePed(ped, fleeTarget)
	return _in(0x72C896464915D1B1, ped, fleeTarget)
end

--- The 2nd param (unused) is not implemented.
-- -----------------------------------------------------------------------
-- The only occurrence I found in a R* script ("assassin_construction.ysc.c4"):
-- if (((v_3 < v_4) && (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), 0x6a67a5cc) != 1)) && (v_5 > v_3)) {
-- TASK::TASK_RELOAD_WEAPON(PLAYER::PLAYER_PED_ID(), 1);
-- }
function TaskReloadWeapon(ped, unused)
	return _in(0x62D2916F56B9CD2D, ped, unused)
end

--- From fm_mission_controller.c:
-- reserve_network_mission_objects(get_num_reserved_mission_objects(0) + 1);
-- vVar28 = {0.094f, 0.02f, -0.005f};
-- vVar29 = {-92.24f, 63.64f, 150.24f};
-- func_253(&uVar30, joaat("prop_ld_case_01"), Global_1592429.imm_34757[iParam1 <268>], 1, 1, 0, 1);
-- set_entity_lod_dist(net_to_ent(uVar30), 500);
-- attach_entity_to_entity(net_to_ent(uVar30), iParam0, get_ped_bone_index(iParam0, 28422), vVar28, vVar29, 1, 0, 0, 0, 2, 1);
-- Var31.imm_4 = 1065353216;
-- Var31.imm_5 = 1065353216;
-- Var31.imm_9 = 1065353216;
-- Var31.imm_10 = 1065353216;
-- Var31.imm_14 = 1065353216;
-- Var31.imm_15 = 1065353216;
-- Var31.imm_17 = 1040187392;
-- Var31.imm_18 = 1040187392;
-- Var31.imm_19 = -1;
-- Var32.imm_4 = 1065353216;
-- Var32.imm_5 = 1065353216;
-- Var32.imm_9 = 1065353216;
-- Var32.imm_10 = 1065353216;
-- Var32.imm_14 = 1065353216;
-- Var32.imm_15 = 1065353216;
-- Var32.imm_17 = 1040187392;
-- Var32.imm_18 = 1040187392;
-- Var32.imm_19 = -1;
-- Var31 = 1;
-- Var31.imm_1 = "weapons@misc@jerrycan@mp_male";
-- Var31.imm_2 = "idle";
-- Var31.imm_20 = 1048633;
-- Var31.imm_4 = 0.5f;
-- Var31.imm_16 = get_hash_key("BONEMASK_ARMONLY_R");
-- task_scripted_animation(iParam0, &Var31, &Var32, &Var32, 0f, 0.25f);
-- set_model_as_no_longer_needed(joaat("prop_ld_case_01"));
-- remove_anim_dict("anim@heists@biolab@");
function TaskScriptedAnimation(ped, p4, p5)
	return _in(0x126EF75F1E17ABE5, ped, _i, _i, _i, p4, p5)
end

function TaskSeekCoverFromPed(ped, target, duration, p3)
	return _in(0x84D32B3BEC531324, ped, target, duration, p3)
end

function TaskSeekCoverFromPos(ped, x, y, z, duration, p5)
	return _in(0x75AC2B60386D89F2, ped, x, y, z, duration, p5)
end

--- from michael2:
-- TASK::TASK_SEEK_COVER_TO_COORDS(ped, 967.5164794921875, -2121.603515625, 30.479299545288086, 978.94677734375, -2125.84130859375, 29.4752, -1, 1);
-- appears to be shorter variation
-- from michael3:
-- TASK::TASK_SEEK_COVER_TO_COORDS(ped, -2231.011474609375, 263.6326599121094, 173.60195922851562, -1, 0);
function TaskSeekCoverToCoords(ped, x1, y1, z1, x2, y2, z2, p7, p8)
	return _in(0x39246A6958EF072C, ped, x1, y1, z1, x2, y2, z2, p7, p8)
end

function TaskSeekCoverToCoverPoint(p0, p1, p2, p3, p4, p5, p6)
	return _in(0xD43D95C7A869447F, p0, p1, p2, p3, p4, p5, p6)
end

--- I cant believe I have to define this, this is one of the best natives.
-- It makes the ped ignore basically all shocking events around it. Occasionally the ped may comment or gesture, but other than that they just continue their daily activities. This includes shooting and wounding the ped. And - most importantly - they do not flee.
-- Since it is a task, every time the native is called the ped will stop for a moment.
function TaskSetBlockingOfNonTemporaryEvents(ped, toggle)
	return _in(0x90D2156198831D69, ped, toggle)
end

--- p1 is always GET_HASH_KEY("empty") in scripts, for the rare times this is used
function TaskSetDecisionMaker(ped, p1)
	return _in(0xEB8517DDA73720DA, ped, _ch(p1))
end

function TaskSetSphereDefensiveArea(p0, p1, p2, p3, p4)
	return _in(0x933C06518B52A9A4, p0, p1, p2, p3, p4)
end

function TaskShockingEventReact(ped, eventHandle)
	return _in(0x452419CBD838065B, ped, eventHandle)
end

--- Firing Pattern Hash Information: https://pastebin.com/Px036isB
function TaskShootAtCoord(ped, x, y, z, duration, firingPattern)
	return _in(0x46A6CC01E0826106, ped, x, y, z, duration, _ch(firingPattern))
end

--- //this part of the code is to determine at which entity the player is aiming, for example if you want to create a mod where you give orders to peds
-- Entity aimedentity;
-- Player player = PLAYER::PLAYER_ID();
-- PLAYER::_GET_AIMED_ENTITY(player, &aimedentity);
-- //bg is an array of peds
-- TASK::TASK_SHOOT_AT_ENTITY(bg[i], aimedentity, 5000, MISC::GET_HASH_KEY("FIRING_PATTERN_FULL_AUTO"));
-- in practical usage, getting the entity the player is aiming at and then task the peds to shoot at the entity, at a button press event would be better.
-- Firing Pattern Hash Information: https://pastebin.com/Px036isB
function TaskShootAtEntity(entity, target, duration, firingPattern)
	return _in(0x08DA95E8298AE772, entity, target, duration, _ch(firingPattern))
end

--- Makes the specified ped shuffle to the next vehicle seat.
-- The ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function TaskShuffleToNextVehicleSeat(ped, vehicle)
	return _in(0x7AA80209BDA643EB, ped, vehicle)
end

--- NativeDB Added Parameter 2: BOOL p1
function TaskSkyDive(ped)
	return _in(0x601736CFE536B0A0, ped)
end

--- Makes the specified ped flee the specified distance from the specified position.
function TaskSmartFleeCoord(ped, x, y, z, distance, time, p6, p7)
	return _in(0x94587F17E9C365D5, ped, x, y, z, distance, time, p6, p7)
end

--- Makes a ped run away from another ped (fleeTarget).
-- distance = ped will flee this distance.
-- fleeTime = ped will flee for this amount of time, set to "-1" to flee forever
function TaskSmartFleePed(ped, fleeTarget, distance, fleeTime, p4, p5)
	return _in(0x22B0D0E37CCB840D, ped, fleeTarget, distance, fleeTime, p4, p5)
end

--- scenarioName example: "WORLD_HUMAN_GUARD_STAND"
function TaskStandGuard(ped, x, y, z, heading, scenarioName)
	return _in(0xAE032F8BBA959E90, ped, x, y, z, heading, _ts(scenarioName))
end

--- Makes the specified ped stand still for (time) milliseconds.
function TaskStandStill(ped, time)
	return _in(0x919BE13EED931959, ped, time)
end

--- Also a few more listed at TASK::TASK_START_SCENARIO_IN_PLACE just above.
-- ---------------
-- The first parameter in every scenario has always been a Ped of some sort. The second like TASK_START_SCENARIO_IN_PLACE is the name of the scenario.
-- The next 4 parameters were harder to decipher. After viewing "hairdo_shop_mp.ysc.c4", and being confused from seeing the case in other scripts, they passed the first three of the arguments as one array from a function, and it looked like it was obviously x, y, and z.
-- I haven't seen the sixth parameter go to or over 360, making me believe that it is rotation, but I really can't confirm anything.
-- I have no idea what the last 3 parameters are, but I'll try to find out.
-- -going on the last 3 parameters, they appear to always be "0, 0, 1"
-- p6 -1 also used in scrips
-- p7 used for sitting scenarios
-- p8 teleports ped to position
function TaskStartScenarioAtPosition(ped, scenarioName, x, y, z, heading, duration, sittingScenario, teleport)
	return _in(0xFA4EFC79F69D4F07, ped, _ts(scenarioName), x, y, z, heading, duration, sittingScenario, teleport)
end

--- Plays a scenario on a Ped at their current location.
-- unkDelay - Usually 0 or -1, doesn't seem to have any effect. Might be a delay between sequences.
-- playEnterAnim - Plays the "Enter" anim if true, otherwise plays the "Exit" anim. Scenarios that don't have any "Enter" anims won't play if this is set to true.
-- List of scenarioNames: pastebin.com/6mrYTdQv
-- Also these:
-- WORLD_FISH_FLEE
-- DRIVE
-- WORLD_HUMAN_HIKER
-- WORLD_VEHICLE_ATTRACTOR
-- WORLD_VEHICLE_BICYCLE_MOUNTAIN
-- WORLD_VEHICLE_BIKE_OFF_ROAD_RACE
-- WORLD_VEHICLE_BIKER
-- WORLD_VEHICLE_CONSTRUCTION_PASSENGERS
-- WORLD_VEHICLE_CONSTRUCTION_SOLO
-- WORLD_VEHICLE_DRIVE_PASSENGERS
-- WORLD_VEHICLE_DRIVE_SOLO
-- WORLD_VEHICLE_EMPTY
-- WORLD_VEHICLE_PARK_PARALLEL
-- WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN
-- WORLD_VEHICLE_POLICE_BIKE
-- WORLD_VEHICLE_POLICE_CAR
-- WORLD_VEHICLE_POLICE_NEXT_TO_CAR
-- WORLD_VEHICLE_SALTON_DIRT_BIKE
-- WORLD_VEHICLE_TRUCK_LOGS
function TaskStartScenarioInPlace(ped, scenarioName, unkDelay, playEnterAnim)
	return _in(0x142A02425FF02BD9, ped, _ts(scenarioName), unkDelay, playEnterAnim)
end

--- Makes the ped run to take cover
function TaskStayInCover(ped)
	return _in(0xE5DA8615A6180789, ped)
end

--- Stealth kill action name hashes:
-- stealth kills can be found here: Grand Theft Auto V\common.rpf\data\action\stealth_kills.meta
-- ...
-- {
-- "ACT_stealth_kill_a",
-- "ACT_stealth_kill_weapon",
-- "ACT_stealth_kill_b",
-- "ACT_stealth_kill_c",
-- "ACT_stealth_kill_d",
-- "ACT_stealth_kill_a_gardener"
-- }
-- Only known script using this native: fbi4_prep2
-- EXAMPLE:
-- ai::task_stealth_kill(iParam1, Local_252, gameplay::get_hash_key("AR_stealth_kill_a"), 1f, 0);ai::task_stealth_kill(iParam1, Local_252, gameplay::get_hash_key("AR_stealth_kill_knife"), 1f, 0);
-- Also it may be important to note, that each time this task is called, it's followed by AI::CLEAR_PED_TASKS on the target
function TaskStealthKill(killer, target, actionType, p3, p4)
	return _in(0xAA5DC05579D60BD9, killer, target, _ch(actionType), p3, p4)
end

--- NativeDB Added Parameter 2: Any p1
function TaskStopPhoneGestureAnimation(ped)
	return _in(0x3FA00D4F4641BFAE, ped)
end
TaskStopPhoneGestureAnimation = TaskStopPhoneGestureAnimation

--- Used in am_vehicle_spawn.ysc and am_mp_submarine.ysc.
-- p0 is always 0, p5 is always 1
-- p1 is the vehicle handle of the submarine. Submarine must have a driver, but the ped handle is not passed to the native.
-- Speed can be set by calling SET_DRIVE_TASK_CRUISE_SPEED after
-- ```
-- NativeDB Introduced: v2189
-- ```
function TaskSubmarineGotoAndStop(p0, submarine, x, y, z, p5)
	return _in(0xC22B40579A498CA4, p0, submarine, x, y, z, p5)
end

function TaskSwapWeapon(ped, p1)
	return _in(0xA21C51255B205245, ped, p1)
end

--- This function is called on peds in vehicles.
-- anim: animation name
-- p2, p3, p4: "sweep_low", "sweep_med" or "sweep_high"
-- p5: no idea what it does but is usually -1
function TaskSweepAimEntity(ped, anim, p2, p3, p4, p5, vehicle, p7, p8)
	return _in(0x2047C02158D6405A, ped, _ts(anim), _ts(p2), _ts(p3), _ts(p4), p5, vehicle, p7, p8)
end

function TaskSweepAimPosition(p0, p5, p6, p7, p8, p9, p10)
	return _in(0x7AFE8FDC10BC07D2, p0, _i, _i, _i, _i, p5, p6, p7, p8, p9, p10)
end

--- TASK::TASK_SYNCHRONIZED_SCENE(ped, scene, "creatures@rottweiler@in_vehicle@std_car", "get_in", 1000.0, -8.0, 4, 0, 0x447a0000, 0);
function TaskSynchronizedScene(ped, scene, animDictionary, animationName, speed, speedMultiplier, duration, flag, playbackRate, p9)
	return _in(0xEEA929141F699854, ped, scene, _ts(animDictionary), _ts(animationName), speed, speedMultiplier, duration, flag, playbackRate, p9)
end

--- In every case of this native, I've only seen the first parameter passed as 0, although I believe it's a Ped after seeing tasks around it using 0. That's because it's used in a Sequence Task.
-- The last 3 parameters are definitely coordinates after seeing them passed in other scripts, and even being used straight from the player's coordinates.
-- ---
-- It seems that - in the decompiled scripts - this native was used on a ped who was in a vehicle to throw a projectile out the window at the player. This is something any ped will naturally do if they have a throwable and they are doing driveby-combat (although not very accurately).
-- It is possible, however, that this is how SWAT throws smoke grenades at the player when in cover.
-- ----------------------------------------------------
-- The first comment is right it definately is the ped as if you look in script finale_heist2b.c line 59628 in Xbox Scripts atleast you will see task_throw_projectile and the first param is Local_559[2 <14>] if you look above it a little bit line 59622 give_weapon_to_ped uses the same exact param Local_559[2 <14>] and we all know the first param of that native is ped. So it guaranteed has to be ped. 0 just may mean to use your ped by default for some reason.
-- ```
-- ```
-- NativeDB Added Parameter 5: Any p4
-- NativeDB Added Parameter 6: Any p5
function TaskThrowProjectile(ped, x, y, z)
	return _in(0x7285951DBF6B5A51, ped, x, y, z)
end

--- used in sequence task
-- both parameters seems to be always 0
function TaskToggleDuck(p0, p1)
	return _in(0xAC96609B9995EDF8, p0, p1)
end

--- duration in milliseconds
function TaskTurnPedToFaceCoord(ped, x, y, z, duration)
	return _in(0x1DDA930A0AC38571, ped, x, y, z, duration)
end

--- duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
function TaskTurnPedToFaceEntity(ped, entity, duration)
	return _in(0x5AD23D40115353AC, ped, entity, duration)
end

--- Actually has 3 params, not 2.
-- p0: Ped
-- p1: int (or bool?)
-- p2: int
-- ```
-- ```
-- NativeDB Added Parameter 3: Any p2
function TaskUseMobilePhone(ped, p1)
	return _in(0xBD2A8EC3AF4DE7DB, ped, p1)
end

function TaskUseMobilePhoneTimed(ped, duration)
	return _in(0x5EE02954A14C69DB, ped, duration)
end

function TaskUseNearestScenarioChainToCoord(p0, p1, p2, p3, p4, p5)
	return _in(0x9FDA1B3D7E7028B3, p0, p1, p2, p3, p4, p5)
end

function TaskUseNearestScenarioChainToCoordWarp(p0, p1, p2, p3, p4, p5)
	return _in(0x97A28E63F0BA5631, p0, p1, p2, p3, p4, p5)
end

--- Updated variables
-- An alternative to TASK::TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP. Makes the ped walk to the scenario instead.
function TaskUseNearestScenarioToCoord(ped, x, y, z, distance, duration)
	return _in(0x277F471BA9DB000B, ped, x, y, z, distance, duration)
end

function TaskUseNearestScenarioToCoordWarp(ped, x, y, z, radius, p5)
	return _in(0x58E2E0F23F6B76C3, ped, x, y, z, radius, p5)
end

function TaskVehicleAimAtCoord(ped, x, y, z)
	return _in(0x447C1E9EF844BC0F, ped, x, y, z)
end

function TaskVehicleAimAtPed(ped, target)
	return _in(0xE41885592B08B097, ped, target)
end

--- chases targetEnt fast and aggressively
-- --
-- Makes ped (needs to be in vehicle) chase targetEnt.
function TaskVehicleChase(driver, targetEnt)
	return _in(0x3C08A8E30363B353, driver, targetEnt)
end

--- info about driving modes: HTTP://gtaforums.com/topic/822314-guide-driving-styles/
-- ---------------------------------------------------------------
-- Passing P6 value as floating value didn't throw any errors, though unsure what is it exactly, looks like radius or something.
-- P10 though, it is mentioned as float, however, I used bool and set it to true, that too worked.
-- Here the e.g. code I used
-- Function.Call(Hash.TASK_VEHICLE_DRIVE_TO_COORD, Ped, Vehicle, Cor X, Cor Y, Cor Z, 30f, 1f, Vehicle.GetHashCode(), 16777216, 1f, true);
function TaskVehicleDriveToCoord(ped, vehicle, x, y, z, speed, p6, vehicleModel, drivingMode, stopRange, p10)
	return _in(0xE2A2AA2F659D77A7, ped, vehicle, x, y, z, speed, p6, _ch(vehicleModel), drivingMode, stopRange, p10)
end

--- You can let your character drive to the destination at the speed and driving style you set. You can use map marks to set the destination.
-- @param ped Ped id for the task.
-- @param vehicle Vehicle entity id for the task.
-- @param x Destination X coordinate.
-- @param y Destination Y coordinate.
-- @param z Destination Z coordinate.
-- @param speed Speed of driving.
-- @param driveMode More info can be found [here](https://vespura.com/fivem/drivingstyle/)
-- @param stopRange Stops in the specific range near the destination. 20.0 works fine.
function TaskVehicleDriveToCoordLongrange(ped, vehicle, x, y, z, speed, driveMode, stopRange)
	return _in(0x158BB33F920D360C, ped, vehicle, x, y, z, speed, driveMode, stopRange)
end

--- Drive randomly with no destination set.
-- @param ped Ped id for the task.
-- @param vehicle Vehicle entity id for the task.
-- @param speed Speed of driving.
-- @param drivingStyle More info can be found [here](https://vespura.com/fivem/drivingstyle/)
function TaskVehicleDriveWander(ped, vehicle, speed, drivingStyle)
	return _in(0x480142959D337D00, ped, vehicle, speed, drivingStyle)
end

--- Makes a ped follow the targetVehicle with <minDistance> in between.
-- note: minDistance is ignored if drivingstyle is avoiding traffic, but Rushed is fine.
-- Mode: The mode defines the relative position to the targetVehicle. The ped will try to position its vehicle there.
-- -1 = behind
-- 0 = ahead
-- 1 = left
-- 2 = right
-- 3 = back left
-- 4 = back right
-- if the target is closer than noRoadsDistance, the driver will ignore pathing/roads and follow you directly.
-- Driving Styles guide: gtaforums.com/topic/822314-guide-driving-styles/
function TaskVehicleEscort(ped, vehicle, targetVehicle, mode, speed, drivingStyle, minDistance, p7, noRoadsDistance)
	return _in(0x0FA6E4B75F302400, ped, vehicle, targetVehicle, mode, speed, drivingStyle, minDistance, p7, noRoadsDistance)
end

--- Makes a ped in a vehicle follow an entity (ped, vehicle, etc.)
-- drivingStyle: http://gtaforums.com/topic/822314-guide-driving-styles/
function TaskVehicleFollow(driver, vehicle, targetEntity, speed, drivingStyle, minDistance)
	return _in(0xFC545A9F0626E3B6, driver, vehicle, targetEntity, speed, drivingStyle, minDistance)
end
TaskVehicleFollow = TaskVehicleFollow

--- task_vehicle_follow_waypoint_recording(Ped p0, Vehicle p1, string p2, int p3, int p4, int p5, int p6, float.x p7, float.Y p8, float.Z p9, bool p10, int p11)
-- p2 = Waypoint recording string (found in update\update.rpf\x64\levels\gta5\waypointrec.rpf
-- p3 = 786468
-- p4 = 0
-- p5 = 16
-- p6 = -1 (angle?)
-- p7/8/9 = usually v3.zero
-- p10 = bool (repeat?)
-- p11 = 1073741824
-- -khorio
function TaskVehicleFollowWaypointRecording(ped, vehicle, WPRecording, p3, p4, p5, p6, p7, p8, p9)
	return _in(0x3123FAA6DB1CF7ED, ped, vehicle, _ts(WPRecording), p3, p4, p5, p6, p7, p8, p9)
end

--- Differs from TASK_VEHICLE_DRIVE_TO_COORDS in that it will pick the shortest possible road route without taking one-way streets and other "road laws" into consideration.
-- WARNING:
-- A behaviorFlag value of 0 will result in a clunky, stupid driver!
-- Recommended settings:
-- speed = 30.0f,
-- behaviorFlag = 156,
-- stoppingRange = 5.0f;
-- If you simply want to have your driver move to a fixed location, call it only once, or, when necessary in the event of interruption.
-- If using this to continually follow a Ped who is on foot:  You will need to run this in a tick loop.  Call it in with the Ped's updated coordinates every 20 ticks or so and you will have one hell of a smart, fast-reacting NPC driver -- provided he doesn't get stuck.  If your update frequency is too fast, the Ped may not have enough time to figure his way out of being stuck, and thus, remain stuck.  One way around this would be to implement an "anti-stuck" mechanism, which allows the driver to realize he's stuck, temporarily pause the tick, unstuck, then resume the tick.
-- EDIT:  This is being discussed in more detail at http://gtaforums.com/topic/818504-any-idea-on-how-to-make-peds-clever-and-insanely-fast-c/
function TaskVehicleGotoNavmesh(ped, vehicle, x, y, z, speed, behaviorFlag, stoppingRange)
	return _in(0x195AEEB13CEFE2EE, ped, vehicle, x, y, z, speed, behaviorFlag, stoppingRange)
end

--- pilot, vehicle and altitude are rather self-explanatory.
-- p4: is unused variable in the function.
-- entityToFollow: you can provide a Vehicle entity or a Ped entity, the heli will protect them.
-- 'targetSpeed':  The pilot will dip the nose AS MUCH AS POSSIBLE so as to reach this value AS FAST AS POSSIBLE.  As such, you'll want to modulate it as opposed to calling it via a hard-wired, constant #.
-- 'radius' isn't just "stop within radius of X of target" like with ground vehicles.  In this case, the pilot will fly an entire circle around 'radius' and continue to do so.
-- NOT CONFIRMED:  p7 appears to be a FlyingStyle enum.  Still investigating it as of this writing, but playing around with values here appears to result in different -behavior- as opposed to offsetting coordinates, altitude, target speed, etc.
-- NOTE: If the pilot finds enemies, it will engage them until it kills them, but will return to protect the ped/vehicle given shortly thereafter.
function TaskVehicleHeliProtect(pilot, vehicle, entityToFollow, targetSpeed, p4, radius, altitude, p7)
	return _in(0x1E09C32048FEFD1C, pilot, vehicle, entityToFollow, targetSpeed, p4, radius, altitude, p7)
end

--- missionType: https://alloc8or.re/gta5/doc/enums/eVehicleMissionType.txt
function TaskVehicleMission(driver, vehicle, vehicleTarget, missionType, p4, p5, p6, p7, DriveAgainstTraffic)
	return _in(0x659427E0EF36BCDE, driver, vehicle, vehicleTarget, missionType, p4, p5, p6, p7, DriveAgainstTraffic)
end

--- See [`TASK_VEHICLE_MISSION`](#\_0x659427E0EF36BCDE).
function TaskVehicleMissionCoorsTarget(ped, vehicle, x, y, z, p5, p6, p7, p8, p9, DriveAgainstTraffic)
	return _in(0xF0AF20AA7731F8C3, ped, vehicle, x, y, z, p5, p6, p7, p8, p9, DriveAgainstTraffic)
end

--- See [`TASK_VEHICLE_MISSION`](#\_0x659427E0EF36BCDE).
function TaskVehicleMissionPedTarget(ped, vehicle, pedTarget, missionType, maxSpeed, drivingStyle, minDistance, p7, DriveAgainstTraffic)
	return _in(0x9454528DF15D657A, ped, vehicle, pedTarget, missionType, maxSpeed, drivingStyle, minDistance, p7, DriveAgainstTraffic)
end

--- Modes:
-- 0 - ignore heading
-- 1 - park forward
-- 2 - park backwards
-- Depending on the angle of approach, the vehicle can park at the specified heading or at its exact opposite (-180) angle.
-- Radius seems to define how close the vehicle has to be -after parking- to the position for this task considered completed. If the value is too small, the vehicle will try to park again until it's exactly where it should be. 20.0 Works well but lower values don't, like the radius is measured in centimeters or something.
function TaskVehiclePark(ped, vehicle, x, y, z, heading, mode, radius, keepEngineOn)
	return _in(0x0F3E34E968EA374E, ped, vehicle, x, y, z, heading, mode, radius, keepEngineOn)
end

--- Most probably plays a specific animation on vehicle. For example getting chop out of van etc...
-- Here's how its used -
-- TASK::TASK_VEHICLE_PLAY_ANIM(l_325, "rcmnigel1b", "idle_speedo");
-- TASK::TASK_VEHICLE_PLAY_ANIM(l_556[0/*1*/], "missfra0_chop_drhome", "InCar_GetOutofBack_Speedo");
-- FYI : Speedo is the name of van in which chop was put in the mission.
function TaskVehiclePlayAnim(vehicle, animationSet, animationName)
	return _in(0x69F5C3BD0F3EBD89, vehicle, _ts(animationSet), _ts(animationName))
end

function TaskVehicleShootAtCoord(ped, x, y, z, p4)
	return _in(0x5190796ED39C9B6D, ped, x, y, z, p4)
end

function TaskVehicleShootAtPed(ped, target, p2)
	return _in(0x10AB107B887214D8, ped, target, p2)
end

--- '1 - brake
-- '3 - brake + reverse
-- '4 - turn left 90 + braking
-- '5 - turn right 90 + braking
-- '6 - brake strong (handbrake?) until time ends
-- '7 - turn left + accelerate
-- '7 - turn right + accelerate
-- '9 - weak acceleration
-- '10 - turn left + restore wheel pos to center in the end
-- '11 - turn right + restore wheel pos to center in the end
-- '13 - turn left + go reverse
-- '14 - turn left + go reverse
-- '16 - crash the game after like 2 seconds :)
-- '17 - keep actual state, game crashed after few tries
-- '18 - game crash
-- '19 - strong brake + turn left/right
-- '20 - weak brake + turn left then turn right
-- '21 - weak brake + turn right then turn left
-- '22 - brake + reverse
-- '23 - accelerate fast
-- '24 - brake
-- '25 - brake turning left then when almost stopping it turns left more
-- '26 - brake turning right then when almost stopping it turns right more
-- '27 - brake until car stop or until time ends
-- '28 - brake + strong reverse acceleration
-- '30 - performs a burnout (brake until stop + brake and accelerate)
-- '31 - accelerate + handbrake
-- '32 - accelerate very strong
-- Seems to be this:
-- Works on NPCs, but overrides their current task. If inside a task sequence (and not being the last task), "time" will work, otherwise the task will be performed forever until tasked with something else
function TaskVehicleTempAction(driver, vehicle, action, time)
	return _in(0xC429DCEEB339E129, driver, vehicle, action, time)
end

--- Makes a ped wander/patrol around the specified area.
-- The ped will continue to wander after getting distracted, but only if this additional task is temporary, ie. killing a target, after killing the target it will continue to wander around.
-- Use `GetIsTaskActive(ped, 222)` to check if the ped is still wandering the area.
-- @param ped The ped which will wander the area.
-- @param x The X coordinate.
-- @param y The Y coordinate
-- @param z The Z coordinate
-- @param radius The radius of the area to wander around in
-- @param minimalLength The minimal length it will wander before waiting timeBetweenWalks seconds before continuing
-- @param timeBetweenWalks The length of time the ped will stand still/rest between walks
function TaskWanderInArea(ped, x, y, z, radius, minimalLength, timeBetweenWalks)
	return _in(0xE054346CA3A0F315, ped, x, y, z, radius, minimalLength, timeBetweenWalks)
end

--- NativeDB Introduced: v1868
function TaskWanderSpecific(p0, p1, p2, p3)
	return _in(0x6919A2F136426098, p0, p1, p2, p3)
end

--- Makes ped walk around the area.
-- set p1 to 10.0f and p2 to 10 if you want the ped to walk anywhere without a duration.
function TaskWanderStandard(ped, p1, p2)
	return _in(0xBB9CE077274F6A1B, ped, p1, p2)
end

function TaskWarpPedIntoVehicle(ped, vehicle, seatIndex)
	return _in(0x9A7D091411C5F684, ped, vehicle, seatIndex)
end

--- NativeDB Added Parameter 5: Any p4
-- NativeDB Added Parameter 6: Any p5
function TaskWrithe(ped, target, time, p3)
	return _in(0xCDDC2B77CE54AC6E, ped, target, time, p3)
end

--- For a full list, see here: pastebin.com/yLNWicUi
function TerminateAllScriptsWithThisName(scriptName)
	return _in(0x9DC711BC69C548DF, _ts(scriptName))
end

function TerminateThisThread()
	return _in(0x1090044AD1DA76FA)
end

function TerminateThread(threadId)
	return _in(0xC8B189ED9138BCD4, threadId)
end

--- This native enables/disables the gold putting grid display (https://i.imgur.com/TC6cku6.png).
-- This requires these two natives to be called as well to configure the grid: [`0x1c4fc5752bcd8e48`](https://runtime.fivem.net/doc/reference.html#\_0x1C4FC5752BCD8E48) and [`0x5ce62918f8d703c7`](https://runtime.fivem.net/doc/reference.html#\_0x5CE62918F8D703C7).
-- @param toggle Enables or disables the golf putting grid display.
function TerraingridActivate(toggle)
	return _in(0xA356990E161C9E65, toggle)
end
N_0xa356990e161c9e65 = TerraingridActivate

--- This native is used along with these two natives: [`0xa356990e161c9e65`](https://runtime.fivem.net/doc/reference.html#\_0xA356990E161C9E65) and [`0x1c4fc5752bcd8e48`](https://runtime.fivem.net/doc/reference.html#\_0x1C4FC5752BCD8E48).
-- This native sets the colors for the golf putting grid. the 'min...' values are for the lower areas that the grid covers, the 'max...' values are for the higher areas that the grid covers, all remaining values are for the 'normal' ground height.
-- All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
-- Old description:
-- Only called in golf and golf_mp\
-- parameters used are\
-- GRAPHICS::\_0x5CE62918F8D703C7(255, 0, 0, 64, 255, 255, 255, 5, 255, 255, 0, 64);
-- @param lowR red value for the lower level
-- @param lowG green value for the lower level
-- @param lowB blue value for the lower level
-- @param lowAlpha alpha value for the lower level
-- @param R red value for the normal level
-- @param G green value for the normal level
-- @param B blue value for the normal level
-- @param Alpha alpha value for the normal level
-- @param highR red value for the upper level
-- @param highG green value for the upper level
-- @param highB blue value for the upper level
-- @param highAlpha alpha value for the upper level
function TerraingridSetColours(lowR, lowG, lowB, lowAlpha, R, G, B, Alpha, highR, highG, highB, highAlpha)
	return _in(0x5CE62918F8D703C7, lowR, lowG, lowB, lowAlpha, R, G, B, Alpha, highR, highG, highB, highAlpha)
end
N_0x5ce62918f8d703c7 = TerraingridSetColours

--- This native is used along with these two natives: [`0xa356990e161c9e65`](https://runtime.fivem.net/doc/reference.html#\_0xA356990E161C9E65) and [`0x5ce62918f8d703c7`](https://runtime.fivem.net/doc/reference.html#\_0x5CE62918F8D703C7).
-- This native configures the location, size, rotation, normal height, and the difference ratio between min, normal and max.
-- All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
-- @param x Grid center x coord.
-- @param y Grid center y coord.
-- @param z Grid center z coord.
-- @param p3 Not sure, but seems to be the amount of lines top/bottom there are in the grid. -1.0 works best.
-- @param rotation Grid rotation (keep between 0.0 and 1.0).
-- @param p5 Offset top/bottom (? not sure about this one, seems weird).
-- @param width Grid width (usually 15.0).
-- @param height Grid height (usually 15.0).
-- @param p8 Not sure, but seems to be the amount of lines left/right there are in the grid. -1.0 works best.
-- @param scale Zoom / scale (higher values = smaller (more) squares) (lower values = bigger (less) squares).
-- @param glowIntensity glow intensity / opacity (40.0 is fine for daylight, 15.0 is fine for night time).
-- @param normalHeight The z coord for 'normal' height (white grid lines level).
-- @param heightDiff This is the height difference/margin used for line color changes. 0.2 works fine (normalHeight + 0.2 = yellow, normalHeight - 0.2 = red).
function TerraingridSetParams(x, y, z, p3, rotation, p5, width, height, p8, scale, glowIntensity, normalHeight, heightDiff)
	return _in(0x1C4FC5752BCD8E48, x, y, z, p3, rotation, p5, width, height, p8, scale, glowIntensity, normalHeight, heightDiff)
end
N_0x1c4fc5752bcd8e48 = TerraingridSetParams

--- Flags are identical to START_SHAPE_TEST\*, however, 128 is automatically set.
-- @param flag See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E)
function TestProbeAgainstAllWater(x1, y1, z1, x2, y2, z2, flag, result)
	return _in(0x8974647ED222EA5F, x1, y1, z1, x2, y2, z2, flag, _v, _r)
end

function TestProbeAgainstWater(x1, y1, z1, x2, y2, z2, result)
	return _in(0xFFA5D878809819DB, x1, y1, z1, x2, y2, z2, _v, _r)
end

function TestVerticalProbeAgainstAllWater(x, y, z, flag, height)
	return _in(0x2B3451FA1E3142E2, x, y, z, flag, _fi(height) --[[ may be optional ]], _r)
end

function TextureDownloadGetName(p0)
	return _in(0x3448505B6E35262D, p0, _s)
end

function TextureDownloadHasFailed(p0)
	return _in(0x5776ED562C134687, p0, _r)
end
N_0x5776ed562c134687 = TextureDownloadHasFailed

function TextureDownloadRelease(p0)
	return _in(0x487EB90B98E9FB19, p0)
end

function TextureDownloadRequest(FilePath, Name, p3)
	return _in(0x16160DA74A8E74A2, _i, _ts(FilePath), _ts(Name), p3, _ri)
end

--- Used in the native scripts to reference "GET_PEDHEADSHOT_TXD_STRING" and "CHAR_DEFAULT".
-- NativeDB Introduced: v323
function ThefeedAddTxdRef(txdString1, txnString1, txdString2, txnString2)
	return _in(0x317EBA71D7543F52, _ts(txdString1), _ts(txnString1), _ts(txdString2), _ts(txnString2))
end
N_0x317eba71d7543f52 = ThefeedAddTxdRef

function ThefeedClearFrozenPost()
	return _in(0x80FE4F3AB4E1B62A)
end
N_0x80fe4f3ab4e1b62a = ThefeedClearFrozenPost
ThefeedFlushPersistent = ThefeedClearFrozenPost

--- Displays "normal" notifications again after calling `_0x56C8B608CFD49854` (those that were drawn before calling this native too), though those will have a weird offset and stay on screen forever (tested with notifications created from same script).
function ThefeedCommentTeleportPoolOff()
	return _in(0xADED7F5748ACAFE6)
end
N_0xaded7f5748acafe6 = ThefeedCommentTeleportPoolOff
ThefeedShowGtaoTooltips = ThefeedCommentTeleportPoolOff

--- Enables loading screen tips to be be shown (`_0x15CFA549788D35EF` and `_0x488043841BBE156F`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
function ThefeedCommentTeleportPoolOn()
	return _in(0x56C8B608CFD49854)
end
N_0x56c8b608cfd49854 = ThefeedCommentTeleportPoolOn

--- Stops loading screen tips shown by invoking either `0x488043841BBE156F` or `0x15CFA549788D35EF`
function ThefeedDisableLoadingScreenTips()
	return _in(0x32888337579A5970)
end
N_0x32888337579a5970 = ThefeedDisableLoadingScreenTips
ThefeedDisable = ThefeedDisableLoadingScreenTips

--- Displays loading screen tips, requires `0x56C8B608CFD49854` to be called beforehand.
function ThefeedDisplayLoadingScreenTips()
	return _in(0x15CFA549788D35EF)
end
N_0x15cfa549788d35ef = ThefeedDisplayLoadingScreenTips
ThefeedEnable = ThefeedDisplayLoadingScreenTips

function ThefeedFlushQueue()
	return _in(0xA8FDB297A8D25FBA)
end
N_0xa8fdb297a8d25fba = ThefeedFlushQueue

--- Enables loading screen tips to be be shown (`_0x15CFA549788D35EF` and `_0x488043841BBE156F`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
function ThefeedForceRenderOff()
	return _in(0x583049884A2EEE3C)
end
N_0x583049884a2eee3c = ThefeedForceRenderOff
ThefeedHideGtaoTooltips = ThefeedForceRenderOff

function ThefeedForceRenderOn()
	return _in(0xA13C11E1B5C06BFC)
end
N_0xa13c11e1b5c06bfc = ThefeedForceRenderOn

--- Requires manual management of game stream handles (i.e., 0xBE4390CB40B3E627).
function ThefeedFreezeNextPost()
	return _in(0xFDEC055AB549E328)
end
N_0xfdec055ab549e328 = ThefeedFreezeNextPost
ThefeedSetNextPostPersistent = ThefeedFreezeNextPost

--- Returns the handle for the notification currently displayed on the screen. Name may be a hash collision, but describes the function accurately.
function ThefeedGetFirstVisibleDeleteRemaining()
	return _in(0x82352748437638CA, _ri)
end
N_0x82352748437638ca = ThefeedGetFirstVisibleDeleteRemaining
GetCurrentNotification = ThefeedGetFirstVisibleDeleteRemaining
ThefeedGetCurrentNotification = ThefeedGetFirstVisibleDeleteRemaining

--- Once called each frame hides all above radar notifications.
function ThefeedHideThisFrame()
	return _in(0x25F87B30C382FCA7)
end
N_0x25f87b30c382fca7 = ThefeedHideThisFrame
HideHudNotificationsThisFrame = ThefeedHideThisFrame

function ThefeedIsPaused()
	return _in(0xA9CBFD40B3FA3010, _r)
end
N_0xa9cbfd40b3fa3010 = ThefeedIsPaused

function ThefeedOnlyShowTooltips(toggle)
	return _in(0x6F1554B0CC2089FA, toggle)
end
N_0x6f1554b0cc2089fa = ThefeedOnlyShowTooltips

function ThefeedPause()
	return _in(0xFDB423997FA30340)
end
N_0xfdb423997fa30340 = ThefeedPause

--- Removes a notification instantly instead of waiting for it to disappear
function ThefeedRemoveItem(notificationId)
	return _in(0xBE4390CB40B3E627, notificationId)
end
RemoveNotification = ThefeedRemoveItem

function ThefeedResetAllParameters()
	return _in(0xFDD85225B2DEA55E)
end
N_0xfdd85225b2dea55e = ThefeedResetAllParameters
ThefeedClearAnimpostfx = ThefeedResetAllParameters

function ThefeedResume()
	return _in(0xE1CD1E48E025E661)
end
N_0xe1cd1e48e025e661 = ThefeedResume

function ThefeedSetAnimpostfxColor(red, green, blue, alpha)
	return _in(0x17430B918701C342, red, green, blue, alpha)
end
N_0x17430b918701c342 = ThefeedSetAnimpostfxColor
SetNotificationFlashColor = ThefeedSetAnimpostfxColor

--- Related to notification color flashing, setting p0 to 0 invalidates a `_SET_NOTIFICATION_FLASH_COLOR` call for the target notification.
function ThefeedSetAnimpostfxCount(count)
	return _in(0x17AD8C9706BDD88A, count)
end
N_0x17ad8c9706bdd88a = ThefeedSetAnimpostfxCount

--- Requires GAME_STREAM_ENUMS.MSGTEXT. Default sounds: "DPAD_WEAPON_SCROLL" and "HUD_FRONTEND_DEFAULT_SOUNDSET"
function ThefeedSetAnimpostfxSound(toggle)
	return _in(0x4A0C7C9BB10ABB36, toggle)
end
N_0x4a0c7c9bb10abb36 = ThefeedSetAnimpostfxSound

--- If true, remove all feed components instantly. Otherwise tween/animate close each component
function ThefeedSetFlushAnimpostfx(toggle)
	return _in(0xBAE4F9B97CD43B30, toggle)
end
N_0xbae4f9b97cd43b30 = ThefeedSetFlushAnimpostfx

--- From the decompiled scripts:
-- HUD::_92F0DA1E27DB96DC(6);
-- HUD::_92F0DA1E27DB96DC(184);
-- HUD::_92F0DA1E27DB96DC(190);
-- sets background color for the next notification
-- 6 = red
-- 184 = green
-- 190 = yellow
-- Here is a list of some colors that can be used: gyazo.com/68bd384455fceb0a85a8729e48216e15
function ThefeedSetNextPostBackgroundColor(hudColorIndex)
	return _in(0x92F0DA1E27DB96DC, hudColorIndex)
end
N_0x92f0da1e27db96dc = ThefeedSetNextPostBackgroundColor
SetNotificationBackgroundColor = ThefeedSetNextPostBackgroundColor
ThefeedNextPostBackgroundColor = ThefeedSetNextPostBackgroundColor

function ThefeedSetScriptedMenuHeight(pos)
	return _in(0x55598D21339CB998, pos)
end
N_0x55598d21339cb998 = ThefeedSetScriptedMenuHeight
ClearNotificationsPos = ThefeedSetScriptedMenuHeight

function ThefeedSpsExtendWidescreenOff()
	return _in(0xB695E2CD0A2DA9EE)
end
N_0xb695e2cd0a2da9ee = ThefeedSpsExtendWidescreenOff
ThefeedDisableBaselineOffset = ThefeedSpsExtendWidescreenOff

function ThefeedSpsExtendWidescreenOn()
	return _in(0xD4438C0564490E63)
end
N_0xd4438c0564490e63 = ThefeedSpsExtendWidescreenOn
ThefeedEnableBaselineOffset = ThefeedSpsExtendWidescreenOn

--- Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).
function Timera()
	return _in(0x83666F9FB8FEBD4B, _ri)
end

function Timerb()
	return _in(0xC9D9444186B5A374, _ri)
end

--- Gets the current frame time.
function Timestep()
	return _in(0x0000000050597EE2, _rf)
end

function TitleTextureDownloadRequest(FilePath, Name, p2)
	return _in(0x0B203B4AFDE53A4F, _ts(FilePath), _ts(Name), p2, _ri)
end
N_0x0b203b4afde53a4f = TitleTextureDownloadRequest

function ToFloat(value)
	return _in(0xBBDA792448DB5A89, value, _rf)
end

function TogglePausedRenderphases(toggle)
	return _in(0xDFC252D8A3E15AB7, toggle)
end
EnableGameplayCam = TogglePausedRenderphases
SetFrozenRenderingDisabled = TogglePausedRenderphases

function ToggleStealthRadar(toggle)
	return _in(0x6AFDFB93754950C7, toggle)
end

--- Disabling/enabling a player from getting pickups. From the scripts:
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 1);
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 0);
-- OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 1);
-- SET_PLAYER_*
function ToggleUsePickupsForPlayer(player, pickupHash, toggle)
	return _in(0x616093EC6B139DD9, player, _ch(pickupHash), toggle)
end
N_0x616093ec6b139dd9 = ToggleUsePickupsForPlayer

function ToggleVehicleMod(vehicle, modType, toggle)
	return _in(0x2A1F4F37F95BAD08, vehicle, modType, toggle)
end

function TrackObjectVisibility(object)
	return _in(0xB252BC036B525623, object)
end

--- in script hook .net
-- Vehicle v = ...;
-- Function.Call(Hash.TRACK_VEHICLE_VISIBILITY, v.Handle);
function TrackVehicleVisibility(vehicle)
	return _in(0x64473AEFDCF47DCA, vehicle)
end

--- Transforms the `stormberg` to its "road vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
-- @param vehicle A vehicle handle.
-- @param instantly If true, the vehicle will be instantly transformed, when false the transform animation plays normally.
function TransformSubmarineToVehicle(vehicle, instantly)
	return _in(0x2A69FFD1B42BFF9E, vehicle, instantly)
end
N_0x2a69ffd1b42bff9e = TransformSubmarineToVehicle
TransformStormbergToRoadVehicle = TransformSubmarineToVehicle

--- Transforms the `stormberg` to its "water vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
-- @param vehicle A vehicle handle.
-- @param instantly If true, the vehicle will be instantly transformed, when false the transform animation plays normally.
function TransformVehicleToSubmarine(vehicle, instantly)
	return _in(0xBE4C854FFDB6EEBE, vehicle, instantly)
end
N_0xbe4c854ffdb6eebe = TransformVehicleToSubmarine
TransformStormbergToWaterVehicle = TransformVehicleToSubmarine

--- The backing function for TriggerEvent.
function TriggerEventInternal(eventName, eventPayload, payloadLength)
	return _in(0x91310870, _ts(eventName), _ts(eventPayload), payloadLength)
end

--- The backing function for TriggerLatentServerEvent.
function TriggerLatentServerEventInternal(eventName, eventPayload, payloadLength, bps)
	return _in(0x128737ea, _ts(eventName), _ts(eventPayload), payloadLength, bps)
end

--- List of all usable event names found in b617d used with this native. Sorted alphabetically and identical names removed: pastebin.com/RzDFmB1W
-- All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
function TriggerMusicEvent(eventName)
	return _in(0x706D57B0F50DA710, _ts(eventName), _r)
end

function TriggerScreenblurFadeIn(transitionTime)
	return _in(0xA328A24AAA6B7FDC, transitionTime, _r)
end
TransitionToBlurred = TriggerScreenblurFadeIn

function TriggerScreenblurFadeOut(transitionTime)
	return _in(0xEFACC8AEF94430D5, transitionTime, _r)
end
TransitionFromBlurred = TriggerScreenblurFadeOut

--- p1 = 6
function TriggerScriptCrcCheckOnPlayer(player, p1, scriptHash)
	return _in(0x46FB3ED415C7641C, player, p1, _ch(scriptHash), _r)
end
N_0x46fb3ed415c7641c = TriggerScriptCrcCheckOnPlayer
NetworkIsPlayerInScript = TriggerScriptCrcCheckOnPlayer

--- eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
-- Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
-- playerBits (also known as playersToBroadcastTo) is a bitset that indicates which players this event should be sent to. In order to send the event to specific players only, use (1 << playerIndex). Set all bits if it should be broadcast to all players.
function TriggerScriptEvent(eventGroup, eventDataSize, playerBits)
	return _in(0x5AE99C571D5BBE5D, eventGroup, _i, eventDataSize, playerBits)
end

--- See TRIGGER_SCRIPT_EVENT
function TriggerScriptEvent_2(eventGroup, eventDataSize, playerBits)
	return _in(0xA40CC53DF8E50837, eventGroup, _i, eventDataSize, playerBits)
end
N_0xa40cc53df8e50837 = TriggerScriptEvent_2

--- The backing function for TriggerServerEvent.
function TriggerServerEventInternal(eventName, eventPayload, payloadLength)
	return _in(0x7fdd1128, _ts(eventName), _ts(eventPayload), payloadLength)
end

function TriggerServerEvent(eventName,...)

end
--- ... When not in a vehicle
-- ```
-- NativeDB Introduced: v1290
-- ```
function TriggerSiren(vehicle)
	return _in(0x66C3FB05206041BA, vehicle)
end
N_0x66c3fb05206041ba = TriggerSiren

function TriggerSonarBlip(posX, posY, posZ, radius, p4)
	return _in(0x72DD432F3CDFC0EE, posX, posY, posZ, radius, p4)
end
N_0x72dd432f3cdfc0ee = TriggerSonarBlip

function UgcCancelQuery()
	return _in(0xE9B99B6853181409)
end
N_0xe9b99b6853181409 = UgcCancelQuery

function UgcClearCreateResult()
	return _in(0x17440AA15D1D3739)
end
N_0x17440aa15d1d3739 = UgcClearCreateResult

function UgcClearModifyResult()
	return _in(0xA1E5E0204A6FCC70)
end
N_0xa1e5e0204a6fcc70 = UgcClearModifyResult

function UgcClearOfflineQuery()
	return _in(0x61A885D3F7CFEE9A)
end
N_0x61a885d3f7cfee9a = UgcClearOfflineQuery

function UgcClearQueryResults()
	return _in(0xBA96394A0EECFA65)
end
N_0xba96394a0eecfa65 = UgcClearQueryResults

function UgcCopyContent()
	return _in(0x152D90E4C1B4738A, _i, _i, _r)
end
N_0x152d90e4c1b4738a = UgcCopyContent

--- NativeDB Added Parameter 8: Any p7
function UgcCreateContent(data, dataCount, contentName, description, tagsCsv, contentTypeName, publish)
	return _in(0xC84527E235FCA219, _ts(data), dataCount, _ts(contentName), _ts(description), _ts(tagsCsv), _ts(contentTypeName), publish, _r)
end
N_0xc84527e235fca219 = UgcCreateContent

--- NativeDB Added Parameter 6: Any p5
function UgcCreateMission(contentName, description, tagsCsv, contentTypeName, publish)
	return _in(0xA5EFC3E847D60507, _ts(contentName), _ts(description), _ts(tagsCsv), _ts(contentTypeName), publish, _r)
end
N_0xa5efc3e847d60507 = UgcCreateMission

function UgcDidGetSucceed()
	return _in(0x941E5306BCD7C2C7, _ri)
end
N_0x941e5306bcd7c2c7 = UgcDidGetSucceed

function UgcGetBookmarkedContent(p0, p1)
	return _in(0xD5A4B59980401588, p0, p1, _i, _i, _r)
end
N_0xd5a4b59980401588 = UgcGetBookmarkedContent

function UgcGetCachedDescription(p0, p1)
	return _in(0x40F7E66472DF3E5C, p0, p1, _ri)
end
N_0x40f7e66472df3e5c = UgcGetCachedDescription

function UgcGetContentCategory(p0)
	return _in(0xA7BAB11E7C9C6C5A, p0, _ri)
end
N_0xa7bab11e7c9c6c5a = UgcGetContentCategory
GetContentCategory = UgcGetContentCategory

function UgcGetContentDescriptionHash(p0)
	return _in(0x7CF0448787B23758, p0, _ri)
end
N_0x7cf0448787b23758 = UgcGetContentDescriptionHash
GetContentDescriptionHash = UgcGetContentDescriptionHash

function UgcGetContentFileVersion(p0, p1)
	return _in(0x37025B27D9B658B1, p0, p1, _ri)
end
N_0x37025b27d9b658b1 = UgcGetContentFileVersion
GetContentFileVersion = UgcGetContentFileVersion

function UgcGetContentHasPlayerBookmarked(p0)
	return _in(0x993CBE59D350D225, p0, _r)
end
N_0x993cbe59d350d225 = UgcGetContentHasPlayerBookmarked

function UgcGetContentHasPlayerRecord(p0)
	return _in(0x70EA8DA57840F9BE, p0, _r)
end
N_0x70ea8da57840f9be = UgcGetContentHasPlayerRecord

function UgcGetContentHash()
	return _in(0x3A17A27D75C74887, _ri)
end
N_0x3a17a27d75c74887 = UgcGetContentHash

--- Return the mission id of a job.
function UgcGetContentId(p0)
	return _in(0x55AA95F481D694D2, p0, _s)
end
N_0x55aa95f481d694d2 = UgcGetContentId
GetContentId = UgcGetContentId

function UgcGetContentIsPublished(p0)
	return _in(0x3054F114121C21EA, p0, _r)
end
N_0x3054f114121c21ea = UgcGetContentIsPublished

function UgcGetContentIsVerified(p0)
	return _in(0xA9240A96C74CCA13, p0, _r)
end
N_0xa9240a96c74cca13 = UgcGetContentIsVerified

function UgcGetContentLanguage(p0)
	return _in(0x32DD916F3F7C9672, p0, _ri)
end
N_0x32dd916f3f7c9672 = UgcGetContentLanguage

function UgcGetContentName(p0)
	return _in(0xBF09786A7FCAB582, p0, _ri)
end
N_0xbf09786a7fcab582 = UgcGetContentName

function UgcGetContentNum()
	return _in(0xE0A6138401BCB837, _ri)
end
N_0xe0a6138401bcb837 = UgcGetContentNum

function UgcGetContentPath(p0, p1)
	return _in(0xBAF6BABF9E7CCC13, p0, p1, _s)
end
N_0xbaf6babf9e7ccc13 = UgcGetContentPath
UgcGetCloudPath = UgcGetContentPath

function UgcGetContentRating(p0, p1)
	return _in(0x1ACCFBA3D8DAB2EE, p0, p1, _ri)
end
N_0x1accfba3d8dab2ee = UgcGetContentRating

function UgcGetContentRatingCount(p0, p1)
	return _in(0x759299C5BB31D2A9, p0, p1, _ri)
end
N_0x759299c5bb31d2a9 = UgcGetContentRatingCount

function UgcGetContentRatingNegativeCount(p0, p1)
	return _in(0x4E548C0D7AE39FF9, p0, p1, _ri)
end
N_0x4e548c0d7ae39ff9 = UgcGetContentRatingNegativeCount

function UgcGetContentRatingPositiveCount(p0, p1)
	return _in(0x87E5C46C187FE0AE, p0, p1, _ri)
end
N_0x87e5c46c187fe0ae = UgcGetContentRatingPositiveCount

function UgcGetContentTotal()
	return _in(0x769951E2455E2EB5, _ri)
end
N_0x769951e2455e2eb5 = UgcGetContentTotal

function UgcGetContentUpdatedDate(p0, p1)
	return _in(0xCFD115B373C0DF63, p0, _ii(p1) --[[ may be optional ]])
end
N_0xcfd115b373c0df63 = UgcGetContentUpdatedDate

function UgcGetContentUserId(p0)
	return _in(0xCD67AD041A394C9C, p0, _s)
end
N_0xcd67ad041a394c9c = UgcGetContentUserId
GetContentUserId = UgcGetContentUserId
GetPlayerAdvancedModifierPrivileges = UgcGetContentUserId

function UgcGetContentUserName(p0)
	return _in(0x703F12425ECA8BF5, p0, _ri)
end
N_0x703f12425eca8bf5 = UgcGetContentUserName

function UgcGetCreateContentId()
	return _in(0xC55A0B40FFB1ED23, _ri)
end
N_0xc55a0b40ffb1ed23 = UgcGetCreateContentId

function UgcGetCreateResult()
	return _in(0xFBC5E768C7A77A6A, _ri)
end
N_0xfbc5e768c7a77a6a = UgcGetCreateResult

function UgcGetCreatorNum()
	return _in(0x597F8DBA9B206FC7, _ri)
end
N_0x597f8dba9b206fc7 = UgcGetCreatorNum

function UgcGetCrewContent(p0, p1, p2)
	return _in(0x9F6E2821885CAEE2, p0, p1, p2, _i, _i, _r)
end
N_0x9f6e2821885caee2 = UgcGetCrewContent

function UgcGetFriendContent(p0, p1)
	return _in(0xF9E1CCAE8BA4C281, p0, p1, _i, _i, _r)
end
N_0xf9e1ccae8ba4c281 = UgcGetFriendContent

function UgcGetGetByCategory(p0, p1, p2)
	return _in(0x678BB03C1A3BD51E, p0, p1, p2, _i, _i, _r)
end
N_0x678bb03c1a3bd51e = UgcGetGetByCategory

function UgcGetModifyResult()
	return _in(0x5A0A3D1A186A5508, _ri)
end
N_0x5a0a3d1a186a5508 = UgcGetModifyResult

function UgcGetMyContent(p0, p1)
	return _in(0x3195F8DD0D531052, p0, p1, _i, _i, _r)
end
N_0x3195f8dd0d531052 = UgcGetMyContent

function UgcGetQueryResult()
	return _in(0xEDF7F927136C224B, _ri)
end
N_0xedf7f927136c224b = UgcGetQueryResult

--- Return the root content id of a job.
function UgcGetRootContentId(p0)
	return _in(0xC0173D6BFF4E0348, p0, _s)
end
N_0xc0173d6bff4e0348 = UgcGetRootContentId
GetRootContentId = UgcGetRootContentId

function UgcHasCreateFinished()
	return _in(0x5E24341A7F92A74B, _r)
end
N_0x5e24341a7f92a74b = UgcHasCreateFinished

function UgcHasGetFinished()
	return _in(0x02ADA21EA2F6918F, _r)
end
N_0x02ada21ea2f6918f = UgcHasGetFinished

function UgcHasModifyFinished()
	return _in(0x299EF3C576773506, _r)
end
N_0x299ef3c576773506 = UgcHasModifyFinished

function UgcIsGetting()
	return _in(0xD53ACDBEF24A46E8, _r)
end
N_0xd53acdbef24a46e8 = UgcIsGetting

function UgcIsLanguageSupported(p0)
	return _in(0xF53E48461B71EECB, p0, _r)
end
N_0xf53e48461b71eecb = UgcIsLanguageSupported

function UgcPoliciesMakePrivate(p0)
	return _in(0x5CAE833B0EE0C500, p0, _r)
end
N_0x5cae833b0ee0c500 = UgcPoliciesMakePrivate

function UgcPublish(contentId, baseContentId, contentTypeName)
	return _in(0x1DE0F5F50D723CAA, _ts(contentId), _ts(baseContentId), _ts(contentTypeName), _r)
end
N_0x1de0f5f50d723caa = UgcPublish

function UgcQueryByContentId(contentId, latestVersion, contentTypeName)
	return _in(0x158EC424F35EC469, _ts(contentId), latestVersion, _ts(contentTypeName), _r)
end
N_0x158ec424f35ec469 = UgcQueryByContentId

function UgcQueryByContentIds(count, latestVersion, contentTypeName)
	return _in(0xC7397A83F7A2A462, _i, count, latestVersion, _ts(contentTypeName), _r)
end
N_0xc7397a83f7a2a462 = UgcQueryByContentIds

function UgcQueryMyContent(p0, p1, p3, p4, p5)
	return _in(0x9BF438815F5D96EA, p0, p1, _i, p3, p4, p5, _r)
end
N_0x9bf438815f5d96ea = UgcQueryMyContent

function UgcQueryRecentlyCreatedContent(offset, count, contentTypeName, p3)
	return _in(0x6D4CB481FAC835E8, offset, count, _ts(contentTypeName), p3, _r)
end
N_0x6d4cb481fac835e8 = UgcQueryRecentlyCreatedContent

function UgcRequestCachedDescription(p0)
	return _in(0x5E0165278F6339EE, p0, _ri)
end
N_0x5e0165278f6339ee = UgcRequestCachedDescription

function UgcRequestContentDataFromIndex(p0, p1)
	return _in(0x171DF6A0C07FB3DC, p0, p1, _ri)
end
N_0x171df6a0c07fb3dc = UgcRequestContentDataFromIndex

function UgcRequestContentDataFromParams(contentTypeName, contentId, p2, p3, p4)
	return _in(0x7FD2990AF016795E, _ts(contentTypeName), _ts(contentId), p2, p3, p4, _ri)
end
N_0x7fd2990af016795e = UgcRequestContentDataFromParams

function UgcSetBookmarked(contentId, bookmarked, contentTypeName)
	return _in(0x274A1519DFC1094F, _ts(contentId), bookmarked, _ts(contentTypeName), _r)
end
N_0x274a1519dfc1094f = UgcSetBookmarked

function UgcSetDeleted(p1)
	return _in(0xD05D1A6C74DA3498, _i, p1, _i, _r)
end
N_0xd05d1a6c74da3498 = UgcSetDeleted

--- NativeDB Added Parameter 4: Any p3
function UgcSetPlayerData(contentId, rating, contentTypeName)
	return _in(0x692D808C34A82143, _ts(contentId), rating, _ts(contentTypeName), _r)
end
N_0x692d808c34a82143 = UgcSetPlayerData

function UgcSetQueryDataFromOffline(p0)
	return _in(0xF98DDE0A8ED09323, p0)
end
N_0xf98dde0a8ed09323 = UgcSetQueryDataFromOffline

function UgcTextureDownloadRequest(p1, p2, p3, p5)
	return _in(0x308F96458B7087CC, _i, p1, p2, p3, _i, p5, _ri)
end
N_0x308f96458b7087cc = UgcTextureDownloadRequest

--- NativeDB Added Parameter 8: Any p7
function UgcUpdateContent(contentId, dataCount, contentName, description, tagsCsv, contentTypeName)
	return _in(0x648E7A5434AF7969, _ts(contentId), _i, dataCount, _ts(contentName), _ts(description), _ts(tagsCsv), _ts(contentTypeName), _r)
end
N_0x648e7a5434af7969 = UgcUpdateContent

--- NativeDB Added Parameter 6: Any p5
function UgcUpdateMission(contentId, contentName, description, tagsCsv, contentTypeName)
	return _in(0x4645DE9980999E93, _ts(contentId), _ts(contentName), _ts(description), _ts(tagsCsv), _ts(contentTypeName), _r)
end
N_0x4645de9980999e93 = UgcUpdateMission

function Ui3dsceneIsAvailable()
	return _in(0xD3A10FC7FD8D98CD, _r)
end
N_0xd3a10fc7fd8d98cd = Ui3dsceneIsAvailable

--- All presets can be found in common\data\ui\uiscenes.meta
function Ui3dscenePushPreset(presetName)
	return _in(0xF1CEA8A4198D8E9A, _ts(presetName), _r)
end
N_0xf1cea8a4198d8e9a = Ui3dscenePushPreset

--- Returns true if the current frontend menu is FE_MENU_VERSION_SP_PAUSE
-- U*
function UiIsSingleplayerPauseMenuActive()
	return _in(0xEA2F2061875EED90, _r)
end
N_0xea2f2061875eed90 = UiIsSingleplayerPauseMenuActive

--- eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
function UnblockDecisionMakerEvent(name, eventType)
	return _in(0xD7CD9CF34F2C99E8, _ch(name), eventType)
end

function UncuffPed(ped)
	return _in(0x67406F2C8F87FC4F, ped)
end

function UnfreezeRadioStation(radioStation)
	return _in(0xFC00454CF60B91DD, _ts(radioStation))
end

--- Called 4 times in the b617d scripts:
-- MISC::_A74802FB8D0B7814("CONTRAILS", 0);
function UnloadCloudHat(name, p1)
	return _in(0xA74802FB8D0B7814, _ts(name), p1)
end
N_0xa74802fb8d0b7814 = UnloadCloudHat

--- From fm_deathmatch_creator and fm_race_creator:
-- FILES::_UNLOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP_SP"));
-- FILES::_LOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP"));
-- NativeDB Introduced: v1604
function UnloadContentChangeSetGroup(hash)
	return _in(0x3C1978285B036B25, _ch(hash))
end

function UnlockMinimapAngle()
	return _in(0x8183455E16C42E3A)
end

function UnlockMinimapPosition()
	return _in(0x3E93E06DB8EF1F30)
end

function UnlockMissionNewsStory(newsStory)
	return _in(0xB165AB7C248B2DC1, newsStory)
end

--- AUDIO::UNLOCK_RADIO_STATION_TRACK_LIST("RADIO_16_SILVERLAKE", "MIRRORPARK_LOCKED");
function UnlockRadioStationTrackList(radioStation, trackListName)
	return _in(0x031ACB6ABA18C729, _ts(radioStation), _ts(trackListName))
end
N_0x031acb6aba18c729 = UnlockRadioStationTrackList

--- GRAPHICS::UNPATCH_DECAL_DIFFUSE_MAP(9123);
-- GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED("MPMissMarkers256");
function UnpatchDecalDiffuseMap(decalType)
	return _in(0xB7ED70C49521A61D, decalType)
end
N_0xb7ed70c49521a61d = UnpatchDecalDiffuseMap
UndoDecalTextureOverride = UnpatchDecalDiffuseMap

function UnpausePlaybackRecordedVehicle(vehicle)
	return _in(0x8879EE09268305D5, vehicle)
end

--- Does something similar to INTERIOR::DISABLE_INTERIOR.
-- You don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside.
function UnpinInterior(interior)
	return _in(0x261CCE7EED010641, interior)
end

function UnpinRopeVertex(ropeId, vertex)
	return _in(0x4B5AE2EEE4A8F180, ropeId, vertex)
end

--- gtaforums.com/topic/885580-ped-headshotmugshot-txd/
function UnregisterPedheadshot(id)
	return _in(0x96B1361D9B24C2FF, id)
end

--- Will unregister and cleanup a registered NUI callback handler.
-- Use along side the REGISTER_RAW_NUI_CALLBACK native.
-- @param callbackType The callback type to target
function UnregisterRawNuiCallback(callbackType)
	return _in(0x7fb46432, _ts(callbackType))
end

--- **This native does absolutely nothing, just a nullsub**
-- ```
-- On last-gen this just runs blr and this func is called by several other functions other then the native's table.
-- ```
function UnregisterScriptWithAudio()
	return _in(0xA8638BE228D4751A)
end

function UpdateLightsOnEntity(entity)
	return _in(0xDEADC0DEDEADC0DE, entity)
end
N_0xdeadc0dedeadc0de = UpdateLightsOnEntity
EntityDescriptionText = UpdateLightsOnEntity

--- NativeDB Introduced: v1493
function UpdateLsur(enableMixes)
	return _in(0x47AED84213A47510, enableMixes)
end

--- Transiently updates the entity with the specified mapdata index and entity index.
-- This function supports SDK infrastructure and is not intended to be used directly from your code.
-- @param mapdata A fwMapData index from GET_MAPDATA_FROM_HASH_KEY.
-- @param entity An entity index from GET_ENTITY_INDEX_FROM_MAPDATA.
-- @param entityDef The new entity definition in fwEntityDef format.
function UpdateMapdataEntity(mapdata, entity, entityDef)
	local entityDef_bytes, entityDef_len = _obj(entityDef)
	return _in(0xfc52cb91, mapdata, entity, entityDef_bytes, entityDef_len)
end

function UpdateNavmeshBlockingObject(p0, p1, p2, p3, p4, p5, p6, p7, p8)
	return _in(0x109E99373F290687, p0, p1, p2, p3, p4, p5, p6, p7, p8)
end

--- Returns the current status of the onscreen keyboard, and updates the output.
-- Status Codes:
-- -1: Keyboard isn't active
-- 0: User still editing
-- 1: User has finished editing
-- 2: User has canceled editing
function UpdateOnscreenKeyboard()
	return _in(0x0CF2B696BBF945AE, _ri)
end

--- See [`SET_PED_HEAD_BLEND_DATA`](#\_0x9414E18B9434C2FE)
function UpdatePedHeadBlendData(ped, shapeMix, skinMix, thirdMix)
	return _in(0x723538F61C647C5A, ped, shapeMix, skinMix, thirdMix)
end

function UpdatePlayerTeleport(player)
	return _in(0xE23D5873C2394C61, player, _r)
end
N_0xe23d5873c2394c61 = UpdatePlayerTeleport
HasPlayerTeleportFinished = UpdatePlayerTeleport

function UpdateStatFloat(statHash, value, p2)
	return _in(0x30A6614C1F7799B8, _ch(statHash), value, p2)
end
N_0x30a6614c1f7799b8 = UpdateStatFloat

function UpdateStatInt(statHash, value, p2)
	return _in(0x11FF1C80276097ED, _ch(statHash), value, p2)
end
N_0x11ff1c80276097ed = UpdateStatInt

function UpdateTaskAimGunScriptedTarget(p0, p1, p2, p3, p4, p5)
	return _in(0x9724FB59A3E72AD0, p0, p1, p2, p3, p4, p5)
end

function UpdateTaskHandsUpDuration(ped, duration)
	return _in(0xA98FCAFD7893C834, ped, duration)
end

function UpdateTaskSweepAimEntity(ped, entity)
	return _in(0xE4973DBDBE6E44B3, ped, entity)
end

function UpdateTaskSweepAimPosition(p0, p1, p2, p3)
	return _in(0xBB106883F5201FC4, p0, p1, p2, p3)
end

--- From the b678d decompiled scripts:
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("FM_Mission_Controler");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_apartment_mp");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_indep_fireworks");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_cig_plane");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_creator");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_ornate_heist");
-- GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_prison_break_heist_station");
function UseParticleFxAsset(name)
	return _in(0x6C38AF3693A69A91, _ts(name))
end
SetPtfxAssetNextCall = UseParticleFxAsset
UseParticleFxAssetNextCall = UseParticleFxAsset

function UsePlayerColourInsteadOfTeamColour(toggle)
	return _in(0x77758139EC9B66C7, toggle)
end

function UseSirenAsHorn(vehicle, toggle)
	return _in(0xFA932DE350266EF8, vehicle, toggle)
end

function UseStuntCameraThisFrame()
	return _in(0x6493CF69859B116A)
end
N_0x6493cf69859b116a = UseStuntCameraThisFrame

function UseWaypointRecordingAsAssistedMovementRoute(name, p1, p2, p3)
	return _in(0x5A353B8E6B1095B5, _ts(name), p1, p2, p3)
end

function UsingMissionCreator(toggle)
	return _in(0xF14878FC50BEC6EE, toggle)
end

--- Calculates distance between vectors.
function Vdist(x1, y1, z1, x2, y2, z2)
	return _in(0x2A488C176D52CCA5, x1, y1, z1, x2, y2, z2, _rf)
end

--- Calculates distance between vectors but does not perform Sqrt operations. (Its way faster)
function Vdist2(x1, y1, z1, x2, y2, z2)
	return _in(0xB7A628320EFF8E47, x1, y1, z1, x2, y2, z2, _rf)
end

--- calls from vehicle to net.
function VehToNet(vehicle)
	return _in(0xB4C94523F023419C, vehicle, _ri)
end

function VehicleWaypointPlaybackOverrideSpeed(vehicle, speed)
	return _in(0x121F0593E0A431D7, vehicle, speed)
end

function VehicleWaypointPlaybackPause(vehicle)
	return _in(0x8A4E6AC373666BC5, vehicle)
end

function VehicleWaypointPlaybackResume(vehicle)
	return _in(0xDC04FCAA7839D492, vehicle)
end

function VehicleWaypointPlaybackUseDefaultSpeed(vehicle)
	return _in(0x5CEB25A7D2848963, vehicle)
end

--- Calculates the magnitude of a vector.
function Vmag(x, y, z)
	return _in(0x652D2EEEF1D3E62C, x, y, z, _rf)
end

--- Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)
function Vmag2(x, y, z)
	return _in(0xA8CEACB4F35AE058, x, y, z, _rf)
end

--- Pauses execution of the current script, please note this behavior is only seen when called from one of the game script files(ysc). In order to wait an asi script use "static void WAIT(DWORD time);" found in main.h
function Wait(ms)
	return _in(0x4EDE34FBADD967A6, ms)
end

function WasCutsceneSkipped()
	return _in(0x40C8656EDAEDD569, _r)
end

--- Returns whether or not the currently executing event was canceled.
-- @return A boolean.
function WasEventCanceled()
	return _in(0x58382a19, _r)
end

function WasPedKilledByStealth(ped)
	return _in(0xF9800AA1A771B000, ped, _r)
end

function WasPedKilledByTakedown(ped)
	return _in(0x7F08E26039C7347C, ped, _r)
end

function WasPedKnockedOut(ped)
	return _in(0x61767F73EACEED21, ped, _r)
end
N_0x61767f73eaceed21 = WasPedKnockedOut

--- Despite this function's name, it simply returns whether the specified handle is a Ped.
function WasPedSkeletonUpdated(ped)
	return _in(0x11B499C1E0FF8559, ped, _r)
end

function WashDecalsFromVehicle(vehicle, p1)
	return _in(0x5B712761429DBC14, vehicle, p1)
end

function WashDecalsInRange(p0, p1, p2, p3, p4)
	return _in(0x9C30613D50A6ADEF, p0, p1, p2, p3, p4)
end

function WaterOverrideFadeIn(p0)
	return _in(0xA8434F1DFF41D6E7, p0)
end
N_0xa8434f1dff41d6e7 = WaterOverrideFadeIn

function WaterOverrideFadeOut(p0)
	return _in(0xC3C221ADDDE31A11, p0)
end
N_0xc3c221addde31a11 = WaterOverrideFadeOut

function WaterOverrideSetOceannoiseminamplitude(minAmplitude)
	return _in(0x31727907B2C43C55, minAmplitude)
end
N_0x31727907b2c43c55 = WaterOverrideSetOceannoiseminamplitude

function WaterOverrideSetOceanwaveamplitude(amplitude)
	return _in(0x405591EC8FD9096D, amplitude)
end
N_0x405591ec8fd9096d = WaterOverrideSetOceanwaveamplitude

function WaterOverrideSetOceanwavemaxamplitude(maxAmplitude)
	return _in(0xB3E6360DDE733E82, maxAmplitude)
end
N_0xb3e6360dde733e82 = WaterOverrideSetOceanwavemaxamplitude

function WaterOverrideSetOceanwaveminamplitude(minAmplitude)
	return _in(0xF751B16FB32ABC1D, minAmplitude)
end
N_0xf751b16fb32abc1d = WaterOverrideSetOceanwaveminamplitude

function WaterOverrideSetRipplebumpiness(bumpiness)
	return _in(0x7C9C0B1EEB1F9072, bumpiness)
end
N_0x7c9c0b1eeb1f9072 = WaterOverrideSetRipplebumpiness

function WaterOverrideSetRippledisturb(disturb)
	return _in(0xB9854DFDE0D833D6, disturb)
end
N_0xb9854dfde0d833d6 = WaterOverrideSetRippledisturb

function WaterOverrideSetRipplemaxbumpiness(maxBumpiness)
	return _in(0x9F5E6BB6B34540DA, maxBumpiness)
end
N_0x9f5e6bb6b34540da = WaterOverrideSetRipplemaxbumpiness

function WaterOverrideSetRippleminbumpiness(minBumpiness)
	return _in(0x6216B116083A7CB4, minBumpiness)
end
N_0x6216b116083a7cb4 = WaterOverrideSetRippleminbumpiness

function WaterOverrideSetShorewaveamplitude(amplitude)
	return _in(0xB8F87EAD7533B176, amplitude)
end
N_0xb8f87ead7533b176 = WaterOverrideSetShorewaveamplitude

function WaterOverrideSetShorewavemaxamplitude(maxAmplitude)
	return _in(0xA7A1127490312C36, maxAmplitude)
end
N_0xa7a1127490312c36 = WaterOverrideSetShorewavemaxamplitude

function WaterOverrideSetShorewaveminamplitude(minAmplitude)
	return _in(0xC3EAD29AB273ECE8, minAmplitude)
end
N_0xc3ead29ab273ece8 = WaterOverrideSetShorewaveminamplitude

--- This seems to edit the water wave, intensity around your current location.
-- 0.0f = Normal
-- 1.0f = So Calm and Smooth, a boat will stay still.
-- 3.0f = Really Intense.
function WaterOverrideSetStrength(strength)
	return _in(0xC54A08C85AE4D410, strength)
end
N_0xc54a08c85ae4d410 = WaterOverrideSetStrength

function WaypointPlaybackGetIsPaused(p0)
	return _in(0x701375A7D43F01CB, p0, _r)
end

function WaypointPlaybackOverrideSpeed(p0, p1, p2)
	return _in(0x7D7D2B47FA788E85, p0, p1, p2)
end

function WaypointPlaybackPause(p0, p1, p2)
	return _in(0x0F342546AA06FED5, p0, p1, p2)
end

function WaypointPlaybackResume(p0, p1, p2, p3)
	return _in(0x244F70C84C547D2D, p0, p1, p2, p3)
end

function WaypointPlaybackStartAimingAtCoord(p0, p1, p2, p3, p4)
	return _in(0x8968400D900ED8B3, p0, p1, p2, p3, p4)
end

function WaypointPlaybackStartAimingAtPed(p0, p1, p2)
	return _in(0x20E330937C399D29, p0, p1, p2)
end

function WaypointPlaybackStartShootingAtCoord(p0, p1, p2, p3, p4, p5)
	return _in(0x057A25CFCC9DB671, p0, p1, p2, p3, p4, p5)
end

function WaypointPlaybackStartShootingAtPed(p0, p1, p2, p3)
	return _in(0xE70BA7B90F8390DC, p0, p1, p2, p3)
end
N_0xe70ba7b90f8390dc = WaypointPlaybackStartShootingAtPed

function WaypointPlaybackStopAimingOrShooting(p0)
	return _in(0x47EFA040EBB8E2EA, p0)
end

function WaypointPlaybackUseDefaultSpeed(p0)
	return _in(0x6599D834B12D0800, p0)
end

--- For a full list of the points, see here: goo.gl/wIH0vn
function WaypointRecordingGetClosestWaypoint(name, x, y, z, point)
	return _in(0xB629A298081F876F, _ts(name), x, y, z, _ii(point) --[[ may be optional ]], _r)
end

--- For a full list of the points, see here: goo.gl/wIH0vn
function WaypointRecordingGetCoord(name, point, coord)
	return _in(0x2FB897405C90B361, _ts(name), point, _v, _r)
end

--- For a full list of the points, see here: goo.gl/wIH0vn
function WaypointRecordingGetNumPoints(name, points)
	return _in(0x5343532C01A07234, _ts(name), _ii(points) --[[ may be optional ]], _r)
end

function WaypointRecordingGetSpeedAtPoint(name, point)
	return _in(0x005622AEBC33ACA9, _ts(name), point, _rf)
end

--- Does nothing and always returns 0.
function WithdrawVc(amount)
	return _in(0xF70EFA14FE091429, amount, _ri)
end
N_0xf70efa14fe091429 = WithdrawVc

function WouldEntityBeOccluded(entityModelHash, x, y, z, p4)
	return _in(0xEE5D2A122E09EC42, _ch(entityModelHash), x, y, z, p4, _r)
end

